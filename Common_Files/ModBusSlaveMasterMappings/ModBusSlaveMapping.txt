/*
 *------------------------------------------------------------------------------
 * Master communication scheme during OP:
 * 
 *     |Slave n       |    |Slave n     |	 |Broadcast     |    |Slave n + 1   |    |Slave n + 1 |    |Slave x      |
 *     |Critical      |    |Critical    |    |Critical      |    |Critical      |    |Critical    |    |INFO         |     
 * ----|MESSAGE1      |----|MESSAGE2    |----|MESSAGE3      |----|MESSAGE4      |----|MESSAGE5    |----|MESSAGE6     |
 *     |HoldingReg0 W |    |InputReg0 R |    |RegisterX R/W |    |HoldingReg0 W |    |InputReg0 R |	   |RegisterX R/W|	
 *     |HoldingReg1 W |    |InputReg1 R |    |RegisterX R/W |    |HoldingReg1 W |    |InputReg1 R |    |RegisterX R/W| 
 *     		             		   							     
 *     
 * Message 6 consists out of a mailbox were info can be R/W or
 * NOP, a maximum amount of 2 registers should be addressed at once
 * (NOP operation would be a read from a register)
 *
 * 4 Holding registers
 * 5 Input registers
 * 2 Diagnostic registers
 *
 * Mailbox: 50x 
 * 1x read HoldingReg3 and HoldingReg4
 * 1x read DiagnosticReg1 and DiagnosticReg2
 * 1x write HoldingReg2 and HoldingReg3
 * 1x read DiagnosticReg3 and DiagnosticReg4
 * 
 *------------------------------------------------------------------------------ 
 * 
 * Modbus Track Slave Data Register mapping:
 * 
 * Data register, bit(s)        Function            	R/W     Critical
 * 
 * -----------------------------RUNNING PARAMETERS------------------------------
 * 
 * HoldingReg0, 0 - 9           PWM set point       	R/W     No/Yes			// new PWM setpoint (speed in 0 - 255 km/h)
 * HoldingReg0, 10				PWM direction       	R/W     No/Yes          // Forward / Backward
 * HoldingReg0, 11              PWM brake            	R/W     No/Yes          // enabling of the H-bridge outputs
 * HoldingReg0, 12                                  	
 * HoldingReg0, 13                                  	
 * HoldingReg0, 14                                  	
 * HoldingReg0, 15              Emo Stop            	R/W     No/Yes			// Slave takes action to stop train as fast as possible
 *  
 * HoldingReg1, 0 - 9           Set BEMF speed      	R/W     No/No           // Set value of BEMF, this to allow constant speed regulation
 * HoldingReg1, 10              Set CSReg             	R/W     No/No           // Enable constant speed regulation
 * HoldingReg1, 11 				Clear Amp status		R/W 	No/No			// Clear amplifier status
 * HoldingReg1, 12				Clear message buffer	R/W 	No/No			// Clear message buffer registers
 * HoldingReg1, 13
 * HoldingReg1, 14
 * HoldingReg1, 15				Enable Amplifier        R/W		No/No			// Enable(start) amplifier
 
 * InputReg0, 0 - 9             Read Back EMF         	R/-     Yes/-           // Read of back EMF train motor                      
 * InputReg0, 10                Occupied				R/-     Yes/-          
 * InputReg0, 11                ThermalFlag				R/-     Yes/-			// H-bridge thermal flag output              
 * InputReg0, 12                H-bridge over current 	R/-     Yes/-			// When over current is detected
 * InputReg0, 13                Amplifier ID set		R/-		No/-			// Indicates that the amplifier ID is set by master
 * InputReg0, 14
 * InputReg0, 15
 * 
 * InputReg4, 0 - 15            Amplifier Status        R/-     No/-            // Amplifier status list
 *                                                  	
 * InputReg1, 0 - 9          	H-bridge fuse status	R/-	    No/-            // Voltage H-bridge fuse 0 - 31V
 * 
 * InputReg2, 0 - 9          	H-bridge temperature	R/-		No/-			// H-bridge temperature 0 - 255 degrees Celsius
 * 
 * InputReg3, 0 - 9          	H-bridge current     	R/-		No/-			// H-bridge current A
 * 
 * InputReg5, 0 - 15            HEX Checksum                                    // Software version
 *           	                                           		
 * 
 * DiagnosticReg0, 0 - 15		Messages Received		R/-		No/-			// Slave register of messages Received to Master
 *
 * DiagnosticReg1, 0 - 15		Messages Sent			R/-		No/-			// Slave register of messages sent to Master
 *
 * 
 * -----------------------------CONFIG PARAMETERS------------------------------- 
 * 
 * HoldingReg2, 0 - 5			Amplifier ID			R/W		No/No           // Amplifier ID for Track amp 1 to 50. Backplane config modules have address 51 to 55 
 * HoldingReg2, 6				Single/Double PWM		R/W		No/No			// used in single or double sided PWM operation 0 is dual sided PWM, 1 is single sided PWM
 * HoldingReg2, 15              Reset Slave             R/W     No/No           // Software reset slave, used for invoking bootloader.
 *
 * HoldingReg3, 0 - 7           Acceleration par    	R/W     No/No			// Acceleration number 0 - 255
 * HoldingReg3, 8 - 15          Deceleration par    	R/W     No/No			// Deceleration number 0 - 255
 *
 *------------------------------------------------------------------------------ 
 */
 
 
 /*
 *------------------------------------------------------------------------------ 
 * 
 * Modbus Master Data Register mapping:
 * 
 * Data register, bit(s)        Function            	R/W     Critical
 * 
 * -----------------------------RUNNING PARAMETERS------------------------------
 * 
 * HoldingReg0, 0               StateMachine_Mode               
 * HoldingReg0, 1               Command (Write = 1, Read = 0)
 * HoldingReg0, 2               HoldingReg 
 * HoldingReg0, 3               InputReg 
 * HoldingReg0, 4               DiagReg 
 * HoldingReg0, 5               Execute 
 * 
 * HoldingReg1, 0 - 15          Address of slave to command
 *   
 * HoldingReg2, 0 - 15          Data to be written
 * 
 * HoldingReg3, 0 - 15          Register to be written/read
 *
 * HoldingReg4, 0 - 15          Amount of slaves to communicate to
 * 
 * InputReg0,   0               Modbus Master busy
 * InputReg0,   1               Command execution OK
 * InputReg0,   2               Command execution NOK
 * InputReg0,   3
 * 
 */
 
 
 
 
 /*
 * Modbus Backplane Slave Data Register mapping(using the same amount of registers as the amplifier slaves):
 * 
 * Data register, bit(s)        Function            	R/W     Critical
 * 
 * -----------------------------RUNNING PARAMETERS------------------------------
 * 
 * HoldingReg0, 0               Slave 1  enable       		R/W     No/Yes			// Enable Slave 1  for configuring of ID
 * HoldingReg0, 1               Slave 2  enable       		R/W     No/Yes			// Enable Slave 2  for configuring of ID 
 * HoldingReg0, 2               Slave 3  enable       		R/W     No/Yes			// Enable Slave 3  for configuring of ID 
 * HoldingReg0, 3               Slave 4  enable       		R/W     No/Yes			// Enable Slave 4  for configuring of ID 
 * HoldingReg0, 4               Slave 5  enable       		R/W     No/Yes			// Enable Slave 5  for configuring of ID 
 * HoldingReg0, 5               Slave 6  enable       		R/W     No/Yes			// Enable Slave 6  for configuring of ID 
 * HoldingReg0, 6               Slave 7  enable       		R/W     No/Yes			// Enable Slave 7  for configuring of ID 
 * HoldingReg0, 7               Slave 8  enable       		R/W     No/Yes			// Enable Slave 8  for configuring of ID 
 * HoldingReg0, 8				Slave 9  enable       		R/W     No/Yes          // Enable Slave 9  for configuring of ID 
 * HoldingReg0, 9               Slave 10 enable       		R/W     No/Yes          // Enable Slave 10 for configuring of ID 
 * HoldingReg0, 10
 * HoldingReg0, 11
 * HoldingReg0, 12
 * HoldingReg0, 13
 * HoldingReg0, 14
 * HoldingReg0, 15
 * 
 * HoldingReg1, 0 
 * HoldingReg1, 1
 * HoldingReg1, 2 
 * HoldingReg1, 3 
 * HoldingReg1, 4 
 * HoldingReg1, 5 
 * HoldingReg1, 6 
 * HoldingReg1, 7 
 * HoldingReg1, 8 
 * HoldingReg1, 9 
 * HoldingReg1, 10              
 * HoldingReg1, 11 				Clear ConfigSlave status	R/W 	No/No			// Clear amplifier status
 * HoldingReg1, 12				Clear message buffer		R/W 	No/No			// Clear message buffer registers
 * HoldingReg1, 13
 * HoldingReg1, 14
 * HoldingReg1, 15				Reset ConfigSlave			R/W		No/No			// Execute an Amplifier reset().
 *
 * HoldingReg2, 0 - 5			ConfigSlave ID			    R/W		No/No           // ConfigSlave ID modules have fixed address 51 to 55 
 * HoldingReg2, 6				
 * HoldingReg2, 7
 * HoldingReg2, 8
 * HoldingReg2, 9
 * HoldingReg2, 10
 * HoldingReg2, 11
 * HoldingReg2, 12
 * HoldingReg2, 13
 * HoldingReg2, 14
 * HoldingReg2, 15
 *
 * HoldingReg3, 0 - 15			n.a.
 *
 * InputReg0, 0 - 15			n.a.
 *                                                  	
 * InputReg1, 0 - 4          	Vbus fuse status     		R/-	    No/-            // Voltage Vbus fuse 0 - 31V
 * InputReg1, 5 				ConfigSlave ID set		    R/-		No/-			// Indicates the ConfigSlave ID is set
 *
 * InputReg2, 0 - 15			n.a.
 *
 * InputReg3, 0 - 15			n.a.
 *
 * InputReg4, 0 - 15			n.a.
 *
 * DiagnosticReg0, 0 - 15		Messages Received			R/-		No/-			// Slave register of messages Received to Master
 *	
 * DiagnosticReg1, 0 - 15		Messages Sent				R/-		No/-			// Slave register of messages sent to Master
 * 	
 */