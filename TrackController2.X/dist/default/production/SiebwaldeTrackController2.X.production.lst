

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Apr 12 10:47:14 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F777
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	intentry,global,class=CODE,delta=2
    51                           	psect	text30,local,class=CODE,merge=1,delta=2
    52                           	psect	text31,local,class=CODE,merge=1,delta=2
    53                           	psect	text32,local,class=CODE,merge=1,delta=2
    54                           	dabs	1,0x7E,2
    55  0000                     
    56                           ; Version 1.45
    57                           ; Generated 16/11/2017 GMT
    58                           ; 
    59                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC16F777 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     	;# 
    91  0001                     	;# 
    92  0002                     	;# 
    93  0003                     	;# 
    94  0004                     	;# 
    95  0005                     	;# 
    96  0006                     	;# 
    97  0007                     	;# 
    98  0008                     	;# 
    99  0009                     	;# 
   100  000A                     	;# 
   101  000B                     	;# 
   102  000C                     	;# 
   103  000D                     	;# 
   104  000E                     	;# 
   105  000E                     	;# 
   106  000F                     	;# 
   107  0010                     	;# 
   108  0011                     	;# 
   109  0012                     	;# 
   110  0013                     	;# 
   111  0014                     	;# 
   112  0015                     	;# 
   113  0015                     	;# 
   114  0016                     	;# 
   115  0017                     	;# 
   116  0018                     	;# 
   117  0019                     	;# 
   118  001A                     	;# 
   119  001B                     	;# 
   120  001B                     	;# 
   121  001C                     	;# 
   122  001D                     	;# 
   123  001E                     	;# 
   124  001F                     	;# 
   125  0081                     	;# 
   126  0085                     	;# 
   127  0086                     	;# 
   128  0087                     	;# 
   129  0088                     	;# 
   130  0089                     	;# 
   131  008C                     	;# 
   132  008D                     	;# 
   133  008E                     	;# 
   134  008F                     	;# 
   135  0090                     	;# 
   136  0091                     	;# 
   137  0092                     	;# 
   138  0093                     	;# 
   139  0094                     	;# 
   140  0095                     	;# 
   141  0095                     	;# 
   142  0096                     	;# 
   143  0097                     	;# 
   144  0098                     	;# 
   145  0099                     	;# 
   146  009B                     	;# 
   147  009C                     	;# 
   148  009D                     	;# 
   149  009E                     	;# 
   150  009F                     	;# 
   151  0105                     	;# 
   152  0109                     	;# 
   153  010C                     	;# 
   154  010D                     	;# 
   155  010E                     	;# 
   156  010F                     	;# 
   157  018C                     	;# 
   158  0000                     	;# 
   159  0001                     	;# 
   160  0002                     	;# 
   161  0003                     	;# 
   162  0004                     	;# 
   163  0005                     	;# 
   164  0006                     	;# 
   165  0007                     	;# 
   166  0008                     	;# 
   167  0009                     	;# 
   168  000A                     	;# 
   169  000B                     	;# 
   170  000C                     	;# 
   171  000D                     	;# 
   172  000E                     	;# 
   173  000E                     	;# 
   174  000F                     	;# 
   175  0010                     	;# 
   176  0011                     	;# 
   177  0012                     	;# 
   178  0013                     	;# 
   179  0014                     	;# 
   180  0015                     	;# 
   181  0015                     	;# 
   182  0016                     	;# 
   183  0017                     	;# 
   184  0018                     	;# 
   185  0019                     	;# 
   186  001A                     	;# 
   187  001B                     	;# 
   188  001B                     	;# 
   189  001C                     	;# 
   190  001D                     	;# 
   191  001E                     	;# 
   192  001F                     	;# 
   193  0081                     	;# 
   194  0085                     	;# 
   195  0086                     	;# 
   196  0087                     	;# 
   197  0088                     	;# 
   198  0089                     	;# 
   199  008C                     	;# 
   200  008D                     	;# 
   201  008E                     	;# 
   202  008F                     	;# 
   203  0090                     	;# 
   204  0091                     	;# 
   205  0092                     	;# 
   206  0093                     	;# 
   207  0094                     	;# 
   208  0095                     	;# 
   209  0095                     	;# 
   210  0096                     	;# 
   211  0097                     	;# 
   212  0098                     	;# 
   213  0099                     	;# 
   214  009B                     	;# 
   215  009C                     	;# 
   216  009D                     	;# 
   217  009E                     	;# 
   218  009F                     	;# 
   219  0105                     	;# 
   220  0109                     	;# 
   221  010C                     	;# 
   222  010D                     	;# 
   223  010E                     	;# 
   224  010F                     	;# 
   225  018C                     	;# 
   226  0000                     	;# 
   227  0001                     	;# 
   228  0002                     	;# 
   229  0003                     	;# 
   230  0004                     	;# 
   231  0005                     	;# 
   232  0006                     	;# 
   233  0007                     	;# 
   234  0008                     	;# 
   235  0009                     	;# 
   236  000A                     	;# 
   237  000B                     	;# 
   238  000C                     	;# 
   239  000D                     	;# 
   240  000E                     	;# 
   241  000E                     	;# 
   242  000F                     	;# 
   243  0010                     	;# 
   244  0011                     	;# 
   245  0012                     	;# 
   246  0013                     	;# 
   247  0014                     	;# 
   248  0015                     	;# 
   249  0015                     	;# 
   250  0016                     	;# 
   251  0017                     	;# 
   252  0018                     	;# 
   253  0019                     	;# 
   254  001A                     	;# 
   255  001B                     	;# 
   256  001B                     	;# 
   257  001C                     	;# 
   258  001D                     	;# 
   259  001E                     	;# 
   260  001F                     	;# 
   261  0081                     	;# 
   262  0085                     	;# 
   263  0086                     	;# 
   264  0087                     	;# 
   265  0088                     	;# 
   266  0089                     	;# 
   267  008C                     	;# 
   268  008D                     	;# 
   269  008E                     	;# 
   270  008F                     	;# 
   271  0090                     	;# 
   272  0091                     	;# 
   273  0092                     	;# 
   274  0093                     	;# 
   275  0094                     	;# 
   276  0095                     	;# 
   277  0095                     	;# 
   278  0096                     	;# 
   279  0097                     	;# 
   280  0098                     	;# 
   281  0099                     	;# 
   282  009B                     	;# 
   283  009C                     	;# 
   284  009D                     	;# 
   285  009E                     	;# 
   286  009F                     	;# 
   287  0105                     	;# 
   288  0109                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  018C                     	;# 
   294  0000                     	;# 
   295  0001                     	;# 
   296  0002                     	;# 
   297  0003                     	;# 
   298  0004                     	;# 
   299  0005                     	;# 
   300  0006                     	;# 
   301  0007                     	;# 
   302  0008                     	;# 
   303  0009                     	;# 
   304  000A                     	;# 
   305  000B                     	;# 
   306  000C                     	;# 
   307  000D                     	;# 
   308  000E                     	;# 
   309  000E                     	;# 
   310  000F                     	;# 
   311  0010                     	;# 
   312  0011                     	;# 
   313  0012                     	;# 
   314  0013                     	;# 
   315  0014                     	;# 
   316  0015                     	;# 
   317  0015                     	;# 
   318  0016                     	;# 
   319  0017                     	;# 
   320  0018                     	;# 
   321  0019                     	;# 
   322  001A                     	;# 
   323  001B                     	;# 
   324  001B                     	;# 
   325  001C                     	;# 
   326  001D                     	;# 
   327  001E                     	;# 
   328  001F                     	;# 
   329  0081                     	;# 
   330  0085                     	;# 
   331  0086                     	;# 
   332  0087                     	;# 
   333  0088                     	;# 
   334  0089                     	;# 
   335  008C                     	;# 
   336  008D                     	;# 
   337  008E                     	;# 
   338  008F                     	;# 
   339  0090                     	;# 
   340  0091                     	;# 
   341  0092                     	;# 
   342  0093                     	;# 
   343  0094                     	;# 
   344  0095                     	;# 
   345  0095                     	;# 
   346  0096                     	;# 
   347  0097                     	;# 
   348  0098                     	;# 
   349  0099                     	;# 
   350  009B                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  0105                     	;# 
   356  0109                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  018C                     	;# 
   362  0000                     	;# 
   363  0001                     	;# 
   364  0002                     	;# 
   365  0003                     	;# 
   366  0004                     	;# 
   367  0005                     	;# 
   368  0006                     	;# 
   369  0007                     	;# 
   370  0008                     	;# 
   371  0009                     	;# 
   372  000A                     	;# 
   373  000B                     	;# 
   374  000C                     	;# 
   375  000D                     	;# 
   376  000E                     	;# 
   377  000E                     	;# 
   378  000F                     	;# 
   379  0010                     	;# 
   380  0011                     	;# 
   381  0012                     	;# 
   382  0013                     	;# 
   383  0014                     	;# 
   384  0015                     	;# 
   385  0015                     	;# 
   386  0016                     	;# 
   387  0017                     	;# 
   388  0018                     	;# 
   389  0019                     	;# 
   390  001A                     	;# 
   391  001B                     	;# 
   392  001B                     	;# 
   393  001C                     	;# 
   394  001D                     	;# 
   395  001E                     	;# 
   396  001F                     	;# 
   397  0081                     	;# 
   398  0085                     	;# 
   399  0086                     	;# 
   400  0087                     	;# 
   401  0088                     	;# 
   402  0089                     	;# 
   403  008C                     	;# 
   404  008D                     	;# 
   405  008E                     	;# 
   406  008F                     	;# 
   407  0090                     	;# 
   408  0091                     	;# 
   409  0092                     	;# 
   410  0093                     	;# 
   411  0094                     	;# 
   412  0095                     	;# 
   413  0095                     	;# 
   414  0096                     	;# 
   415  0097                     	;# 
   416  0098                     	;# 
   417  0099                     	;# 
   418  009B                     	;# 
   419  009C                     	;# 
   420  009D                     	;# 
   421  009E                     	;# 
   422  009F                     	;# 
   423  0105                     	;# 
   424  0109                     	;# 
   425  010C                     	;# 
   426  010D                     	;# 
   427  010E                     	;# 
   428  010F                     	;# 
   429  018C                     	;# 
   430  0000                     	;# 
   431  0001                     	;# 
   432  0002                     	;# 
   433  0003                     	;# 
   434  0004                     	;# 
   435  0005                     	;# 
   436  0006                     	;# 
   437  0007                     	;# 
   438  0008                     	;# 
   439  0009                     	;# 
   440  000A                     	;# 
   441  000B                     	;# 
   442  000C                     	;# 
   443  000D                     	;# 
   444  000E                     	;# 
   445  000E                     	;# 
   446  000F                     	;# 
   447  0010                     	;# 
   448  0011                     	;# 
   449  0012                     	;# 
   450  0013                     	;# 
   451  0014                     	;# 
   452  0015                     	;# 
   453  0015                     	;# 
   454  0016                     	;# 
   455  0017                     	;# 
   456  0018                     	;# 
   457  0019                     	;# 
   458  001A                     	;# 
   459  001B                     	;# 
   460  001B                     	;# 
   461  001C                     	;# 
   462  001D                     	;# 
   463  001E                     	;# 
   464  001F                     	;# 
   465  0081                     	;# 
   466  0085                     	;# 
   467  0086                     	;# 
   468  0087                     	;# 
   469  0088                     	;# 
   470  0089                     	;# 
   471  008C                     	;# 
   472  008D                     	;# 
   473  008E                     	;# 
   474  008F                     	;# 
   475  0090                     	;# 
   476  0091                     	;# 
   477  0092                     	;# 
   478  0093                     	;# 
   479  0094                     	;# 
   480  0095                     	;# 
   481  0095                     	;# 
   482  0096                     	;# 
   483  0097                     	;# 
   484  0098                     	;# 
   485  0099                     	;# 
   486  009B                     	;# 
   487  009C                     	;# 
   488  009D                     	;# 
   489  009E                     	;# 
   490  009F                     	;# 
   491  0105                     	;# 
   492  0109                     	;# 
   493  010C                     	;# 
   494  010D                     	;# 
   495  010E                     	;# 
   496  010F                     	;# 
   497  018C                     	;# 
   498  0000                     	;# 
   499  0001                     	;# 
   500  0002                     	;# 
   501  0003                     	;# 
   502  0004                     	;# 
   503  0005                     	;# 
   504  0006                     	;# 
   505  0007                     	;# 
   506  0008                     	;# 
   507  0009                     	;# 
   508  000A                     	;# 
   509  000B                     	;# 
   510  000C                     	;# 
   511  000D                     	;# 
   512  000E                     	;# 
   513  000E                     	;# 
   514  000F                     	;# 
   515  0010                     	;# 
   516  0011                     	;# 
   517  0012                     	;# 
   518  0013                     	;# 
   519  0014                     	;# 
   520  0015                     	;# 
   521  0015                     	;# 
   522  0016                     	;# 
   523  0017                     	;# 
   524  0018                     	;# 
   525  0019                     	;# 
   526  001A                     	;# 
   527  001B                     	;# 
   528  001B                     	;# 
   529  001C                     	;# 
   530  001D                     	;# 
   531  001E                     	;# 
   532  001F                     	;# 
   533  0081                     	;# 
   534  0085                     	;# 
   535  0086                     	;# 
   536  0087                     	;# 
   537  0088                     	;# 
   538  0089                     	;# 
   539  008C                     	;# 
   540  008D                     	;# 
   541  008E                     	;# 
   542  008F                     	;# 
   543  0090                     	;# 
   544  0091                     	;# 
   545  0092                     	;# 
   546  0093                     	;# 
   547  0094                     	;# 
   548  0095                     	;# 
   549  0095                     	;# 
   550  0096                     	;# 
   551  0097                     	;# 
   552  0098                     	;# 
   553  0099                     	;# 
   554  009B                     	;# 
   555  009C                     	;# 
   556  009D                     	;# 
   557  009E                     	;# 
   558  009F                     	;# 
   559  0105                     	;# 
   560  0109                     	;# 
   561  010C                     	;# 
   562  010D                     	;# 
   563  010E                     	;# 
   564  010F                     	;# 
   565  018C                     	;# 
   566  0000                     	;# 
   567  0001                     	;# 
   568  0002                     	;# 
   569  0003                     	;# 
   570  0004                     	;# 
   571  0005                     	;# 
   572  0006                     	;# 
   573  0007                     	;# 
   574  0008                     	;# 
   575  0009                     	;# 
   576  000A                     	;# 
   577  000B                     	;# 
   578  000C                     	;# 
   579  000D                     	;# 
   580  000E                     	;# 
   581  000E                     	;# 
   582  000F                     	;# 
   583  0010                     	;# 
   584  0011                     	;# 
   585  0012                     	;# 
   586  0013                     	;# 
   587  0014                     	;# 
   588  0015                     	;# 
   589  0015                     	;# 
   590  0016                     	;# 
   591  0017                     	;# 
   592  0018                     	;# 
   593  0019                     	;# 
   594  001A                     	;# 
   595  001B                     	;# 
   596  001B                     	;# 
   597  001C                     	;# 
   598  001D                     	;# 
   599  001E                     	;# 
   600  001F                     	;# 
   601  0081                     	;# 
   602  0085                     	;# 
   603  0086                     	;# 
   604  0087                     	;# 
   605  0088                     	;# 
   606  0089                     	;# 
   607  008C                     	;# 
   608  008D                     	;# 
   609  008E                     	;# 
   610  008F                     	;# 
   611  0090                     	;# 
   612  0091                     	;# 
   613  0092                     	;# 
   614  0093                     	;# 
   615  0094                     	;# 
   616  0095                     	;# 
   617  0095                     	;# 
   618  0096                     	;# 
   619  0097                     	;# 
   620  0098                     	;# 
   621  0099                     	;# 
   622  009B                     	;# 
   623  009C                     	;# 
   624  009D                     	;# 
   625  009E                     	;# 
   626  009F                     	;# 
   627  0105                     	;# 
   628  0109                     	;# 
   629  010C                     	;# 
   630  010D                     	;# 
   631  010E                     	;# 
   632  010F                     	;# 
   633  018C                     	;# 
   634  0000                     	;# 
   635  0001                     	;# 
   636  0002                     	;# 
   637  0003                     	;# 
   638  0004                     	;# 
   639  0005                     	;# 
   640  0006                     	;# 
   641  0007                     	;# 
   642  0008                     	;# 
   643  0009                     	;# 
   644  000A                     	;# 
   645  000B                     	;# 
   646  000C                     	;# 
   647  000D                     	;# 
   648  000E                     	;# 
   649  000E                     	;# 
   650  000F                     	;# 
   651  0010                     	;# 
   652  0011                     	;# 
   653  0012                     	;# 
   654  0013                     	;# 
   655  0014                     	;# 
   656  0015                     	;# 
   657  0015                     	;# 
   658  0016                     	;# 
   659  0017                     	;# 
   660  0018                     	;# 
   661  0019                     	;# 
   662  001A                     	;# 
   663  001B                     	;# 
   664  001B                     	;# 
   665  001C                     	;# 
   666  001D                     	;# 
   667  001E                     	;# 
   668  001F                     	;# 
   669  0081                     	;# 
   670  0085                     	;# 
   671  0086                     	;# 
   672  0087                     	;# 
   673  0088                     	;# 
   674  0089                     	;# 
   675  008C                     	;# 
   676  008D                     	;# 
   677  008E                     	;# 
   678  008F                     	;# 
   679  0090                     	;# 
   680  0091                     	;# 
   681  0092                     	;# 
   682  0093                     	;# 
   683  0094                     	;# 
   684  0095                     	;# 
   685  0095                     	;# 
   686  0096                     	;# 
   687  0097                     	;# 
   688  0098                     	;# 
   689  0099                     	;# 
   690  009B                     	;# 
   691  009C                     	;# 
   692  009D                     	;# 
   693  009E                     	;# 
   694  009F                     	;# 
   695  0105                     	;# 
   696  0109                     	;# 
   697  010C                     	;# 
   698  010D                     	;# 
   699  010E                     	;# 
   700  010F                     	;# 
   701  018C                     	;# 
   702  0000                     	;# 
   703  0001                     	;# 
   704  0002                     	;# 
   705  0003                     	;# 
   706  0004                     	;# 
   707  0005                     	;# 
   708  0006                     	;# 
   709  0007                     	;# 
   710  0008                     	;# 
   711  0009                     	;# 
   712  000A                     	;# 
   713  000B                     	;# 
   714  000C                     	;# 
   715  000D                     	;# 
   716  000E                     	;# 
   717  000E                     	;# 
   718  000F                     	;# 
   719  0010                     	;# 
   720  0011                     	;# 
   721  0012                     	;# 
   722  0013                     	;# 
   723  0014                     	;# 
   724  0015                     	;# 
   725  0015                     	;# 
   726  0016                     	;# 
   727  0017                     	;# 
   728  0018                     	;# 
   729  0019                     	;# 
   730  001A                     	;# 
   731  001B                     	;# 
   732  001B                     	;# 
   733  001C                     	;# 
   734  001D                     	;# 
   735  001E                     	;# 
   736  001F                     	;# 
   737  0081                     	;# 
   738  0085                     	;# 
   739  0086                     	;# 
   740  0087                     	;# 
   741  0088                     	;# 
   742  0089                     	;# 
   743  008C                     	;# 
   744  008D                     	;# 
   745  008E                     	;# 
   746  008F                     	;# 
   747  0090                     	;# 
   748  0091                     	;# 
   749  0092                     	;# 
   750  0093                     	;# 
   751  0094                     	;# 
   752  0095                     	;# 
   753  0095                     	;# 
   754  0096                     	;# 
   755  0097                     	;# 
   756  0098                     	;# 
   757  0099                     	;# 
   758  009B                     	;# 
   759  009C                     	;# 
   760  009D                     	;# 
   761  009E                     	;# 
   762  009F                     	;# 
   763  0105                     	;# 
   764  0109                     	;# 
   765  010C                     	;# 
   766  010D                     	;# 
   767  010E                     	;# 
   768  010F                     	;# 
   769  018C                     	;# 
   770  0000                     	;# 
   771  0001                     	;# 
   772  0002                     	;# 
   773  0003                     	;# 
   774  0004                     	;# 
   775  0005                     	;# 
   776  0006                     	;# 
   777  0007                     	;# 
   778  0008                     	;# 
   779  0009                     	;# 
   780  000A                     	;# 
   781  000B                     	;# 
   782  000C                     	;# 
   783  000D                     	;# 
   784  000E                     	;# 
   785  000E                     	;# 
   786  000F                     	;# 
   787  0010                     	;# 
   788  0011                     	;# 
   789  0012                     	;# 
   790  0013                     	;# 
   791  0014                     	;# 
   792  0015                     	;# 
   793  0015                     	;# 
   794  0016                     	;# 
   795  0017                     	;# 
   796  0018                     	;# 
   797  0019                     	;# 
   798  001A                     	;# 
   799  001B                     	;# 
   800  001B                     	;# 
   801  001C                     	;# 
   802  001D                     	;# 
   803  001E                     	;# 
   804  001F                     	;# 
   805  0081                     	;# 
   806  0085                     	;# 
   807  0086                     	;# 
   808  0087                     	;# 
   809  0088                     	;# 
   810  0089                     	;# 
   811  008C                     	;# 
   812  008D                     	;# 
   813  008E                     	;# 
   814  008F                     	;# 
   815  0090                     	;# 
   816  0091                     	;# 
   817  0092                     	;# 
   818  0093                     	;# 
   819  0094                     	;# 
   820  0095                     	;# 
   821  0095                     	;# 
   822  0096                     	;# 
   823  0097                     	;# 
   824  0098                     	;# 
   825  0099                     	;# 
   826  009B                     	;# 
   827  009C                     	;# 
   828  009D                     	;# 
   829  009E                     	;# 
   830  009F                     	;# 
   831  0105                     	;# 
   832  0109                     	;# 
   833  010C                     	;# 
   834  010D                     	;# 
   835  010E                     	;# 
   836  010F                     	;# 
   837  018C                     	;# 
   838                           
   839                           	psect	idataBANK0
   840  0DE1                     __pidataBANK0:	
   841                           
   842                           ;initializer for _temp3
   843  0DE1  3400               	retlw	0
   844  0DE2  3400               	retlw	0
   845  0DE3  3400               	retlw	0
   846  0DE4  3407               	retlw	7
   847                           
   848                           ;initializer for _temp
   849  0DE5  3400               	retlw	0
   850  0DE6  3400               	retlw	0
   851  0DE7  3400               	retlw	0
   852  0DE8  3401               	retlw	1
   853                           
   854                           ;initializer for _Petit_Rx_CRC16
   855  0DE9  34FF               	retlw	255
   856  0DEA  34FF               	retlw	255
   857                           
   858                           ;initializer for _Petit_Tx_CRC16
   859  0DEB  34FF               	retlw	255
   860  0DEC  34FF               	retlw	255
   861                           
   862                           	psect	idataBANK1
   863  07F6                     __pidataBANK1:	
   864                           
   865                           ;initializer for _temp4
   866  07F6  3400               	retlw	0
   867  07F7  3402               	retlw	2
   868  07F8  3400               	retlw	0
   869  07F9  3402               	retlw	2
   870  07FA  3404               	retlw	4
   871  07FB  3455               	retlw	85
   872  07FC  34AA               	retlw	170
   873  07FD  3450               	retlw	80
   874  07FE  34A0               	retlw	160
   875                           
   876                           	psect	stringtext
   877  0100                     __pstringtext:	
   878  0100                     stringtab:	
   879  0100                     __stringtab:	
   880                           
   881                           ;	String table - string pointers are 2 bytes each
   882  0100  1BFF               	btfsc	btemp+1,7
   883  0101  290A               	ljmp	stringcode
   884  0102  1383               	bcf	3,7
   885  0103  187F               	btfsc	btemp+1,0
   886  0104  1783               	bsf	3,7
   887  0105  0800               	movf	0,w
   888  0106  0A84               	incf	4,f
   889  0107  1903               	skipnz
   890  0108  0AFF               	incf	btemp+1,f
   891  0109  0008               	return
   892  010A                     stringcode:	
   893  010A  087F               	movf	btemp+1,w
   894  010B  397F               	andlw	127
   895  010C  008A               	movwf	10
   896  010D  0804               	movf	4,w
   897  010E  0A84               	incf	4,f
   898  010F  1903               	skipnz
   899  0110  0AFF               	incf	btemp+1,f
   900  0111  0082               	movwf	2
   901  0112                     __stringbase:	
   902  0112                     __end_of__stringtab:	
   903  0112                     _auchCRCLo:	
   904  0112  3400               	retlw	0
   905  0113  34C0               	retlw	192
   906  0114  34C1               	retlw	193
   907  0115  3401               	retlw	1
   908  0116  34C3               	retlw	195
   909  0117  3403               	retlw	3
   910  0118  3402               	retlw	2
   911  0119  34C2               	retlw	194
   912  011A  34C6               	retlw	198
   913  011B  3406               	retlw	6
   914  011C  3407               	retlw	7
   915  011D  34C7               	retlw	199
   916  011E  3405               	retlw	5
   917  011F  34C5               	retlw	197
   918  0120  34C4               	retlw	196
   919  0121  3404               	retlw	4
   920  0122  34CC               	retlw	204
   921  0123  340C               	retlw	12
   922  0124  340D               	retlw	13
   923  0125  34CD               	retlw	205
   924  0126  340F               	retlw	15
   925  0127  34CF               	retlw	207
   926  0128  34CE               	retlw	206
   927  0129  340E               	retlw	14
   928  012A  340A               	retlw	10
   929  012B  34CA               	retlw	202
   930  012C  34CB               	retlw	203
   931  012D  340B               	retlw	11
   932  012E  34C9               	retlw	201
   933  012F  3409               	retlw	9
   934  0130  3408               	retlw	8
   935  0131  34C8               	retlw	200
   936  0132  34D8               	retlw	216
   937  0133  3418               	retlw	24
   938  0134  3419               	retlw	25
   939  0135  34D9               	retlw	217
   940  0136  341B               	retlw	27
   941  0137  34DB               	retlw	219
   942  0138  34DA               	retlw	218
   943  0139  341A               	retlw	26
   944  013A  341E               	retlw	30
   945  013B  34DE               	retlw	222
   946  013C  34DF               	retlw	223
   947  013D  341F               	retlw	31
   948  013E  34DD               	retlw	221
   949  013F  341D               	retlw	29
   950  0140  341C               	retlw	28
   951  0141  34DC               	retlw	220
   952  0142  3414               	retlw	20
   953  0143  34D4               	retlw	212
   954  0144  34D5               	retlw	213
   955  0145  3415               	retlw	21
   956  0146  34D7               	retlw	215
   957  0147  3417               	retlw	23
   958  0148  3416               	retlw	22
   959  0149  34D6               	retlw	214
   960  014A  34D2               	retlw	210
   961  014B  3412               	retlw	18
   962  014C  3413               	retlw	19
   963  014D  34D3               	retlw	211
   964  014E  3411               	retlw	17
   965  014F  34D1               	retlw	209
   966  0150  34D0               	retlw	208
   967  0151  3410               	retlw	16
   968  0152  34F0               	retlw	240
   969  0153  3430               	retlw	48
   970  0154  3431               	retlw	49
   971  0155  34F1               	retlw	241
   972  0156  3433               	retlw	51
   973  0157  34F3               	retlw	243
   974  0158  34F2               	retlw	242
   975  0159  3432               	retlw	50
   976  015A  3436               	retlw	54
   977  015B  34F6               	retlw	246
   978  015C  34F7               	retlw	247
   979  015D  3437               	retlw	55
   980  015E  34F5               	retlw	245
   981  015F  3435               	retlw	53
   982  0160  3434               	retlw	52
   983  0161  34F4               	retlw	244
   984  0162  343C               	retlw	60
   985  0163  34FC               	retlw	252
   986  0164  34FD               	retlw	253
   987  0165  343D               	retlw	61
   988  0166  34FF               	retlw	255
   989  0167  343F               	retlw	63
   990  0168  343E               	retlw	62
   991  0169  34FE               	retlw	254
   992  016A  34FA               	retlw	250
   993  016B  343A               	retlw	58
   994  016C  343B               	retlw	59
   995  016D  34FB               	retlw	251
   996  016E  3439               	retlw	57
   997  016F  34F9               	retlw	249
   998  0170  34F8               	retlw	248
   999  0171  3438               	retlw	56
  1000  0172  3428               	retlw	40
  1001  0173  34E8               	retlw	232
  1002  0174  34E9               	retlw	233
  1003  0175  3429               	retlw	41
  1004  0176  34EB               	retlw	235
  1005  0177  342B               	retlw	43
  1006  0178  342A               	retlw	42
  1007  0179  34EA               	retlw	234
  1008  017A  34EE               	retlw	238
  1009  017B  342E               	retlw	46
  1010  017C  342F               	retlw	47
  1011  017D  34EF               	retlw	239
  1012  017E  342D               	retlw	45
  1013  017F  34ED               	retlw	237
  1014  0180  34EC               	retlw	236
  1015  0181  342C               	retlw	44
  1016  0182  34E4               	retlw	228
  1017  0183  3424               	retlw	36
  1018  0184  3425               	retlw	37
  1019  0185  34E5               	retlw	229
  1020  0186  3427               	retlw	39
  1021  0187  34E7               	retlw	231
  1022  0188  34E6               	retlw	230
  1023  0189  3426               	retlw	38
  1024  018A  3422               	retlw	34
  1025  018B  34E2               	retlw	226
  1026  018C  34E3               	retlw	227
  1027  018D  3423               	retlw	35
  1028  018E  34E1               	retlw	225
  1029  018F  3421               	retlw	33
  1030  0190  3420               	retlw	32
  1031  0191  34E0               	retlw	224
  1032  0192  34A0               	retlw	160
  1033  0193  3460               	retlw	96
  1034  0194  3461               	retlw	97
  1035  0195  34A1               	retlw	161
  1036  0196  3463               	retlw	99
  1037  0197  34A3               	retlw	163
  1038  0198  34A2               	retlw	162
  1039  0199  3462               	retlw	98
  1040  019A  3466               	retlw	102
  1041  019B  34A6               	retlw	166
  1042  019C  34A7               	retlw	167
  1043  019D  3467               	retlw	103
  1044  019E  34A5               	retlw	165
  1045  019F  3465               	retlw	101
  1046  01A0  3464               	retlw	100
  1047  01A1  34A4               	retlw	164
  1048  01A2  346C               	retlw	108
  1049  01A3  34AC               	retlw	172
  1050  01A4  34AD               	retlw	173
  1051  01A5  346D               	retlw	109
  1052  01A6  34AF               	retlw	175
  1053  01A7  346F               	retlw	111
  1054  01A8  346E               	retlw	110
  1055  01A9  34AE               	retlw	174
  1056  01AA  34AA               	retlw	170
  1057  01AB  346A               	retlw	106
  1058  01AC  346B               	retlw	107
  1059  01AD  34AB               	retlw	171
  1060  01AE  3469               	retlw	105
  1061  01AF  34A9               	retlw	169
  1062  01B0  34A8               	retlw	168
  1063  01B1  3468               	retlw	104
  1064  01B2  3478               	retlw	120
  1065  01B3  34B8               	retlw	184
  1066  01B4  34B9               	retlw	185
  1067  01B5  3479               	retlw	121
  1068  01B6  34BB               	retlw	187
  1069  01B7  347B               	retlw	123
  1070  01B8  347A               	retlw	122
  1071  01B9  34BA               	retlw	186
  1072  01BA  34BE               	retlw	190
  1073  01BB  347E               	retlw	126
  1074  01BC  347F               	retlw	127
  1075  01BD  34BF               	retlw	191
  1076  01BE  347D               	retlw	125
  1077  01BF  34BD               	retlw	189
  1078  01C0  34BC               	retlw	188
  1079  01C1  347C               	retlw	124
  1080  01C2  34B4               	retlw	180
  1081  01C3  3474               	retlw	116
  1082  01C4  3475               	retlw	117
  1083  01C5  34B5               	retlw	181
  1084  01C6  3477               	retlw	119
  1085  01C7  34B7               	retlw	183
  1086  01C8  34B6               	retlw	182
  1087  01C9  3476               	retlw	118
  1088  01CA  3472               	retlw	114
  1089  01CB  34B2               	retlw	178
  1090  01CC  34B3               	retlw	179
  1091  01CD  3473               	retlw	115
  1092  01CE  34B1               	retlw	177
  1093  01CF  3471               	retlw	113
  1094  01D0  3470               	retlw	112
  1095  01D1  34B0               	retlw	176
  1096  01D2  3450               	retlw	80
  1097  01D3  3490               	retlw	144
  1098  01D4  3491               	retlw	145
  1099  01D5  3451               	retlw	81
  1100  01D6  3493               	retlw	147
  1101  01D7  3453               	retlw	83
  1102  01D8  3452               	retlw	82
  1103  01D9  3492               	retlw	146
  1104  01DA  3496               	retlw	150
  1105  01DB  3456               	retlw	86
  1106  01DC  3457               	retlw	87
  1107  01DD  3497               	retlw	151
  1108  01DE  3455               	retlw	85
  1109  01DF  3495               	retlw	149
  1110  01E0  3494               	retlw	148
  1111  01E1  3454               	retlw	84
  1112  01E2  349C               	retlw	156
  1113  01E3  345C               	retlw	92
  1114  01E4  345D               	retlw	93
  1115  01E5  349D               	retlw	157
  1116  01E6  345F               	retlw	95
  1117  01E7  349F               	retlw	159
  1118  01E8  349E               	retlw	158
  1119  01E9  345E               	retlw	94
  1120  01EA  345A               	retlw	90
  1121  01EB  349A               	retlw	154
  1122  01EC  349B               	retlw	155
  1123  01ED  345B               	retlw	91
  1124  01EE  3499               	retlw	153
  1125  01EF  3459               	retlw	89
  1126  01F0  3458               	retlw	88
  1127  01F1  3498               	retlw	152
  1128  01F2  3488               	retlw	136
  1129  01F3  3448               	retlw	72
  1130  01F4  3449               	retlw	73
  1131  01F5  3489               	retlw	137
  1132  01F6  344B               	retlw	75
  1133  01F7  348B               	retlw	139
  1134  01F8  348A               	retlw	138
  1135  01F9  344A               	retlw	74
  1136  01FA  344E               	retlw	78
  1137  01FB  348E               	retlw	142
  1138  01FC  348F               	retlw	143
  1139  01FD  344F               	retlw	79
  1140  01FE  348D               	retlw	141
  1141  01FF  344D               	retlw	77
  1142  0200  344C               	retlw	76
  1143  0201  348C               	retlw	140
  1144  0202  3444               	retlw	68
  1145  0203  3484               	retlw	132
  1146  0204  3485               	retlw	133
  1147  0205  3445               	retlw	69
  1148  0206  3487               	retlw	135
  1149  0207  3447               	retlw	71
  1150  0208  3446               	retlw	70
  1151  0209  3486               	retlw	134
  1152  020A  3482               	retlw	130
  1153  020B  3442               	retlw	66
  1154  020C  3443               	retlw	67
  1155  020D  3483               	retlw	131
  1156  020E  3441               	retlw	65
  1157  020F  3481               	retlw	129
  1158  0210  3480               	retlw	128
  1159  0211  3440               	retlw	64
  1160  0212                     __end_of_auchCRCLo:	
  1161  0212                     _auchCRCHi:	
  1162  0212  3400               	retlw	0
  1163  0213  34C1               	retlw	193
  1164  0214  3481               	retlw	129
  1165  0215  3440               	retlw	64
  1166  0216  3401               	retlw	1
  1167  0217  34C0               	retlw	192
  1168  0218  3480               	retlw	128
  1169  0219  3441               	retlw	65
  1170  021A  3401               	retlw	1
  1171  021B  34C0               	retlw	192
  1172  021C  3480               	retlw	128
  1173  021D  3441               	retlw	65
  1174  021E  3400               	retlw	0
  1175  021F  34C1               	retlw	193
  1176  0220  3481               	retlw	129
  1177  0221  3440               	retlw	64
  1178  0222  3401               	retlw	1
  1179  0223  34C0               	retlw	192
  1180  0224  3480               	retlw	128
  1181  0225  3441               	retlw	65
  1182  0226  3400               	retlw	0
  1183  0227  34C1               	retlw	193
  1184  0228  3481               	retlw	129
  1185  0229  3440               	retlw	64
  1186  022A  3400               	retlw	0
  1187  022B  34C1               	retlw	193
  1188  022C  3481               	retlw	129
  1189  022D  3440               	retlw	64
  1190  022E  3401               	retlw	1
  1191  022F  34C0               	retlw	192
  1192  0230  3480               	retlw	128
  1193  0231  3441               	retlw	65
  1194  0232  3401               	retlw	1
  1195  0233  34C0               	retlw	192
  1196  0234  3480               	retlw	128
  1197  0235  3441               	retlw	65
  1198  0236  3400               	retlw	0
  1199  0237  34C1               	retlw	193
  1200  0238  3481               	retlw	129
  1201  0239  3440               	retlw	64
  1202  023A  3400               	retlw	0
  1203  023B  34C1               	retlw	193
  1204  023C  3481               	retlw	129
  1205  023D  3440               	retlw	64
  1206  023E  3401               	retlw	1
  1207  023F  34C0               	retlw	192
  1208  0240  3480               	retlw	128
  1209  0241  3441               	retlw	65
  1210  0242  3400               	retlw	0
  1211  0243  34C1               	retlw	193
  1212  0244  3481               	retlw	129
  1213  0245  3440               	retlw	64
  1214  0246  3401               	retlw	1
  1215  0247  34C0               	retlw	192
  1216  0248  3480               	retlw	128
  1217  0249  3441               	retlw	65
  1218  024A  3401               	retlw	1
  1219  024B  34C0               	retlw	192
  1220  024C  3480               	retlw	128
  1221  024D  3441               	retlw	65
  1222  024E  3400               	retlw	0
  1223  024F  34C1               	retlw	193
  1224  0250  3481               	retlw	129
  1225  0251  3440               	retlw	64
  1226  0252  3401               	retlw	1
  1227  0253  34C0               	retlw	192
  1228  0254  3480               	retlw	128
  1229  0255  3441               	retlw	65
  1230  0256  3400               	retlw	0
  1231  0257  34C1               	retlw	193
  1232  0258  3481               	retlw	129
  1233  0259  3440               	retlw	64
  1234  025A  3400               	retlw	0
  1235  025B  34C1               	retlw	193
  1236  025C  3481               	retlw	129
  1237  025D  3440               	retlw	64
  1238  025E  3401               	retlw	1
  1239  025F  34C0               	retlw	192
  1240  0260  3480               	retlw	128
  1241  0261  3441               	retlw	65
  1242  0262  3400               	retlw	0
  1243  0263  34C1               	retlw	193
  1244  0264  3481               	retlw	129
  1245  0265  3440               	retlw	64
  1246  0266  3401               	retlw	1
  1247  0267  34C0               	retlw	192
  1248  0268  3480               	retlw	128
  1249  0269  3441               	retlw	65
  1250  026A  3401               	retlw	1
  1251  026B  34C0               	retlw	192
  1252  026C  3480               	retlw	128
  1253  026D  3441               	retlw	65
  1254  026E  3400               	retlw	0
  1255  026F  34C1               	retlw	193
  1256  0270  3481               	retlw	129
  1257  0271  3440               	retlw	64
  1258  0272  3400               	retlw	0
  1259  0273  34C1               	retlw	193
  1260  0274  3481               	retlw	129
  1261  0275  3440               	retlw	64
  1262  0276  3401               	retlw	1
  1263  0277  34C0               	retlw	192
  1264  0278  3480               	retlw	128
  1265  0279  3441               	retlw	65
  1266  027A  3401               	retlw	1
  1267  027B  34C0               	retlw	192
  1268  027C  3480               	retlw	128
  1269  027D  3441               	retlw	65
  1270  027E  3400               	retlw	0
  1271  027F  34C1               	retlw	193
  1272  0280  3481               	retlw	129
  1273  0281  3440               	retlw	64
  1274  0282  3401               	retlw	1
  1275  0283  34C0               	retlw	192
  1276  0284  3480               	retlw	128
  1277  0285  3441               	retlw	65
  1278  0286  3400               	retlw	0
  1279  0287  34C1               	retlw	193
  1280  0288  3481               	retlw	129
  1281  0289  3440               	retlw	64
  1282  028A  3400               	retlw	0
  1283  028B  34C1               	retlw	193
  1284  028C  3481               	retlw	129
  1285  028D  3440               	retlw	64
  1286  028E  3401               	retlw	1
  1287  028F  34C0               	retlw	192
  1288  0290  3480               	retlw	128
  1289  0291  3441               	retlw	65
  1290  0292  3401               	retlw	1
  1291  0293  34C0               	retlw	192
  1292  0294  3480               	retlw	128
  1293  0295  3441               	retlw	65
  1294  0296  3400               	retlw	0
  1295  0297  34C1               	retlw	193
  1296  0298  3481               	retlw	129
  1297  0299  3440               	retlw	64
  1298  029A  3400               	retlw	0
  1299  029B  34C1               	retlw	193
  1300  029C  3481               	retlw	129
  1301  029D  3440               	retlw	64
  1302  029E  3401               	retlw	1
  1303  029F  34C0               	retlw	192
  1304  02A0  3480               	retlw	128
  1305  02A1  3441               	retlw	65
  1306  02A2  3400               	retlw	0
  1307  02A3  34C1               	retlw	193
  1308  02A4  3481               	retlw	129
  1309  02A5  3440               	retlw	64
  1310  02A6  3401               	retlw	1
  1311  02A7  34C0               	retlw	192
  1312  02A8  3480               	retlw	128
  1313  02A9  3441               	retlw	65
  1314  02AA  3401               	retlw	1
  1315  02AB  34C0               	retlw	192
  1316  02AC  3480               	retlw	128
  1317  02AD  3441               	retlw	65
  1318  02AE  3400               	retlw	0
  1319  02AF  34C1               	retlw	193
  1320  02B0  3481               	retlw	129
  1321  02B1  3440               	retlw	64
  1322  02B2  3400               	retlw	0
  1323  02B3  34C1               	retlw	193
  1324  02B4  3481               	retlw	129
  1325  02B5  3440               	retlw	64
  1326  02B6  3401               	retlw	1
  1327  02B7  34C0               	retlw	192
  1328  02B8  3480               	retlw	128
  1329  02B9  3441               	retlw	65
  1330  02BA  3401               	retlw	1
  1331  02BB  34C0               	retlw	192
  1332  02BC  3480               	retlw	128
  1333  02BD  3441               	retlw	65
  1334  02BE  3400               	retlw	0
  1335  02BF  34C1               	retlw	193
  1336  02C0  3481               	retlw	129
  1337  02C1  3440               	retlw	64
  1338  02C2  3401               	retlw	1
  1339  02C3  34C0               	retlw	192
  1340  02C4  3480               	retlw	128
  1341  02C5  3441               	retlw	65
  1342  02C6  3400               	retlw	0
  1343  02C7  34C1               	retlw	193
  1344  02C8  3481               	retlw	129
  1345  02C9  3440               	retlw	64
  1346  02CA  3400               	retlw	0
  1347  02CB  34C1               	retlw	193
  1348  02CC  3481               	retlw	129
  1349  02CD  3440               	retlw	64
  1350  02CE  3401               	retlw	1
  1351  02CF  34C0               	retlw	192
  1352  02D0  3480               	retlw	128
  1353  02D1  3441               	retlw	65
  1354  02D2  3400               	retlw	0
  1355  02D3  34C1               	retlw	193
  1356  02D4  3481               	retlw	129
  1357  02D5  3440               	retlw	64
  1358  02D6  3401               	retlw	1
  1359  02D7  34C0               	retlw	192
  1360  02D8  3480               	retlw	128
  1361  02D9  3441               	retlw	65
  1362  02DA  3401               	retlw	1
  1363  02DB  34C0               	retlw	192
  1364  02DC  3480               	retlw	128
  1365  02DD  3441               	retlw	65
  1366  02DE  3400               	retlw	0
  1367  02DF  34C1               	retlw	193
  1368  02E0  3481               	retlw	129
  1369  02E1  3440               	retlw	64
  1370  02E2  3401               	retlw	1
  1371  02E3  34C0               	retlw	192
  1372  02E4  3480               	retlw	128
  1373  02E5  3441               	retlw	65
  1374  02E6  3400               	retlw	0
  1375  02E7  34C1               	retlw	193
  1376  02E8  3481               	retlw	129
  1377  02E9  3440               	retlw	64
  1378  02EA  3400               	retlw	0
  1379  02EB  34C1               	retlw	193
  1380  02EC  3481               	retlw	129
  1381  02ED  3440               	retlw	64
  1382  02EE  3401               	retlw	1
  1383  02EF  34C0               	retlw	192
  1384  02F0  3480               	retlw	128
  1385  02F1  3441               	retlw	65
  1386  02F2  3401               	retlw	1
  1387  02F3  34C0               	retlw	192
  1388  02F4  3480               	retlw	128
  1389  02F5  3441               	retlw	65
  1390  02F6  3400               	retlw	0
  1391  02F7  34C1               	retlw	193
  1392  02F8  3481               	retlw	129
  1393  02F9  3440               	retlw	64
  1394  02FA  3400               	retlw	0
  1395  02FB  34C1               	retlw	193
  1396  02FC  3481               	retlw	129
  1397  02FD  3440               	retlw	64
  1398  02FE  3401               	retlw	1
  1399  02FF  34C0               	retlw	192
  1400  0300  3480               	retlw	128
  1401  0301  3441               	retlw	65
  1402  0302  3400               	retlw	0
  1403  0303  34C1               	retlw	193
  1404  0304  3481               	retlw	129
  1405  0305  3440               	retlw	64
  1406  0306  3401               	retlw	1
  1407  0307  34C0               	retlw	192
  1408  0308  3480               	retlw	128
  1409  0309  3441               	retlw	65
  1410  030A  3401               	retlw	1
  1411  030B  34C0               	retlw	192
  1412  030C  3480               	retlw	128
  1413  030D  3441               	retlw	65
  1414  030E  3400               	retlw	0
  1415  030F  34C1               	retlw	193
  1416  0310  3481               	retlw	129
  1417  0311  3440               	retlw	64
  1418  0312                     __end_of_auchCRCHi:	
  1419                           
  1420                           	psect	nvBANK0
  1421  006C                     __pnvBANK0:	
  1422  006C                     _wait:	
  1423  006C                     	ds	2
  1424  0008                     _PORTDbits	set	8
  1425  0011                     _TMR2	set	17
  1426  0012                     _T2CONbits	set	18
  1427  0008                     _PORTD	set	8
  1428  0007                     _PORTC	set	7
  1429  0006                     _PORTB	set	6
  1430  0005                     _PORTA	set	5
  1431  0019                     _TXREG	set	25
  1432  001A                     _RCREG	set	26
  1433  0001                     _TMR0	set	1
  1434  000B                     _INTCONbits	set	11
  1435  000C                     _PIR1bits	set	12
  1436  0018                     _RCSTAbits	set	24
  1437  0092                     _PR2	set	146
  1438  0087                     _TRISCbits	set	135
  1439  0088                     _TRISDbits	set	136
  1440  0088                     _TRISD	set	136
  1441  0087                     _TRISC	set	135
  1442  0086                     _TRISB	set	134
  1443  0085                     _TRISA	set	133
  1444  009F                     _ADCON1bits	set	159
  1445  008F                     _OSCCON	set	143
  1446  0081                     _OPTION_REGbits	set	129
  1447  0098                     _TXSTAbits	set	152
  1448  0099                     _SPBRG	set	153
  1449  008C                     _PIE1bits	set	140
  1450                           
  1451                           ; #config settings
  1452  0000                     
  1453                           	psect	cinit
  1454  0015                     start_initialization:	
  1455  0015                     __initialization:	
  1456                           
  1457                           ; Initialize objects allocated to BANK1
  1458  0015  1383               	bcf	3,7	;select IRP bank0
  1459  0016  30DD               	movlw	low (__pdataBANK1+9)
  1460  0017  00FD               	movwf	btemp+-1
  1461  0018  3007               	movlw	high __pidataBANK1
  1462  0019  00FE               	movwf	btemp
  1463  001A  30F6               	movlw	low __pidataBANK1
  1464  001B  00FF               	movwf	btemp+1
  1465  001C  30D4               	movlw	low __pdataBANK1
  1466  001D  0084               	movwf	4
  1467  001E  120A  158A  262C  120A  118A  	fcall	init_ram0
  1468                           
  1469                           ; Initialize objects allocated to BANK0
  1470  0023  306C               	movlw	low (__pdataBANK0+12)
  1471  0024  00FD               	movwf	btemp+-1
  1472  0025  300D               	movlw	high __pidataBANK0
  1473  0026  00FE               	movwf	btemp
  1474  0027  30E1               	movlw	low __pidataBANK0
  1475  0028  00FF               	movwf	btemp+1
  1476  0029  3060               	movlw	low __pdataBANK0
  1477  002A  0084               	movwf	4
  1478  002B  120A  158A  262C  120A  118A  	fcall	init_ram0
  1479                           
  1480                           ; Clear objects allocated to BANK3
  1481  0030  1783               	bsf	3,7	;select IRP bank2
  1482  0031  3090               	movlw	low __pbssBANK3
  1483  0032  0084               	movwf	4
  1484  0033  30DC               	movlw	low (__pbssBANK3+76)
  1485  0034  120A  158A  25B9  120A  118A  	fcall	clear_ram0
  1486                           
  1487                           ; Clear objects allocated to BANK2
  1488  0039  3010               	movlw	low __pbssBANK2
  1489  003A  0084               	movwf	4
  1490  003B  3028               	movlw	low (__pbssBANK2+24)
  1491  003C  120A  158A  25B9  120A  118A  	fcall	clear_ram0
  1492                           
  1493                           ; Clear objects allocated to BANK1
  1494  0041  1383               	bcf	3,7	;select IRP bank0
  1495  0042  30A0               	movlw	low __pbssBANK1
  1496  0043  0084               	movwf	4
  1497  0044  30D4               	movlw	low (__pbssBANK1+52)
  1498  0045  120A  158A  25B9  120A  118A  	fcall	clear_ram0
  1499                           
  1500                           ; Clear objects allocated to BANK0
  1501  004A  3020               	movlw	low __pbssBANK0
  1502  004B  0084               	movwf	4
  1503  004C  304A               	movlw	low (__pbssBANK0+42)
  1504  004D  120A  158A  25B9   	fcall	clear_ram0
  1505                           
  1506                           ; Clear objects allocated to COMMON
  1507  0050  01F0               	clrf	__pbssCOMMON& (0+127)
  1508  0051  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1509  0052  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1510  0053  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1511  0054  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1512  0055  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1513  0056                     end_of_initialization:	
  1514                           ;End of C runtime variable initialization code
  1515                           
  1516  0056                     __end_of__initialization:	
  1517  0056  0183               	clrf	3
  1518  0057  120A  118A  2B12   	ljmp	_main	;jump to C main() function
  1519                           
  1520                           	psect	bssCOMMON
  1521  0070                     __pbssCOMMON:	
  1522  0070                     _PetitModbusTimerValue:	
  1523  0070                     	ds	2
  1524  0072                     _Timer1_Tick_Counter:	
  1525  0072                     	ds	2
  1526  0074                     _Petit_Rx_Data_Available:	
  1527  0074                     	ds	1
  1528  0075                     _PetitReceiveCounter:	
  1529  0075                     	ds	1
  1530                           
  1531                           	psect	bssBANK0
  1532  0020                     __pbssBANK0:	
  1533  0020                     _Petit_Rx_Data:	
  1534  0020                     	ds	28
  1535  003C                     _wait2:	
  1536  003C                     	ds	2
  1537  003E                     _Petit_Tx_Buf_Size:	
  1538  003E                     	ds	2
  1539  0040                     _Petit_Tx_Current:	
  1540  0040                     	ds	2
  1541  0042                     _state:	
  1542  0042                     	ds	1
  1543  0043                     _Petit_Rx_State:	
  1544  0043                     	ds	1
  1545  0044                     _Petit_Tx_State:	
  1546  0044                     	ds	1
  1547  0045                     _MASTER_SLAVE_DATA:	
  1548  0045                     	ds	1
  1549  0046                     _temp2:	
  1550  0046                     	ds	4
  1551                           
  1552                           	psect	dataBANK0
  1553  0060                     __pdataBANK0:	
  1554  0060                     _temp3:	
  1555  0060                     	ds	4
  1556  0064                     _temp:	
  1557  0064                     	ds	4
  1558  0068                     _Petit_Rx_CRC16:	
  1559  0068                     	ds	2
  1560  006A                     _Petit_Tx_CRC16:	
  1561  006A                     	ds	2
  1562                           
  1563                           	psect	bssBANK1
  1564  00A0                     __pbssBANK1:	
  1565  00A0                     _Petit_Tx_Data:	
  1566  00A0                     	ds	28
  1567  00BC                     _PetitReceiveBuffer:	
  1568  00BC                     	ds	24
  1569                           
  1570                           	psect	dataBANK1
  1571  00D4                     __pdataBANK1:	
  1572  00D4                     _temp4:	
  1573  00D4                     	ds	9
  1574                           
  1575                           	psect	bssBANK3
  1576  0190                     __pbssBANK3:	
  1577  0190                     _SlaveInfo:	
  1578  0190                     	ds	76
  1579                           
  1580                           	psect	bssBANK2
  1581  0110                     __pbssBANK2:	
  1582  0110                     _Petit_Tx_Buf:	
  1583  0110                     	ds	24
  1584                           
  1585                           	psect	inittext
  1586  0E28                     init_fetch0:	
  1587                           ;	Called with low address in FSR and high address in W
  1588                           
  1589  0E28  087E               	movf	126,w
  1590  0E29  008A               	movwf	10
  1591  0E2A  087F               	movf	127,w
  1592  0E2B  0082               	movwf	2
  1593  0E2C                     init_ram0:	
  1594                           ;Called with:
  1595                           ;	high address of idata address in btemp 
  1596                           ;	low address of idata address in btemp+1 
  1597                           ;	low address of data in FSR
  1598                           ;	high address + 1 of data in btemp-1
  1599                           
  1600  0E2C  2628  120A  158A   	fcall	init_fetch0
  1601  0E2F  0080               	movwf	0
  1602  0E30  0A84               	incf	4,f
  1603  0E31  0804               	movf	4,w
  1604  0E32  067D               	xorwf	125,w
  1605  0E33  1903               	btfsc	3,2
  1606  0E34  3400               	retlw	0
  1607  0E35  0AFF               	incf	127,f
  1608  0E36  1903               	btfsc	3,2
  1609  0E37  0AFE               	incf	126,f
  1610  0E38  2E2C               	goto	init_ram0
  1611                           
  1612                           	psect	clrtext
  1613  0DB9                     clear_ram0:	
  1614                           ;	Called with FSR containing the base address, and
  1615                           ;	W with the last address+1
  1616                           
  1617  0DB9  0064               	clrwdt	;clear the watchdog before getting into this loop
  1618  0DBA                     clrloop0:	
  1619  0DBA  0180               	clrf	0	;clear RAM location pointed to by FSR
  1620  0DBB  0A84               	incf	4,f	;increment pointer
  1621  0DBC  0604               	xorwf	4,w	;XOR with final address
  1622  0DBD  1903               	btfsc	3,2	;have we reached the end yet?
  1623  0DBE  3400               	retlw	0	;all done for this memory range, return
  1624  0DBF  0604               	xorwf	4,w	;XOR again to restore value
  1625  0DC0  2DBA               	goto	clrloop0	;do the next byte
  1626                           
  1627                           	psect	cstackCOMMON
  1628  0076                     __pcstackCOMMON:	
  1629  0076                     ?_PetitModBus_TimerValues:	
  1630  0076                     ??_PetitModBus_TimerValues:	
  1631                           ; 1 bytes @ 0x0
  1632                           
  1633  0076                     ?_ReceiveInterrupt:	
  1634                           ; 1 bytes @ 0x0
  1635                           
  1636  0076                     ??_ReceiveInterrupt:	
  1637                           ; 1 bytes @ 0x0
  1638                           
  1639  0076                     ?_HandlePetitModbusReadHoldingRegistersSlaveReadback:	
  1640                           ; 1 bytes @ 0x0
  1641                           
  1642  0076                     ?_HandlePetitModbusWriteSingleRegisterSlaveReadback:	
  1643                           ; 1 bytes @ 0x0
  1644                           
  1645  0076                     ?_HandleMPetitodbusWriteMultipleRegistersSlaveReadback:	
  1646                           ; 1 bytes @ 0x0
  1647                           
  1648  0076                     ?_PetitModBus_UART_Initialise:	
  1649                           ; 1 bytes @ 0x0
  1650                           
  1651  0076                     ?_PetitModBus_TIMER_Initialise:	
  1652                           ; 1 bytes @ 0x0
  1653                           
  1654  0076                     ?_OSCILLATOR_Initialize:	
  1655                           ; 1 bytes @ 0x0
  1656                           
  1657  0076                     ?_PIN_MANAGER_Initialize:	
  1658                           ; 1 bytes @ 0x0
  1659                           
  1660  0076                     ?_TMR2_Initialize:	
  1661                           ; 1 bytes @ 0x0
  1662                           
  1663  0076                     ?_INTERRUPT_Initialize:	
  1664                           ; 1 bytes @ 0x0
  1665                           
  1666  0076                     ?_TMR2_StopTimer:	
  1667                           ; 1 bytes @ 0x0
  1668                           
  1669  0076                     ?_TMR2_StartTimer:	
  1670                           ; 1 bytes @ 0x0
  1671                           
  1672  0076                     ?_InitUART:	
  1673                           ; 1 bytes @ 0x0
  1674                           
  1675  0076                     ?_InitTMR1:	
  1676                           ; 1 bytes @ 0x0
  1677                           
  1678  0076                     ?_PetitModbusIntHandler:	
  1679                           ; 1 bytes @ 0x0
  1680                           
  1681  0076                     ?_Petit_DoSlaveTX:	
  1682                           ; 1 bytes @ 0x0
  1683                           
  1684  0076                     ?_PetitSendMessage:	
  1685                           ; 1 bytes @ 0x0
  1686                           
  1687  0076                     ?_Petit_RxDataAvailable:	
  1688                           ; 1 bytes @ 0x0
  1689                           
  1690  0076                     ?_Petit_CheckRxTimeout:	
  1691                           ; 1 bytes @ 0x0
  1692                           
  1693  0076                     ?_CheckPetitModbusBufferComplete:	
  1694                           ; 1 bytes @ 0x0
  1695                           
  1696  0076                     ?_Petit_RxRTU:	
  1697                           ; 1 bytes @ 0x0
  1698                           
  1699  0076                     ?_Petit_TxRTU:	
  1700                           ; 1 bytes @ 0x0
  1701                           
  1702  0076                     ?_ProcessPetitModbus:	
  1703                           ; 1 bytes @ 0x0
  1704                           
  1705  0076                     ?_InitPetitModbus:	
  1706                           ; 1 bytes @ 0x0
  1707                           
  1708  0076                     ?_PetitModBus_UART_Putch:	
  1709                           ; 1 bytes @ 0x0
  1710                           
  1711  0076                     ?_SYSTEM_Initialize:	
  1712                           ; 1 bytes @ 0x0
  1713                           
  1714  0076                     ?_INTERRUPT_InterruptManager:	
  1715                           ; 1 bytes @ 0x0
  1716                           
  1717  0076                     ?_main:	
  1718                           ; 1 bytes @ 0x0
  1719                           
  1720                           
  1721                           ; 1 bytes @ 0x0
  1722  0076                     	ds	1
  1723  0077                     ReceiveInterrupt@Data:	
  1724                           
  1725                           ; 1 bytes @ 0x1
  1726  0077                     	ds	1
  1727  0078                     ??_PetitModbusIntHandler:	
  1728  0078                     ??_INTERRUPT_InterruptManager:	
  1729                           ; 1 bytes @ 0x2
  1730                           
  1731                           
  1732                           ; 1 bytes @ 0x2
  1733  0078                     	ds	4
  1734                           
  1735                           	psect	cstackBANK0
  1736  004A                     __pcstackBANK0:	
  1737  004A                     ??_PetitModBus_UART_Initialise:	
  1738  004A                     ??_PetitModBus_TIMER_Initialise:	
  1739                           ; 1 bytes @ 0x0
  1740                           
  1741  004A                     ??_OSCILLATOR_Initialize:	
  1742                           ; 1 bytes @ 0x0
  1743                           
  1744  004A                     ??_PIN_MANAGER_Initialize:	
  1745                           ; 1 bytes @ 0x0
  1746                           
  1747  004A                     ??_TMR2_Initialize:	
  1748                           ; 1 bytes @ 0x0
  1749                           
  1750  004A                     ??_INTERRUPT_Initialize:	
  1751                           ; 1 bytes @ 0x0
  1752                           
  1753  004A                     ??_TMR2_StopTimer:	
  1754                           ; 1 bytes @ 0x0
  1755                           
  1756  004A                     ??_TMR2_StartTimer:	
  1757                           ; 1 bytes @ 0x0
  1758                           
  1759  004A                     ??_InitUART:	
  1760                           ; 1 bytes @ 0x0
  1761                           
  1762  004A                     ??_InitTMR1:	
  1763                           ; 1 bytes @ 0x0
  1764                           
  1765  004A                     ?_Petit_CRC16:	
  1766                           ; 1 bytes @ 0x0
  1767                           
  1768  004A                     ??_PetitSendMessage:	
  1769                           ; 1 bytes @ 0x0
  1770                           
  1771  004A                     ??_Petit_RxDataAvailable:	
  1772                           ; 1 bytes @ 0x0
  1773                           
  1774  004A                     ??_Petit_CheckRxTimeout:	
  1775                           ; 1 bytes @ 0x0
  1776                           
  1777  004A                     ??_CheckPetitModbusBufferComplete:	
  1778                           ; 1 bytes @ 0x0
  1779                           
  1780  004A                     ??_InitPetitModbus:	
  1781                           ; 1 bytes @ 0x0
  1782                           
  1783  004A                     ??_PetitModBus_UART_Putch:	
  1784                           ; 1 bytes @ 0x0
  1785                           
  1786  004A                     ??_SYSTEM_Initialize:	
  1787                           ; 1 bytes @ 0x0
  1788                           
  1789  004A                     ?___bmul:	
  1790                           ; 1 bytes @ 0x0
  1791                           
  1792  004A                     Petit_CRC16@CRC:	
  1793                           ; 1 bytes @ 0x0
  1794                           
  1795  004A                     PetitModBus_UART_Putch@c:	
  1796                           ; 1 bytes @ 0x0
  1797                           
  1798  004A                     ___bmul@multiplicand:	
  1799                           ; 1 bytes @ 0x0
  1800                           
  1801                           
  1802                           ; 1 bytes @ 0x0
  1803  004A                     	ds	1
  1804  004B                     ?_PetitModBus_UART_String:	
  1805  004B                     ??_Petit_CRC16:	
  1806                           ; 1 bytes @ 0x1
  1807                           
  1808  004B                     ??___bmul:	
  1809                           ; 1 bytes @ 0x1
  1810                           
  1811  004B                     Petit_RxDataAvailable@Result:	
  1812                           ; 1 bytes @ 0x1
  1813                           
  1814  004B                     InitPetitModbus@location:	
  1815                           ; 1 bytes @ 0x1
  1816                           
  1817  004B                     PetitModBus_UART_String@Length:	
  1818                           ; 1 bytes @ 0x1
  1819                           
  1820                           
  1821                           ; 2 bytes @ 0x1
  1822  004B                     	ds	1
  1823  004C                     ___bmul@product:	
  1824  004C                     CheckPetitModbusBufferComplete@PetitExpectedReceiveCount:	
  1825                           ; 1 bytes @ 0x2
  1826                           
  1827                           
  1828                           ; 2 bytes @ 0x2
  1829  004C                     	ds	1
  1830  004D                     ??_PetitModBus_UART_String:	
  1831  004D                     ___bmul@multiplier:	
  1832                           ; 1 bytes @ 0x3
  1833                           
  1834                           
  1835                           ; 1 bytes @ 0x3
  1836  004D                     	ds	1
  1837  004E                     ??_HandlePetitModbusReadHoldingRegistersSlaveReadback:	
  1838  004E                     ??_HandlePetitModbusWriteSingleRegisterSlaveReadback:	
  1839                           ; 1 bytes @ 0x4
  1840                           
  1841  004E                     ??_HandleMPetitodbusWriteMultipleRegistersSlaveReadback:	
  1842                           ; 1 bytes @ 0x4
  1843                           
  1844  004E                     ?_SendPetitModbus:	
  1845                           ; 1 bytes @ 0x4
  1846                           
  1847  004E                     SendPetitModbus@Function:	
  1848                           ; 1 bytes @ 0x4
  1849                           
  1850  004E                     PetitModBus_UART_String@s:	
  1851                           ; 1 bytes @ 0x4
  1852                           
  1853                           
  1854                           ; 1 bytes @ 0x4
  1855  004E                     	ds	1
  1856  004F                     Petit_CRC16@Data:	
  1857  004F                     SendPetitModbus@DataBuf:	
  1858                           ; 1 bytes @ 0x5
  1859                           
  1860  004F                     PetitModBus_UART_String@DummyCounter:	
  1861                           ; 1 bytes @ 0x5
  1862                           
  1863                           
  1864                           ; 2 bytes @ 0x5
  1865  004F                     	ds	1
  1866  0050                     Petit_CRC16@uIndex:	
  1867  0050                     SendPetitModbus@DataLen:	
  1868                           ; 1 bytes @ 0x6
  1869                           
  1870                           
  1871                           ; 2 bytes @ 0x6
  1872  0050                     	ds	1
  1873  0051                     ??_Petit_DoSlaveTX:	
  1874  0051                     Petit_CRC16@uchCRCHi:	
  1875                           ; 1 bytes @ 0x7
  1876                           
  1877  0051                     HandleMPetitodbusWriteMultipleRegistersSlaveReadback@Petit_StartAddress:	
  1878                           ; 2 bytes @ 0x7
  1879                           
  1880                           
  1881                           ; 2 bytes @ 0x7
  1882  0051                     	ds	1
  1883  0052                     ??_SendPetitModbus:	
  1884  0052                     HandlePetitModbusReadHoldingRegistersSlaveReadback@Petit_NumberOfRegistersBytes:	
  1885                           ; 1 bytes @ 0x8
  1886                           
  1887                           
  1888                           ; 2 bytes @ 0x8
  1889  0052                     	ds	1
  1890  0053                     Petit_CRC16@uchCRCLo:	
  1891  0053                     HandleMPetitodbusWriteMultipleRegistersSlaveReadback@Petit_NumberOfRegisters:	
  1892                           ; 2 bytes @ 0x9
  1893                           
  1894                           
  1895                           ; 2 bytes @ 0x9
  1896  0053                     	ds	1
  1897  0054                     SendPetitModbus@return_val:	
  1898  0054                     HandlePetitModbusReadHoldingRegistersSlaveReadback@RegData:	
  1899                           ; 1 bytes @ 0xA
  1900                           
  1901                           
  1902                           ; 2 bytes @ 0xA
  1903  0054                     	ds	1
  1904  0055                     ??_Petit_RxRTU:	
  1905  0055                     ??_Petit_TxRTU:	
  1906                           ; 1 bytes @ 0xB
  1907                           
  1908  0055                     SendPetitModbus@Address:	
  1909                           ; 1 bytes @ 0xB
  1910                           
  1911                           
  1912                           ; 1 bytes @ 0xB
  1913  0055                     	ds	1
  1914  0056                     HandlePetitModbusReadHoldingRegistersSlaveReadback@Petit_StartAddress:	
  1915                           
  1916                           ; 2 bytes @ 0xC
  1917  0056                     	ds	1
  1918  0057                     Petit_RxRTU@Petit_ReceiveBufferControl:	
  1919                           
  1920                           ; 1 bytes @ 0xD
  1921  0057                     	ds	1
  1922  0058                     Petit_RxRTU@Petit_i:	
  1923  0058                     HandlePetitModbusReadHoldingRegistersSlaveReadback@Petit_i:	
  1924                           ; 1 bytes @ 0xE
  1925                           
  1926                           
  1927                           ; 2 bytes @ 0xE
  1928  0058                     	ds	2
  1929  005A                     HandlePetitModbusReadHoldingRegistersSlaveReadback@Petit_NumberOfRegisters:	
  1930                           
  1931                           ; 2 bytes @ 0x10
  1932  005A                     	ds	2
  1933  005C                     HandlePetitModbusReadHoldingRegistersSlaveReadback@BufReadIndex:	
  1934                           
  1935                           ; 2 bytes @ 0x12
  1936  005C                     	ds	2
  1937  005E                     ??_ProcessPetitModbus:	
  1938  005E                     ??_main:	
  1939                           ; 1 bytes @ 0x14
  1940                           
  1941                           
  1942                           ; 1 bytes @ 0x14
  1943  005E                     	ds	2
  1944                           
  1945                           	psect	maintext
  1946  0312                     __pmaintext:	
  1947 ;;
  1948 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1949 ;;
  1950 ;; *************** function _main *****************
  1951 ;; Defined at:
  1952 ;;		line 34 in file "main.c"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;		None
  1955 ;; Auto vars:     Size  Location     Type
  1956 ;;		None
  1957 ;; Return value:  Size  Location     Type
  1958 ;;                  1    wreg      void 
  1959 ;; Registers used:
  1960 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1961 ;; Tracked objects:
  1962 ;;		On entry : B00/0
  1963 ;;		On exit  : 0/0
  1964 ;;		Unchanged: 0/0
  1965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1966 ;;      Params:         0       0       0       0       0
  1967 ;;      Locals:         0       0       0       0       0
  1968 ;;      Temps:          0       2       0       0       0
  1969 ;;      Totals:         0       2       0       0       0
  1970 ;;Total ram usage:        2 bytes
  1971 ;; Hardware stack levels required when called:    8
  1972 ;; This function calls:
  1973 ;;		_InitPetitModbus
  1974 ;;		_ProcessPetitModbus
  1975 ;;		_SYSTEM_Initialize
  1976 ;;		_SendPetitModbus
  1977 ;; This function is called by:
  1978 ;;		Startup code after reset
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982                           
  1983                           ;psect for function _main
  1984  0312                     _main:	
  1985                           
  1986                           ;main.c: 36: SYSTEM_Initialize();
  1987                           
  1988                           ;incstack = 0
  1989                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1990  0312  120A  158A  265E  120A  118A  	fcall	_SYSTEM_Initialize
  1991                           
  1992                           ;main.c: 38: PORTDbits.RD2 = Off;
  1993  0317  1283               	bcf	3,5	;RP0=0, select bank0
  1994  0318  1303               	bcf	3,6	;RP1=0, select bank0
  1995  0319  1108               	bcf	8,2	;volatile
  1996                           
  1997                           ;main.c: 39: for(wait = 0xFFFF; wait > 0; wait--){
  1998  031A  30FF               	movlw	255
  1999  031B  00EC               	movwf	_wait
  2000  031C  30FF               	movlw	255
  2001  031D  00ED               	movwf	_wait+1
  2002  031E  086C               	movf	_wait,w
  2003  031F  046D               	iorwf	_wait+1,w
  2004  0320  1903               	btfsc	3,2
  2005  0321  2B3E               	goto	l371
  2006  0322                     l2537:	
  2007                           
  2008                           ;main.c: 40: for(wait2 = 0x4; wait2 > 0; wait2--);
  2009  0322  3004               	movlw	4
  2010  0323  00BC               	movwf	_wait2
  2011  0324  3000               	movlw	0
  2012  0325  00BD               	movwf	_wait2+1
  2013  0326  083C               	movf	_wait2,w
  2014  0327  043D               	iorwf	_wait2+1,w
  2015  0328  1903               	btfsc	3,2
  2016  0329  2B34               	goto	l2547
  2017  032A                     l2543:	
  2018  032A  3001               	movlw	1
  2019  032B  02BC               	subwf	_wait2,f
  2020  032C  3000               	movlw	0
  2021  032D  1C03               	skipc
  2022  032E  03BD               	decf	_wait2+1,f
  2023  032F  02BD               	subwf	_wait2+1,f
  2024  0330  083C               	movf	_wait2,w
  2025  0331  043D               	iorwf	_wait2+1,w
  2026  0332  1D03               	btfss	3,2
  2027  0333  2B2A               	goto	l2543
  2028  0334                     l2547:	
  2029  0334  3001               	movlw	1
  2030  0335  02EC               	subwf	_wait,f
  2031  0336  3000               	movlw	0
  2032  0337  1C03               	skipc
  2033  0338  03ED               	decf	_wait+1,f
  2034  0339  02ED               	subwf	_wait+1,f
  2035  033A  086C               	movf	_wait,w
  2036  033B  046D               	iorwf	_wait+1,w
  2037  033C  1D03               	btfss	3,2
  2038  033D  2B22               	goto	l2537
  2039  033E                     l371:	
  2040                           
  2041                           ;main.c: 41: }
  2042                           ;main.c: 42: PORTDbits.RD2 = On;
  2043  033E  1508               	bsf	8,2	;volatile
  2044                           
  2045                           ;main.c: 44: for(wait = 0xFFFF; wait > 0; wait--){
  2046  033F  30FF               	movlw	255
  2047  0340  00EC               	movwf	_wait
  2048  0341  30FF               	movlw	255
  2049  0342  00ED               	movwf	_wait+1
  2050  0343  086C               	movf	_wait,w
  2051  0344  046D               	iorwf	_wait+1,w
  2052  0345  1903               	btfsc	3,2
  2053  0346  2B63               	goto	l2571
  2054  0347                     l2557:	
  2055                           
  2056                           ;main.c: 45: for(wait2 = 0x4; wait2 > 0; wait2--);
  2057  0347  3004               	movlw	4
  2058  0348  00BC               	movwf	_wait2
  2059  0349  3000               	movlw	0
  2060  034A  00BD               	movwf	_wait2+1
  2061  034B  083C               	movf	_wait2,w
  2062  034C  043D               	iorwf	_wait2+1,w
  2063  034D  1903               	btfsc	3,2
  2064  034E  2B59               	goto	l2567
  2065  034F                     l2563:	
  2066  034F  3001               	movlw	1
  2067  0350  02BC               	subwf	_wait2,f
  2068  0351  3000               	movlw	0
  2069  0352  1C03               	skipc
  2070  0353  03BD               	decf	_wait2+1,f
  2071  0354  02BD               	subwf	_wait2+1,f
  2072  0355  083C               	movf	_wait2,w
  2073  0356  043D               	iorwf	_wait2+1,w
  2074  0357  1D03               	btfss	3,2
  2075  0358  2B4F               	goto	l2563
  2076  0359                     l2567:	
  2077  0359  3001               	movlw	1
  2078  035A  02EC               	subwf	_wait,f
  2079  035B  3000               	movlw	0
  2080  035C  1C03               	skipc
  2081  035D  03ED               	decf	_wait+1,f
  2082  035E  02ED               	subwf	_wait+1,f
  2083  035F  086C               	movf	_wait,w
  2084  0360  046D               	iorwf	_wait+1,w
  2085  0361  1D03               	btfss	3,2
  2086  0362  2B47               	goto	l2557
  2087  0363                     l2571:	
  2088                           
  2089                           ;main.c: 46: }
  2090                           ;main.c: 48: InitPetitModbus(SlaveInfo);
  2091  0363  3090               	movlw	(low (_SlaveInfo| (0+256)))& (0+255)
  2092  0364  120A  158A  2618  120A  118A  	fcall	_InitPetitModbus
  2093                           
  2094                           ;main.c: 50: PORTDbits.RD1 = Off;
  2095  0369  1283               	bcf	3,5	;RP0=0, select bank0
  2096  036A  1303               	bcf	3,6	;RP1=0, select bank0
  2097  036B  1088               	bcf	8,1	;volatile
  2098  036C                     l2575:	
  2099                           ;main.c: 52: while(1)
  2100                           
  2101                           
  2102                           ;main.c: 53: {
  2103                           ;main.c: 55: ProcessPetitModbus();
  2104  036C  120A  118A  27BC  120A  118A  	fcall	_ProcessPetitModbus
  2105                           
  2106                           ;main.c: 57: if(PIR1bits.TMR2IF)
  2107  0371  1283               	bcf	3,5	;RP0=0, select bank0
  2108  0372  1303               	bcf	3,6	;RP1=0, select bank0
  2109  0373  188C               	btfsc	12,1	;volatile
  2110  0374  2CA5               	goto	l2693
  2111  0375  2B6C               	goto	l2575
  2112  0376                     l2581:	
  2113                           ;main.c: 60: case 0: if(SendPetitModbus(1, 6, temp, 4)){
  2114                           
  2115                           ;main.c: 58: {
  2116                           ;main.c: 59: switch(state){
  2117                           
  2118  0376  3006               	movlw	6
  2119  0377  00DE               	movwf	??_main
  2120  0378  085E               	movf	??_main,w
  2121  0379  00CE               	movwf	SendPetitModbus@Function
  2122  037A  3064               	movlw	(low (_temp| 0))& (0+255)
  2123  037B  00DF               	movwf	??_main+1
  2124  037C  085F               	movf	??_main+1,w
  2125  037D  00CF               	movwf	SendPetitModbus@DataBuf
  2126  037E  3004               	movlw	4
  2127  037F  00D0               	movwf	SendPetitModbus@DataLen
  2128  0380  3000               	movlw	0
  2129  0381  00D1               	movwf	SendPetitModbus@DataLen+1
  2130  0382  3001               	movlw	1
  2131  0383  120A  118A  205A  120A  118A  	fcall	_SendPetitModbus
  2132  0388  3A00               	xorlw	0
  2133  0389  1903               	skipnz
  2134  038A  2CDD               	goto	l383
  2135                           
  2136                           ;main.c: 61: state = 1;
  2137  038B  1283               	bcf	3,5	;RP0=0, select bank0
  2138  038C  1303               	bcf	3,6	;RP1=0, select bank0
  2139  038D  01C2               	clrf	_state
  2140  038E  0AC2               	incf	_state,f
  2141                           
  2142                           ;main.c: 62: }
  2143                           ;main.c: 63: break;
  2144  038F  2CDD               	goto	l383
  2145  0390                     l2585:	
  2146                           ;main.c: 65: case 1: if(SlaveInfo[1].CommError == SLAVE_DATA_OK){
  2147                           
  2148  0390  3002               	movlw	2
  2149  0391  1683               	bsf	3,5	;RP0=1, select bank3
  2150  0392  1703               	bsf	3,6	;RP1=1, select bank3
  2151  0393  0631               	xorwf	(_SlaveInfo^(0+384)+33),w
  2152  0394  1D03               	btfss	3,2
  2153  0395  2C4B               	goto	l2661
  2154                           
  2155                           ;main.c: 66: state = 12;
  2156  0396  300C               	movlw	12
  2157  0397  2C8A               	goto	L15
  2158  0398                     l2593:	
  2159                           ;main.c: 73: case 12: if(SendPetitModbus(1, 3, temp3, 4)){
  2160                           
  2161                           ;main.c: 70: }
  2162                           ;main.c: 71: break;
  2163                           
  2164                           ;main.c: 69: PORTDbits.RD1 = On;
  2165                           
  2166                           ;main.c: 68: else if(SlaveInfo[1].CommError == SLAVE_DATA_NOK){
  2167                           
  2168                           ;main.c: 67: }
  2169                           
  2170  0398  3003               	movlw	3
  2171  0399  00DE               	movwf	??_main
  2172  039A  085E               	movf	??_main,w
  2173  039B  00CE               	movwf	SendPetitModbus@Function
  2174  039C  3060               	movlw	(low (_temp3| 0))& (0+255)
  2175  039D  00DF               	movwf	??_main+1
  2176  039E  085F               	movf	??_main+1,w
  2177  039F  00CF               	movwf	SendPetitModbus@DataBuf
  2178  03A0  3004               	movlw	4
  2179  03A1  00D0               	movwf	SendPetitModbus@DataLen
  2180  03A2  3000               	movlw	0
  2181  03A3  00D1               	movwf	SendPetitModbus@DataLen+1
  2182  03A4  3001               	movlw	1
  2183  03A5  120A  118A  205A  120A  118A  	fcall	_SendPetitModbus
  2184  03AA  3A00               	xorlw	0
  2185  03AB  1903               	skipnz
  2186  03AC  2CDD               	goto	l383
  2187                           
  2188                           ;main.c: 74: state = 13;
  2189  03AD  300D               	movlw	13
  2190  03AE  2C8A               	goto	L15
  2191  03AF                     l2597:	
  2192                           ;main.c: 78: case 13: if(SlaveInfo[1].CommError == SLAVE_DATA_OK){
  2193                           
  2194                           ;main.c: 75: }
  2195                           ;main.c: 76: break;
  2196                           
  2197  03AF  2BC7               	goto	l2609
  2198  03B0                     l2605:	
  2199                           ;main.c: 86: case 14: if(SendPetitModbus(1, 16, temp4, 9)){
  2200                           
  2201                           ;main.c: 83: }
  2202                           ;main.c: 84: break;
  2203                           
  2204                           ;main.c: 82: PORTDbits.RD1 = On;
  2205                           
  2206                           ;main.c: 81: else if(SlaveInfo[1].CommError == SLAVE_DATA_NOK){
  2207                           
  2208                           ;main.c: 80: }
  2209                           
  2210                           ;main.c: 79: state = 2;
  2211                           
  2212  03B0  3010               	movlw	16
  2213  03B1  00DE               	movwf	??_main
  2214  03B2  085E               	movf	??_main,w
  2215  03B3  00CE               	movwf	SendPetitModbus@Function
  2216  03B4  30D4               	movlw	(low (_temp4| 0))& (0+255)
  2217  03B5  00DF               	movwf	??_main+1
  2218  03B6  085F               	movf	??_main+1,w
  2219  03B7  00CF               	movwf	SendPetitModbus@DataBuf
  2220  03B8  3009               	movlw	9
  2221  03B9  00D0               	movwf	SendPetitModbus@DataLen
  2222  03BA  3000               	movlw	0
  2223  03BB  00D1               	movwf	SendPetitModbus@DataLen+1
  2224  03BC  3001               	movlw	1
  2225  03BD  120A  118A  205A  120A  118A  	fcall	_SendPetitModbus
  2226  03C2  3A00               	xorlw	0
  2227  03C3  1903               	skipnz
  2228  03C4  2CDD               	goto	l383
  2229                           
  2230                           ;main.c: 87: state = 15;
  2231  03C5  300F               	movlw	15
  2232  03C6  2C8A               	goto	L15
  2233  03C7                     l2609:	
  2234                           ;main.c: 91: case 15: if(SlaveInfo[1].CommError == SLAVE_DATA_OK){
  2235                           
  2236                           ;main.c: 88: }
  2237                           ;main.c: 89: break;
  2238                           
  2239  03C7  3002               	movlw	2
  2240  03C8  1683               	bsf	3,5	;RP0=1, select bank3
  2241  03C9  1703               	bsf	3,6	;RP1=1, select bank3
  2242  03CA  0631               	xorwf	(_SlaveInfo^(0+384)+33),w
  2243  03CB  1D03               	btfss	3,2
  2244  03CC  2C4B               	goto	l2661
  2245                           
  2246                           ;main.c: 92: state = 2;
  2247  03CD  3002               	movlw	2
  2248  03CE  2C8A               	goto	L15
  2249  03CF                     l2617:	
  2250                           ;main.c: 99: case 2: if(SendPetitModbus(2, 6, temp, 4)){
  2251                           
  2252                           ;main.c: 96: }
  2253                           ;main.c: 97: break;
  2254                           
  2255                           ;main.c: 95: PORTDbits.RD1 = On;
  2256                           
  2257                           ;main.c: 94: else if(SlaveInfo[1].CommError == SLAVE_DATA_NOK){
  2258                           
  2259                           ;main.c: 93: }
  2260                           
  2261  03CF  3006               	movlw	6
  2262  03D0  00DE               	movwf	??_main
  2263  03D1  085E               	movf	??_main,w
  2264  03D2  00CE               	movwf	SendPetitModbus@Function
  2265  03D3  3064               	movlw	(low (_temp| 0))& (0+255)
  2266  03D4  00DF               	movwf	??_main+1
  2267  03D5  085F               	movf	??_main+1,w
  2268  03D6  00CF               	movwf	SendPetitModbus@DataBuf
  2269  03D7  3004               	movlw	4
  2270  03D8  00D0               	movwf	SendPetitModbus@DataLen
  2271  03D9  3000               	movlw	0
  2272  03DA  00D1               	movwf	SendPetitModbus@DataLen+1
  2273  03DB  3002               	movlw	2
  2274  03DC  120A  118A  205A  120A  118A  	fcall	_SendPetitModbus
  2275  03E1  3A00               	xorlw	0
  2276  03E2  1903               	skipnz
  2277  03E3  2CDD               	goto	l383
  2278                           
  2279                           ;main.c: 100: state = 3;
  2280  03E4  3003               	movlw	3
  2281  03E5  2C8A               	goto	L15
  2282  03E6                     l2621:	
  2283                           ;main.c: 104: case 3: if(SlaveInfo[2].CommError == SLAVE_DATA_OK){
  2284                           
  2285                           ;main.c: 101: }
  2286                           ;main.c: 102: break;
  2287                           
  2288  03E6  3002               	movlw	2
  2289  03E7  1683               	bsf	3,5	;RP0=1, select bank3
  2290  03E8  1703               	bsf	3,6	;RP1=1, select bank3
  2291  03E9  0644               	xorwf	(_SlaveInfo^(0+384)+52),w
  2292  03EA  1D03               	btfss	3,2
  2293  03EB  2C6F               	goto	l2673
  2294                           
  2295                           ;main.c: 105: state = 4;
  2296  03EC  3004               	movlw	4
  2297  03ED  2C8A               	goto	L15
  2298  03EE                     l2629:	
  2299                           ;main.c: 112: case 4: if(SendPetitModbus(3, 6, temp, 4)){
  2300                           
  2301                           ;main.c: 109: }
  2302                           ;main.c: 110: break;
  2303                           
  2304                           ;main.c: 108: PORTDbits.RD1 = On;
  2305                           
  2306                           ;main.c: 107: else if(SlaveInfo[2].CommError == SLAVE_DATA_NOK){
  2307                           
  2308                           ;main.c: 106: }
  2309                           
  2310  03EE  3006               	movlw	6
  2311  03EF  00DE               	movwf	??_main
  2312  03F0  085E               	movf	??_main,w
  2313  03F1  00CE               	movwf	SendPetitModbus@Function
  2314  03F2  3064               	movlw	(low (_temp| 0))& (0+255)
  2315  03F3  00DF               	movwf	??_main+1
  2316  03F4  085F               	movf	??_main+1,w
  2317  03F5  00CF               	movwf	SendPetitModbus@DataBuf
  2318  03F6  3004               	movlw	4
  2319  03F7  00D0               	movwf	SendPetitModbus@DataLen
  2320  03F8  3000               	movlw	0
  2321  03F9  00D1               	movwf	SendPetitModbus@DataLen+1
  2322  03FA  3003               	movlw	3
  2323  03FB  120A  118A  205A  120A  118A  	fcall	_SendPetitModbus
  2324  0400  3A00               	xorlw	0
  2325  0401  1903               	skipnz
  2326  0402  2CDD               	goto	l383
  2327                           
  2328                           ;main.c: 113: state = 5;
  2329  0403  3005               	movlw	5
  2330  0404  2C8A               	goto	L15
  2331  0405                     l2633:	
  2332                           ;main.c: 117: case 5: if(SlaveInfo[3].CommError == SLAVE_DATA_OK){
  2333                           
  2334                           ;main.c: 114: }
  2335                           ;main.c: 115: break;
  2336                           
  2337  0405  3002               	movlw	2
  2338  0406  1683               	bsf	3,5	;RP0=1, select bank3
  2339  0407  1703               	bsf	3,6	;RP1=1, select bank3
  2340  0408  0657               	xorwf	(_SlaveInfo^(0+384)+71),w
  2341  0409  1D03               	btfss	3,2
  2342  040A  2C99               	goto	l2685
  2343                           
  2344                           ;main.c: 118: state = 6;
  2345  040B  3006               	movlw	6
  2346  040C  2C8A               	goto	L15
  2347  040D                     l2641:	
  2348                           ;main.c: 125: case 6: if(SendPetitModbus(1, 6, temp2, 4)){
  2349                           
  2350                           ;main.c: 122: }
  2351                           ;main.c: 123: break;
  2352                           
  2353                           ;main.c: 121: PORTDbits.RD1 = On;
  2354                           
  2355                           ;main.c: 120: else if(SlaveInfo[3].CommError == SLAVE_DATA_NOK){
  2356                           
  2357                           ;main.c: 119: }
  2358                           
  2359  040D  3006               	movlw	6
  2360  040E  00DE               	movwf	??_main
  2361  040F  085E               	movf	??_main,w
  2362  0410  00CE               	movwf	SendPetitModbus@Function
  2363  0411  3046               	movlw	(low (_temp2| 0))& (0+255)
  2364  0412  00DF               	movwf	??_main+1
  2365  0413  085F               	movf	??_main+1,w
  2366  0414  00CF               	movwf	SendPetitModbus@DataBuf
  2367  0415  3004               	movlw	4
  2368  0416  00D0               	movwf	SendPetitModbus@DataLen
  2369  0417  3000               	movlw	0
  2370  0418  00D1               	movwf	SendPetitModbus@DataLen+1
  2371  0419  3001               	movlw	1
  2372  041A  120A  118A  205A  120A  118A  	fcall	_SendPetitModbus
  2373  041F  3A00               	xorlw	0
  2374  0420  1903               	skipnz
  2375  0421  2CDD               	goto	l383
  2376                           
  2377                           ;main.c: 126: state = 7;
  2378  0422  3007               	movlw	7
  2379  0423  2C8A               	goto	L15
  2380  0424                     l2645:	
  2381                           ;main.c: 130: case 7: if(SlaveInfo[1].CommError == SLAVE_DATA_OK){
  2382                           
  2383                           ;main.c: 127: }
  2384                           ;main.c: 128: break;
  2385                           
  2386  0424  3002               	movlw	2
  2387  0425  1683               	bsf	3,5	;RP0=1, select bank3
  2388  0426  1703               	bsf	3,6	;RP1=1, select bank3
  2389  0427  0631               	xorwf	(_SlaveInfo^(0+384)+33),w
  2390  0428  1D03               	btfss	3,2
  2391  0429  2C4B               	goto	l2661
  2392                           
  2393                           ;main.c: 131: state = 16;
  2394  042A  3010               	movlw	16
  2395  042B  2C8A               	goto	L15
  2396  042C                     l2653:	
  2397                           ;main.c: 138: case 16: if(SendPetitModbus(1, 3, temp3, 4)){
  2398                           
  2399                           ;main.c: 135: }
  2400                           ;main.c: 136: break;
  2401                           
  2402                           ;main.c: 134: PORTDbits.RD1 = On;
  2403                           
  2404                           ;main.c: 133: else if(SlaveInfo[1].CommError == SLAVE_DATA_NOK){
  2405                           
  2406                           ;main.c: 132: }
  2407                           
  2408  042C  3003               	movlw	3
  2409  042D  00DE               	movwf	??_main
  2410  042E  085E               	movf	??_main,w
  2411  042F  00CE               	movwf	SendPetitModbus@Function
  2412  0430  3060               	movlw	(low (_temp3| 0))& (0+255)
  2413  0431  00DF               	movwf	??_main+1
  2414  0432  085F               	movf	??_main+1,w
  2415  0433  00CF               	movwf	SendPetitModbus@DataBuf
  2416  0434  3004               	movlw	4
  2417  0435  00D0               	movwf	SendPetitModbus@DataLen
  2418  0436  3000               	movlw	0
  2419  0437  00D1               	movwf	SendPetitModbus@DataLen+1
  2420  0438  3001               	movlw	1
  2421  0439  120A  118A  205A  120A  118A  	fcall	_SendPetitModbus
  2422  043E  3A00               	xorlw	0
  2423  043F  1903               	skipnz
  2424  0440  2CDD               	goto	l383
  2425                           
  2426                           ;main.c: 139: state = 17;
  2427  0441  3011               	movlw	17
  2428  0442  2C8A               	goto	L15
  2429  0443                     l2657:	
  2430                           ;main.c: 143: case 17: if(SlaveInfo[1].CommError == SLAVE_DATA_OK){
  2431                           
  2432                           ;main.c: 140: }
  2433                           ;main.c: 141: break;
  2434                           
  2435  0443  3002               	movlw	2
  2436  0444  1683               	bsf	3,5	;RP0=1, select bank3
  2437  0445  1703               	bsf	3,6	;RP1=1, select bank3
  2438  0446  0631               	xorwf	(_SlaveInfo^(0+384)+33),w
  2439  0447  1D03               	btfss	3,2
  2440  0448  2C4B               	goto	l2661
  2441                           
  2442                           ;main.c: 144: state = 8;
  2443  0449  3008               	movlw	8
  2444  044A  2C8A               	goto	L15
  2445  044B                     l2661:	
  2446                           ;main.c: 145: }
  2447                           
  2448                           
  2449                           ;main.c: 146: else if(SlaveInfo[1].CommError == SLAVE_DATA_NOK){
  2450  044B  3003               	movlw	3
  2451  044C  1683               	bsf	3,5	;RP0=1, select bank3
  2452  044D  1703               	bsf	3,6	;RP1=1, select bank3
  2453  044E  0631               	xorwf	(_SlaveInfo^(0+384)+33),w
  2454  044F  2C9D               	goto	L16
  2455  0450                     l2665:	
  2456                           ;main.c: 151: case 8: if(SendPetitModbus(2, 6, temp2, 4)){
  2457                           
  2458                           ;main.c: 148: }
  2459                           ;main.c: 149: break;
  2460                           
  2461                           ;main.c: 147: PORTDbits.RD1 = On;
  2462                           
  2463  0450  3006               	movlw	6
  2464  0451  00DE               	movwf	??_main
  2465  0452  085E               	movf	??_main,w
  2466  0453  00CE               	movwf	SendPetitModbus@Function
  2467  0454  3046               	movlw	(low (_temp2| 0))& (0+255)
  2468  0455  00DF               	movwf	??_main+1
  2469  0456  085F               	movf	??_main+1,w
  2470  0457  00CF               	movwf	SendPetitModbus@DataBuf
  2471  0458  3004               	movlw	4
  2472  0459  00D0               	movwf	SendPetitModbus@DataLen
  2473  045A  3000               	movlw	0
  2474  045B  00D1               	movwf	SendPetitModbus@DataLen+1
  2475  045C  3002               	movlw	2
  2476  045D  120A  118A  205A  120A  118A  	fcall	_SendPetitModbus
  2477  0462  3A00               	xorlw	0
  2478  0463  1903               	skipnz
  2479  0464  2CDD               	goto	l383
  2480                           
  2481                           ;main.c: 152: state = 9;
  2482  0465  3009               	movlw	9
  2483  0466  2C8A               	goto	L15
  2484  0467                     l2669:	
  2485                           ;main.c: 156: case 9: if(SlaveInfo[2].CommError == SLAVE_DATA_OK){
  2486                           
  2487                           ;main.c: 153: }
  2488                           ;main.c: 154: break;
  2489                           
  2490  0467  3002               	movlw	2
  2491  0468  1683               	bsf	3,5	;RP0=1, select bank3
  2492  0469  1703               	bsf	3,6	;RP1=1, select bank3
  2493  046A  0644               	xorwf	(_SlaveInfo^(0+384)+52),w
  2494  046B  1D03               	btfss	3,2
  2495  046C  2C6F               	goto	l2673
  2496                           
  2497                           ;main.c: 157: state = 10;
  2498  046D  300A               	movlw	10
  2499  046E  2C8A               	goto	L15
  2500  046F                     l2673:	
  2501                           ;main.c: 158: }
  2502                           
  2503                           
  2504                           ;main.c: 159: else if(SlaveInfo[2].CommError == SLAVE_DATA_NOK){
  2505  046F  3003               	movlw	3
  2506  0470  1683               	bsf	3,5	;RP0=1, select bank3
  2507  0471  1703               	bsf	3,6	;RP1=1, select bank3
  2508  0472  0644               	xorwf	(_SlaveInfo^(0+384)+52),w
  2509  0473  2C9D               	goto	L16
  2510  0474                     l2677:	
  2511                           ;main.c: 164: case 10: if(SendPetitModbus(3, 6, temp2, 4)){
  2512                           
  2513                           ;main.c: 161: }
  2514                           ;main.c: 162: break;
  2515                           
  2516                           ;main.c: 160: PORTDbits.RD1 = On;
  2517                           
  2518  0474  3006               	movlw	6
  2519  0475  00DE               	movwf	??_main
  2520  0476  085E               	movf	??_main,w
  2521  0477  00CE               	movwf	SendPetitModbus@Function
  2522  0478  3046               	movlw	(low (_temp2| 0))& (0+255)
  2523  0479  00DF               	movwf	??_main+1
  2524  047A  085F               	movf	??_main+1,w
  2525  047B  00CF               	movwf	SendPetitModbus@DataBuf
  2526  047C  3004               	movlw	4
  2527  047D  00D0               	movwf	SendPetitModbus@DataLen
  2528  047E  3000               	movlw	0
  2529  047F  00D1               	movwf	SendPetitModbus@DataLen+1
  2530  0480  3003               	movlw	3
  2531  0481  120A  118A  205A  120A  118A  	fcall	_SendPetitModbus
  2532  0486  3A00               	xorlw	0
  2533  0487  1903               	skipnz
  2534  0488  2CDD               	goto	l383
  2535                           
  2536                           ;main.c: 165: state = 11;
  2537  0489  300B               	movlw	11
  2538  048A                     L15:	
  2539  048A  1283               	bcf	3,5	;RP0=0, select bank0
  2540  048B  1303               	bcf	3,6	;RP1=0, select bank0
  2541  048C  00DE               	movwf	??_main
  2542  048D  085E               	movf	??_main,w
  2543  048E  00C2               	movwf	_state
  2544                           
  2545                           ;main.c: 166: }
  2546                           ;main.c: 167: break;
  2547  048F  2CDD               	goto	l383
  2548  0490                     l2681:	
  2549                           ;main.c: 169: case 11: if(SlaveInfo[3].CommError == SLAVE_DATA_OK){
  2550                           
  2551  0490  3002               	movlw	2
  2552  0491  1683               	bsf	3,5	;RP0=1, select bank3
  2553  0492  1703               	bsf	3,6	;RP1=1, select bank3
  2554  0493  0657               	xorwf	(_SlaveInfo^(0+384)+71),w
  2555  0494  1D03               	btfss	3,2
  2556  0495  2C99               	goto	l2685
  2557                           
  2558                           ;main.c: 170: state = 0;
  2559  0496  1283               	bcf	3,5	;RP0=0, select bank0
  2560  0497  1303               	bcf	3,6	;RP1=0, select bank0
  2561  0498  2CA3               	goto	l2689
  2562  0499                     l2685:	
  2563                           ;main.c: 171: }
  2564                           
  2565                           
  2566                           ;main.c: 172: else if(SlaveInfo[3].CommError == SLAVE_DATA_NOK){
  2567  0499  3003               	movlw	3
  2568  049A  1683               	bsf	3,5	;RP0=1, select bank3
  2569  049B  1703               	bsf	3,6	;RP1=1, select bank3
  2570  049C  0657               	xorwf	(_SlaveInfo^(0+384)+71),w
  2571  049D                     L16:	
  2572  049D  1D03               	btfss	3,2
  2573  049E  2CDD               	goto	l383
  2574                           
  2575                           ;main.c: 173: PORTDbits.RD1 = On;
  2576  049F  1283               	bcf	3,5	;RP0=0, select bank0
  2577  04A0  1303               	bcf	3,6	;RP1=0, select bank0
  2578  04A1  1488               	bsf	8,1	;volatile
  2579                           
  2580                           ;main.c: 174: }
  2581                           ;main.c: 175: break;
  2582  04A2  2CDD               	goto	l383
  2583  04A3                     l2689:	
  2584                           ;main.c: 177: default : state = 0;
  2585                           
  2586  04A3  01C2               	clrf	_state
  2587                           
  2588                           ;main.c: 179: }
  2589                           
  2590                           ;main.c: 178: break;
  2591  04A4  2CDD               	goto	l383
  2592  04A5                     l2693:	
  2593  04A5  0842               	movf	_state,w
  2594                           
  2595                           ; Switch size 1, requested type "space"
  2596                           ; Number of cases is 18, Range of values is 0 to 17
  2597                           ; switch strategies available:
  2598                           ; Name         Instructions Cycles
  2599                           ; simple_byte           55    28 (average)
  2600                           ; direct_byte           62     8 (fixed)
  2601                           ; jumptable            260     6 (fixed)
  2602                           ;	Chosen strategy is simple_byte
  2603  04A6  3A00               	xorlw	0	; case 0
  2604  04A7  1903               	skipnz
  2605  04A8  2B76               	goto	l2581
  2606  04A9  3A01               	xorlw	1	; case 1
  2607  04AA  1903               	skipnz
  2608  04AB  2B90               	goto	l2585
  2609  04AC  3A03               	xorlw	3	; case 2
  2610  04AD  1903               	skipnz
  2611  04AE  2BCF               	goto	l2617
  2612  04AF  3A01               	xorlw	1	; case 3
  2613  04B0  1903               	skipnz
  2614  04B1  2BE6               	goto	l2621
  2615  04B2  3A07               	xorlw	7	; case 4
  2616  04B3  1903               	skipnz
  2617  04B4  2BEE               	goto	l2629
  2618  04B5  3A01               	xorlw	1	; case 5
  2619  04B6  1903               	skipnz
  2620  04B7  2C05               	goto	l2633
  2621  04B8  3A03               	xorlw	3	; case 6
  2622  04B9  1903               	skipnz
  2623  04BA  2C0D               	goto	l2641
  2624  04BB  3A01               	xorlw	1	; case 7
  2625  04BC  1903               	skipnz
  2626  04BD  2C24               	goto	l2645
  2627  04BE  3A0F               	xorlw	15	; case 8
  2628  04BF  1903               	skipnz
  2629  04C0  2C50               	goto	l2665
  2630  04C1  3A01               	xorlw	1	; case 9
  2631  04C2  1903               	skipnz
  2632  04C3  2C67               	goto	l2669
  2633  04C4  3A03               	xorlw	3	; case 10
  2634  04C5  1903               	skipnz
  2635  04C6  2C74               	goto	l2677
  2636  04C7  3A01               	xorlw	1	; case 11
  2637  04C8  1903               	skipnz
  2638  04C9  2C90               	goto	l2681
  2639  04CA  3A07               	xorlw	7	; case 12
  2640  04CB  1903               	skipnz
  2641  04CC  2B98               	goto	l2593
  2642  04CD  3A01               	xorlw	1	; case 13
  2643  04CE  1903               	skipnz
  2644  04CF  2BAF               	goto	l2597
  2645  04D0  3A03               	xorlw	3	; case 14
  2646  04D1  1903               	skipnz
  2647  04D2  2BB0               	goto	l2605
  2648  04D3  3A01               	xorlw	1	; case 15
  2649  04D4  1903               	skipnz
  2650  04D5  2BC7               	goto	l2609
  2651  04D6  3A1F               	xorlw	31	; case 16
  2652  04D7  1903               	skipnz
  2653  04D8  2C2C               	goto	l2653
  2654  04D9  3A01               	xorlw	1	; case 17
  2655  04DA  1903               	skipnz
  2656  04DB  2C43               	goto	l2657
  2657  04DC  2CA3               	goto	l2689
  2658  04DD                     l383:	
  2659                           
  2660                           ;main.c: 181: PIR1bits.TMR2IF = 0;
  2661  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  2662  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  2663  04DF  108C               	bcf	12,1	;volatile
  2664                           
  2665                           ;main.c: 182: TMR2 = 0;
  2666  04E0  0191               	clrf	17	;volatile
  2667  04E1  2B6C               	goto	l2575
  2668  04E2                     __end_of_main:	
  2669                           
  2670                           	psect	text1
  2671  005A                     __ptext1:	
  2672 ;; *************** function _SendPetitModbus *****************
  2673 ;; Defined at:
  2674 ;;		line 392 in file "modbus/PetitModbus.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;  Address         1    wreg     unsigned char 
  2677 ;;  Function        1    4[BANK0 ] unsigned char 
  2678 ;;  DataBuf         1    5[BANK0 ] PTR unsigned char 
  2679 ;;		 -> temp2(4), temp4(9), temp3(4), temp(4), 
  2680 ;;  DataLen         2    6[BANK0 ] unsigned short 
  2681 ;; Auto vars:     Size  Location     Type
  2682 ;;  Address         1   11[BANK0 ] unsigned char 
  2683 ;;  return_val      1   10[BANK0 ] unsigned char 
  2684 ;; Return value:  Size  Location     Type
  2685 ;;                  1    wreg      unsigned char 
  2686 ;; Registers used:
  2687 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2688 ;; Tracked objects:
  2689 ;;		On entry : 0/0
  2690 ;;		On exit  : 0/0
  2691 ;;		Unchanged: 0/0
  2692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2693 ;;      Params:         0       4       0       0       0
  2694 ;;      Locals:         0       2       0       0       0
  2695 ;;      Temps:          0       2       0       0       0
  2696 ;;      Totals:         0       8       0       0       0
  2697 ;;Total ram usage:        8 bytes
  2698 ;; Hardware stack levels used:    1
  2699 ;; Hardware stack levels required when called:    4
  2700 ;; This function calls:
  2701 ;;		_PetitSendMessage
  2702 ;;		___bmul
  2703 ;; This function is called by:
  2704 ;;		_main
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708                           
  2709                           ;psect for function _SendPetitModbus
  2710  005A                     _SendPetitModbus:	
  2711                           
  2712                           ;incstack = 0
  2713                           ; Regs used in _SendPetitModbus: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2714                           ;SendPetitModbus@Address stored from wreg
  2715  005A  1283               	bcf	3,5	;RP0=0, select bank0
  2716  005B  1303               	bcf	3,6	;RP1=0, select bank0
  2717  005C  00D5               	movwf	SendPetitModbus@Address
  2718                           
  2719                           ;PetitModbus.c: 394: unsigned char return_val = 0;
  2720  005D  01D4               	clrf	SendPetitModbus@return_val
  2721                           
  2722                           ;PetitModbus.c: 396: MASTER_SLAVE_DATA[Address].CommError = SLAVE_DATA_BUSY;
  2723  005E  3013               	movlw	19
  2724  005F  00D2               	movwf	??_SendPetitModbus
  2725  0060  0852               	movf	??_SendPetitModbus,w
  2726  0061  00CA               	movwf	___bmul@multiplicand
  2727  0062  0855               	movf	SendPetitModbus@Address,w
  2728  0063  120A  158A  264B  120A  118A  	fcall	___bmul
  2729  0068  1283               	bcf	3,5	;RP0=0, select bank0
  2730  0069  1303               	bcf	3,6	;RP1=0, select bank0
  2731  006A  0745               	addwf	_MASTER_SLAVE_DATA,w
  2732  006B  00D3               	movwf	??_SendPetitModbus+1
  2733  006C  0853               	movf	??_SendPetitModbus+1,w
  2734  006D  3E0E               	addlw	14
  2735  006E  0084               	movwf	4
  2736  006F  1783               	bsf	3,7	;select IRP bank2
  2737  0070  0180               	clrf	0
  2738  0071  0A80               	incf	0,f
  2739                           
  2740                           ;PetitModbus.c: 399: Petit_Tx_Data.Function = Function;
  2741  0072  084E               	movf	SendPetitModbus@Function,w
  2742  0073  00D2               	movwf	??_SendPetitModbus
  2743  0074  0852               	movf	??_SendPetitModbus,w
  2744  0075  1683               	bsf	3,5	;RP0=1, select bank1
  2745  0076  1303               	bcf	3,6	;RP1=0, select bank1
  2746  0077  00A1               	movwf	(_Petit_Tx_Data^(0+128)+1)
  2747                           
  2748                           ;PetitModbus.c: 400: Petit_Tx_Data.Address = Address;
  2749  0078  1283               	bcf	3,5	;RP0=0, select bank0
  2750  0079  1303               	bcf	3,6	;RP1=0, select bank0
  2751  007A  0855               	movf	SendPetitModbus@Address,w
  2752  007B  00D2               	movwf	??_SendPetitModbus
  2753  007C  0852               	movf	??_SendPetitModbus,w
  2754  007D  1683               	bsf	3,5	;RP0=1, select bank1
  2755  007E  1303               	bcf	3,6	;RP1=0, select bank1
  2756  007F  00A0               	movwf	_Petit_Tx_Data^(0+128)
  2757                           
  2758                           ;PetitModbus.c: 401: Petit_Tx_Data.DataLen = DataLen;
  2759  0080  1283               	bcf	3,5	;RP0=0, select bank0
  2760  0081  1303               	bcf	3,6	;RP1=0, select bank0
  2761  0082  0851               	movf	SendPetitModbus@DataLen+1,w
  2762  0083  1683               	bsf	3,5	;RP0=1, select bank1
  2763  0084  1303               	bcf	3,6	;RP1=0, select bank1
  2764  0085  00BB               	movwf	((_Petit_Tx_Data+1)^(0+128)+26)
  2765  0086  1283               	bcf	3,5	;RP0=0, select bank0
  2766  0087  1303               	bcf	3,6	;RP1=0, select bank0
  2767  0088  0850               	movf	SendPetitModbus@DataLen,w
  2768  0089  1683               	bsf	3,5	;RP0=1, select bank1
  2769  008A  1303               	bcf	3,6	;RP1=0, select bank1
  2770  008B  00BA               	movwf	(_Petit_Tx_Data^(0+128)+26)
  2771                           
  2772                           ;PetitModbus.c: 403: for(Petit_Tx_Current=0; Petit_Tx_Current < Petit_Tx_Data.DataLen; P
      +                          etit_Tx_Current++)
  2773  008C  1283               	bcf	3,5	;RP0=0, select bank0
  2774  008D  1303               	bcf	3,6	;RP1=0, select bank0
  2775  008E  01C0               	clrf	_Petit_Tx_Current
  2776  008F  01C1               	clrf	_Petit_Tx_Current+1
  2777  0090                     l2509:	
  2778  0090  1683               	bsf	3,5	;RP0=1, select bank1
  2779  0091  1303               	bcf	3,6	;RP1=0, select bank1
  2780  0092  083B               	movf	((_Petit_Tx_Data+1)^(0+128)+26),w
  2781  0093  1283               	bcf	3,5	;RP0=0, select bank0
  2782  0094  1303               	bcf	3,6	;RP1=0, select bank0
  2783  0095  0241               	subwf	_Petit_Tx_Current+1,w
  2784  0096  1D03               	skipz
  2785  0097  289E               	goto	u1885
  2786  0098  1683               	bsf	3,5	;RP0=1, select bank1
  2787  0099  1303               	bcf	3,6	;RP1=0, select bank1
  2788  009A  083A               	movf	(_Petit_Tx_Data^(0+128)+26),w
  2789  009B  1283               	bcf	3,5	;RP0=0, select bank0
  2790  009C  1303               	bcf	3,6	;RP1=0, select bank0
  2791  009D  0240               	subwf	_Petit_Tx_Current,w
  2792  009E                     u1885:	
  2793  009E  1803               	btfsc	3,0
  2794  009F  28B4               	goto	l2511
  2795                           
  2796                           ;PetitModbus.c: 404: {
  2797                           ;PetitModbus.c: 405: Petit_Tx_Data.DataBuf[Petit_Tx_Current]=DataBuf[Petit_Tx_Current];
  2798  00A0  0840               	movf	_Petit_Tx_Current,w
  2799  00A1  074F               	addwf	SendPetitModbus@DataBuf,w
  2800  00A2  00D2               	movwf	??_SendPetitModbus
  2801  00A3  0852               	movf	??_SendPetitModbus,w
  2802  00A4  0084               	movwf	4
  2803  00A5  1383               	bcf	3,7	;select IRP bank0
  2804  00A6  0800               	movf	0,w
  2805  00A7  00D3               	movwf	??_SendPetitModbus+1
  2806  00A8  0840               	movf	_Petit_Tx_Current,w
  2807  00A9  3EA2               	addlw	(low ((_Petit_Tx_Data| 0+2)))& (0+255)
  2808  00AA  0084               	movwf	4
  2809  00AB  0853               	movf	??_SendPetitModbus+1,w
  2810  00AC  0080               	movwf	0
  2811  00AD  3001               	movlw	1
  2812  00AE  07C0               	addwf	_Petit_Tx_Current,f
  2813  00AF  1803               	skipnc
  2814  00B0  0AC1               	incf	_Petit_Tx_Current+1,f
  2815  00B1  3000               	movlw	0
  2816  00B2  07C1               	addwf	_Petit_Tx_Current+1,f
  2817  00B3  2890               	goto	l2509
  2818  00B4                     l2511:	
  2819                           
  2820                           ;PetitModbus.c: 406: }
  2821                           ;PetitModbus.c: 407: return_val = PetitSendMessage();
  2822  00B4  120A  158A  25ED  120A  118A  	fcall	_PetitSendMessage
  2823  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  2824  00BA  1303               	bcf	3,6	;RP1=0, select bank0
  2825  00BB  00D2               	movwf	??_SendPetitModbus
  2826  00BC  0852               	movf	??_SendPetitModbus,w
  2827  00BD  00D4               	movwf	SendPetitModbus@return_val
  2828                           
  2829                           ;PetitModbus.c: 409: if (return_val){
  2830  00BE  0854               	movf	SendPetitModbus@return_val,w
  2831  00BF  1903               	btfsc	3,2
  2832  00C0  28D6               	goto	l2517
  2833                           
  2834                           ;PetitModbus.c: 410: MASTER_SLAVE_DATA[Address].SentCounter += 1;
  2835  00C1  3013               	movlw	19
  2836  00C2  00D2               	movwf	??_SendPetitModbus
  2837  00C3  0852               	movf	??_SendPetitModbus,w
  2838  00C4  00CA               	movwf	___bmul@multiplicand
  2839  00C5  0855               	movf	SendPetitModbus@Address,w
  2840  00C6  120A  158A  264B   	fcall	___bmul
  2841  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  2842  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  2843  00CB  0745               	addwf	_MASTER_SLAVE_DATA,w
  2844  00CC  00D3               	movwf	??_SendPetitModbus+1
  2845  00CD  0853               	movf	??_SendPetitModbus+1,w
  2846  00CE  3E11               	addlw	17
  2847  00CF  0084               	movwf	4
  2848  00D0  3001               	movlw	1
  2849  00D1  1783               	bsf	3,7	;select IRP bank2
  2850  00D2  0780               	addwf	0,f
  2851  00D3  0A84               	incf	4,f
  2852  00D4  1803               	skipnc
  2853  00D5  0A80               	incf	0,f
  2854  00D6                     l2517:	
  2855                           
  2856                           ;PetitModbus.c: 411: }
  2857                           ;PetitModbus.c: 413: return (return_val);
  2858  00D6  0854               	movf	SendPetitModbus@return_val,w
  2859  00D7  0008               	return
  2860  00D8                     __end_of_SendPetitModbus:	
  2861                           
  2862                           	psect	text2
  2863  0DED                     __ptext2:	
  2864 ;; *************** function _PetitSendMessage *****************
  2865 ;; Defined at:
  2866 ;;		line 141 in file "modbus/PetitModbus.c"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;		None
  2869 ;; Auto vars:     Size  Location     Type
  2870 ;;		None
  2871 ;; Return value:  Size  Location     Type
  2872 ;;                  1    wreg      unsigned char 
  2873 ;; Registers used:
  2874 ;;		wreg, status,2, status,0
  2875 ;; Tracked objects:
  2876 ;;		On entry : 0/0
  2877 ;;		On exit  : 0/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2880 ;;      Params:         0       0       0       0       0
  2881 ;;      Locals:         0       0       0       0       0
  2882 ;;      Temps:          0       0       0       0       0
  2883 ;;      Totals:         0       0       0       0       0
  2884 ;;Total ram usage:        0 bytes
  2885 ;; Hardware stack levels used:    1
  2886 ;; Hardware stack levels required when called:    3
  2887 ;; This function calls:
  2888 ;;		Nothing
  2889 ;; This function is called by:
  2890 ;;		_SendPetitModbus
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893                           
  2894                           
  2895                           ;psect for function _PetitSendMessage
  2896  0DED                     _PetitSendMessage:	
  2897                           
  2898                           ;PetitModbus.c: 143: if (Petit_Tx_State != PETIT_RXTX_IDLE){
  2899                           
  2900                           ;incstack = 0
  2901                           ; Regs used in _PetitSendMessage: [wreg+status,2+status,0]
  2902  0DED  1283               	bcf	3,5	;RP0=0, select bank0
  2903  0DEE  1303               	bcf	3,6	;RP1=0, select bank0
  2904  0DEF  0844               	movf	_Petit_Tx_State,w
  2905  0DF0  1903               	btfsc	3,2
  2906  0DF1  2DF4               	goto	l2241
  2907                           
  2908                           ;PetitModbus.c: 144: return 0;
  2909  0DF2  3000               	movlw	0
  2910  0DF3  0008               	return
  2911  0DF4                     l2241:	
  2912                           
  2913                           ;PetitModbus.c: 145: }
  2914                           ;PetitModbus.c: 146: Petit_Tx_Current =0;
  2915  0DF4  01C0               	clrf	_Petit_Tx_Current
  2916  0DF5  01C1               	clrf	_Petit_Tx_Current+1
  2917                           
  2918                           ;PetitModbus.c: 147: Petit_Tx_State =PETIT_RXTX_START;
  2919  0DF6  01C4               	clrf	_Petit_Tx_State
  2920  0DF7  0AC4               	incf	_Petit_Tx_State,f
  2921                           
  2922                           ;PetitModbus.c: 149: return 1;
  2923  0DF8  3001               	movlw	1
  2924  0DF9  0008               	return
  2925  0DFA                     __end_of_PetitSendMessage:	
  2926                           
  2927                           	psect	text3
  2928  0E5E                     __ptext3:	
  2929 ;; *************** function _SYSTEM_Initialize *****************
  2930 ;; Defined at:
  2931 ;;		line 31 in file "Peripherals/config.c"
  2932 ;; Parameters:    Size  Location     Type
  2933 ;;		None
  2934 ;; Auto vars:     Size  Location     Type
  2935 ;;		None
  2936 ;; Return value:  Size  Location     Type
  2937 ;;                  1    wreg      void 
  2938 ;; Registers used:
  2939 ;;		wreg, status,2, status,0, pclath, cstack
  2940 ;; Tracked objects:
  2941 ;;		On entry : 0/0
  2942 ;;		On exit  : 0/0
  2943 ;;		Unchanged: 0/0
  2944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2945 ;;      Params:         0       0       0       0       0
  2946 ;;      Locals:         0       0       0       0       0
  2947 ;;      Temps:          0       0       0       0       0
  2948 ;;      Totals:         0       0       0       0       0
  2949 ;;Total ram usage:        0 bytes
  2950 ;; Hardware stack levels used:    1
  2951 ;; Hardware stack levels required when called:    5
  2952 ;; This function calls:
  2953 ;;		_INTERRUPT_Initialize
  2954 ;;		_OSCILLATOR_Initialize
  2955 ;;		_PIN_MANAGER_Initialize
  2956 ;;		_TMR2_Initialize
  2957 ;; This function is called by:
  2958 ;;		_main
  2959 ;; This function uses a non-reentrant model
  2960 ;;
  2961                           
  2962                           
  2963                           ;psect for function _SYSTEM_Initialize
  2964  0E5E                     _SYSTEM_Initialize:	
  2965                           
  2966                           ;config.c: 32: OSCILLATOR_Initialize();
  2967                           
  2968                           ;incstack = 0
  2969                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2970  0E5E  120A  158A  25AD  120A  158A  	fcall	_OSCILLATOR_Initialize
  2971                           
  2972                           ;config.c: 33: PIN_MANAGER_Initialize();
  2973  0E63  120A  158A  269C  120A  158A  	fcall	_PIN_MANAGER_Initialize
  2974                           
  2975                           ;config.c: 36: TMR2_Initialize();
  2976  0E68  120A  158A  2685  120A  158A  	fcall	_TMR2_Initialize
  2977                           
  2978                           ;config.c: 39: INTERRUPT_Initialize();
  2979  0E6D  120A  158A  25A2   	fcall	_INTERRUPT_Initialize
  2980  0E70  0008               	return
  2981  0E71                     __end_of_SYSTEM_Initialize:	
  2982                           
  2983                           	psect	text4
  2984  0E85                     __ptext4:	
  2985 ;; *************** function _TMR2_Initialize *****************
  2986 ;; Defined at:
  2987 ;;		line 8 in file "Peripherals/tmr2.c"
  2988 ;; Parameters:    Size  Location     Type
  2989 ;;		None
  2990 ;; Auto vars:     Size  Location     Type
  2991 ;;		None
  2992 ;; Return value:  Size  Location     Type
  2993 ;;                  1    wreg      void 
  2994 ;; Registers used:
  2995 ;;		wreg, status,2, status,0, pclath, cstack
  2996 ;; Tracked objects:
  2997 ;;		On entry : 0/0
  2998 ;;		On exit  : 0/0
  2999 ;;		Unchanged: 0/0
  3000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3001 ;;      Params:         0       0       0       0       0
  3002 ;;      Locals:         0       0       0       0       0
  3003 ;;      Temps:          0       0       0       0       0
  3004 ;;      Totals:         0       0       0       0       0
  3005 ;;Total ram usage:        0 bytes
  3006 ;; Hardware stack levels used:    1
  3007 ;; Hardware stack levels required when called:    4
  3008 ;; This function calls:
  3009 ;;		_TMR2_StartTimer
  3010 ;;		_TMR2_StopTimer
  3011 ;; This function is called by:
  3012 ;;		_SYSTEM_Initialize
  3013 ;; This function uses a non-reentrant model
  3014 ;;
  3015                           
  3016                           
  3017                           ;psect for function _TMR2_Initialize
  3018  0E85                     _TMR2_Initialize:	
  3019                           
  3020                           ;tmr2.c: 9: TMR2_StopTimer();
  3021                           
  3022                           ;incstack = 0
  3023                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3024  0E85  120A  158A  25B5  120A  158A  	fcall	_TMR2_StopTimer
  3025                           
  3026                           ;tmr2.c: 13: T2CONbits.TOUTPS = 0b1111;
  3027  0E8A  3078               	movlw	120
  3028  0E8B  1283               	bcf	3,5	;RP0=0, select bank0
  3029  0E8C  1303               	bcf	3,6	;RP1=0, select bank0
  3030  0E8D  0492               	iorwf	18,f	;volatile
  3031                           
  3032                           ;tmr2.c: 14: T2CONbits.T2CKPS = 0b11;
  3033  0E8E  3003               	movlw	3
  3034  0E8F  0492               	iorwf	18,f	;volatile
  3035                           
  3036                           ;tmr2.c: 16: PR2 = 17;
  3037  0E90  3011               	movlw	17
  3038  0E91  1683               	bsf	3,5	;RP0=1, select bank1
  3039  0E92  1303               	bcf	3,6	;RP1=0, select bank1
  3040  0E93  0092               	movwf	18	;volatile
  3041                           
  3042                           ;tmr2.c: 19: TMR2 = 0x00;
  3043  0E94  1283               	bcf	3,5	;RP0=0, select bank0
  3044  0E95  1303               	bcf	3,6	;RP1=0, select bank0
  3045  0E96  0191               	clrf	17	;volatile
  3046                           
  3047                           ;tmr2.c: 22: PIR1bits.TMR2IF = 0;
  3048  0E97  108C               	bcf	12,1	;volatile
  3049                           
  3050                           ;tmr2.c: 25: TMR2_StartTimer();
  3051  0E98  120A  158A  25B1   	fcall	_TMR2_StartTimer
  3052  0E9B  0008               	return
  3053  0E9C                     __end_of_TMR2_Initialize:	
  3054                           
  3055                           	psect	text5
  3056  0DB5                     __ptext5:	
  3057 ;; *************** function _TMR2_StopTimer *****************
  3058 ;; Defined at:
  3059 ;;		line 33 in file "Peripherals/tmr2.c"
  3060 ;; Parameters:    Size  Location     Type
  3061 ;;		None
  3062 ;; Auto vars:     Size  Location     Type
  3063 ;;		None
  3064 ;; Return value:  Size  Location     Type
  3065 ;;                  1    wreg      void 
  3066 ;; Registers used:
  3067 ;;		None
  3068 ;; Tracked objects:
  3069 ;;		On entry : 0/0
  3070 ;;		On exit  : 0/0
  3071 ;;		Unchanged: 0/0
  3072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3073 ;;      Params:         0       0       0       0       0
  3074 ;;      Locals:         0       0       0       0       0
  3075 ;;      Temps:          0       0       0       0       0
  3076 ;;      Totals:         0       0       0       0       0
  3077 ;;Total ram usage:        0 bytes
  3078 ;; Hardware stack levels used:    1
  3079 ;; Hardware stack levels required when called:    3
  3080 ;; This function calls:
  3081 ;;		Nothing
  3082 ;; This function is called by:
  3083 ;;		_TMR2_Initialize
  3084 ;; This function uses a non-reentrant model
  3085 ;;
  3086                           
  3087                           
  3088                           ;psect for function _TMR2_StopTimer
  3089  0DB5                     _TMR2_StopTimer:	
  3090                           
  3091                           ;tmr2.c: 35: T2CONbits.TMR2ON = 0;
  3092                           
  3093                           ;incstack = 0
  3094                           ; Regs used in _TMR2_StopTimer: []
  3095  0DB5  1283               	bcf	3,5	;RP0=0, select bank0
  3096  0DB6  1303               	bcf	3,6	;RP1=0, select bank0
  3097  0DB7  1112               	bcf	18,2	;volatile
  3098  0DB8  0008               	return
  3099  0DB9                     __end_of_TMR2_StopTimer:	
  3100                           
  3101                           	psect	text6
  3102  0DB1                     __ptext6:	
  3103 ;; *************** function _TMR2_StartTimer *****************
  3104 ;; Defined at:
  3105 ;;		line 28 in file "Peripherals/tmr2.c"
  3106 ;; Parameters:    Size  Location     Type
  3107 ;;		None
  3108 ;; Auto vars:     Size  Location     Type
  3109 ;;		None
  3110 ;; Return value:  Size  Location     Type
  3111 ;;                  1    wreg      void 
  3112 ;; Registers used:
  3113 ;;		None
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3119 ;;      Params:         0       0       0       0       0
  3120 ;;      Locals:         0       0       0       0       0
  3121 ;;      Temps:          0       0       0       0       0
  3122 ;;      Totals:         0       0       0       0       0
  3123 ;;Total ram usage:        0 bytes
  3124 ;; Hardware stack levels used:    1
  3125 ;; Hardware stack levels required when called:    3
  3126 ;; This function calls:
  3127 ;;		Nothing
  3128 ;; This function is called by:
  3129 ;;		_TMR2_Initialize
  3130 ;; This function uses a non-reentrant model
  3131 ;;
  3132                           
  3133                           
  3134                           ;psect for function _TMR2_StartTimer
  3135  0DB1                     _TMR2_StartTimer:	
  3136                           
  3137                           ;tmr2.c: 30: T2CONbits.TMR2ON = 1;
  3138                           
  3139                           ;incstack = 0
  3140                           ; Regs used in _TMR2_StartTimer: []
  3141  0DB1  1283               	bcf	3,5	;RP0=0, select bank0
  3142  0DB2  1303               	bcf	3,6	;RP1=0, select bank0
  3143  0DB3  1512               	bsf	18,2	;volatile
  3144  0DB4  0008               	return
  3145  0DB5                     __end_of_TMR2_StartTimer:	
  3146                           
  3147                           	psect	text7
  3148  0E9C                     __ptext7:	
  3149 ;; *************** function _PIN_MANAGER_Initialize *****************
  3150 ;; Defined at:
  3151 ;;		line 4 in file "Peripherals/pin_manager.c"
  3152 ;; Parameters:    Size  Location     Type
  3153 ;;		None
  3154 ;; Auto vars:     Size  Location     Type
  3155 ;;		None
  3156 ;; Return value:  Size  Location     Type
  3157 ;;                  1    wreg      void 
  3158 ;; Registers used:
  3159 ;;		wreg, status,2, status,0
  3160 ;; Tracked objects:
  3161 ;;		On entry : 0/0
  3162 ;;		On exit  : 0/0
  3163 ;;		Unchanged: 0/0
  3164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3165 ;;      Params:         0       0       0       0       0
  3166 ;;      Locals:         0       0       0       0       0
  3167 ;;      Temps:          0       0       0       0       0
  3168 ;;      Totals:         0       0       0       0       0
  3169 ;;Total ram usage:        0 bytes
  3170 ;; Hardware stack levels used:    1
  3171 ;; Hardware stack levels required when called:    3
  3172 ;; This function calls:
  3173 ;;		Nothing
  3174 ;; This function is called by:
  3175 ;;		_SYSTEM_Initialize
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           
  3179                           
  3180                           ;psect for function _PIN_MANAGER_Initialize
  3181  0E9C                     _PIN_MANAGER_Initialize:	
  3182                           
  3183                           ;pin_manager.c: 6: ADCON1bits.PCFG = 0b1111;
  3184                           
  3185                           ;incstack = 0
  3186                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  3187  0E9C  300F               	movlw	15
  3188  0E9D  1683               	bsf	3,5	;RP0=1, select bank1
  3189  0E9E  1303               	bcf	3,6	;RP1=0, select bank1
  3190  0E9F  049F               	iorwf	31,f	;volatile
  3191                           
  3192                           ;pin_manager.c: 8: TRISA = 0xFF;
  3193  0EA0  30FF               	movlw	255
  3194  0EA1  0085               	movwf	5	;volatile
  3195                           
  3196                           ;pin_manager.c: 10: TRISB = 0xFF;
  3197  0EA2  30FF               	movlw	255
  3198  0EA3  0086               	movwf	6	;volatile
  3199                           
  3200                           ;pin_manager.c: 12: TRISC = 0xFF;
  3201  0EA4  30FF               	movlw	255
  3202  0EA5  0087               	movwf	7	;volatile
  3203                           
  3204                           ;pin_manager.c: 14: TRISD = 0xFF;
  3205  0EA6  30FF               	movlw	255
  3206  0EA7  0088               	movwf	8	;volatile
  3207                           
  3208                           ;pin_manager.c: 16: PORTA = 0;
  3209  0EA8  1283               	bcf	3,5	;RP0=0, select bank0
  3210  0EA9  1303               	bcf	3,6	;RP1=0, select bank0
  3211  0EAA  0185               	clrf	5	;volatile
  3212                           
  3213                           ;pin_manager.c: 17: PORTB = 0;
  3214  0EAB  0186               	clrf	6	;volatile
  3215                           
  3216                           ;pin_manager.c: 18: PORTC = 0;
  3217  0EAC  0187               	clrf	7	;volatile
  3218                           
  3219                           ;pin_manager.c: 19: PORTD = 0;
  3220  0EAD  0188               	clrf	8	;volatile
  3221                           
  3222                           ;pin_manager.c: 21: TRISDbits.TRISD0 = 0;
  3223  0EAE  1683               	bsf	3,5	;RP0=1, select bank1
  3224  0EAF  1303               	bcf	3,6	;RP1=0, select bank1
  3225  0EB0  1008               	bcf	8,0	;volatile
  3226                           
  3227                           ;pin_manager.c: 22: TRISDbits.TRISD1 = 0;
  3228  0EB1  1088               	bcf	8,1	;volatile
  3229                           
  3230                           ;pin_manager.c: 23: TRISDbits.TRISD2 = 0;
  3231  0EB2  1108               	bcf	8,2	;volatile
  3232                           
  3233                           ;pin_manager.c: 25: TRISCbits.TRISC6 = 0;
  3234  0EB3  1307               	bcf	7,6	;volatile
  3235  0EB4  0008               	return
  3236  0EB5                     __end_of_PIN_MANAGER_Initialize:	
  3237                           
  3238                           	psect	text8
  3239  0DAD                     __ptext8:	
  3240 ;; *************** function _OSCILLATOR_Initialize *****************
  3241 ;; Defined at:
  3242 ;;		line 42 in file "Peripherals/config.c"
  3243 ;; Parameters:    Size  Location     Type
  3244 ;;		None
  3245 ;; Auto vars:     Size  Location     Type
  3246 ;;		None
  3247 ;; Return value:  Size  Location     Type
  3248 ;;                  1    wreg      void 
  3249 ;; Registers used:
  3250 ;;		status,2
  3251 ;; Tracked objects:
  3252 ;;		On entry : 0/0
  3253 ;;		On exit  : 0/0
  3254 ;;		Unchanged: 0/0
  3255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3256 ;;      Params:         0       0       0       0       0
  3257 ;;      Locals:         0       0       0       0       0
  3258 ;;      Temps:          0       0       0       0       0
  3259 ;;      Totals:         0       0       0       0       0
  3260 ;;Total ram usage:        0 bytes
  3261 ;; Hardware stack levels used:    1
  3262 ;; Hardware stack levels required when called:    3
  3263 ;; This function calls:
  3264 ;;		Nothing
  3265 ;; This function is called by:
  3266 ;;		_SYSTEM_Initialize
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           
  3270                           
  3271                           ;psect for function _OSCILLATOR_Initialize
  3272  0DAD                     _OSCILLATOR_Initialize:	
  3273                           
  3274                           ;config.c: 45: OSCCON = 0;
  3275                           
  3276                           ;incstack = 0
  3277                           ; Regs used in _OSCILLATOR_Initialize: [status,2]
  3278  0DAD  1683               	bsf	3,5	;RP0=1, select bank1
  3279  0DAE  1303               	bcf	3,6	;RP1=0, select bank1
  3280  0DAF  018F               	clrf	15	;volatile
  3281  0DB0  0008               	return
  3282  0DB1                     __end_of_OSCILLATOR_Initialize:	
  3283                           
  3284                           	psect	text9
  3285  0DA2                     __ptext9:	
  3286 ;; *************** function _INTERRUPT_Initialize *****************
  3287 ;; Defined at:
  3288 ;;		line 5 in file "Peripherals/interrupt_manager.c"
  3289 ;; Parameters:    Size  Location     Type
  3290 ;;		None
  3291 ;; Auto vars:     Size  Location     Type
  3292 ;;		None
  3293 ;; Return value:  Size  Location     Type
  3294 ;;                  1    wreg      void 
  3295 ;; Registers used:
  3296 ;;		None
  3297 ;; Tracked objects:
  3298 ;;		On entry : 0/0
  3299 ;;		On exit  : 0/0
  3300 ;;		Unchanged: 0/0
  3301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3302 ;;      Params:         0       0       0       0       0
  3303 ;;      Locals:         0       0       0       0       0
  3304 ;;      Temps:          0       0       0       0       0
  3305 ;;      Totals:         0       0       0       0       0
  3306 ;;Total ram usage:        0 bytes
  3307 ;; Hardware stack levels used:    1
  3308 ;; Hardware stack levels required when called:    3
  3309 ;; This function calls:
  3310 ;;		Nothing
  3311 ;; This function is called by:
  3312 ;;		_SYSTEM_Initialize
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           
  3316                           
  3317                           ;psect for function _INTERRUPT_Initialize
  3318  0DA2                     _INTERRUPT_Initialize:	
  3319                           
  3320                           ;interrupt_manager.c: 11: (INTCONbits.GIE = 1);
  3321                           
  3322                           ;incstack = 0
  3323                           ; Regs used in _INTERRUPT_Initialize: []
  3324  0DA2  178B               	bsf	11,7	;volatile
  3325                           
  3326                           ;interrupt_manager.c: 14: (INTCONbits.PEIE = 1);
  3327  0DA3  170B               	bsf	11,6	;volatile
  3328  0DA4  0008               	return
  3329  0DA5                     __end_of_INTERRUPT_Initialize:	
  3330                           
  3331                           	psect	text10
  3332  07BC                     __ptext10:	
  3333 ;; *************** function _ProcessPetitModbus *****************
  3334 ;; Defined at:
  3335 ;;		line 337 in file "modbus/PetitModbus.c"
  3336 ;; Parameters:    Size  Location     Type
  3337 ;;		None
  3338 ;; Auto vars:     Size  Location     Type
  3339 ;;		None
  3340 ;; Return value:  Size  Location     Type
  3341 ;;                  1    wreg      void 
  3342 ;; Registers used:
  3343 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 0/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3349 ;;      Params:         0       0       0       0       0
  3350 ;;      Locals:         0       0       0       0       0
  3351 ;;      Temps:          0       0       0       0       0
  3352 ;;      Totals:         0       0       0       0       0
  3353 ;;Total ram usage:        0 bytes
  3354 ;; Hardware stack levels used:    1
  3355 ;; Hardware stack levels required when called:    7
  3356 ;; This function calls:
  3357 ;;		_HandleMPetitodbusWriteMultipleRegistersSlaveReadback
  3358 ;;		_HandlePetitModbusReadHoldingRegistersSlaveReadback
  3359 ;;		_HandlePetitModbusWriteSingleRegisterSlaveReadback
  3360 ;;		_Petit_RxDataAvailable
  3361 ;;		_Petit_RxRTU
  3362 ;;		_Petit_TxRTU
  3363 ;; This function is called by:
  3364 ;;		_main
  3365 ;; This function uses a non-reentrant model
  3366 ;;
  3367                           
  3368                           
  3369                           ;psect for function _ProcessPetitModbus
  3370  07BC                     _ProcessPetitModbus:	
  3371                           
  3372                           ;PetitModbus.c: 339: if (Petit_Tx_State != PETIT_RXTX_IDLE && Petit_Tx_State != PETIT_RX
      +                          TX_WAIT_ANSWER){
  3373                           
  3374                           ;incstack = 0
  3375                           ; Regs used in _ProcessPetitModbus: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3376  07BC  1283               	bcf	3,5	;RP0=0, select bank0
  3377  07BD  1303               	bcf	3,6	;RP1=0, select bank0
  3378  07BE  0844               	movf	_Petit_Tx_State,w
  3379  07BF  1903               	btfsc	3,2
  3380  07C0  2FCA               	goto	l153
  3381  07C1  3003               	movlw	3
  3382  07C2  0644               	xorwf	_Petit_Tx_State,w
  3383  07C3  1903               	btfsc	3,2
  3384  07C4  2FCA               	goto	l153
  3385                           
  3386                           ;PetitModbus.c: 341: Petit_TxRTU();
  3387  07C5  120A  118A  25CD  120A  118A  	fcall	_Petit_TxRTU
  3388  07CA                     l153:	
  3389                           
  3390                           ;PetitModbus.c: 343: }
  3391                           ;PetitModbus.c: 345: Petit_RxRTU();
  3392  07CA  120A  118A  267D  120A  118A  	fcall	_Petit_RxRTU
  3393                           
  3394                           ;PetitModbus.c: 347: if (Petit_RxDataAvailable())
  3395  07CF  120A  158A  25C1  120A  118A  	fcall	_Petit_RxDataAvailable
  3396  07D4  3A00               	xorlw	0
  3397  07D5  1903               	skipnz
  3398  07D6  0008               	return
  3399  07D7  2FE8               	goto	l2485
  3400  07D8                     l2475:	
  3401                           ;PetitModbus.c: 350: {
  3402                           ;PetitModbus.c: 352: case 3: { HandlePetitModbusReadHoldingRegistersSlaveReadback(); bre
      +                          ak; }
  3403                           
  3404                           ;PetitModbus.c: 348: {
  3405                           ;PetitModbus.c: 349: switch (Petit_Rx_Data.Function)
  3406                           
  3407  07D8  120A  118A  24E2   	fcall	_HandlePetitModbusReadHoldingRegistersSlaveReadback
  3408  07DB  0008               	return
  3409  07DC                     l2477:	
  3410                           ;PetitModbus.c: 355: case 6: { HandlePetitModbusWriteSingleRegisterSlaveReadback(); brea
      +                          k; }
  3411                           
  3412  07DC  120A  158A  278A   	fcall	_HandlePetitModbusWriteSingleRegisterSlaveReadback
  3413  07DF  0008               	return
  3414  07E0                     l2479:	
  3415                           ;PetitModbus.c: 358: case 16: { HandleMPetitodbusWriteMultipleRegistersSlaveReadback(); 
      +                          break; }
  3416                           
  3417  07E0  120A  118A  272C   	fcall	_HandleMPetitodbusWriteMultipleRegistersSlaveReadback
  3418  07E3  0008               	return
  3419  07E4                     l2481:	
  3420                           ;PetitModbus.c: 360: default: { Petit_Tx_State = PETIT_RXTX_IDLE; break; }
  3421                           
  3422  07E4  1283               	bcf	3,5	;RP0=0, select bank0
  3423  07E5  1303               	bcf	3,6	;RP1=0, select bank0
  3424  07E6  01C4               	clrf	_Petit_Tx_State
  3425                           
  3426                           ;PetitModbus.c: 361: }
  3427  07E7  0008               	return
  3428  07E8                     l2485:	
  3429  07E8  1283               	bcf	3,5	;RP0=0, select bank0
  3430  07E9  1303               	bcf	3,6	;RP1=0, select bank0
  3431  07EA  0821               	movf	_Petit_Rx_Data+1,w
  3432                           
  3433                           ; Switch size 1, requested type "space"
  3434                           ; Number of cases is 3, Range of values is 3 to 16
  3435                           ; switch strategies available:
  3436                           ; Name         Instructions Cycles
  3437                           ; simple_byte           10     6 (average)
  3438                           ; direct_byte           53    11 (fixed)
  3439                           ; jumptable            263     9 (fixed)
  3440                           ;	Chosen strategy is simple_byte
  3441  07EB  3A03               	xorlw	3	; case 3
  3442  07EC  1903               	skipnz
  3443  07ED  2FD8               	goto	l2475
  3444  07EE  3A05               	xorlw	5	; case 6
  3445  07EF  1903               	skipnz
  3446  07F0  2FDC               	goto	l2477
  3447  07F1  3A16               	xorlw	22	; case 16
  3448  07F2  1903               	skipnz
  3449  07F3  2FE0               	goto	l2479
  3450  07F4  2FE4               	goto	l2481
  3451  07F5  0008               	return
  3452  07F6                     __end_of_ProcessPetitModbus:	
  3453                           
  3454                           	psect	text11
  3455  05CD                     __ptext11:	
  3456 ;; *************** function _Petit_TxRTU *****************
  3457 ;; Defined at:
  3458 ;;		line 303 in file "modbus/PetitModbus.c"
  3459 ;; Parameters:    Size  Location     Type
  3460 ;;		None
  3461 ;; Auto vars:     Size  Location     Type
  3462 ;;		None
  3463 ;; Return value:  Size  Location     Type
  3464 ;;                  1    wreg      void 
  3465 ;; Registers used:
  3466 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3467 ;; Tracked objects:
  3468 ;;		On entry : 0/0
  3469 ;;		On exit  : 0/0
  3470 ;;		Unchanged: 0/0
  3471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3472 ;;      Params:         0       0       0       0       0
  3473 ;;      Locals:         0       0       0       0       0
  3474 ;;      Temps:          0       1       0       0       0
  3475 ;;      Totals:         0       1       0       0       0
  3476 ;;Total ram usage:        1 bytes
  3477 ;; Hardware stack levels used:    1
  3478 ;; Hardware stack levels required when called:    6
  3479 ;; This function calls:
  3480 ;;		_Petit_CRC16
  3481 ;;		_Petit_DoSlaveTX
  3482 ;; This function is called by:
  3483 ;;		_ProcessPetitModbus
  3484 ;; This function uses a non-reentrant model
  3485 ;;
  3486                           
  3487                           
  3488                           ;psect for function _Petit_TxRTU
  3489  05CD                     _Petit_TxRTU:	
  3490                           
  3491                           ;PetitModbus.c: 305: Petit_Tx_CRC16 =0xFFFF;
  3492                           
  3493                           ;incstack = 0
  3494                           ; Regs used in _Petit_TxRTU: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3495  05CD  30FF               	movlw	255
  3496  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  3497  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  3498  05D0  00EA               	movwf	_Petit_Tx_CRC16
  3499  05D1  30FF               	movlw	255
  3500  05D2  00EB               	movwf	_Petit_Tx_CRC16+1
  3501                           
  3502                           ;PetitModbus.c: 306: Petit_Tx_Buf_Size =0;
  3503  05D3  01BE               	clrf	_Petit_Tx_Buf_Size
  3504  05D4  01BF               	clrf	_Petit_Tx_Buf_Size+1
  3505                           
  3506                           ;PetitModbus.c: 307: Petit_Tx_Buf[Petit_Tx_Buf_Size++] =Petit_Tx_Data.Address;
  3507  05D5  1683               	bsf	3,5	;RP0=1, select bank1
  3508  05D6  1303               	bcf	3,6	;RP1=0, select bank1
  3509  05D7  0820               	movf	_Petit_Tx_Data^(0+128),w
  3510  05D8  1283               	bcf	3,5	;RP0=0, select bank0
  3511  05D9  1303               	bcf	3,6	;RP1=0, select bank0
  3512  05DA  00D5               	movwf	??_Petit_TxRTU
  3513  05DB  083E               	movf	_Petit_Tx_Buf_Size,w
  3514  05DC  3E10               	addlw	(low (_Petit_Tx_Buf| (0+256)))& (0+255)
  3515  05DD  0084               	movwf	4
  3516  05DE  0855               	movf	??_Petit_TxRTU,w
  3517  05DF  1783               	bsf	3,7	;select IRP bank2
  3518  05E0  0080               	movwf	0
  3519  05E1  3001               	movlw	1
  3520  05E2  07BE               	addwf	_Petit_Tx_Buf_Size,f
  3521  05E3  1803               	skipnc
  3522  05E4  0ABF               	incf	_Petit_Tx_Buf_Size+1,f
  3523  05E5  3000               	movlw	0
  3524  05E6  07BF               	addwf	_Petit_Tx_Buf_Size+1,f
  3525                           
  3526                           ;PetitModbus.c: 308: Petit_CRC16(Petit_Tx_Data.Address, &Petit_Tx_CRC16);
  3527  05E7  306A               	movlw	(low (_Petit_Tx_CRC16| 0))& (0+255)
  3528  05E8  00D5               	movwf	??_Petit_TxRTU
  3529  05E9  0855               	movf	??_Petit_TxRTU,w
  3530  05EA  00CA               	movwf	Petit_CRC16@CRC
  3531  05EB  1683               	bsf	3,5	;RP0=1, select bank1
  3532  05EC  1303               	bcf	3,6	;RP1=0, select bank1
  3533  05ED  0820               	movf	_Petit_Tx_Data^(0+128),w
  3534  05EE  120A  158A  2732  120A  118A  	fcall	_Petit_CRC16
  3535                           
  3536                           ;PetitModbus.c: 309: Petit_Tx_Buf[Petit_Tx_Buf_Size++] =Petit_Tx_Data.Function;
  3537  05F3  1683               	bsf	3,5	;RP0=1, select bank1
  3538  05F4  1303               	bcf	3,6	;RP1=0, select bank1
  3539  05F5  0821               	movf	(_Petit_Tx_Data^(0+128)+1),w
  3540  05F6  1283               	bcf	3,5	;RP0=0, select bank0
  3541  05F7  1303               	bcf	3,6	;RP1=0, select bank0
  3542  05F8  00D5               	movwf	??_Petit_TxRTU
  3543  05F9  083E               	movf	_Petit_Tx_Buf_Size,w
  3544  05FA  3E10               	addlw	(low (_Petit_Tx_Buf| (0+256)))& (0+255)
  3545  05FB  0084               	movwf	4
  3546  05FC  0855               	movf	??_Petit_TxRTU,w
  3547  05FD  1783               	bsf	3,7	;select IRP bank2
  3548  05FE  0080               	movwf	0
  3549  05FF  3001               	movlw	1
  3550  0600  07BE               	addwf	_Petit_Tx_Buf_Size,f
  3551  0601  1803               	skipnc
  3552  0602  0ABF               	incf	_Petit_Tx_Buf_Size+1,f
  3553  0603  3000               	movlw	0
  3554  0604  07BF               	addwf	_Petit_Tx_Buf_Size+1,f
  3555                           
  3556                           ;PetitModbus.c: 310: Petit_CRC16(Petit_Tx_Data.Function, &Petit_Tx_CRC16);
  3557  0605  306A               	movlw	(low (_Petit_Tx_CRC16| 0))& (0+255)
  3558  0606  00D5               	movwf	??_Petit_TxRTU
  3559  0607  0855               	movf	??_Petit_TxRTU,w
  3560  0608  00CA               	movwf	Petit_CRC16@CRC
  3561  0609  1683               	bsf	3,5	;RP0=1, select bank1
  3562  060A  1303               	bcf	3,6	;RP1=0, select bank1
  3563  060B  0821               	movf	(_Petit_Tx_Data^(0+128)+1),w
  3564  060C  120A  158A  2732  120A  118A  	fcall	_Petit_CRC16
  3565                           
  3566                           ;PetitModbus.c: 312: for(Petit_Tx_Current=0; Petit_Tx_Current < Petit_Tx_Data.DataLen; P
      +                          etit_Tx_Current++)
  3567  0611  1283               	bcf	3,5	;RP0=0, select bank0
  3568  0612  1303               	bcf	3,6	;RP1=0, select bank0
  3569  0613  01C0               	clrf	_Petit_Tx_Current
  3570  0614  01C1               	clrf	_Petit_Tx_Current+1
  3571  0615                     l2333:	
  3572  0615  1683               	bsf	3,5	;RP0=1, select bank1
  3573  0616  1303               	bcf	3,6	;RP1=0, select bank1
  3574  0617  083B               	movf	((_Petit_Tx_Data+1)^(0+128)+26),w
  3575  0618  1283               	bcf	3,5	;RP0=0, select bank0
  3576  0619  1303               	bcf	3,6	;RP1=0, select bank0
  3577  061A  0241               	subwf	_Petit_Tx_Current+1,w
  3578  061B  1D03               	skipz
  3579  061C  2E23               	goto	u1715
  3580  061D  1683               	bsf	3,5	;RP0=1, select bank1
  3581  061E  1303               	bcf	3,6	;RP1=0, select bank1
  3582  061F  083A               	movf	(_Petit_Tx_Data^(0+128)+26),w
  3583  0620  1283               	bcf	3,5	;RP0=0, select bank0
  3584  0621  1303               	bcf	3,6	;RP1=0, select bank0
  3585  0622  0240               	subwf	_Petit_Tx_Current,w
  3586  0623                     u1715:	
  3587  0623  1803               	btfsc	3,0
  3588  0624  2E4E               	goto	l2335
  3589                           
  3590                           ;PetitModbus.c: 313: {
  3591                           ;PetitModbus.c: 314: Petit_Tx_Buf[Petit_Tx_Buf_Size++]=Petit_Tx_Data.DataBuf[Petit_Tx_Cu
      +                          rrent];
  3592  0625  0840               	movf	_Petit_Tx_Current,w
  3593  0626  3EA2               	addlw	(low ((_Petit_Tx_Data| 0+2)))& (0+255)
  3594  0627  0084               	movwf	4
  3595  0628  1383               	bcf	3,7	;select IRP bank1
  3596  0629  0800               	movf	0,w
  3597  062A  00D5               	movwf	??_Petit_TxRTU
  3598  062B  083E               	movf	_Petit_Tx_Buf_Size,w
  3599  062C  3E10               	addlw	(low (_Petit_Tx_Buf| (0+256)))& (0+255)
  3600  062D  0084               	movwf	4
  3601  062E  0855               	movf	??_Petit_TxRTU,w
  3602  062F  1783               	bsf	3,7	;select IRP bank2
  3603  0630  0080               	movwf	0
  3604  0631  3001               	movlw	1
  3605  0632  07BE               	addwf	_Petit_Tx_Buf_Size,f
  3606  0633  1803               	skipnc
  3607  0634  0ABF               	incf	_Petit_Tx_Buf_Size+1,f
  3608  0635  3000               	movlw	0
  3609  0636  07BF               	addwf	_Petit_Tx_Buf_Size+1,f
  3610                           
  3611                           ;PetitModbus.c: 315: Petit_CRC16(Petit_Tx_Data.DataBuf[Petit_Tx_Current], &Petit_Tx_CRC1
      +                          6);
  3612  0637  306A               	movlw	(low (_Petit_Tx_CRC16| 0))& (0+255)
  3613  0638  00D5               	movwf	??_Petit_TxRTU
  3614  0639  0855               	movf	??_Petit_TxRTU,w
  3615  063A  00CA               	movwf	Petit_CRC16@CRC
  3616  063B  0840               	movf	_Petit_Tx_Current,w
  3617  063C  3EA2               	addlw	(low ((_Petit_Tx_Data| 0+2)))& (0+255)
  3618  063D  0084               	movwf	4
  3619  063E  1383               	bcf	3,7	;select IRP bank1
  3620  063F  0800               	movf	0,w
  3621  0640  120A  158A  2732  120A  118A  	fcall	_Petit_CRC16
  3622  0645  3001               	movlw	1
  3623  0646  1283               	bcf	3,5	;RP0=0, select bank0
  3624  0647  1303               	bcf	3,6	;RP1=0, select bank0
  3625  0648  07C0               	addwf	_Petit_Tx_Current,f
  3626  0649  1803               	skipnc
  3627  064A  0AC1               	incf	_Petit_Tx_Current+1,f
  3628  064B  3000               	movlw	0
  3629  064C  07C1               	addwf	_Petit_Tx_Current+1,f
  3630  064D  2E15               	goto	l2333
  3631  064E                     l2335:	
  3632                           
  3633                           ;PetitModbus.c: 316: }
  3634                           ;PetitModbus.c: 318: Petit_Tx_Buf[Petit_Tx_Buf_Size++] = Petit_Tx_CRC16 & 0x00FF;
  3635  064E  086A               	movf	_Petit_Tx_CRC16,w
  3636  064F  00D5               	movwf	??_Petit_TxRTU
  3637  0650  083E               	movf	_Petit_Tx_Buf_Size,w
  3638  0651  3E10               	addlw	(low (_Petit_Tx_Buf| (0+256)))& (0+255)
  3639  0652  0084               	movwf	4
  3640  0653  0855               	movf	??_Petit_TxRTU,w
  3641  0654  1783               	bsf	3,7	;select IRP bank2
  3642  0655  0080               	movwf	0
  3643  0656  3001               	movlw	1
  3644  0657  07BE               	addwf	_Petit_Tx_Buf_Size,f
  3645  0658  1803               	skipnc
  3646  0659  0ABF               	incf	_Petit_Tx_Buf_Size+1,f
  3647  065A  3000               	movlw	0
  3648  065B  07BF               	addwf	_Petit_Tx_Buf_Size+1,f
  3649                           
  3650                           ;PetitModbus.c: 319: Petit_Tx_Buf[Petit_Tx_Buf_Size++] =(Petit_Tx_CRC16 & 0xFF00) >> 8;
  3651  065C  086B               	movf	_Petit_Tx_CRC16+1,w
  3652  065D  00D5               	movwf	??_Petit_TxRTU
  3653  065E  083E               	movf	_Petit_Tx_Buf_Size,w
  3654  065F  3E10               	addlw	(low (_Petit_Tx_Buf| (0+256)))& (0+255)
  3655  0660  0084               	movwf	4
  3656  0661  0855               	movf	??_Petit_TxRTU,w
  3657  0662  0080               	movwf	0
  3658  0663  3001               	movlw	1
  3659  0664  07BE               	addwf	_Petit_Tx_Buf_Size,f
  3660  0665  1803               	skipnc
  3661  0666  0ABF               	incf	_Petit_Tx_Buf_Size+1,f
  3662  0667  3000               	movlw	0
  3663  0668  07BF               	addwf	_Petit_Tx_Buf_Size+1,f
  3664                           
  3665                           ;PetitModbus.c: 321: Petit_DoSlaveTX();
  3666  0669  120A  158A  2609  120A  118A  	fcall	_Petit_DoSlaveTX
  3667                           
  3668                           ;PetitModbus.c: 323: if (Petit_Tx_Data.Address == 0){
  3669  066E  1683               	bsf	3,5	;RP0=1, select bank1
  3670  066F  1303               	bcf	3,6	;RP1=0, select bank1
  3671  0670  0820               	movf	_Petit_Tx_Data^(0+128),w
  3672  0671  1D03               	btfss	3,2
  3673  0672  2E77               	goto	l2347
  3674                           
  3675                           ;PetitModbus.c: 324: Petit_Tx_State =PETIT_RXTX_IDLE;
  3676  0673  1283               	bcf	3,5	;RP0=0, select bank0
  3677  0674  1303               	bcf	3,6	;RP1=0, select bank0
  3678  0675  01C4               	clrf	_Petit_Tx_State
  3679                           
  3680                           ;PetitModbus.c: 325: }
  3681  0676  0008               	return
  3682  0677                     l2347:	
  3683                           
  3684                           ;PetitModbus.c: 326: else{
  3685                           ;PetitModbus.c: 327: Petit_Tx_State =PETIT_RXTX_WAIT_ANSWER;
  3686  0677  3003               	movlw	3
  3687  0678  1283               	bcf	3,5	;RP0=0, select bank0
  3688  0679  00D5               	movwf	??_Petit_TxRTU
  3689  067A  0855               	movf	??_Petit_TxRTU,w
  3690  067B  00C4               	movwf	_Petit_Tx_State
  3691  067C  0008               	return
  3692  067D                     __end_of_Petit_TxRTU:	
  3693                           
  3694                           	psect	text12
  3695  0E09                     __ptext12:	
  3696 ;; *************** function _Petit_DoSlaveTX *****************
  3697 ;; Defined at:
  3698 ;;		line 126 in file "modbus/PetitModbus.c"
  3699 ;; Parameters:    Size  Location     Type
  3700 ;;		None
  3701 ;; Auto vars:     Size  Location     Type
  3702 ;;		None
  3703 ;; Return value:  Size  Location     Type
  3704 ;;                  1    wreg      unsigned char 
  3705 ;; Registers used:
  3706 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3707 ;; Tracked objects:
  3708 ;;		On entry : 0/0
  3709 ;;		On exit  : 0/0
  3710 ;;		Unchanged: 0/0
  3711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3712 ;;      Params:         0       0       0       0       0
  3713 ;;      Locals:         0       0       0       0       0
  3714 ;;      Temps:          0       0       0       0       0
  3715 ;;      Totals:         0       0       0       0       0
  3716 ;;Total ram usage:        0 bytes
  3717 ;; Hardware stack levels used:    1
  3718 ;; Hardware stack levels required when called:    5
  3719 ;; This function calls:
  3720 ;;		_PetitModBus_UART_String
  3721 ;; This function is called by:
  3722 ;;		_Petit_TxRTU
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726                           
  3727                           ;psect for function _Petit_DoSlaveTX
  3728  0E09                     _Petit_DoSlaveTX:	
  3729                           
  3730                           ;PetitModbus.c: 128: PetitModBus_UART_String(Petit_Tx_Buf,Petit_Tx_Buf_Size);
  3731                           
  3732                           ;incstack = 0
  3733                           ; Regs used in _Petit_DoSlaveTX: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3734  0E09  1283               	bcf	3,5	;RP0=0, select bank0
  3735  0E0A  1303               	bcf	3,6	;RP1=0, select bank0
  3736  0E0B  083F               	movf	_Petit_Tx_Buf_Size+1,w
  3737  0E0C  00CC               	movwf	PetitModBus_UART_String@Length+1
  3738  0E0D  083E               	movf	_Petit_Tx_Buf_Size,w
  3739  0E0E  00CB               	movwf	PetitModBus_UART_String@Length
  3740  0E0F  3010               	movlw	(low (_Petit_Tx_Buf| (0+256)))& (0+255)
  3741  0E10  120A  118A  20D8   	fcall	_PetitModBus_UART_String
  3742                           
  3743                           ;PetitModbus.c: 130: Petit_Tx_Buf_Size = 0;
  3744  0E13  1283               	bcf	3,5	;RP0=0, select bank0
  3745  0E14  1303               	bcf	3,6	;RP1=0, select bank0
  3746  0E15  01BE               	clrf	_Petit_Tx_Buf_Size
  3747  0E16  01BF               	clrf	_Petit_Tx_Buf_Size+1
  3748  0E17  0008               	return
  3749  0E18                     __end_of_Petit_DoSlaveTX:	
  3750                           ;PetitModbus.c: 131: return 1;
  3751                           ;	Return value of _Petit_DoSlaveTX is never used
  3752                           
  3753                           
  3754                           	psect	text13
  3755  00D8                     __ptext13:	
  3756 ;; *************** function _PetitModBus_UART_String *****************
  3757 ;; Defined at:
  3758 ;;		line 40 in file "modbus/PetitModbusPort.c"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;  s               1    wreg     PTR unsigned char 
  3761 ;;		 -> Petit_Tx_Buf(24), 
  3762 ;;  Length          2    1[BANK0 ] unsigned int 
  3763 ;; Auto vars:     Size  Location     Type
  3764 ;;  s               1    4[BANK0 ] PTR unsigned char 
  3765 ;;		 -> Petit_Tx_Buf(24), 
  3766 ;;  DummyCounter    2    5[BANK0 ] unsigned short 
  3767 ;; Return value:  Size  Location     Type
  3768 ;;                  1    wreg      unsigned char 
  3769 ;; Registers used:
  3770 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3771 ;; Tracked objects:
  3772 ;;		On entry : 0/0
  3773 ;;		On exit  : 0/0
  3774 ;;		Unchanged: 0/0
  3775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3776 ;;      Params:         0       2       0       0       0
  3777 ;;      Locals:         0       3       0       0       0
  3778 ;;      Temps:          0       1       0       0       0
  3779 ;;      Totals:         0       6       0       0       0
  3780 ;;Total ram usage:        6 bytes
  3781 ;; Hardware stack levels used:    1
  3782 ;; Hardware stack levels required when called:    4
  3783 ;; This function calls:
  3784 ;;		_PetitModBus_UART_Putch
  3785 ;; This function is called by:
  3786 ;;		_Petit_DoSlaveTX
  3787 ;; This function uses a non-reentrant model
  3788 ;;
  3789                           
  3790                           
  3791                           ;psect for function _PetitModBus_UART_String
  3792  00D8                     _PetitModBus_UART_String:	
  3793                           
  3794                           ;incstack = 0
  3795                           ; Regs used in _PetitModBus_UART_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3796                           ;PetitModBus_UART_String@s stored from wreg
  3797  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  3798  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  3799  00DA  00CE               	movwf	PetitModBus_UART_String@s
  3800                           
  3801                           ;PetitModbusPort.c: 42: unsigned short DummyCounter;
  3802                           ;PetitModbusPort.c: 44: for(DummyCounter=0;DummyCounter<Length;DummyCounter++){
  3803  00DB  01CF               	clrf	PetitModBus_UART_String@DummyCounter
  3804  00DC  01D0               	clrf	PetitModBus_UART_String@DummyCounter+1
  3805  00DD                     l2107:	
  3806  00DD  084C               	movf	PetitModBus_UART_String@Length+1,w
  3807  00DE  0250               	subwf	PetitModBus_UART_String@DummyCounter+1,w
  3808  00DF  1D03               	skipz
  3809  00E0  28E3               	goto	u1545
  3810  00E1  084B               	movf	PetitModBus_UART_String@Length,w
  3811  00E2  024F               	subwf	PetitModBus_UART_String@DummyCounter,w
  3812  00E3                     u1545:	
  3813  00E3  1803               	btfsc	3,0
  3814  00E4  0008               	return
  3815                           
  3816                           ;PetitModbusPort.c: 45: PetitModBus_UART_Putch(s[DummyCounter]);
  3817  00E5  084F               	movf	PetitModBus_UART_String@DummyCounter,w
  3818  00E6  074E               	addwf	PetitModBus_UART_String@s,w
  3819  00E7  00CD               	movwf	??_PetitModBus_UART_String
  3820  00E8  084D               	movf	??_PetitModBus_UART_String,w
  3821  00E9  0084               	movwf	4
  3822  00EA  1783               	bsf	3,7	;select IRP bank2
  3823  00EB  0800               	movf	0,w
  3824  00EC  120A  158A  25D5  120A  118A  	fcall	_PetitModBus_UART_Putch
  3825  00F1  3001               	movlw	1
  3826  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  3827  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  3828  00F4  07CF               	addwf	PetitModBus_UART_String@DummyCounter,f
  3829  00F5  1803               	skipnc
  3830  00F6  0AD0               	incf	PetitModBus_UART_String@DummyCounter+1,f
  3831  00F7  3000               	movlw	0
  3832  00F8  07D0               	addwf	PetitModBus_UART_String@DummyCounter+1,f
  3833  00F9  28DD               	goto	l2107
  3834  00FA                     __end_of_PetitModBus_UART_String:	
  3835                           ;PetitModbusPort.c: 46: }
  3836                           ;PetitModbusPort.c: 48: return 1;
  3837                           ;	Return value of _PetitModBus_UART_String is never used
  3838                           
  3839                           
  3840                           	psect	text14
  3841  0DD5                     __ptext14:	
  3842 ;; *************** function _PetitModBus_UART_Putch *****************
  3843 ;; Defined at:
  3844 ;;		line 23 in file "modbus/PetitModbusPort.c"
  3845 ;; Parameters:    Size  Location     Type
  3846 ;;  c               1    wreg     unsigned char 
  3847 ;; Auto vars:     Size  Location     Type
  3848 ;;  c               1    0[BANK0 ] unsigned char 
  3849 ;; Return value:  Size  Location     Type
  3850 ;;                  1    wreg      void 
  3851 ;; Registers used:
  3852 ;;		wreg
  3853 ;; Tracked objects:
  3854 ;;		On entry : 0/0
  3855 ;;		On exit  : 0/0
  3856 ;;		Unchanged: 0/0
  3857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3858 ;;      Params:         0       0       0       0       0
  3859 ;;      Locals:         0       1       0       0       0
  3860 ;;      Temps:          0       0       0       0       0
  3861 ;;      Totals:         0       1       0       0       0
  3862 ;;Total ram usage:        1 bytes
  3863 ;; Hardware stack levels used:    1
  3864 ;; Hardware stack levels required when called:    3
  3865 ;; This function calls:
  3866 ;;		Nothing
  3867 ;; This function is called by:
  3868 ;;		_PetitModBus_UART_String
  3869 ;; This function uses a non-reentrant model
  3870 ;;
  3871                           
  3872                           
  3873                           ;psect for function _PetitModBus_UART_Putch
  3874  0DD5                     _PetitModBus_UART_Putch:	
  3875                           
  3876                           ;incstack = 0
  3877                           ; Regs used in _PetitModBus_UART_Putch: [wreg]
  3878                           ;PetitModBus_UART_Putch@c stored from wreg
  3879  0DD5  1283               	bcf	3,5	;RP0=0, select bank0
  3880  0DD6  1303               	bcf	3,6	;RP1=0, select bank0
  3881  0DD7  00CA               	movwf	PetitModBus_UART_Putch@c
  3882  0DD8                     l224:	
  3883                           ;PetitModbusPort.c: 25: while(!TXSTAbits.TRMT);
  3884                           
  3885  0DD8  1683               	bsf	3,5	;RP0=1, select bank1
  3886  0DD9  1303               	bcf	3,6	;RP1=0, select bank1
  3887  0DDA  1C98               	btfss	24,1	;volatile
  3888  0DDB  2DD8               	goto	l224
  3889                           
  3890                           ;PetitModbusPort.c: 26: TXREG = c;
  3891  0DDC  1283               	bcf	3,5	;RP0=0, select bank0
  3892  0DDD  1303               	bcf	3,6	;RP1=0, select bank0
  3893  0DDE  084A               	movf	PetitModBus_UART_Putch@c,w
  3894  0DDF  0099               	movwf	25	;volatile
  3895  0DE0  0008               	return
  3896  0DE1                     __end_of_PetitModBus_UART_Putch:	
  3897                           
  3898                           	psect	text15
  3899  067D                     __ptext15:	
  3900 ;; *************** function _Petit_RxRTU *****************
  3901 ;; Defined at:
  3902 ;;		line 246 in file "modbus/PetitModbus.c"
  3903 ;; Parameters:    Size  Location     Type
  3904 ;;		None
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;  Petit_i         1   14[BANK0 ] unsigned char 
  3907 ;;  Petit_Receiv    1   13[BANK0 ] unsigned char 
  3908 ;; Return value:  Size  Location     Type
  3909 ;;                  1    wreg      void 
  3910 ;; Registers used:
  3911 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3912 ;; Tracked objects:
  3913 ;;		On entry : 0/0
  3914 ;;		On exit  : 0/0
  3915 ;;		Unchanged: 0/0
  3916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3917 ;;      Params:         0       0       0       0       0
  3918 ;;      Locals:         0       2       0       0       0
  3919 ;;      Temps:          0       2       0       0       0
  3920 ;;      Totals:         0       4       0       0       0
  3921 ;;Total ram usage:        4 bytes
  3922 ;; Hardware stack levels used:    1
  3923 ;; Hardware stack levels required when called:    4
  3924 ;; This function calls:
  3925 ;;		_CheckPetitModbusBufferComplete
  3926 ;;		_Petit_CRC16
  3927 ;;		_Petit_CheckRxTimeout
  3928 ;; This function is called by:
  3929 ;;		_ProcessPetitModbus
  3930 ;; This function uses a non-reentrant model
  3931 ;;
  3932                           
  3933                           
  3934                           ;psect for function _Petit_RxRTU
  3935  067D                     _Petit_RxRTU:	
  3936                           
  3937                           ;PetitModbus.c: 248: unsigned char Petit_i;
  3938                           ;PetitModbus.c: 249: unsigned char Petit_ReceiveBufferControl=0;
  3939                           
  3940                           ;incstack = 0
  3941                           ; Regs used in _Petit_RxRTU: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3942  067D  1283               	bcf	3,5	;RP0=0, select bank0
  3943  067E  1303               	bcf	3,6	;RP1=0, select bank0
  3944  067F  01D7               	clrf	Petit_RxRTU@Petit_ReceiveBufferControl
  3945                           
  3946                           ;PetitModbus.c: 251: Petit_ReceiveBufferControl =CheckPetitModbusBufferComplete();
  3947  0680  120A  158A  26EB  120A  118A  	fcall	_CheckPetitModbusBufferComplete
  3948  0685  1283               	bcf	3,5	;RP0=0, select bank0
  3949  0686  1303               	bcf	3,6	;RP1=0, select bank0
  3950  0687  00D5               	movwf	??_Petit_RxRTU
  3951  0688  0855               	movf	??_Petit_RxRTU,w
  3952  0689  00D7               	movwf	Petit_RxRTU@Petit_ReceiveBufferControl
  3953                           
  3954                           ;PetitModbus.c: 253: if(Petit_ReceiveBufferControl==3)
  3955  068A  3003               	movlw	3
  3956  068B  0657               	xorwf	Petit_RxRTU@Petit_ReceiveBufferControl,w
  3957  068C  1D03               	btfss	3,2
  3958  068D  2EDD               	goto	l2285
  3959                           
  3960                           ;PetitModbus.c: 254: {
  3961                           ;PetitModbus.c: 255: Petit_Rx_Data.Address =PetitReceiveBuffer[0];
  3962  068E  1683               	bsf	3,5	;RP0=1, select bank1
  3963  068F  1303               	bcf	3,6	;RP1=0, select bank1
  3964  0690  083C               	movf	_PetitReceiveBuffer^(0+128),w	;volatile
  3965  0691  1283               	bcf	3,5	;RP0=0, select bank0
  3966  0692  1303               	bcf	3,6	;RP1=0, select bank0
  3967  0693  00D5               	movwf	??_Petit_RxRTU
  3968  0694  0855               	movf	??_Petit_RxRTU,w
  3969  0695  00A0               	movwf	_Petit_Rx_Data
  3970                           
  3971                           ;PetitModbus.c: 256: Petit_Rx_CRC16 = 0xffff;
  3972  0696  30FF               	movlw	255
  3973  0697  00E8               	movwf	_Petit_Rx_CRC16
  3974  0698  30FF               	movlw	255
  3975  0699  00E9               	movwf	_Petit_Rx_CRC16+1
  3976                           
  3977                           ;PetitModbus.c: 257: Petit_CRC16(Petit_Rx_Data.Address, &Petit_Rx_CRC16);
  3978  069A  3068               	movlw	(low (_Petit_Rx_CRC16| 0))& (0+255)
  3979  069B  00D5               	movwf	??_Petit_RxRTU
  3980  069C  0855               	movf	??_Petit_RxRTU,w
  3981  069D  00CA               	movwf	Petit_CRC16@CRC
  3982  069E  0820               	movf	_Petit_Rx_Data,w
  3983  069F  120A  158A  2732  120A  118A  	fcall	_Petit_CRC16
  3984                           
  3985                           ;PetitModbus.c: 258: Petit_Rx_Data.Function =PetitReceiveBuffer[1];
  3986  06A4  1683               	bsf	3,5	;RP0=1, select bank1
  3987  06A5  1303               	bcf	3,6	;RP1=0, select bank1
  3988  06A6  083D               	movf	(_PetitReceiveBuffer^(0+128)+1),w	;volatile
  3989  06A7  1283               	bcf	3,5	;RP0=0, select bank0
  3990  06A8  1303               	bcf	3,6	;RP1=0, select bank0
  3991  06A9  00D5               	movwf	??_Petit_RxRTU
  3992  06AA  0855               	movf	??_Petit_RxRTU,w
  3993  06AB  00A1               	movwf	_Petit_Rx_Data+1
  3994                           
  3995                           ;PetitModbus.c: 259: Petit_CRC16(Petit_Rx_Data.Function, &Petit_Rx_CRC16);
  3996  06AC  3068               	movlw	(low (_Petit_Rx_CRC16| 0))& (0+255)
  3997  06AD  00D5               	movwf	??_Petit_RxRTU
  3998  06AE  0855               	movf	??_Petit_RxRTU,w
  3999  06AF  00CA               	movwf	Petit_CRC16@CRC
  4000  06B0  0821               	movf	_Petit_Rx_Data+1,w
  4001  06B1  120A  158A  2732  120A  118A  	fcall	_Petit_CRC16
  4002                           
  4003                           ;PetitModbus.c: 261: Petit_Rx_Data.DataLen=0;
  4004  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  4005  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  4006  06B8  01BA               	clrf	_Petit_Rx_Data+26
  4007  06B9  01BB               	clrf	_Petit_Rx_Data+27
  4008                           
  4009                           ;PetitModbus.c: 263: for(Petit_i=2;Petit_i<PetitReceiveCounter;Petit_i++)
  4010  06BA  3002               	movlw	2
  4011  06BB  00D5               	movwf	??_Petit_RxRTU
  4012  06BC  0855               	movf	??_Petit_RxRTU,w
  4013  06BD  00D8               	movwf	Petit_RxRTU@Petit_i
  4014  06BE                     l2279:	
  4015  06BE  0875               	movf	_PetitReceiveCounter,w	;volatile
  4016  06BF  0258               	subwf	Petit_RxRTU@Petit_i,w
  4017  06C0  1803               	btfsc	3,0
  4018  06C1  2ED8               	goto	l2281
  4019                           
  4020                           ;PetitModbus.c: 264: Petit_Rx_Data.DataBuf[Petit_Rx_Data.DataLen++]=PetitReceiveBuffer[P
      +                          etit_i];
  4021  06C2  0858               	movf	Petit_RxRTU@Petit_i,w
  4022  06C3  3EBC               	addlw	(low (_PetitReceiveBuffer| 0))& (0+255)
  4023  06C4  0084               	movwf	4
  4024  06C5  1383               	bcf	3,7	;select IRP bank1
  4025  06C6  0800               	movf	0,w
  4026  06C7  00D5               	movwf	??_Petit_RxRTU
  4027  06C8  083A               	movf	_Petit_Rx_Data+26,w
  4028  06C9  3E22               	addlw	(low ((_Petit_Rx_Data| 0+2)))& (0+255)
  4029  06CA  0084               	movwf	4
  4030  06CB  0855               	movf	??_Petit_RxRTU,w
  4031  06CC  0080               	movwf	0
  4032  06CD  3001               	movlw	1
  4033  06CE  07BA               	addwf	_Petit_Rx_Data+26,f
  4034  06CF  1803               	skipnc
  4035  06D0  0ABB               	incf	_Petit_Rx_Data+27,f
  4036  06D1  3000               	movlw	0
  4037  06D2  07BB               	addwf	_Petit_Rx_Data+27,f
  4038  06D3  3001               	movlw	1
  4039  06D4  00D5               	movwf	??_Petit_RxRTU
  4040  06D5  0855               	movf	??_Petit_RxRTU,w
  4041  06D6  07D8               	addwf	Petit_RxRTU@Petit_i,f
  4042  06D7  2EBE               	goto	l2279
  4043  06D8                     l2281:	
  4044                           
  4045                           ;PetitModbus.c: 266: Petit_Rx_State =PETIT_RXTX_DATABUF;
  4046  06D8  3002               	movlw	2
  4047  06D9  00D5               	movwf	??_Petit_RxRTU
  4048  06DA  0855               	movf	??_Petit_RxRTU,w
  4049  06DB  00C3               	movwf	_Petit_Rx_State
  4050                           
  4051                           ;PetitModbus.c: 268: PetitReceiveCounter=0;
  4052  06DC  01F5               	clrf	_PetitReceiveCounter	;volatile
  4053  06DD                     l2285:	
  4054                           
  4055                           ;PetitModbus.c: 269: }
  4056                           ;PetitModbus.c: 271: Petit_CheckRxTimeout();
  4057  06DD  120A  158A  25CA  120A  118A  	fcall	_Petit_CheckRxTimeout
  4058                           
  4059                           ;PetitModbus.c: 274: if ((Petit_Rx_State == PETIT_RXTX_DATABUF) && (Petit_Rx_Data.DataLe
      +                          n >= 2))
  4060  06E2  3002               	movlw	2
  4061  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  4062  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  4063  06E5  0643               	xorwf	_Petit_Rx_State,w
  4064  06E6  1D03               	btfss	3,2
  4065  06E7  0008               	return
  4066  06E8  3000               	movlw	0
  4067  06E9  023B               	subwf	_Petit_Rx_Data+27,w
  4068  06EA  3002               	movlw	2
  4069  06EB  1903               	skipnz
  4070  06EC  023A               	subwf	_Petit_Rx_Data+26,w
  4071  06ED  1C03               	skipc
  4072  06EE  0008               	return
  4073                           
  4074                           ;PetitModbus.c: 275: {
  4075                           ;PetitModbus.c: 277: Petit_Rx_Data.DataLen -= 2;
  4076  06EF  3002               	movlw	2
  4077  06F0  02BA               	subwf	_Petit_Rx_Data+26,f
  4078  06F1  3000               	movlw	0
  4079  06F2  1C03               	skipc
  4080  06F3  03BB               	decf	_Petit_Rx_Data+27,f
  4081  06F4  02BB               	subwf	_Petit_Rx_Data+27,f
  4082                           
  4083                           ;PetitModbus.c: 278: for (Petit_i = 0; Petit_i < Petit_Rx_Data.DataLen; ++Petit_i)
  4084  06F5  01D8               	clrf	Petit_RxRTU@Petit_i
  4085  06F6                     l2299:	
  4086  06F6  0858               	movf	Petit_RxRTU@Petit_i,w
  4087  06F7  00D5               	movwf	??_Petit_RxRTU
  4088  06F8  01D6               	clrf	??_Petit_RxRTU+1
  4089  06F9  083B               	movf	_Petit_Rx_Data+27,w
  4090  06FA  0256               	subwf	??_Petit_RxRTU+1,w
  4091  06FB  1D03               	skipz
  4092  06FC  2EFF               	goto	u1695
  4093  06FD  083A               	movf	_Petit_Rx_Data+26,w
  4094  06FE  0255               	subwf	??_Petit_RxRTU,w
  4095  06FF                     u1695:	
  4096  06FF  1803               	btfsc	3,0
  4097  0700  2F16               	goto	l2301
  4098                           
  4099                           ;PetitModbus.c: 279: {
  4100                           ;PetitModbus.c: 280: Petit_CRC16(Petit_Rx_Data.DataBuf[Petit_i], &Petit_Rx_CRC16);
  4101  0701  3068               	movlw	(low (_Petit_Rx_CRC16| 0))& (0+255)
  4102  0702  00D5               	movwf	??_Petit_RxRTU
  4103  0703  0855               	movf	??_Petit_RxRTU,w
  4104  0704  00CA               	movwf	Petit_CRC16@CRC
  4105  0705  0858               	movf	Petit_RxRTU@Petit_i,w
  4106  0706  3E22               	addlw	(low ((_Petit_Rx_Data| 0+2)))& (0+255)
  4107  0707  0084               	movwf	4
  4108  0708  1383               	bcf	3,7	;select IRP bank0
  4109  0709  0800               	movf	0,w
  4110  070A  120A  158A  2732  120A  118A  	fcall	_Petit_CRC16
  4111  070F  3001               	movlw	1
  4112  0710  1283               	bcf	3,5	;RP0=0, select bank0
  4113  0711  1303               	bcf	3,6	;RP1=0, select bank0
  4114  0712  00D5               	movwf	??_Petit_RxRTU
  4115  0713  0855               	movf	??_Petit_RxRTU,w
  4116  0714  07D8               	addwf	Petit_RxRTU@Petit_i,f
  4117  0715  2EF6               	goto	l2299
  4118  0716                     l2301:	
  4119                           
  4120                           ;PetitModbus.c: 281: }
  4121                           ;PetitModbus.c: 283: if (((unsigned int) Petit_Rx_Data.DataBuf[Petit_Rx_Data.DataLen] + 
      +                          ((unsigned int) Petit_Rx_Data.DataBuf[Petit_Rx_Data.DataLen + 1] << 8)) == Petit_Rx_CRC1
      +                          6)
  4122  0716  083A               	movf	_Petit_Rx_Data+26,w
  4123  0717  3E22               	addlw	(low ((_Petit_Rx_Data| 0+2)))& (0+255)
  4124  0718  0084               	movwf	4
  4125  0719  1383               	bcf	3,7	;select IRP bank0
  4126  071A  0800               	movf	0,w
  4127  071B  00D5               	movwf	??_Petit_RxRTU
  4128  071C  083A               	movf	_Petit_Rx_Data+26,w
  4129  071D  3E01               	addlw	1
  4130  071E  3E22               	addlw	(low ((_Petit_Rx_Data| 0+2)))& (0+255)
  4131  071F  0084               	movwf	4
  4132  0720  0869               	movf	_Petit_Rx_CRC16+1,w
  4133  0721  0600               	xorwf	0,w
  4134  0722  1D03               	skipz
  4135  0723  2F26               	goto	u1705
  4136  0724  0868               	movf	_Petit_Rx_CRC16,w
  4137  0725  0655               	xorwf	??_Petit_RxRTU,w
  4138  0726                     u1705:	
  4139  0726  1D03               	skipz
  4140  0727  2F2A               	goto	l2305
  4141                           
  4142                           ;PetitModbus.c: 284: {
  4143                           ;PetitModbus.c: 286: Petit_Rx_Data_Available = 1;
  4144  0728  01F4               	clrf	_Petit_Rx_Data_Available
  4145  0729  0AF4               	incf	_Petit_Rx_Data_Available,f
  4146  072A                     l2305:	
  4147                           
  4148                           ;PetitModbus.c: 287: }
  4149                           ;PetitModbus.c: 289: Petit_Rx_State = PETIT_RXTX_IDLE;
  4150  072A  01C3               	clrf	_Petit_Rx_State
  4151  072B  0008               	return
  4152  072C                     __end_of_Petit_RxRTU:	
  4153                           
  4154                           	psect	text16
  4155  0DCA                     __ptext16:	
  4156 ;; *************** function _Petit_CheckRxTimeout *****************
  4157 ;; Defined at:
  4158 ;;		line 176 in file "modbus/PetitModbus.c"
  4159 ;; Parameters:    Size  Location     Type
  4160 ;;		None
  4161 ;; Auto vars:     Size  Location     Type
  4162 ;;		None
  4163 ;; Return value:  Size  Location     Type
  4164 ;;                  1    wreg      unsigned char 
  4165 ;; Registers used:
  4166 ;;		wreg, status,2
  4167 ;; Tracked objects:
  4168 ;;		On entry : 0/0
  4169 ;;		On exit  : 0/0
  4170 ;;		Unchanged: 0/0
  4171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4172 ;;      Params:         0       0       0       0       0
  4173 ;;      Locals:         0       0       0       0       0
  4174 ;;      Temps:          0       0       0       0       0
  4175 ;;      Totals:         0       0       0       0       0
  4176 ;;Total ram usage:        0 bytes
  4177 ;; Hardware stack levels used:    1
  4178 ;; Hardware stack levels required when called:    3
  4179 ;; This function calls:
  4180 ;;		Nothing
  4181 ;; This function is called by:
  4182 ;;		_Petit_RxRTU
  4183 ;; This function uses a non-reentrant model
  4184 ;;
  4185                           
  4186                           
  4187                           ;psect for function _Petit_CheckRxTimeout
  4188  0DCA                     _Petit_CheckRxTimeout:	
  4189                           
  4190                           ;PetitModbus.c: 179: if (PetitModbusTimerValue>= 2)
  4191                           
  4192                           ;incstack = 0
  4193                           ; Regs used in _Petit_CheckRxTimeout: [wreg+status,2]
  4194  0DCA  3000               	movlw	0
  4195  0DCB  0271               	subwf	_PetitModbusTimerValue+1,w	;volatile
  4196  0DCC  3002               	movlw	2
  4197  0DCD  1903               	skipnz
  4198  0DCE  0270               	subwf	_PetitModbusTimerValue,w	;volatile
  4199  0DCF  1C03               	skipc
  4200  0DD0  0008               	return
  4201                           
  4202                           ;PetitModbus.c: 180: {
  4203                           ;PetitModbus.c: 181: PetitModbusTimerValue =0;
  4204  0DD1  01F0               	clrf	_PetitModbusTimerValue	;volatile
  4205  0DD2  01F1               	clrf	_PetitModbusTimerValue+1	;volatile
  4206                           
  4207                           ;PetitModbus.c: 182: PetitReceiveCounter =0;
  4208  0DD3  01F5               	clrf	_PetitReceiveCounter	;volatile
  4209                           
  4210                           ;PetitModbus.c: 183: return 1;
  4211                           ;	Return value of _Petit_CheckRxTimeout is never used
  4212  0DD4  0008               	return
  4213  0DD5                     __end_of_Petit_CheckRxTimeout:	
  4214                           ;PetitModbus.c: 184: }
  4215                           ;PetitModbus.c: 186: return 0;
  4216                           ;	Return value of _Petit_CheckRxTimeout is never used
  4217                           
  4218                           
  4219                           	psect	text17
  4220  0F32                     __ptext17:	
  4221 ;; *************** function _Petit_CRC16 *****************
  4222 ;; Defined at:
  4223 ;;		line 95 in file "modbus/PetitModbus.c"
  4224 ;; Parameters:    Size  Location     Type
  4225 ;;  Data            1    wreg     const unsigned char 
  4226 ;;  CRC             1    0[BANK0 ] PTR unsigned int 
  4227 ;;		 -> Petit_Tx_CRC16(2), Petit_Rx_CRC16(2), 
  4228 ;; Auto vars:     Size  Location     Type
  4229 ;;  Data            1    5[BANK0 ] const unsigned char 
  4230 ;;  uchCRCLo        2    9[BANK0 ] unsigned int 
  4231 ;;  uchCRCHi        2    7[BANK0 ] unsigned int 
  4232 ;;  uIndex          1    6[BANK0 ] unsigned char 
  4233 ;; Return value:  Size  Location     Type
  4234 ;;                  1    wreg      void 
  4235 ;; Registers used:
  4236 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  4237 ;; Tracked objects:
  4238 ;;		On entry : 0/0
  4239 ;;		On exit  : 0/0
  4240 ;;		Unchanged: 0/0
  4241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4242 ;;      Params:         0       1       0       0       0
  4243 ;;      Locals:         0       6       0       0       0
  4244 ;;      Temps:          0       4       0       0       0
  4245 ;;      Totals:         0      11       0       0       0
  4246 ;;Total ram usage:       11 bytes
  4247 ;; Hardware stack levels used:    1
  4248 ;; Hardware stack levels required when called:    3
  4249 ;; This function calls:
  4250 ;;		Nothing
  4251 ;; This function is called by:
  4252 ;;		_Petit_RxRTU
  4253 ;;		_Petit_TxRTU
  4254 ;; This function uses a non-reentrant model
  4255 ;;
  4256                           
  4257                           
  4258                           ;psect for function _Petit_CRC16
  4259  0F32                     _Petit_CRC16:	
  4260                           
  4261                           ;incstack = 0
  4262                           ; Regs used in _Petit_CRC16: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  4263                           ;Petit_CRC16@Data stored from wreg
  4264  0F32  1283               	bcf	3,5	;RP0=0, select bank0
  4265  0F33  1303               	bcf	3,6	;RP1=0, select bank0
  4266  0F34  00CF               	movwf	Petit_CRC16@Data
  4267                           
  4268                           ;PetitModbus.c: 97: unsigned int uchCRCHi = *CRC >> 8;
  4269  0F35  084A               	movf	Petit_CRC16@CRC,w
  4270  0F36  0084               	movwf	4
  4271  0F37  1383               	bcf	3,7	;select IRP bank0
  4272  0F38  0800               	movf	0,w
  4273  0F39  00CB               	movwf	??_Petit_CRC16
  4274  0F3A  0A84               	incf	4,f
  4275  0F3B  0800               	movf	0,w
  4276  0F3C  00CC               	movwf	??_Petit_CRC16+1
  4277  0F3D  084C               	movf	??_Petit_CRC16+1,w
  4278  0F3E  00CB               	movwf	??_Petit_CRC16
  4279  0F3F  01CC               	clrf	??_Petit_CRC16+1
  4280  0F40  084B               	movf	??_Petit_CRC16,w
  4281  0F41  00D1               	movwf	Petit_CRC16@uchCRCHi
  4282  0F42  084C               	movf	??_Petit_CRC16+1,w
  4283  0F43  00D2               	movwf	Petit_CRC16@uchCRCHi+1
  4284                           
  4285                           ;PetitModbus.c: 98: unsigned int uchCRCLo = *CRC & 0x00FF;
  4286  0F44  084A               	movf	Petit_CRC16@CRC,w
  4287  0F45  0084               	movwf	4
  4288  0F46  0800               	movf	0,w
  4289  0F47  00CB               	movwf	??_Petit_CRC16
  4290  0F48  0A84               	incf	4,f
  4291  0F49  0800               	movf	0,w
  4292  0F4A  00CC               	movwf	??_Petit_CRC16+1
  4293  0F4B  30FF               	movlw	255
  4294  0F4C  054B               	andwf	??_Petit_CRC16,w
  4295  0F4D  00D3               	movwf	Petit_CRC16@uchCRCLo
  4296  0F4E  3000               	movlw	0
  4297  0F4F  054C               	andwf	??_Petit_CRC16+1,w
  4298  0F50  00D4               	movwf	Petit_CRC16@uchCRCLo+1
  4299                           
  4300                           ;PetitModbus.c: 99: unsigned char uIndex ;
  4301                           ;PetitModbus.c: 101: uIndex = uchCRCLo ^ Data;
  4302  0F51  084F               	movf	Petit_CRC16@Data,w
  4303  0F52  0653               	xorwf	Petit_CRC16@uchCRCLo,w
  4304  0F53  00CB               	movwf	??_Petit_CRC16
  4305  0F54  084B               	movf	??_Petit_CRC16,w
  4306  0F55  00D0               	movwf	Petit_CRC16@uIndex
  4307                           
  4308                           ;PetitModbus.c: 102: uchCRCLo = uchCRCHi ^ auchCRCHi[uIndex] ;
  4309  0F56  0850               	movf	Petit_CRC16@uIndex,w
  4310  0F57  3E12               	addlw	low (_auchCRCHi| (0+32768))
  4311  0F58  0084               	movwf	4
  4312  0F59  3082               	movlw	high (_auchCRCHi| (0+32768))
  4313  0F5A  1803               	skipnc
  4314  0F5B  3E01               	addlw	1
  4315  0F5C  00FF               	movwf	127
  4316  0F5D  120A  118A  2100  120A  158A  	fcall	stringtab
  4317  0F62  00CB               	movwf	??_Petit_CRC16
  4318  0F63  0851               	movf	Petit_CRC16@uchCRCHi,w
  4319  0F64  064B               	xorwf	??_Petit_CRC16,w
  4320  0F65  00D3               	movwf	Petit_CRC16@uchCRCLo
  4321  0F66  0852               	movf	Petit_CRC16@uchCRCHi+1,w
  4322  0F67  00D4               	movwf	Petit_CRC16@uchCRCLo+1
  4323                           
  4324                           ;PetitModbus.c: 103: uchCRCHi = auchCRCLo[uIndex] ;
  4325  0F68  0850               	movf	Petit_CRC16@uIndex,w
  4326  0F69  3E12               	addlw	low (_auchCRCLo| (0+32768))
  4327  0F6A  0084               	movwf	4
  4328  0F6B  3081               	movlw	high (_auchCRCLo| (0+32768))
  4329  0F6C  1803               	skipnc
  4330  0F6D  3E01               	addlw	1
  4331  0F6E  00FF               	movwf	127
  4332  0F6F  120A  118A  2100   	fcall	stringtab
  4333  0F72  00CB               	movwf	??_Petit_CRC16
  4334  0F73  01CC               	clrf	??_Petit_CRC16+1
  4335  0F74  084B               	movf	??_Petit_CRC16,w
  4336  0F75  00D1               	movwf	Petit_CRC16@uchCRCHi
  4337  0F76  084C               	movf	??_Petit_CRC16+1,w
  4338  0F77  00D2               	movwf	Petit_CRC16@uchCRCHi+1
  4339                           
  4340                           ;PetitModbus.c: 104: *CRC = (unsigned int)(uchCRCHi << 8 | uchCRCLo) ;
  4341  0F78  0851               	movf	Petit_CRC16@uchCRCHi,w
  4342  0F79  00CC               	movwf	??_Petit_CRC16+1
  4343  0F7A  01CB               	clrf	??_Petit_CRC16
  4344  0F7B  0853               	movf	Petit_CRC16@uchCRCLo,w
  4345  0F7C  044B               	iorwf	??_Petit_CRC16,w
  4346  0F7D  00CD               	movwf	??_Petit_CRC16+2
  4347  0F7E  0854               	movf	Petit_CRC16@uchCRCLo+1,w
  4348  0F7F  044C               	iorwf	??_Petit_CRC16+1,w
  4349  0F80  00CE               	movwf	??_Petit_CRC16+3
  4350  0F81  084A               	movf	Petit_CRC16@CRC,w
  4351  0F82  0084               	movwf	4
  4352  0F83  084D               	movf	??_Petit_CRC16+2,w
  4353  0F84  1383               	bcf	3,7	;select IRP bank0
  4354  0F85  0080               	movwf	0
  4355  0F86  0A84               	incf	4,f
  4356  0F87  084E               	movf	??_Petit_CRC16+3,w
  4357  0F88  0080               	movwf	0
  4358  0F89  0008               	return
  4359  0F8A                     __end_of_Petit_CRC16:	
  4360                           
  4361                           	psect	text18
  4362  0EEB                     __ptext18:	
  4363 ;; *************** function _CheckPetitModbusBufferComplete *****************
  4364 ;; Defined at:
  4365 ;;		line 198 in file "modbus/PetitModbus.c"
  4366 ;; Parameters:    Size  Location     Type
  4367 ;;		None
  4368 ;; Auto vars:     Size  Location     Type
  4369 ;;  PetitExpecte    2    2[BANK0 ] int 
  4370 ;; Return value:  Size  Location     Type
  4371 ;;                  1    wreg      unsigned char 
  4372 ;; Registers used:
  4373 ;;		wreg, status,2, status,0
  4374 ;; Tracked objects:
  4375 ;;		On entry : 0/0
  4376 ;;		On exit  : 0/0
  4377 ;;		Unchanged: 0/0
  4378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4379 ;;      Params:         0       0       0       0       0
  4380 ;;      Locals:         0       2       0       0       0
  4381 ;;      Temps:          0       2       0       0       0
  4382 ;;      Totals:         0       4       0       0       0
  4383 ;;Total ram usage:        4 bytes
  4384 ;; Hardware stack levels used:    1
  4385 ;; Hardware stack levels required when called:    3
  4386 ;; This function calls:
  4387 ;;		Nothing
  4388 ;; This function is called by:
  4389 ;;		_Petit_RxRTU
  4390 ;; This function uses a non-reentrant model
  4391 ;;
  4392                           
  4393                           
  4394                           ;psect for function _CheckPetitModbusBufferComplete
  4395  0EEB                     _CheckPetitModbusBufferComplete:	
  4396                           
  4397                           ;PetitModbus.c: 200: int PetitExpectedReceiveCount=0;
  4398                           
  4399                           ;incstack = 0
  4400                           ; Regs used in _CheckPetitModbusBufferComplete: [wreg+status,2+status,0]
  4401  0EEB  1283               	bcf	3,5	;RP0=0, select bank0
  4402  0EEC  1303               	bcf	3,6	;RP1=0, select bank0
  4403  0EED  01CC               	clrf	CheckPetitModbusBufferComplete@PetitExpectedReceiveCount
  4404  0EEE  01CD               	clrf	CheckPetitModbusBufferComplete@PetitExpectedReceiveCount+1
  4405                           
  4406                           ;PetitModbus.c: 202: if(PetitReceiveCounter>4)
  4407  0EEF  3005               	movlw	5
  4408  0EF0  0275               	subwf	_PetitReceiveCounter,w	;volatile
  4409  0EF1  1C03               	skipc
  4410  0EF2  2F20               	goto	l2203
  4411                           
  4412                           ;PetitModbus.c: 203: {
  4413                           ;PetitModbus.c: 204: if(PetitReceiveBuffer[0] > 0)
  4414  0EF3  1683               	bsf	3,5	;RP0=1, select bank1
  4415  0EF4  1303               	bcf	3,6	;RP1=0, select bank1
  4416  0EF5  083C               	movf	_PetitReceiveBuffer^(0+128),w	;volatile
  4417  0EF6  1903               	btfsc	3,2
  4418  0EF7  2F1D               	goto	l2197
  4419                           
  4420                           ;PetitModbus.c: 205: {
  4421                           ;PetitModbus.c: 206: if( PetitReceiveBuffer[1]==0x06 || PetitReceiveBuffer[1]==0x10)
  4422  0EF8  3006               	movlw	6
  4423  0EF9  063D               	xorwf	(_PetitReceiveBuffer^(0+128)+1),w	;volatile
  4424  0EFA  1903               	btfsc	3,2
  4425  0EFB  2F00               	goto	l2185
  4426  0EFC  3010               	movlw	16
  4427  0EFD  063D               	xorwf	(_PetitReceiveBuffer^(0+128)+1),w	;volatile
  4428  0EFE  1D03               	btfss	3,2
  4429  0EFF  2F06               	goto	l2187
  4430  0F00                     l2185:	
  4431                           
  4432                           ;PetitModbus.c: 207: {
  4433                           ;PetitModbus.c: 208: PetitExpectedReceiveCount =8;
  4434  0F00  3008               	movlw	8
  4435  0F01  1283               	bcf	3,5	;RP0=0, select bank0
  4436  0F02  1303               	bcf	3,6	;RP1=0, select bank0
  4437  0F03  00CC               	movwf	CheckPetitModbusBufferComplete@PetitExpectedReceiveCount
  4438  0F04  3000               	movlw	0
  4439  0F05  2F18               	goto	L22
  4440  0F06                     l2187:	
  4441                           ;PetitModbus.c: 209: }
  4442                           
  4443                           
  4444                           ;PetitModbus.c: 210: else if(PetitReceiveBuffer[1]==0x03)
  4445  0F06  3003               	movlw	3
  4446  0F07  1683               	bsf	3,5	;RP0=1, select bank1
  4447  0F08  1303               	bcf	3,6	;RP1=0, select bank1
  4448  0F09  063D               	xorwf	(_PetitReceiveBuffer^(0+128)+1),w	;volatile
  4449  0F0A  1D03               	btfss	3,2
  4450  0F0B  2F1A               	goto	l2191
  4451                           
  4452                           ;PetitModbus.c: 211: {
  4453                           ;PetitModbus.c: 212: PetitExpectedReceiveCount=(PetitReceiveBuffer[2])+5;
  4454  0F0C  083E               	movf	(_PetitReceiveBuffer^(0+128)+2),w	;volatile
  4455  0F0D  3E05               	addlw	5
  4456  0F0E  1283               	bcf	3,5	;RP0=0, select bank0
  4457  0F0F  1303               	bcf	3,6	;RP1=0, select bank0
  4458  0F10  00CA               	movwf	??_CheckPetitModbusBufferComplete
  4459  0F11  3000               	movlw	0
  4460  0F12  1803               	skipnc
  4461  0F13  3001               	movlw	1
  4462  0F14  00CB               	movwf	??_CheckPetitModbusBufferComplete+1
  4463  0F15  084A               	movf	??_CheckPetitModbusBufferComplete,w
  4464  0F16  00CC               	movwf	CheckPetitModbusBufferComplete@PetitExpectedReceiveCount
  4465  0F17  084B               	movf	??_CheckPetitModbusBufferComplete+1,w
  4466  0F18                     L22:	
  4467  0F18  00CD               	movwf	CheckPetitModbusBufferComplete@PetitExpectedReceiveCount+1
  4468                           
  4469                           ;PetitModbus.c: 213: }
  4470  0F19  2F22               	goto	l2207
  4471  0F1A                     l2191:	
  4472                           
  4473                           ;PetitModbus.c: 214: else
  4474                           ;PetitModbus.c: 215: {
  4475                           ;PetitModbus.c: 216: PetitReceiveCounter=0;
  4476  0F1A  01F5               	clrf	_PetitReceiveCounter	;volatile
  4477                           
  4478                           ;PetitModbus.c: 217: return 0;
  4479  0F1B  3000               	movlw	0
  4480  0F1C  0008               	return
  4481  0F1D                     l2197:	
  4482                           ;PetitModbus.c: 218: }
  4483                           ;PetitModbus.c: 219: }
  4484                           
  4485                           
  4486                           ;PetitModbus.c: 220: else
  4487                           ;PetitModbus.c: 221: {
  4488                           ;PetitModbus.c: 222: PetitReceiveCounter=0;
  4489  0F1D  01F5               	clrf	_PetitReceiveCounter	;volatile
  4490                           
  4491                           ;PetitModbus.c: 223: return 1;
  4492  0F1E  3001               	movlw	1
  4493  0F1F  0008               	return
  4494  0F20                     l2203:	
  4495                           ;PetitModbus.c: 224: }
  4496                           ;PetitModbus.c: 225: }
  4497                           
  4498                           
  4499                           ;PetitModbus.c: 226: else
  4500                           ;PetitModbus.c: 227: return 2;
  4501  0F20  3002               	movlw	2
  4502  0F21  0008               	return
  4503  0F22                     l2207:	
  4504                           
  4505                           ;PetitModbus.c: 229: if(PetitReceiveCounter==PetitExpectedReceiveCount)
  4506  0F22  0875               	movf	_PetitReceiveCounter,w	;volatile
  4507  0F23  1283               	bcf	3,5	;RP0=0, select bank0
  4508  0F24  00CA               	movwf	??_CheckPetitModbusBufferComplete
  4509  0F25  01CB               	clrf	??_CheckPetitModbusBufferComplete+1
  4510  0F26  084D               	movf	CheckPetitModbusBufferComplete@PetitExpectedReceiveCount+1,w
  4511  0F27  064B               	xorwf	??_CheckPetitModbusBufferComplete+1,w
  4512  0F28  1D03               	skipz
  4513  0F29  2F2C               	goto	u1615
  4514  0F2A  084C               	movf	CheckPetitModbusBufferComplete@PetitExpectedReceiveCount,w
  4515  0F2B  064A               	xorwf	??_CheckPetitModbusBufferComplete,w
  4516  0F2C                     u1615:	
  4517  0F2C  1D03               	skipz
  4518  0F2D  2F30               	goto	l2213
  4519                           
  4520                           ;PetitModbus.c: 230: {
  4521                           ;PetitModbus.c: 231: return 3;
  4522  0F2E  3003               	movlw	3
  4523  0F2F  0008               	return
  4524  0F30                     l2213:	
  4525                           
  4526                           ;PetitModbus.c: 232: }
  4527                           ;PetitModbus.c: 234: return 2;
  4528  0F30  3002               	movlw	2
  4529  0F31  0008               	return
  4530  0F32                     __end_of_CheckPetitModbusBufferComplete:	
  4531                           
  4532                           	psect	text19
  4533  0DC1                     __ptext19:	
  4534 ;; *************** function _Petit_RxDataAvailable *****************
  4535 ;; Defined at:
  4536 ;;		line 160 in file "modbus/PetitModbus.c"
  4537 ;; Parameters:    Size  Location     Type
  4538 ;;		None
  4539 ;; Auto vars:     Size  Location     Type
  4540 ;;  Result          1    1[BANK0 ] unsigned char 
  4541 ;; Return value:  Size  Location     Type
  4542 ;;                  1    wreg      unsigned char 
  4543 ;; Registers used:
  4544 ;;		wreg, status,2
  4545 ;; Tracked objects:
  4546 ;;		On entry : 0/0
  4547 ;;		On exit  : 0/0
  4548 ;;		Unchanged: 0/0
  4549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4550 ;;      Params:         0       0       0       0       0
  4551 ;;      Locals:         0       1       0       0       0
  4552 ;;      Temps:          0       1       0       0       0
  4553 ;;      Totals:         0       2       0       0       0
  4554 ;;Total ram usage:        2 bytes
  4555 ;; Hardware stack levels used:    1
  4556 ;; Hardware stack levels required when called:    3
  4557 ;; This function calls:
  4558 ;;		Nothing
  4559 ;; This function is called by:
  4560 ;;		_ProcessPetitModbus
  4561 ;; This function uses a non-reentrant model
  4562 ;;
  4563                           
  4564                           
  4565                           ;psect for function _Petit_RxDataAvailable
  4566  0DC1                     _Petit_RxDataAvailable:	
  4567                           
  4568                           ;PetitModbus.c: 162: unsigned char Result = Petit_Rx_Data_Available;
  4569                           
  4570                           ;incstack = 0
  4571                           ; Regs used in _Petit_RxDataAvailable: [wreg+status,2]
  4572  0DC1  0874               	movf	_Petit_Rx_Data_Available,w
  4573  0DC2  1283               	bcf	3,5	;RP0=0, select bank0
  4574  0DC3  1303               	bcf	3,6	;RP1=0, select bank0
  4575  0DC4  00CA               	movwf	??_Petit_RxDataAvailable
  4576  0DC5  084A               	movf	??_Petit_RxDataAvailable,w
  4577  0DC6  00CB               	movwf	Petit_RxDataAvailable@Result
  4578                           
  4579                           ;PetitModbus.c: 164: Petit_Rx_Data_Available = 0;
  4580  0DC7  01F4               	clrf	_Petit_Rx_Data_Available
  4581                           
  4582                           ;PetitModbus.c: 166: return Result;
  4583  0DC8  084B               	movf	Petit_RxDataAvailable@Result,w
  4584  0DC9  0008               	return
  4585  0DCA                     __end_of_Petit_RxDataAvailable:	
  4586                           
  4587                           	psect	text20
  4588  0F8A                     __ptext20:	
  4589 ;; *************** function _HandlePetitModbusWriteSingleRegisterSlaveReadback *****************
  4590 ;; Defined at:
  4591 ;;		line 422 in file "modbus/PetitModbus.c"
  4592 ;; Parameters:    Size  Location     Type
  4593 ;;		None
  4594 ;; Auto vars:     Size  Location     Type
  4595 ;;		None
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  1    wreg      void 
  4598 ;; Registers used:
  4599 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4605 ;;      Params:         0       0       0       0       0
  4606 ;;      Locals:         0       0       0       0       0
  4607 ;;      Temps:          0       3       0       0       0
  4608 ;;      Totals:         0       3       0       0       0
  4609 ;;Total ram usage:        3 bytes
  4610 ;; Hardware stack levels used:    1
  4611 ;; Hardware stack levels required when called:    4
  4612 ;; This function calls:
  4613 ;;		___bmul
  4614 ;; This function is called by:
  4615 ;;		_ProcessPetitModbus
  4616 ;; This function uses a non-reentrant model
  4617 ;;
  4618                           
  4619                           
  4620                           ;psect for function _HandlePetitModbusWriteSingleRegisterSlaveReadback
  4621  0F8A                     _HandlePetitModbusWriteSingleRegisterSlaveReadback:	
  4622                           
  4623                           ;PetitModbus.c: 424: if(Petit_Tx_Data.Function == Petit_Rx_Data.Function){
  4624                           
  4625                           ;incstack = 0
  4626                           ; Regs used in _HandlePetitModbusWriteSingleRegisterSlaveReadback: [wreg-fsr0h+status,2+
      +                          status,0+pclath+cstack]
  4627  0F8A  1683               	bsf	3,5	;RP0=1, select bank1
  4628  0F8B  1303               	bcf	3,6	;RP1=0, select bank1
  4629  0F8C  0821               	movf	(_Petit_Tx_Data^(0+128)+1),w
  4630  0F8D  1283               	bcf	3,5	;RP0=0, select bank0
  4631  0F8E  1303               	bcf	3,6	;RP1=0, select bank0
  4632  0F8F  0621               	xorwf	_Petit_Rx_Data+1,w
  4633  0F90  1D03               	skipz
  4634  0F91  2FE8               	goto	l2395
  4635                           
  4636                           ;PetitModbus.c: 425: if(Petit_Tx_Data.Address == Petit_Rx_Data.Address){
  4637  0F92  1683               	bsf	3,5	;RP0=1, select bank1
  4638  0F93  1303               	bcf	3,6	;RP1=0, select bank1
  4639  0F94  0820               	movf	_Petit_Tx_Data^(0+128),w
  4640  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  4641  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  4642  0F97  0620               	xorwf	_Petit_Rx_Data,w
  4643  0F98  1D03               	skipz
  4644  0F99  2FFE               	goto	l2397
  4645                           
  4646                           ;PetitModbus.c: 426: if(Petit_Tx_Data.DataBuf[0] == Petit_Rx_Data.DataBuf[0]){
  4647  0F9A  1683               	bsf	3,5	;RP0=1, select bank1
  4648  0F9B  1303               	bcf	3,6	;RP1=0, select bank1
  4649  0F9C  0822               	movf	(_Petit_Tx_Data^(0+128)+2),w
  4650  0F9D  1283               	bcf	3,5	;RP0=0, select bank0
  4651  0F9E  1303               	bcf	3,6	;RP1=0, select bank0
  4652  0F9F  0622               	xorwf	_Petit_Rx_Data+2,w
  4653  0FA0  1D03               	skipz
  4654  0FA1  2FFE               	goto	l2397
  4655                           
  4656                           ;PetitModbus.c: 427: if(Petit_Tx_Data.DataBuf[1] == Petit_Rx_Data.DataBuf[1]){
  4657  0FA2  1683               	bsf	3,5	;RP0=1, select bank1
  4658  0FA3  1303               	bcf	3,6	;RP1=0, select bank1
  4659  0FA4  0823               	movf	(_Petit_Tx_Data^(0+128)+3),w
  4660  0FA5  1283               	bcf	3,5	;RP0=0, select bank0
  4661  0FA6  1303               	bcf	3,6	;RP1=0, select bank0
  4662  0FA7  0623               	xorwf	_Petit_Rx_Data+3,w
  4663  0FA8  1D03               	skipz
  4664  0FA9  2FFE               	goto	l2397
  4665                           
  4666                           ;PetitModbus.c: 428: if(Petit_Tx_Data.DataBuf[2] == Petit_Rx_Data.DataBuf[2]){
  4667  0FAA  1683               	bsf	3,5	;RP0=1, select bank1
  4668  0FAB  1303               	bcf	3,6	;RP1=0, select bank1
  4669  0FAC  0824               	movf	(_Petit_Tx_Data^(0+128)+4),w
  4670  0FAD  1283               	bcf	3,5	;RP0=0, select bank0
  4671  0FAE  1303               	bcf	3,6	;RP1=0, select bank0
  4672  0FAF  0624               	xorwf	_Petit_Rx_Data+4,w
  4673  0FB0  1D03               	skipz
  4674  0FB1  2FFE               	goto	l2397
  4675                           
  4676                           ;PetitModbus.c: 429: if(Petit_Tx_Data.DataBuf[3] == Petit_Rx_Data.DataBuf[3]){
  4677  0FB2  1683               	bsf	3,5	;RP0=1, select bank1
  4678  0FB3  1303               	bcf	3,6	;RP1=0, select bank1
  4679  0FB4  0825               	movf	(_Petit_Tx_Data^(0+128)+5),w
  4680  0FB5  1283               	bcf	3,5	;RP0=0, select bank0
  4681  0FB6  1303               	bcf	3,6	;RP1=0, select bank0
  4682  0FB7  0625               	xorwf	_Petit_Rx_Data+5,w
  4683  0FB8  1D03               	skipz
  4684  0FB9  2FFE               	goto	l2397
  4685                           
  4686                           ;PetitModbus.c: 430: MASTER_SLAVE_DATA[Petit_Rx_Data.Address].CommError = SLAVE_DATA_OK;
  4687  0FBA  3002               	movlw	2
  4688  0FBB  00CE               	movwf	??_HandlePetitModbusWriteSingleRegisterSlaveReadback
  4689  0FBC  3013               	movlw	19
  4690  0FBD  00CF               	movwf	??_HandlePetitModbusWriteSingleRegisterSlaveReadback+1
  4691  0FBE  084F               	movf	??_HandlePetitModbusWriteSingleRegisterSlaveReadback+1,w
  4692  0FBF  00CA               	movwf	___bmul@multiplicand
  4693  0FC0  0820               	movf	_Petit_Rx_Data,w
  4694  0FC1  120A  158A  264B  120A  158A  	fcall	___bmul
  4695  0FC6  1283               	bcf	3,5	;RP0=0, select bank0
  4696  0FC7  1303               	bcf	3,6	;RP1=0, select bank0
  4697  0FC8  0745               	addwf	_MASTER_SLAVE_DATA,w
  4698  0FC9  00D0               	movwf	??_HandlePetitModbusWriteSingleRegisterSlaveReadback+2
  4699  0FCA  0850               	movf	??_HandlePetitModbusWriteSingleRegisterSlaveReadback+2,w
  4700  0FCB  3E0E               	addlw	14
  4701  0FCC  0084               	movwf	4
  4702  0FCD  084E               	movf	??_HandlePetitModbusWriteSingleRegisterSlaveReadback,w
  4703  0FCE  1783               	bsf	3,7	;select IRP bank2
  4704  0FCF  0080               	movwf	0
  4705                           
  4706                           ;PetitModbus.c: 431: MASTER_SLAVE_DATA[Petit_Rx_Data.Address].ReceiveCounter += 1;
  4707  0FD0  3013               	movlw	19
  4708  0FD1  00CE               	movwf	??_HandlePetitModbusWriteSingleRegisterSlaveReadback
  4709  0FD2  084E               	movf	??_HandlePetitModbusWriteSingleRegisterSlaveReadback,w
  4710  0FD3  00CA               	movwf	___bmul@multiplicand
  4711  0FD4  0820               	movf	_Petit_Rx_Data,w
  4712  0FD5  120A  158A  264B  120A  158A  	fcall	___bmul
  4713  0FDA  1283               	bcf	3,5	;RP0=0, select bank0
  4714  0FDB  1303               	bcf	3,6	;RP1=0, select bank0
  4715  0FDC  0745               	addwf	_MASTER_SLAVE_DATA,w
  4716  0FDD  00CF               	movwf	??_HandlePetitModbusWriteSingleRegisterSlaveReadback+1
  4717  0FDE  084F               	movf	??_HandlePetitModbusWriteSingleRegisterSlaveReadback+1,w
  4718  0FDF  3E0F               	addlw	15
  4719  0FE0  0084               	movwf	4
  4720  0FE1  3001               	movlw	1
  4721  0FE2  1783               	bsf	3,7	;select IRP bank2
  4722  0FE3  0780               	addwf	0,f
  4723  0FE4  0A84               	incf	4,f
  4724  0FE5  1803               	skipnc
  4725  0FE6  0A80               	incf	0,f
  4726                           
  4727                           ;PetitModbus.c: 432: }
  4728                           ;PetitModbus.c: 433: }
  4729                           ;PetitModbus.c: 434: }
  4730                           ;PetitModbus.c: 435: }
  4731                           ;PetitModbus.c: 436: }
  4732                           ;PetitModbus.c: 437: }
  4733  0FE7  2FFE               	goto	l2397
  4734  0FE8                     l2395:	
  4735                           
  4736                           ;PetitModbus.c: 438: else{
  4737                           ;PetitModbus.c: 439: MASTER_SLAVE_DATA[Petit_Tx_Data.Address].CommError = SLAVE_DATA_NOK
      +                          ;
  4738  0FE8  3003               	movlw	3
  4739  0FE9  00CE               	movwf	??_HandlePetitModbusWriteSingleRegisterSlaveReadback
  4740  0FEA  3013               	movlw	19
  4741  0FEB  00CF               	movwf	??_HandlePetitModbusWriteSingleRegisterSlaveReadback+1
  4742  0FEC  084F               	movf	??_HandlePetitModbusWriteSingleRegisterSlaveReadback+1,w
  4743  0FED  00CA               	movwf	___bmul@multiplicand
  4744  0FEE  1683               	bsf	3,5	;RP0=1, select bank1
  4745  0FEF  1303               	bcf	3,6	;RP1=0, select bank1
  4746  0FF0  0820               	movf	_Petit_Tx_Data^(0+128),w
  4747  0FF1  120A  158A  264B   	fcall	___bmul
  4748  0FF4  1283               	bcf	3,5	;RP0=0, select bank0
  4749  0FF5  1303               	bcf	3,6	;RP1=0, select bank0
  4750  0FF6  0745               	addwf	_MASTER_SLAVE_DATA,w
  4751  0FF7  00D0               	movwf	??_HandlePetitModbusWriteSingleRegisterSlaveReadback+2
  4752  0FF8  0850               	movf	??_HandlePetitModbusWriteSingleRegisterSlaveReadback+2,w
  4753  0FF9  3E0E               	addlw	14
  4754  0FFA  0084               	movwf	4
  4755  0FFB  084E               	movf	??_HandlePetitModbusWriteSingleRegisterSlaveReadback,w
  4756  0FFC  1783               	bsf	3,7	;select IRP bank2
  4757  0FFD  0080               	movwf	0
  4758  0FFE                     l2397:	
  4759                           
  4760                           ;PetitModbus.c: 440: }
  4761                           ;PetitModbus.c: 442: Petit_Tx_State = PETIT_RXTX_IDLE;
  4762  0FFE  01C4               	clrf	_Petit_Tx_State
  4763  0FFF  0008               	return
  4764  1000                     __end_of_HandlePetitModbusWriteSingleRegisterSlaveReadback:	
  4765                           
  4766                           	psect	text21
  4767  04E2                     __ptext21:	
  4768 ;; *************** function _HandlePetitModbusReadHoldingRegistersSlaveReadback *****************
  4769 ;; Defined at:
  4770 ;;		line 452 in file "modbus/PetitModbus.c"
  4771 ;; Parameters:    Size  Location     Type
  4772 ;;		None
  4773 ;; Auto vars:     Size  Location     Type
  4774 ;;  BufReadIndex    2   18[BANK0 ] unsigned int 
  4775 ;;  Petit_Number    2   16[BANK0 ] unsigned int 
  4776 ;;  Petit_i         2   14[BANK0 ] unsigned int 
  4777 ;;  Petit_StartA    2   12[BANK0 ] unsigned int 
  4778 ;;  RegData         2   10[BANK0 ] unsigned int 
  4779 ;;  Petit_Number    2    8[BANK0 ] unsigned int 
  4780 ;; Return value:  Size  Location     Type
  4781 ;;                  1    wreg      void 
  4782 ;; Registers used:
  4783 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4784 ;; Tracked objects:
  4785 ;;		On entry : 0/0
  4786 ;;		On exit  : 0/0
  4787 ;;		Unchanged: 0/0
  4788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4789 ;;      Params:         0       0       0       0       0
  4790 ;;      Locals:         0      12       0       0       0
  4791 ;;      Temps:          0       4       0       0       0
  4792 ;;      Totals:         0      16       0       0       0
  4793 ;;Total ram usage:       16 bytes
  4794 ;; Hardware stack levels used:    1
  4795 ;; Hardware stack levels required when called:    4
  4796 ;; This function calls:
  4797 ;;		___bmul
  4798 ;; This function is called by:
  4799 ;;		_ProcessPetitModbus
  4800 ;; This function uses a non-reentrant model
  4801 ;;
  4802                           
  4803                           
  4804                           ;psect for function _HandlePetitModbusReadHoldingRegistersSlaveReadback
  4805  04E2                     _HandlePetitModbusReadHoldingRegistersSlaveReadback:	
  4806                           
  4807                           ;PetitModbus.c: 454: unsigned int Petit_StartAddress = 0;
  4808                           
  4809                           ;incstack = 0
  4810                           ; Regs used in _HandlePetitModbusReadHoldingRegistersSlaveReadback: [wreg-fsr0h+status,2
      +                          +status,0+btemp+1+pclath+cstack]
  4811  04E2  1283               	bcf	3,5	;RP0=0, select bank0
  4812  04E3  1303               	bcf	3,6	;RP1=0, select bank0
  4813  04E4  01D6               	clrf	HandlePetitModbusReadHoldingRegistersSlaveReadback@Petit_StartAddress
  4814  04E5  01D7               	clrf	HandlePetitModbusReadHoldingRegistersSlaveReadback@Petit_StartAddress+1
  4815                           
  4816                           ;PetitModbus.c: 455: unsigned int Petit_NumberOfRegistersBytes = 0;
  4817  04E6  01D2               	clrf	HandlePetitModbusReadHoldingRegistersSlaveReadback@Petit_NumberOfRegistersBytes
  4818  04E7  01D3               	clrf	HandlePetitModbusReadHoldingRegistersSlaveReadback@Petit_NumberOfRegistersBytes+1
  4819                           
  4820                           ;PetitModbus.c: 456: unsigned int Petit_NumberOfRegisters = 0;
  4821  04E8  01DA               	clrf	HandlePetitModbusReadHoldingRegistersSlaveReadback@Petit_NumberOfRegisters
  4822  04E9  01DB               	clrf	HandlePetitModbusReadHoldingRegistersSlaveReadback@Petit_NumberOfRegisters+1
  4823                           
  4824                           ;PetitModbus.c: 457: unsigned int Petit_i = 0;
  4825  04EA  01D8               	clrf	HandlePetitModbusReadHoldingRegistersSlaveReadback@Petit_i
  4826  04EB  01D9               	clrf	HandlePetitModbusReadHoldingRegistersSlaveReadback@Petit_i+1
  4827                           
  4828                           ;PetitModbus.c: 458: unsigned int BufReadIndex = 0;
  4829  04EC  01DC               	clrf	HandlePetitModbusReadHoldingRegistersSlaveReadback@BufReadIndex
  4830  04ED  01DD               	clrf	HandlePetitModbusReadHoldingRegistersSlaveReadback@BufReadIndex+1
  4831                           
  4832                           ;PetitModbus.c: 459: unsigned int RegData = 0;
  4833  04EE  01D4               	clrf	HandlePetitModbusReadHoldingRegistersSlaveReadback@RegData
  4834  04EF  01D5               	clrf	HandlePetitModbusReadHoldingRegistersSlaveReadback@RegData+1
  4835                           
  4836                           ;PetitModbus.c: 461: Petit_StartAddress = ((unsigned int) (Petit_Tx_Data.DataBuf[0]) << 
      +                          8) + (unsigned int) (Petit_Tx_Data.DataBuf[1]);
  4837  04F0  1683               	bsf	3,5	;RP0=1, select bank1
  4838  04F1  1303               	bcf	3,6	;RP1=0, select bank1
  4839  04F2  0822               	movf	(_Petit_Tx_Data^(0+128)+2),w
  4840  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  4841  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  4842  04F5  00CE               	movwf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback
  4843  04F6  01CF               	clrf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback+1
  4844  04F7  084E               	movf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback,w
  4845  04F8  00CF               	movwf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback+1
  4846  04F9  01CE               	clrf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback
  4847  04FA  1683               	bsf	3,5	;RP0=1, select bank1
  4848  04FB  1303               	bcf	3,6	;RP1=0, select bank1
  4849  04FC  0823               	movf	(_Petit_Tx_Data^(0+128)+3),w
  4850  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  4851  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  4852  04FF  074E               	addwf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback,w
  4853  0500  00D6               	movwf	HandlePetitModbusReadHoldingRegistersSlaveReadback@Petit_StartAddress
  4854  0501  3000               	movlw	0
  4855  0502  1803               	skipnc
  4856  0503  3001               	movlw	1
  4857  0504  074F               	addwf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback+1,w
  4858  0505  00D7               	movwf	HandlePetitModbusReadHoldingRegistersSlaveReadback@Petit_StartAddress+1
  4859                           
  4860                           ;PetitModbus.c: 462: Petit_NumberOfRegisters = ((unsigned int) (Petit_Tx_Data.DataBuf[2]
      +                          ) << 8) + (unsigned int) (Petit_Tx_Data.DataBuf[3]);
  4861  0506  1683               	bsf	3,5	;RP0=1, select bank1
  4862  0507  1303               	bcf	3,6	;RP1=0, select bank1
  4863  0508  0824               	movf	(_Petit_Tx_Data^(0+128)+4),w
  4864  0509  1283               	bcf	3,5	;RP0=0, select bank0
  4865  050A  1303               	bcf	3,6	;RP1=0, select bank0
  4866  050B  00CE               	movwf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback
  4867  050C  01CF               	clrf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback+1
  4868  050D  084E               	movf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback,w
  4869  050E  00CF               	movwf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback+1
  4870  050F  01CE               	clrf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback
  4871  0510  1683               	bsf	3,5	;RP0=1, select bank1
  4872  0511  1303               	bcf	3,6	;RP1=0, select bank1
  4873  0512  0825               	movf	(_Petit_Tx_Data^(0+128)+5),w
  4874  0513  1283               	bcf	3,5	;RP0=0, select bank0
  4875  0514  1303               	bcf	3,6	;RP1=0, select bank0
  4876  0515  074E               	addwf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback,w
  4877  0516  00DA               	movwf	HandlePetitModbusReadHoldingRegistersSlaveReadback@Petit_NumberOfRegisters
  4878  0517  3000               	movlw	0
  4879  0518  1803               	skipnc
  4880  0519  3001               	movlw	1
  4881  051A  074F               	addwf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback+1,w
  4882  051B  00DB               	movwf	HandlePetitModbusReadHoldingRegistersSlaveReadback@Petit_NumberOfRegisters+1
  4883                           
  4884                           ;PetitModbus.c: 463: Petit_NumberOfRegistersBytes = 2* Petit_NumberOfRegisters;
  4885  051C  1003               	clrc
  4886  051D  0D5A               	rlf	HandlePetitModbusReadHoldingRegistersSlaveReadback@Petit_NumberOfRegisters,w
  4887  051E  00D2               	movwf	HandlePetitModbusReadHoldingRegistersSlaveReadback@Petit_NumberOfRegistersBytes
  4888  051F  0D5B               	rlf	HandlePetitModbusReadHoldingRegistersSlaveReadback@Petit_NumberOfRegisters+1,w
  4889  0520  00D3               	movwf	HandlePetitModbusReadHoldingRegistersSlaveReadback@Petit_NumberOfRegistersBytes+1
  4890                           
  4891                           ;PetitModbus.c: 465: if(Petit_Tx_Data.Address == Petit_Rx_Data.Address){
  4892  0521  1683               	bsf	3,5	;RP0=1, select bank1
  4893  0522  1303               	bcf	3,6	;RP1=0, select bank1
  4894  0523  0820               	movf	_Petit_Tx_Data^(0+128),w
  4895  0524  1283               	bcf	3,5	;RP0=0, select bank0
  4896  0525  1303               	bcf	3,6	;RP1=0, select bank0
  4897  0526  0620               	xorwf	_Petit_Rx_Data,w
  4898  0527  1D03               	skipz
  4899  0528  2DB5               	goto	l2377
  4900                           
  4901                           ;PetitModbus.c: 466: if(Petit_NumberOfRegistersBytes == Petit_Rx_Data.DataBuf[0]){
  4902  0529  0822               	movf	_Petit_Rx_Data+2,w
  4903  052A  00CE               	movwf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback
  4904  052B  01CF               	clrf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback+1
  4905  052C  0853               	movf	HandlePetitModbusReadHoldingRegistersSlaveReadback@Petit_NumberOfRegistersBytes+1,
      +                          w
  4906  052D  064F               	xorwf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback+1,w
  4907  052E  1D03               	skipz
  4908  052F  2D32               	goto	u1745
  4909  0530  0852               	movf	HandlePetitModbusReadHoldingRegistersSlaveReadback@Petit_NumberOfRegistersBytes,w
  4910  0531  064E               	xorwf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback,w
  4911  0532                     u1745:	
  4912  0532  1D03               	skipz
  4913  0533  2DCB               	goto	l2379
  4914                           
  4915                           ;PetitModbus.c: 469: BufReadIndex = 0;
  4916  0534  01DC               	clrf	HandlePetitModbusReadHoldingRegistersSlaveReadback@BufReadIndex
  4917  0535  01DD               	clrf	HandlePetitModbusReadHoldingRegistersSlaveReadback@BufReadIndex+1
  4918                           
  4919                           ;PetitModbus.c: 470: for (Petit_i = 0; Petit_i < Petit_NumberOfRegisters; Petit_i++)
  4920  0536  01D8               	clrf	HandlePetitModbusReadHoldingRegistersSlaveReadback@Petit_i
  4921  0537  01D9               	clrf	HandlePetitModbusReadHoldingRegistersSlaveReadback@Petit_i+1
  4922  0538                     l2373:	
  4923  0538  085B               	movf	HandlePetitModbusReadHoldingRegistersSlaveReadback@Petit_NumberOfRegisters+1,w
  4924  0539  0259               	subwf	HandlePetitModbusReadHoldingRegistersSlaveReadback@Petit_i+1,w
  4925  053A  1D03               	skipz
  4926  053B  2D3E               	goto	u1755
  4927  053C  085A               	movf	HandlePetitModbusReadHoldingRegistersSlaveReadback@Petit_NumberOfRegisters,w
  4928  053D  0258               	subwf	HandlePetitModbusReadHoldingRegistersSlaveReadback@Petit_i,w
  4929  053E                     u1755:	
  4930  053E  1803               	btfsc	3,0
  4931  053F  2D87               	goto	l2375
  4932                           
  4933                           ;PetitModbus.c: 471: {
  4934                           ;PetitModbus.c: 472: RegData = ((unsigned int) (Petit_Rx_Data.DataBuf[BufReadIndex + 1])
      +                           << 8) + (unsigned int) (Petit_Rx_Data.DataBuf[BufReadIndex + 2]);
  4935  0540  085C               	movf	HandlePetitModbusReadHoldingRegistersSlaveReadback@BufReadIndex,w
  4936  0541  3E01               	addlw	1
  4937  0542  3E22               	addlw	(low ((_Petit_Rx_Data| 0+2)))& (0+255)
  4938  0543  0084               	movwf	4
  4939  0544  1383               	bcf	3,7	;select IRP bank0
  4940  0545  0800               	movf	0,w
  4941  0546  00CE               	movwf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback
  4942  0547  01CF               	clrf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback+1
  4943  0548  084E               	movf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback,w
  4944  0549  00CF               	movwf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback+1
  4945  054A  01CE               	clrf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback
  4946  054B  085C               	movf	HandlePetitModbusReadHoldingRegistersSlaveReadback@BufReadIndex,w
  4947  054C  3E02               	addlw	2
  4948  054D  3E22               	addlw	(low ((_Petit_Rx_Data| 0+2)))& (0+255)
  4949  054E  0084               	movwf	4
  4950  054F  0800               	movf	0,w
  4951  0550  074E               	addwf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback,w
  4952  0551  00D4               	movwf	HandlePetitModbusReadHoldingRegistersSlaveReadback@RegData
  4953  0552  3000               	movlw	0
  4954  0553  1803               	skipnc
  4955  0554  3001               	movlw	1
  4956  0555  074F               	addwf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback+1,w
  4957  0556  00D5               	movwf	HandlePetitModbusReadHoldingRegistersSlaveReadback@RegData+1
  4958                           
  4959                           ;PetitModbus.c: 473: MASTER_SLAVE_DATA[Petit_Tx_Data.Address].Reg[Petit_StartAddress] = 
      +                          RegData;
  4960  0557  3013               	movlw	19
  4961  0558  00CE               	movwf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback
  4962  0559  084E               	movf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback,w
  4963  055A  00CA               	movwf	___bmul@multiplicand
  4964  055B  1683               	bsf	3,5	;RP0=1, select bank1
  4965  055C  1303               	bcf	3,6	;RP1=0, select bank1
  4966  055D  0820               	movf	_Petit_Tx_Data^(0+128),w
  4967  055E  120A  158A  264B  120A  118A  	fcall	___bmul
  4968  0563  1283               	bcf	3,5	;RP0=0, select bank0
  4969  0564  1303               	bcf	3,6	;RP1=0, select bank0
  4970  0565  0745               	addwf	_MASTER_SLAVE_DATA,w
  4971  0566  00CF               	movwf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback+1
  4972  0567  0856               	movf	HandlePetitModbusReadHoldingRegistersSlaveReadback@Petit_StartAddress,w
  4973  0568  00D0               	movwf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback+2
  4974  0569  0750               	addwf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback+2,w
  4975  056A  074F               	addwf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback+1,w
  4976  056B  00D1               	movwf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback+3
  4977  056C  0851               	movf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback+3,w
  4978  056D  0084               	movwf	4
  4979  056E  0854               	movf	HandlePetitModbusReadHoldingRegistersSlaveReadback@RegData,w
  4980  056F  1783               	bsf	3,7	;select IRP bank2
  4981  0570  0080               	movwf	0
  4982  0571  0A84               	incf	4,f
  4983  0572  0855               	movf	HandlePetitModbusReadHoldingRegistersSlaveReadback@RegData+1,w
  4984  0573  0080               	movwf	0
  4985                           
  4986                           ;PetitModbus.c: 474: Petit_StartAddress += 1;
  4987  0574  3001               	movlw	1
  4988  0575  07D6               	addwf	HandlePetitModbusReadHoldingRegistersSlaveReadback@Petit_StartAddress,f
  4989  0576  1803               	skipnc
  4990  0577  0AD7               	incf	HandlePetitModbusReadHoldingRegistersSlaveReadback@Petit_StartAddress+1,f
  4991  0578  3000               	movlw	0
  4992  0579  07D7               	addwf	HandlePetitModbusReadHoldingRegistersSlaveReadback@Petit_StartAddress+1,f
  4993                           
  4994                           ;PetitModbus.c: 475: BufReadIndex += 2;
  4995  057A  3002               	movlw	2
  4996  057B  07DC               	addwf	HandlePetitModbusReadHoldingRegistersSlaveReadback@BufReadIndex,f
  4997  057C  1803               	skipnc
  4998  057D  0ADD               	incf	HandlePetitModbusReadHoldingRegistersSlaveReadback@BufReadIndex+1,f
  4999  057E  3000               	movlw	0
  5000  057F  07DD               	addwf	HandlePetitModbusReadHoldingRegistersSlaveReadback@BufReadIndex+1,f
  5001  0580  3001               	movlw	1
  5002  0581  07D8               	addwf	HandlePetitModbusReadHoldingRegistersSlaveReadback@Petit_i,f
  5003  0582  1803               	skipnc
  5004  0583  0AD9               	incf	HandlePetitModbusReadHoldingRegistersSlaveReadback@Petit_i+1,f
  5005  0584  3000               	movlw	0
  5006  0585  07D9               	addwf	HandlePetitModbusReadHoldingRegistersSlaveReadback@Petit_i+1,f
  5007  0586  2D38               	goto	l2373
  5008  0587                     l2375:	
  5009                           
  5010                           ;PetitModbus.c: 476: }
  5011                           ;PetitModbus.c: 477: MASTER_SLAVE_DATA[Petit_Rx_Data.Address].CommError = SLAVE_DATA_OK;
  5012  0587  3002               	movlw	2
  5013  0588  00CE               	movwf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback
  5014  0589  3013               	movlw	19
  5015  058A  00CF               	movwf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback+1
  5016  058B  084F               	movf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback+1,w
  5017  058C  00CA               	movwf	___bmul@multiplicand
  5018  058D  0820               	movf	_Petit_Rx_Data,w
  5019  058E  120A  158A  264B  120A  118A  	fcall	___bmul
  5020  0593  1283               	bcf	3,5	;RP0=0, select bank0
  5021  0594  1303               	bcf	3,6	;RP1=0, select bank0
  5022  0595  0745               	addwf	_MASTER_SLAVE_DATA,w
  5023  0596  00D0               	movwf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback+2
  5024  0597  0850               	movf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback+2,w
  5025  0598  3E0E               	addlw	14
  5026  0599  0084               	movwf	4
  5027  059A  084E               	movf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback,w
  5028  059B  1783               	bsf	3,7	;select IRP bank2
  5029  059C  0080               	movwf	0
  5030                           
  5031                           ;PetitModbus.c: 478: MASTER_SLAVE_DATA[Petit_Rx_Data.Address].ReceiveCounter += 1;
  5032  059D  3013               	movlw	19
  5033  059E  00CE               	movwf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback
  5034  059F  084E               	movf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback,w
  5035  05A0  00CA               	movwf	___bmul@multiplicand
  5036  05A1  0820               	movf	_Petit_Rx_Data,w
  5037  05A2  120A  158A  264B  120A  118A  	fcall	___bmul
  5038  05A7  1283               	bcf	3,5	;RP0=0, select bank0
  5039  05A8  1303               	bcf	3,6	;RP1=0, select bank0
  5040  05A9  0745               	addwf	_MASTER_SLAVE_DATA,w
  5041  05AA  00CF               	movwf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback+1
  5042  05AB  084F               	movf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback+1,w
  5043  05AC  3E0F               	addlw	15
  5044  05AD  0084               	movwf	4
  5045  05AE  3001               	movlw	1
  5046  05AF  1783               	bsf	3,7	;select IRP bank2
  5047  05B0  0780               	addwf	0,f
  5048  05B1  0A84               	incf	4,f
  5049  05B2  1803               	skipnc
  5050  05B3  0A80               	incf	0,f
  5051                           
  5052                           ;PetitModbus.c: 479: }
  5053                           ;PetitModbus.c: 480: }
  5054  05B4  2DCB               	goto	l2379
  5055  05B5                     l2377:	
  5056                           
  5057                           ;PetitModbus.c: 481: else{
  5058                           ;PetitModbus.c: 482: MASTER_SLAVE_DATA[Petit_Tx_Data.Address].CommError = SLAVE_DATA_NOK
      +                          ;
  5059  05B5  3003               	movlw	3
  5060  05B6  00CE               	movwf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback
  5061  05B7  3013               	movlw	19
  5062  05B8  00CF               	movwf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback+1
  5063  05B9  084F               	movf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback+1,w
  5064  05BA  00CA               	movwf	___bmul@multiplicand
  5065  05BB  1683               	bsf	3,5	;RP0=1, select bank1
  5066  05BC  1303               	bcf	3,6	;RP1=0, select bank1
  5067  05BD  0820               	movf	_Petit_Tx_Data^(0+128),w
  5068  05BE  120A  158A  264B   	fcall	___bmul
  5069  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  5070  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  5071  05C3  0745               	addwf	_MASTER_SLAVE_DATA,w
  5072  05C4  00D0               	movwf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback+2
  5073  05C5  0850               	movf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback+2,w
  5074  05C6  3E0E               	addlw	14
  5075  05C7  0084               	movwf	4
  5076  05C8  084E               	movf	??_HandlePetitModbusReadHoldingRegistersSlaveReadback,w
  5077  05C9  1783               	bsf	3,7	;select IRP bank2
  5078  05CA  0080               	movwf	0
  5079  05CB                     l2379:	
  5080                           
  5081                           ;PetitModbus.c: 483: }
  5082                           ;PetitModbus.c: 485: Petit_Tx_State = PETIT_RXTX_IDLE;
  5083  05CB  01C4               	clrf	_Petit_Tx_State
  5084  05CC  0008               	return
  5085  05CD                     __end_of_HandlePetitModbusReadHoldingRegistersSlaveReadback:	
  5086                           
  5087                           	psect	text22
  5088  072C                     __ptext22:	
  5089 ;; *************** function _HandleMPetitodbusWriteMultipleRegistersSlaveReadback *****************
  5090 ;; Defined at:
  5091 ;;		line 495 in file "modbus/PetitModbus.c"
  5092 ;; Parameters:    Size  Location     Type
  5093 ;;		None
  5094 ;; Auto vars:     Size  Location     Type
  5095 ;;  Petit_Number    2    9[BANK0 ] unsigned int 
  5096 ;;  Petit_StartA    2    7[BANK0 ] unsigned int 
  5097 ;; Return value:  Size  Location     Type
  5098 ;;                  1    wreg      void 
  5099 ;; Registers used:
  5100 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5101 ;; Tracked objects:
  5102 ;;		On entry : 0/0
  5103 ;;		On exit  : 0/0
  5104 ;;		Unchanged: 0/0
  5105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5106 ;;      Params:         0       0       0       0       0
  5107 ;;      Locals:         0       4       0       0       0
  5108 ;;      Temps:          0       3       0       0       0
  5109 ;;      Totals:         0       7       0       0       0
  5110 ;;Total ram usage:        7 bytes
  5111 ;; Hardware stack levels used:    1
  5112 ;; Hardware stack levels required when called:    4
  5113 ;; This function calls:
  5114 ;;		___bmul
  5115 ;; This function is called by:
  5116 ;;		_ProcessPetitModbus
  5117 ;; This function uses a non-reentrant model
  5118 ;;
  5119                           
  5120                           
  5121                           ;psect for function _HandleMPetitodbusWriteMultipleRegistersSlaveReadback
  5122  072C                     _HandleMPetitodbusWriteMultipleRegistersSlaveReadback:	
  5123                           
  5124                           ;PetitModbus.c: 497: unsigned int Petit_StartAddress = 0;
  5125                           
  5126                           ;incstack = 0
  5127                           ; Regs used in _HandleMPetitodbusWriteMultipleRegistersSlaveReadback: [wreg-fsr0h+status
      +                          ,2+status,0+btemp+1+pclath+cstack]
  5128  072C  1283               	bcf	3,5	;RP0=0, select bank0
  5129  072D  1303               	bcf	3,6	;RP1=0, select bank0
  5130  072E  01D1               	clrf	HandleMPetitodbusWriteMultipleRegistersSlaveReadback@Petit_StartAddress
  5131  072F  01D2               	clrf	HandleMPetitodbusWriteMultipleRegistersSlaveReadback@Petit_StartAddress+1
  5132                           
  5133                           ;PetitModbus.c: 498: unsigned int Petit_NumberOfRegisters = 0;
  5134  0730  01D3               	clrf	HandleMPetitodbusWriteMultipleRegistersSlaveReadback@Petit_NumberOfRegisters
  5135  0731  01D4               	clrf	HandleMPetitodbusWriteMultipleRegistersSlaveReadback@Petit_NumberOfRegisters+1
  5136                           
  5137                           ;PetitModbus.c: 500: Petit_StartAddress = ((unsigned int) (Petit_Tx_Data.DataBuf[0]) << 
      +                          8) + (unsigned int) (Petit_Tx_Data.DataBuf[1]);
  5138  0732  1683               	bsf	3,5	;RP0=1, select bank1
  5139  0733  1303               	bcf	3,6	;RP1=0, select bank1
  5140  0734  0822               	movf	(_Petit_Tx_Data^(0+128)+2),w
  5141  0735  1283               	bcf	3,5	;RP0=0, select bank0
  5142  0736  1303               	bcf	3,6	;RP1=0, select bank0
  5143  0737  00CE               	movwf	??_HandleMPetitodbusWriteMultipleRegistersSlaveReadback
  5144  0738  01CF               	clrf	??_HandleMPetitodbusWriteMultipleRegistersSlaveReadback+1
  5145  0739  084E               	movf	??_HandleMPetitodbusWriteMultipleRegistersSlaveReadback,w
  5146  073A  00CF               	movwf	??_HandleMPetitodbusWriteMultipleRegistersSlaveReadback+1
  5147  073B  01CE               	clrf	??_HandleMPetitodbusWriteMultipleRegistersSlaveReadback
  5148  073C  1683               	bsf	3,5	;RP0=1, select bank1
  5149  073D  1303               	bcf	3,6	;RP1=0, select bank1
  5150  073E  0823               	movf	(_Petit_Tx_Data^(0+128)+3),w
  5151  073F  1283               	bcf	3,5	;RP0=0, select bank0
  5152  0740  1303               	bcf	3,6	;RP1=0, select bank0
  5153  0741  074E               	addwf	??_HandleMPetitodbusWriteMultipleRegistersSlaveReadback,w
  5154  0742  00D1               	movwf	HandleMPetitodbusWriteMultipleRegistersSlaveReadback@Petit_StartAddress
  5155  0743  3000               	movlw	0
  5156  0744  1803               	skipnc
  5157  0745  3001               	movlw	1
  5158  0746  074F               	addwf	??_HandleMPetitodbusWriteMultipleRegistersSlaveReadback+1,w
  5159  0747  00D2               	movwf	HandleMPetitodbusWriteMultipleRegistersSlaveReadback@Petit_StartAddress+1
  5160                           
  5161                           ;PetitModbus.c: 501: Petit_NumberOfRegisters = ((unsigned int) (Petit_Tx_Data.DataBuf[2]
      +                          ) << 8) + (unsigned int) (Petit_Tx_Data.DataBuf[3]);
  5162  0748  1683               	bsf	3,5	;RP0=1, select bank1
  5163  0749  1303               	bcf	3,6	;RP1=0, select bank1
  5164  074A  0824               	movf	(_Petit_Tx_Data^(0+128)+4),w
  5165  074B  1283               	bcf	3,5	;RP0=0, select bank0
  5166  074C  1303               	bcf	3,6	;RP1=0, select bank0
  5167  074D  00CE               	movwf	??_HandleMPetitodbusWriteMultipleRegistersSlaveReadback
  5168  074E  01CF               	clrf	??_HandleMPetitodbusWriteMultipleRegistersSlaveReadback+1
  5169  074F  084E               	movf	??_HandleMPetitodbusWriteMultipleRegistersSlaveReadback,w
  5170  0750  00CF               	movwf	??_HandleMPetitodbusWriteMultipleRegistersSlaveReadback+1
  5171  0751  01CE               	clrf	??_HandleMPetitodbusWriteMultipleRegistersSlaveReadback
  5172  0752  1683               	bsf	3,5	;RP0=1, select bank1
  5173  0753  1303               	bcf	3,6	;RP1=0, select bank1
  5174  0754  0825               	movf	(_Petit_Tx_Data^(0+128)+5),w
  5175  0755  1283               	bcf	3,5	;RP0=0, select bank0
  5176  0756  1303               	bcf	3,6	;RP1=0, select bank0
  5177  0757  074E               	addwf	??_HandleMPetitodbusWriteMultipleRegistersSlaveReadback,w
  5178  0758  00D3               	movwf	HandleMPetitodbusWriteMultipleRegistersSlaveReadback@Petit_NumberOfRegisters
  5179  0759  3000               	movlw	0
  5180  075A  1803               	skipnc
  5181  075B  3001               	movlw	1
  5182  075C  074F               	addwf	??_HandleMPetitodbusWriteMultipleRegistersSlaveReadback+1,w
  5183  075D  00D4               	movwf	HandleMPetitodbusWriteMultipleRegistersSlaveReadback@Petit_NumberOfRegisters+1
  5184                           
  5185                           ;PetitModbus.c: 503: if(Petit_Tx_Data.Address == Petit_Rx_Data.Address){
  5186  075E  1683               	bsf	3,5	;RP0=1, select bank1
  5187  075F  1303               	bcf	3,6	;RP1=0, select bank1
  5188  0760  0820               	movf	_Petit_Tx_Data^(0+128),w
  5189  0761  1283               	bcf	3,5	;RP0=0, select bank0
  5190  0762  1303               	bcf	3,6	;RP1=0, select bank0
  5191  0763  0620               	xorwf	_Petit_Rx_Data,w
  5192  0764  1D03               	skipz
  5193  0765  2FA4               	goto	l2413
  5194                           
  5195                           ;PetitModbus.c: 504: if(Petit_StartAddress == ((unsigned int) (Petit_Rx_Data.DataBuf[0])
      +                           << 8) + (unsigned int) (Petit_Rx_Data.DataBuf[1])){
  5196  0766  0852               	movf	HandleMPetitodbusWriteMultipleRegistersSlaveReadback@Petit_StartAddress+1,w
  5197  0767  0622               	xorwf	_Petit_Rx_Data+2,w
  5198  0768  1D03               	skipz
  5199  0769  2F6C               	goto	u1835
  5200  076A  0851               	movf	HandleMPetitodbusWriteMultipleRegistersSlaveReadback@Petit_StartAddress,w
  5201  076B  0623               	xorwf	_Petit_Rx_Data+3,w
  5202  076C                     u1835:	
  5203  076C  1D03               	skipz
  5204  076D  2FBA               	goto	l2415
  5205                           
  5206                           ;PetitModbus.c: 505: if(Petit_NumberOfRegisters == ((unsigned int) (Petit_Rx_Data.DataBu
      +                          f[2]) << 8) + (unsigned int) (Petit_Rx_Data.DataBuf[3])){
  5207  076E  0854               	movf	HandleMPetitodbusWriteMultipleRegistersSlaveReadback@Petit_NumberOfRegisters+1,w
  5208  076F  0624               	xorwf	_Petit_Rx_Data+4,w
  5209  0770  1D03               	skipz
  5210  0771  2F74               	goto	u1845
  5211  0772  0853               	movf	HandleMPetitodbusWriteMultipleRegistersSlaveReadback@Petit_NumberOfRegisters,w
  5212  0773  0625               	xorwf	_Petit_Rx_Data+5,w
  5213  0774                     u1845:	
  5214  0774  1D03               	skipz
  5215  0775  2FBA               	goto	l2415
  5216                           
  5217                           ;PetitModbus.c: 506: MASTER_SLAVE_DATA[Petit_Rx_Data.Address].CommError = SLAVE_DATA_OK;
  5218  0776  3002               	movlw	2
  5219  0777  00CE               	movwf	??_HandleMPetitodbusWriteMultipleRegistersSlaveReadback
  5220  0778  3013               	movlw	19
  5221  0779  00CF               	movwf	??_HandleMPetitodbusWriteMultipleRegistersSlaveReadback+1
  5222  077A  084F               	movf	??_HandleMPetitodbusWriteMultipleRegistersSlaveReadback+1,w
  5223  077B  00CA               	movwf	___bmul@multiplicand
  5224  077C  0820               	movf	_Petit_Rx_Data,w
  5225  077D  120A  158A  264B  120A  118A  	fcall	___bmul
  5226  0782  1283               	bcf	3,5	;RP0=0, select bank0
  5227  0783  1303               	bcf	3,6	;RP1=0, select bank0
  5228  0784  0745               	addwf	_MASTER_SLAVE_DATA,w
  5229  0785  00D0               	movwf	??_HandleMPetitodbusWriteMultipleRegistersSlaveReadback+2
  5230  0786  0850               	movf	??_HandleMPetitodbusWriteMultipleRegistersSlaveReadback+2,w
  5231  0787  3E0E               	addlw	14
  5232  0788  0084               	movwf	4
  5233  0789  084E               	movf	??_HandleMPetitodbusWriteMultipleRegistersSlaveReadback,w
  5234  078A  1783               	bsf	3,7	;select IRP bank2
  5235  078B  0080               	movwf	0
  5236                           
  5237                           ;PetitModbus.c: 507: MASTER_SLAVE_DATA[Petit_Rx_Data.Address].ReceiveCounter += 1;
  5238  078C  3013               	movlw	19
  5239  078D  00CE               	movwf	??_HandleMPetitodbusWriteMultipleRegistersSlaveReadback
  5240  078E  084E               	movf	??_HandleMPetitodbusWriteMultipleRegistersSlaveReadback,w
  5241  078F  00CA               	movwf	___bmul@multiplicand
  5242  0790  0820               	movf	_Petit_Rx_Data,w
  5243  0791  120A  158A  264B  120A  118A  	fcall	___bmul
  5244  0796  1283               	bcf	3,5	;RP0=0, select bank0
  5245  0797  1303               	bcf	3,6	;RP1=0, select bank0
  5246  0798  0745               	addwf	_MASTER_SLAVE_DATA,w
  5247  0799  00CF               	movwf	??_HandleMPetitodbusWriteMultipleRegistersSlaveReadback+1
  5248  079A  084F               	movf	??_HandleMPetitodbusWriteMultipleRegistersSlaveReadback+1,w
  5249  079B  3E0F               	addlw	15
  5250  079C  0084               	movwf	4
  5251  079D  3001               	movlw	1
  5252  079E  1783               	bsf	3,7	;select IRP bank2
  5253  079F  0780               	addwf	0,f
  5254  07A0  0A84               	incf	4,f
  5255  07A1  1803               	skipnc
  5256  07A2  0A80               	incf	0,f
  5257                           
  5258                           ;PetitModbus.c: 508: }
  5259                           ;PetitModbus.c: 509: }
  5260                           ;PetitModbus.c: 510: }
  5261  07A3  2FBA               	goto	l2415
  5262  07A4                     l2413:	
  5263                           
  5264                           ;PetitModbus.c: 511: else{
  5265                           ;PetitModbus.c: 512: MASTER_SLAVE_DATA[Petit_Tx_Data.Address].CommError = SLAVE_DATA_NOK
      +                          ;
  5266  07A4  3003               	movlw	3
  5267  07A5  00CE               	movwf	??_HandleMPetitodbusWriteMultipleRegistersSlaveReadback
  5268  07A6  3013               	movlw	19
  5269  07A7  00CF               	movwf	??_HandleMPetitodbusWriteMultipleRegistersSlaveReadback+1
  5270  07A8  084F               	movf	??_HandleMPetitodbusWriteMultipleRegistersSlaveReadback+1,w
  5271  07A9  00CA               	movwf	___bmul@multiplicand
  5272  07AA  1683               	bsf	3,5	;RP0=1, select bank1
  5273  07AB  1303               	bcf	3,6	;RP1=0, select bank1
  5274  07AC  0820               	movf	_Petit_Tx_Data^(0+128),w
  5275  07AD  120A  158A  264B   	fcall	___bmul
  5276  07B0  1283               	bcf	3,5	;RP0=0, select bank0
  5277  07B1  1303               	bcf	3,6	;RP1=0, select bank0
  5278  07B2  0745               	addwf	_MASTER_SLAVE_DATA,w
  5279  07B3  00D0               	movwf	??_HandleMPetitodbusWriteMultipleRegistersSlaveReadback+2
  5280  07B4  0850               	movf	??_HandleMPetitodbusWriteMultipleRegistersSlaveReadback+2,w
  5281  07B5  3E0E               	addlw	14
  5282  07B6  0084               	movwf	4
  5283  07B7  084E               	movf	??_HandleMPetitodbusWriteMultipleRegistersSlaveReadback,w
  5284  07B8  1783               	bsf	3,7	;select IRP bank2
  5285  07B9  0080               	movwf	0
  5286  07BA                     l2415:	
  5287                           
  5288                           ;PetitModbus.c: 513: }
  5289                           ;PetitModbus.c: 515: Petit_Tx_State = PETIT_RXTX_IDLE;
  5290  07BA  01C4               	clrf	_Petit_Tx_State
  5291  07BB  0008               	return
  5292  07BC                     __end_of_HandleMPetitodbusWriteMultipleRegistersSlaveReadback:	
  5293                           
  5294                           	psect	text23
  5295  0E4B                     __ptext23:	
  5296 ;; *************** function ___bmul *****************
  5297 ;; Defined at:
  5298 ;;		line 4 in file "C:\Localdata\Microchip\xc8\v1.45\sources\common\Umul8.c"
  5299 ;; Parameters:    Size  Location     Type
  5300 ;;  multiplier      1    wreg     unsigned char 
  5301 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  5302 ;; Auto vars:     Size  Location     Type
  5303 ;;  multiplier      1    3[BANK0 ] unsigned char 
  5304 ;;  product         1    2[BANK0 ] unsigned char 
  5305 ;; Return value:  Size  Location     Type
  5306 ;;                  1    wreg      unsigned char 
  5307 ;; Registers used:
  5308 ;;		wreg, status,2, status,0
  5309 ;; Tracked objects:
  5310 ;;		On entry : 0/0
  5311 ;;		On exit  : 0/0
  5312 ;;		Unchanged: 0/0
  5313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5314 ;;      Params:         0       1       0       0       0
  5315 ;;      Locals:         0       2       0       0       0
  5316 ;;      Temps:          0       1       0       0       0
  5317 ;;      Totals:         0       4       0       0       0
  5318 ;;Total ram usage:        4 bytes
  5319 ;; Hardware stack levels used:    1
  5320 ;; Hardware stack levels required when called:    3
  5321 ;; This function calls:
  5322 ;;		Nothing
  5323 ;; This function is called by:
  5324 ;;		_SendPetitModbus
  5325 ;;		_HandlePetitModbusWriteSingleRegisterSlaveReadback
  5326 ;;		_HandlePetitModbusReadHoldingRegistersSlaveReadback
  5327 ;;		_HandleMPetitodbusWriteMultipleRegistersSlaveReadback
  5328 ;; This function uses a non-reentrant model
  5329 ;;
  5330                           
  5331                           
  5332                           ;psect for function ___bmul
  5333  0E4B                     ___bmul:	
  5334                           
  5335                           ;incstack = 0
  5336                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5337                           ;___bmul@multiplier stored from wreg
  5338  0E4B  1283               	bcf	3,5	;RP0=0, select bank0
  5339  0E4C  1303               	bcf	3,6	;RP1=0, select bank0
  5340  0E4D  00CD               	movwf	___bmul@multiplier
  5341  0E4E  01CC               	clrf	___bmul@product
  5342  0E4F                     l2223:	
  5343  0E4F  1C4D               	btfss	___bmul@multiplier,0
  5344  0E50  2E55               	goto	l2227
  5345  0E51  084A               	movf	___bmul@multiplicand,w
  5346  0E52  00CB               	movwf	??___bmul
  5347  0E53  084B               	movf	??___bmul,w
  5348  0E54  07CC               	addwf	___bmul@product,f
  5349  0E55                     l2227:	
  5350  0E55  1003               	clrc
  5351  0E56  0DCA               	rlf	___bmul@multiplicand,f
  5352  0E57  1003               	clrc
  5353  0E58  0CCD               	rrf	___bmul@multiplier,f
  5354  0E59  084D               	movf	___bmul@multiplier,w
  5355  0E5A  1D03               	btfss	3,2
  5356  0E5B  2E4F               	goto	l2223
  5357  0E5C  084C               	movf	___bmul@product,w
  5358  0E5D  0008               	return
  5359  0E5E                     __end_of___bmul:	
  5360                           
  5361                           	psect	text24
  5362  0E18                     __ptext24:	
  5363 ;; *************** function _InitPetitModbus *****************
  5364 ;; Defined at:
  5365 ;;		line 378 in file "modbus/PetitModbus.c"
  5366 ;; Parameters:    Size  Location     Type
  5367 ;;  location        1    wreg     PTR struct .
  5368 ;;		 -> SlaveInfo(76), 
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;  location        1    1[BANK0 ] PTR struct .
  5371 ;;		 -> SlaveInfo(76), 
  5372 ;; Return value:  Size  Location     Type
  5373 ;;                  1    wreg      void 
  5374 ;; Registers used:
  5375 ;;		wreg, status,2, status,0, pclath, cstack
  5376 ;; Tracked objects:
  5377 ;;		On entry : 0/0
  5378 ;;		On exit  : 0/0
  5379 ;;		Unchanged: 0/0
  5380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5381 ;;      Params:         0       0       0       0       0
  5382 ;;      Locals:         0       1       0       0       0
  5383 ;;      Temps:          0       1       0       0       0
  5384 ;;      Totals:         0       2       0       0       0
  5385 ;;Total ram usage:        2 bytes
  5386 ;; Hardware stack levels used:    1
  5387 ;; Hardware stack levels required when called:    5
  5388 ;; This function calls:
  5389 ;;		_PetitModBus_TIMER_Initialise
  5390 ;;		_PetitModBus_UART_Initialise
  5391 ;; This function is called by:
  5392 ;;		_main
  5393 ;; This function uses a non-reentrant model
  5394 ;;
  5395                           
  5396                           
  5397                           ;psect for function _InitPetitModbus
  5398  0E18                     _InitPetitModbus:	
  5399                           
  5400                           ;incstack = 0
  5401                           ; Regs used in _InitPetitModbus: [wreg+status,2+status,0+pclath+cstack]
  5402                           ;InitPetitModbus@location stored from wreg
  5403  0E18  1283               	bcf	3,5	;RP0=0, select bank0
  5404  0E19  1303               	bcf	3,6	;RP1=0, select bank0
  5405  0E1A  00CB               	movwf	InitPetitModbus@location
  5406                           
  5407                           ;PetitModbus.c: 380: MASTER_SLAVE_DATA = location;
  5408  0E1B  084B               	movf	InitPetitModbus@location,w
  5409  0E1C  00CA               	movwf	??_InitPetitModbus
  5410  0E1D  084A               	movf	??_InitPetitModbus,w
  5411  0E1E  00C5               	movwf	_MASTER_SLAVE_DATA
  5412                           
  5413                           ;PetitModbus.c: 381: PetitModBus_UART_Initialise();
  5414  0E1F  120A  158A  25A9  120A  158A  	fcall	_PetitModBus_UART_Initialise
  5415                           
  5416                           ;PetitModbus.c: 382: PetitModBus_TIMER_Initialise();
  5417  0E24  120A  158A  25A5   	fcall	_PetitModBus_TIMER_Initialise
  5418  0E27  0008               	return
  5419  0E28                     __end_of_InitPetitModbus:	
  5420                           
  5421                           	psect	text25
  5422  0DA9                     __ptext25:	
  5423 ;; *************** function _PetitModBus_UART_Initialise *****************
  5424 ;; Defined at:
  5425 ;;		line 10 in file "modbus/PetitModbusPort.c"
  5426 ;; Parameters:    Size  Location     Type
  5427 ;;		None
  5428 ;; Auto vars:     Size  Location     Type
  5429 ;;		None
  5430 ;; Return value:  Size  Location     Type
  5431 ;;                  1    wreg      void 
  5432 ;; Registers used:
  5433 ;;		wreg, status,2, status,0, pclath, cstack
  5434 ;; Tracked objects:
  5435 ;;		On entry : 0/0
  5436 ;;		On exit  : 0/0
  5437 ;;		Unchanged: 0/0
  5438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5439 ;;      Params:         0       0       0       0       0
  5440 ;;      Locals:         0       0       0       0       0
  5441 ;;      Temps:          0       0       0       0       0
  5442 ;;      Totals:         0       0       0       0       0
  5443 ;;Total ram usage:        0 bytes
  5444 ;; Hardware stack levels used:    1
  5445 ;; Hardware stack levels required when called:    4
  5446 ;; This function calls:
  5447 ;;		_InitUART
  5448 ;; This function is called by:
  5449 ;;		_InitPetitModbus
  5450 ;; This function uses a non-reentrant model
  5451 ;;
  5452                           
  5453                           
  5454                           ;psect for function _PetitModBus_UART_Initialise
  5455  0DA9                     _PetitModBus_UART_Initialise:	
  5456                           
  5457                           ;PetitModbusPort.c: 12: InitUART();
  5458                           
  5459                           ;incstack = 0
  5460                           ; Regs used in _PetitModBus_UART_Initialise: [wreg+status,2+status,0+pclath+cstack]
  5461  0DA9  120A  158A  26D0   	fcall	_InitUART
  5462  0DAC  0008               	return
  5463  0DAD                     __end_of_PetitModBus_UART_Initialise:	
  5464                           
  5465                           	psect	text26
  5466  0ED0                     __ptext26:	
  5467 ;; *************** function _InitUART *****************
  5468 ;; Defined at:
  5469 ;;		line 6 in file "modbus/Init.c"
  5470 ;; Parameters:    Size  Location     Type
  5471 ;;		None
  5472 ;; Auto vars:     Size  Location     Type
  5473 ;;		None
  5474 ;; Return value:  Size  Location     Type
  5475 ;;                  1    wreg      void 
  5476 ;; Registers used:
  5477 ;;		wreg
  5478 ;; Tracked objects:
  5479 ;;		On entry : 0/0
  5480 ;;		On exit  : 0/0
  5481 ;;		Unchanged: 0/0
  5482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5483 ;;      Params:         0       0       0       0       0
  5484 ;;      Locals:         0       0       0       0       0
  5485 ;;      Temps:          0       0       0       0       0
  5486 ;;      Totals:         0       0       0       0       0
  5487 ;;Total ram usage:        0 bytes
  5488 ;; Hardware stack levels used:    1
  5489 ;; Hardware stack levels required when called:    3
  5490 ;; This function calls:
  5491 ;;		Nothing
  5492 ;; This function is called by:
  5493 ;;		_PetitModBus_UART_Initialise
  5494 ;; This function uses a non-reentrant model
  5495 ;;
  5496                           
  5497                           
  5498                           ;psect for function _InitUART
  5499  0ED0                     _InitUART:	
  5500                           
  5501                           ;Init.c: 10: PIE1bits.RCIE = 0;
  5502                           
  5503                           ;incstack = 0
  5504                           ; Regs used in _InitUART: [wreg]
  5505  0ED0  1683               	bsf	3,5	;RP0=1, select bank1
  5506  0ED1  1303               	bcf	3,6	;RP1=0, select bank1
  5507  0ED2  128C               	bcf	12,5	;volatile
  5508                           
  5509                           ;Init.c: 11: PIE1bits.TXIE = 0;
  5510  0ED3  120C               	bcf	12,4	;volatile
  5511                           
  5512                           ;Init.c: 13: SPBRG = ((int)(20000000UL/(16UL * 125000) -1));
  5513  0ED4  3009               	movlw	9
  5514  0ED5  0099               	movwf	25	;volatile
  5515                           
  5516                           ;Init.c: 15: RCSTAbits.SPEN = 1;
  5517  0ED6  1283               	bcf	3,5	;RP0=0, select bank0
  5518  0ED7  1303               	bcf	3,6	;RP1=0, select bank0
  5519  0ED8  1798               	bsf	24,7	;volatile
  5520                           
  5521                           ;Init.c: 16: RCSTAbits.RX9 = 0;
  5522  0ED9  1318               	bcf	24,6	;volatile
  5523                           
  5524                           ;Init.c: 17: RCSTAbits.SREN = 0;
  5525  0EDA  1298               	bcf	24,5	;volatile
  5526                           
  5527                           ;Init.c: 18: RCSTAbits.CREN = 1;
  5528  0EDB  1618               	bsf	24,4	;volatile
  5529                           
  5530                           ;Init.c: 19: RCSTAbits.ADDEN= 0;
  5531  0EDC  1198               	bcf	24,3	;volatile
  5532                           
  5533                           ;Init.c: 21: TXSTAbits.CSRC = 0;
  5534  0EDD  1683               	bsf	3,5	;RP0=1, select bank1
  5535  0EDE  1303               	bcf	3,6	;RP1=0, select bank1
  5536  0EDF  1398               	bcf	24,7	;volatile
  5537                           
  5538                           ;Init.c: 22: TXSTAbits.TXEN = 1;
  5539  0EE0  1698               	bsf	24,5	;volatile
  5540                           
  5541                           ;Init.c: 23: TXSTAbits.SYNC = 0;
  5542  0EE1  1218               	bcf	24,4	;volatile
  5543                           
  5544                           ;Init.c: 24: TXSTAbits.BRGH = 1;
  5545  0EE2  1518               	bsf	24,2	;volatile
  5546                           
  5547                           ;Init.c: 26: PIE1bits.TXIE = 0;
  5548  0EE3  120C               	bcf	12,4	;volatile
  5549                           
  5550                           ;Init.c: 27: PIR1bits.RCIF = 0;
  5551  0EE4  1283               	bcf	3,5	;RP0=0, select bank0
  5552  0EE5  1303               	bcf	3,6	;RP1=0, select bank0
  5553  0EE6  128C               	bcf	12,5	;volatile
  5554                           
  5555                           ;Init.c: 28: PIE1bits.RCIE = 1;
  5556  0EE7  1683               	bsf	3,5	;RP0=1, select bank1
  5557  0EE8  1303               	bcf	3,6	;RP1=0, select bank1
  5558  0EE9  168C               	bsf	12,5	;volatile
  5559  0EEA  0008               	return
  5560  0EEB                     __end_of_InitUART:	
  5561                           
  5562                           	psect	text27
  5563  0DA5                     __ptext27:	
  5564 ;; *************** function _PetitModBus_TIMER_Initialise *****************
  5565 ;; Defined at:
  5566 ;;		line 16 in file "modbus/PetitModbusPort.c"
  5567 ;; Parameters:    Size  Location     Type
  5568 ;;		None
  5569 ;; Auto vars:     Size  Location     Type
  5570 ;;		None
  5571 ;; Return value:  Size  Location     Type
  5572 ;;                  1    wreg      void 
  5573 ;; Registers used:
  5574 ;;		wreg, status,2, status,0, pclath, cstack
  5575 ;; Tracked objects:
  5576 ;;		On entry : 0/0
  5577 ;;		On exit  : 0/0
  5578 ;;		Unchanged: 0/0
  5579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5580 ;;      Params:         0       0       0       0       0
  5581 ;;      Locals:         0       0       0       0       0
  5582 ;;      Temps:          0       0       0       0       0
  5583 ;;      Totals:         0       0       0       0       0
  5584 ;;Total ram usage:        0 bytes
  5585 ;; Hardware stack levels used:    1
  5586 ;; Hardware stack levels required when called:    4
  5587 ;; This function calls:
  5588 ;;		_InitTMR1
  5589 ;; This function is called by:
  5590 ;;		_InitPetitModbus
  5591 ;; This function uses a non-reentrant model
  5592 ;;
  5593                           
  5594                           
  5595                           ;psect for function _PetitModBus_TIMER_Initialise
  5596  0DA5                     _PetitModBus_TIMER_Initialise:	
  5597                           
  5598                           ;PetitModbusPort.c: 18: InitTMR1();
  5599                           
  5600                           ;incstack = 0
  5601                           ; Regs used in _PetitModBus_TIMER_Initialise: [wreg+status,2+status,0+pclath+cstack]
  5602  0DA5  120A  158A  25FA   	fcall	_InitTMR1
  5603  0DA8  0008               	return
  5604  0DA9                     __end_of_PetitModBus_TIMER_Initialise:	
  5605                           
  5606                           	psect	text28
  5607  0DFA                     __ptext28:	
  5608 ;; *************** function _InitTMR1 *****************
  5609 ;; Defined at:
  5610 ;;		line 33 in file "modbus/Init.c"
  5611 ;; Parameters:    Size  Location     Type
  5612 ;;		None
  5613 ;; Auto vars:     Size  Location     Type
  5614 ;;		None
  5615 ;; Return value:  Size  Location     Type
  5616 ;;                  1    wreg      void 
  5617 ;; Registers used:
  5618 ;;		wreg, status,2, status,0
  5619 ;; Tracked objects:
  5620 ;;		On entry : 0/0
  5621 ;;		On exit  : 0/0
  5622 ;;		Unchanged: 0/0
  5623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5624 ;;      Params:         0       0       0       0       0
  5625 ;;      Locals:         0       0       0       0       0
  5626 ;;      Temps:          0       0       0       0       0
  5627 ;;      Totals:         0       0       0       0       0
  5628 ;;Total ram usage:        0 bytes
  5629 ;; Hardware stack levels used:    1
  5630 ;; Hardware stack levels required when called:    3
  5631 ;; This function calls:
  5632 ;;		Nothing
  5633 ;; This function is called by:
  5634 ;;		_PetitModBus_TIMER_Initialise
  5635 ;; This function uses a non-reentrant model
  5636 ;;
  5637                           
  5638                           
  5639                           ;psect for function _InitTMR1
  5640  0DFA                     _InitTMR1:	
  5641                           
  5642                           ;Init.c: 36: OPTION_REGbits.PS = 0b011;
  5643                           
  5644                           ;incstack = 0
  5645                           ; Regs used in _InitTMR1: [wreg+status,2+status,0]
  5646  0DFA  1683               	bsf	3,5	;RP0=1, select bank1
  5647  0DFB  1303               	bcf	3,6	;RP1=0, select bank1
  5648  0DFC  0801               	movf	1,w	;volatile
  5649  0DFD  39F8               	andlw	-8
  5650  0DFE  3803               	iorlw	3
  5651  0DFF  0081               	movwf	1	;volatile
  5652                           
  5653                           ;Init.c: 38: OPTION_REGbits.T0CS = 0;
  5654  0E00  1281               	bcf	1,5	;volatile
  5655                           
  5656                           ;Init.c: 40: OPTION_REGbits.T0SE = 0;
  5657  0E01  1201               	bcf	1,4	;volatile
  5658                           
  5659                           ;Init.c: 42: OPTION_REGbits.PSA = 0;
  5660  0E02  1181               	bcf	1,3	;volatile
  5661                           
  5662                           ;Init.c: 45: INTCONbits.TMR0IF = 0;
  5663  0E03  110B               	bcf	11,2	;volatile
  5664                           
  5665                           ;Init.c: 48: TMR0 = 0x00;
  5666  0E04  1283               	bcf	3,5	;RP0=0, select bank0
  5667  0E05  1303               	bcf	3,6	;RP1=0, select bank0
  5668  0E06  0181               	clrf	1	;volatile
  5669                           
  5670                           ;Init.c: 51: INTCONbits.TMR0IE = 1;
  5671  0E07  168B               	bsf	11,5	;volatile
  5672  0E08  0008               	return
  5673  0E09                     __end_of_InitTMR1:	
  5674                           
  5675                           	psect	text29
  5676  0E39                     __ptext29:	
  5677 ;; *************** function _INTERRUPT_InterruptManager *****************
  5678 ;; Defined at:
  5679 ;;		line 23 in file "Peripherals/interrupt_manager.c"
  5680 ;; Parameters:    Size  Location     Type
  5681 ;;		None
  5682 ;; Auto vars:     Size  Location     Type
  5683 ;;		None
  5684 ;; Return value:  Size  Location     Type
  5685 ;;                  1    wreg      void 
  5686 ;; Registers used:
  5687 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5688 ;; Tracked objects:
  5689 ;;		On entry : 0/0
  5690 ;;		On exit  : 0/0
  5691 ;;		Unchanged: 0/0
  5692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5693 ;;      Params:         0       0       0       0       0
  5694 ;;      Locals:         0       0       0       0       0
  5695 ;;      Temps:          4       0       0       0       0
  5696 ;;      Totals:         4       0       0       0       0
  5697 ;;Total ram usage:        4 bytes
  5698 ;; Hardware stack levels used:    1
  5699 ;; Hardware stack levels required when called:    2
  5700 ;; This function calls:
  5701 ;;		_PetitModbusIntHandler
  5702 ;; This function is called by:
  5703 ;;		Interrupt level 1
  5704 ;; This function uses a non-reentrant model
  5705 ;;
  5706                           
  5707                           
  5708                           ;psect for function _INTERRUPT_InterruptManager
  5709  0E39                     _INTERRUPT_InterruptManager:	
  5710                           
  5711                           ;interrupt_manager.c: 42: PetitModbusIntHandler();
  5712  0E39  120A  158A  26B5  120A  158A  	fcall	_PetitModbusIntHandler
  5713  0E3E  087B               	movf	??_INTERRUPT_InterruptManager+3,w
  5714  0E3F  1283               	bcf	3,5	;RP0=0, select bank0
  5715  0E40  1303               	bcf	3,6	;RP1=0, select bank0
  5716  0E41  00FF               	movwf	127
  5717  0E42  087A               	movf	??_INTERRUPT_InterruptManager+2,w
  5718  0E43  008A               	movwf	10
  5719  0E44  0879               	movf	??_INTERRUPT_InterruptManager+1,w
  5720  0E45  0084               	movwf	4
  5721  0E46  0E78               	swapf	??_INTERRUPT_InterruptManager^(0+-128),w
  5722  0E47  0083               	movwf	3
  5723  0E48  0EFE               	swapf	126,f
  5724  0E49  0E7E               	swapf	126,w
  5725  0E4A  0009               	retfie
  5726  0E4B                     __end_of_INTERRUPT_InterruptManager:	
  5727                           
  5728                           	psect	intentry
  5729  0004                     __pintentry:	
  5730                           ;incstack = 0
  5731                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5732                           
  5733  0004                     interrupt_function:	
  5734  007E                     saved_w	set	btemp
  5735  0004  00FE               	movwf	btemp
  5736  0005  0E03               	swapf	3,w
  5737  0006  00F8               	movwf	??_INTERRUPT_InterruptManager
  5738  0007  0804               	movf	4,w
  5739  0008  00F9               	movwf	??_INTERRUPT_InterruptManager+1
  5740  0009  080A               	movf	10,w
  5741  000A  00FA               	movwf	??_INTERRUPT_InterruptManager+2
  5742  000B  1283               	bcf	3,5	;RP0=0, select bank0
  5743  000C  1303               	bcf	3,6	;RP1=0, select bank0
  5744  000D  087F               	movf	btemp+1,w
  5745  000E  00FB               	movwf	??_INTERRUPT_InterruptManager+3
  5746  000F  120A  158A  2E39   	ljmp	_INTERRUPT_InterruptManager
  5747                           
  5748                           	psect	text30
  5749  0EB5                     __ptext30:	
  5750 ;; *************** function _PetitModbusIntHandler *****************
  5751 ;; Defined at:
  5752 ;;		line 4 in file "modbus/Interrupts.c"
  5753 ;; Parameters:    Size  Location     Type
  5754 ;;		None
  5755 ;; Auto vars:     Size  Location     Type
  5756 ;;		None
  5757 ;; Return value:  Size  Location     Type
  5758 ;;                  1    wreg      void 
  5759 ;; Registers used:
  5760 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5761 ;; Tracked objects:
  5762 ;;		On entry : 0/0
  5763 ;;		On exit  : 0/0
  5764 ;;		Unchanged: 0/0
  5765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5766 ;;      Params:         0       0       0       0       0
  5767 ;;      Locals:         0       0       0       0       0
  5768 ;;      Temps:          0       0       0       0       0
  5769 ;;      Totals:         0       0       0       0       0
  5770 ;;Total ram usage:        0 bytes
  5771 ;; Hardware stack levels used:    1
  5772 ;; Hardware stack levels required when called:    1
  5773 ;; This function calls:
  5774 ;;		_PetitModBus_TimerValues
  5775 ;;		_ReceiveInterrupt
  5776 ;; This function is called by:
  5777 ;;		_INTERRUPT_InterruptManager
  5778 ;; This function uses a non-reentrant model
  5779 ;;
  5780                           
  5781                           
  5782                           ;psect for function _PetitModbusIntHandler
  5783  0EB5                     _PetitModbusIntHandler:	
  5784                           
  5785                           ;Interrupts.c: 6: if (INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  5786                           
  5787                           ;incstack = 0
  5788                           ; Regs used in _PetitModbusIntHandler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5789  0EB5  1A8B               	btfsc	11,5	;volatile
  5790  0EB6  1D0B               	btfss	11,2	;volatile
  5791  0EB7  2EBF               	goto	i1l1851
  5792                           
  5793                           ;Interrupts.c: 7: {
  5794                           ;Interrupts.c: 10: PetitModBus_TimerValues();
  5795  0EB8  120A  118A  20FA  120A  158A  	fcall	_PetitModBus_TimerValues
  5796                           
  5797                           ;Interrupts.c: 12: INTCONbits.TMR0IE = 0;
  5798  0EBD  128B               	bcf	11,5	;volatile
  5799                           
  5800                           ;Interrupts.c: 13: INTCONbits.TMR0IF = 0;
  5801  0EBE  110B               	bcf	11,2	;volatile
  5802  0EBF                     i1l1851:	
  5803                           
  5804                           ;Interrupts.c: 17: }
  5805                           ;Interrupts.c: 19: if( PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
  5806  0EBF  1683               	bsf	3,5	;RP0=1, select bank1
  5807  0EC0  1303               	bcf	3,6	;RP1=0, select bank1
  5808  0EC1  1E8C               	btfss	12,5	;volatile
  5809  0EC2  0008               	return
  5810  0EC3  1283               	bcf	3,5	;RP0=0, select bank0
  5811  0EC4  1303               	bcf	3,6	;RP1=0, select bank0
  5812  0EC5  1E8C               	btfss	12,5	;volatile
  5813  0EC6  0008               	return
  5814                           
  5815                           ;Interrupts.c: 20: {
  5816                           ;Interrupts.c: 21: TMR0 = 190;
  5817  0EC7  30BE               	movlw	190
  5818  0EC8  0081               	movwf	1	;volatile
  5819                           
  5820                           ;Interrupts.c: 22: INTCONbits.TMR0IF = 0;
  5821  0EC9  110B               	bcf	11,2	;volatile
  5822                           
  5823                           ;Interrupts.c: 23: INTCONbits.TMR0IE = 1;
  5824  0ECA  168B               	bsf	11,5	;volatile
  5825                           
  5826                           ;Interrupts.c: 25: ReceiveInterrupt(RCREG);
  5827  0ECB  081A               	movf	26,w	;volatile
  5828  0ECC  120A  158A  2671   	fcall	_ReceiveInterrupt
  5829  0ECF  0008               	return
  5830  0ED0                     __end_of_PetitModbusIntHandler:	
  5831                           
  5832                           	psect	text31
  5833  0E71                     __ptext31:	
  5834 ;; *************** function _ReceiveInterrupt *****************
  5835 ;; Defined at:
  5836 ;;		line 54 in file "modbus/PetitModbusPort.c"
  5837 ;; Parameters:    Size  Location     Type
  5838 ;;  Data            1    wreg     unsigned char 
  5839 ;; Auto vars:     Size  Location     Type
  5840 ;;  Data            1    1[COMMON] unsigned char 
  5841 ;; Return value:  Size  Location     Type
  5842 ;;                  1    wreg      void 
  5843 ;; Registers used:
  5844 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5845 ;; Tracked objects:
  5846 ;;		On entry : 0/0
  5847 ;;		On exit  : 0/0
  5848 ;;		Unchanged: 0/0
  5849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5850 ;;      Params:         0       0       0       0       0
  5851 ;;      Locals:         1       0       0       0       0
  5852 ;;      Temps:          1       0       0       0       0
  5853 ;;      Totals:         2       0       0       0       0
  5854 ;;Total ram usage:        2 bytes
  5855 ;; Hardware stack levels used:    1
  5856 ;; This function calls:
  5857 ;;		Nothing
  5858 ;; This function is called by:
  5859 ;;		_PetitModbusIntHandler
  5860 ;; This function uses a non-reentrant model
  5861 ;;
  5862                           
  5863                           
  5864                           ;psect for function _ReceiveInterrupt
  5865  0E71                     _ReceiveInterrupt:	
  5866                           
  5867                           ;incstack = 0
  5868                           ; Regs used in _ReceiveInterrupt: [wreg-fsr0h+status,2+status,0]
  5869                           ;ReceiveInterrupt@Data stored from wreg
  5870  0E71  00F7               	movwf	ReceiveInterrupt@Data
  5871                           
  5872                           ;PetitModbusPort.c: 56: PetitReceiveBuffer[PetitReceiveCounter] =Data;
  5873  0E72  0877               	movf	ReceiveInterrupt@Data,w
  5874  0E73  00F6               	movwf	??_ReceiveInterrupt
  5875  0E74  0875               	movf	_PetitReceiveCounter,w
  5876  0E75  3EBC               	addlw	(low (_PetitReceiveBuffer| 0))& (0+255)
  5877  0E76  0084               	movwf	4
  5878  0E77  0876               	movf	??_ReceiveInterrupt,w
  5879  0E78  1383               	bcf	3,7	;select IRP bank1
  5880  0E79  0080               	movwf	0
  5881                           
  5882                           ;PetitModbusPort.c: 57: PetitReceiveCounter++;
  5883  0E7A  3001               	movlw	1
  5884  0E7B  00F6               	movwf	??_ReceiveInterrupt
  5885  0E7C  0876               	movf	??_ReceiveInterrupt,w
  5886  0E7D  07F5               	addwf	_PetitReceiveCounter,f	;volatile
  5887                           
  5888                           ;PetitModbusPort.c: 59: if(PetitReceiveCounter>(7*2 + 10)){
  5889  0E7E  3019               	movlw	25
  5890  0E7F  0275               	subwf	_PetitReceiveCounter,w	;volatile
  5891  0E80  1803               	btfsc	3,0
  5892                           
  5893                           ;PetitModbusPort.c: 60: PetitReceiveCounter=0;
  5894  0E81  01F5               	clrf	_PetitReceiveCounter	;volatile
  5895                           
  5896                           ;PetitModbusPort.c: 61: }
  5897                           ;PetitModbusPort.c: 62: PetitModbusTimerValue=0;
  5898  0E82  01F0               	clrf	_PetitModbusTimerValue	;volatile
  5899  0E83  01F1               	clrf	_PetitModbusTimerValue+1	;volatile
  5900  0E84  0008               	return
  5901  0E85                     __end_of_ReceiveInterrupt:	
  5902                           
  5903                           	psect	text32
  5904  00FA                     __ptext32:	
  5905 ;; *************** function _PetitModBus_TimerValues *****************
  5906 ;; Defined at:
  5907 ;;		line 66 in file "modbus/PetitModbusPort.c"
  5908 ;; Parameters:    Size  Location     Type
  5909 ;;		None
  5910 ;; Auto vars:     Size  Location     Type
  5911 ;;		None
  5912 ;; Return value:  Size  Location     Type
  5913 ;;                  1    wreg      void 
  5914 ;; Registers used:
  5915 ;;		wreg
  5916 ;; Tracked objects:
  5917 ;;		On entry : 0/0
  5918 ;;		On exit  : 0/0
  5919 ;;		Unchanged: 0/0
  5920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5921 ;;      Params:         0       0       0       0       0
  5922 ;;      Locals:         0       0       0       0       0
  5923 ;;      Temps:          0       0       0       0       0
  5924 ;;      Totals:         0       0       0       0       0
  5925 ;;Total ram usage:        0 bytes
  5926 ;; Hardware stack levels used:    1
  5927 ;; This function calls:
  5928 ;;		Nothing
  5929 ;; This function is called by:
  5930 ;;		_PetitModbusIntHandler
  5931 ;; This function uses a non-reentrant model
  5932 ;;
  5933                           
  5934                           
  5935                           ;psect for function _PetitModBus_TimerValues
  5936  00FA                     _PetitModBus_TimerValues:	
  5937                           
  5938                           ;PetitModbusPort.c: 69: PetitModbusTimerValue = 3;
  5939                           
  5940                           ;incstack = 0
  5941                           ; Regs used in _PetitModBus_TimerValues: [wreg]
  5942  00FA  3003               	movlw	3
  5943  00FB  00F0               	movwf	_PetitModbusTimerValue	;volatile
  5944  00FC  3000               	movlw	0
  5945  00FD  00F1               	movwf	_PetitModbusTimerValue+1	;volatile
  5946  00FE  0008               	return
  5947  00FF                     __end_of_PetitModBus_TimerValues:	
  5948  007E                     btemp	set	126	;btemp
  5949  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    512
    Data        21
    BSS         200
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     22      78
    BANK1            80      0      61
    BANK3            96      0      76
    BANK2            96      0      24

Pointer List with Targets:

    PetitModBus_UART_String@s	PTR unsigned char  size(1) Largest target is 24
		 -> Petit_Tx_Buf(BANK2[24]), 

    SendPetitModbus@DataBuf	PTR unsigned char  size(1) Largest target is 9
		 -> temp2(BANK0[4]), temp4(BANK1[9]), temp3(BANK0[4]), temp(BANK0[4]), 

    InitPetitModbus@location	PTR struct . size(1) Largest target is 76
		 -> SlaveInfo(BANK3[76]), 

    MASTER_SLAVE_DATA	PTR struct . size(1) Largest target is 76
		 -> SlaveInfo(BANK3[76]), NULL(NULL[0]), 

    Petit_CRC16@CRC	PTR unsigned int  size(1) Largest target is 2
		 -> Petit_Tx_CRC16(BANK0[2]), Petit_Rx_CRC16(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _PetitModbusIntHandler->_ReceiveInterrupt

Critical Paths under _main in BANK0

    _SendPetitModbus->___bmul
    _ProcessPetitModbus->_HandlePetitModbusReadHoldingRegistersSlaveReadback
    _Petit_TxRTU->_Petit_CRC16
    _Petit_DoSlaveTX->_PetitModBus_UART_String
    _PetitModBus_UART_String->_PetitModBus_UART_Putch
    _Petit_RxRTU->_Petit_CRC16
    _HandlePetitModbusWriteSingleRegisterSlaveReadback->___bmul
    _HandlePetitModbusReadHoldingRegistersSlaveReadback->___bmul
    _HandleMPetitodbusWriteMultipleRegistersSlaveReadback->___bmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    7026
                                             20 BANK0      2     2      0
                    _InitPetitModbus
                 _ProcessPetitModbus
                  _SYSTEM_Initialize
                    _SendPetitModbus
 ---------------------------------------------------------------------------------
 (1) _SendPetitModbus                                      8     4      4    2673
                                              4 BANK0      8     4      4
                   _PetitSendMessage
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _PetitSendMessage                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
                     _TMR2_StopTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ProcessPetitModbus                                   0     0      0    4292
_HandleMPetitodbusWriteMultipleRegis
_HandlePetitModbusReadHoldingRegiste
_HandlePetitModbusWriteSingleRegiste
              _Petit_RxDataAvailable
                        _Petit_RxRTU
                        _Petit_TxRTU
 ---------------------------------------------------------------------------------
 (2) _Petit_TxRTU                                          1     1      0     971
                                             11 BANK0      1     1      0
                        _Petit_CRC16
                    _Petit_DoSlaveTX
 ---------------------------------------------------------------------------------
 (3) _Petit_DoSlaveTX                                      0     0      0     256
            _PetitModBus_UART_String
 ---------------------------------------------------------------------------------
 (4) _PetitModBus_UART_String                              6     4      2     256
                                              1 BANK0      6     4      2
             _PetitModBus_UART_Putch
 ---------------------------------------------------------------------------------
 (5) _PetitModBus_UART_Putch                               1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Petit_RxRTU                                          4     4      0     928
                                             11 BANK0      4     4      0
     _CheckPetitModbusBufferComplete
                        _Petit_CRC16
               _Petit_CheckRxTimeout
 ---------------------------------------------------------------------------------
 (3) _Petit_CheckRxTimeout                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Petit_CRC16                                         11    10      1     715
                                              0 BANK0     11    10      1
 ---------------------------------------------------------------------------------
 (3) _CheckPetitModbusBufferComplete                       4     4      0      40
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _Petit_RxDataAvailable                                2     2      0      34
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _HandlePetitModbusWriteSingleRegisterSlaveReadback    3     3      0     664
                                              4 BANK0      3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _HandlePetitModbusReadHoldingRegistersSlaveReadback  16    16      0     957
                                              4 BANK0     16    16      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _HandleMPetitodbusWriteMultipleRegistersSlaveReadback   7     7      0     738
                                              4 BANK0      7     7      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     664
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _InitPetitModbus                                      2     2      0      61
                                              0 BANK0      2     2      0
       _PetitModBus_TIMER_Initialise
        _PetitModBus_UART_Initialise
 ---------------------------------------------------------------------------------
 (2) _PetitModBus_UART_Initialise                          0     0      0       0
                           _InitUART
 ---------------------------------------------------------------------------------
 (3) _InitUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PetitModBus_TIMER_Initialise                         0     0      0       0
                           _InitTMR1
 ---------------------------------------------------------------------------------
 (3) _InitTMR1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           4     4      0      22
                                              2 COMMON     4     4      0
              _PetitModbusIntHandler
 ---------------------------------------------------------------------------------
 (7) _PetitModbusIntHandler                                0     0      0      22
            _PetitModBus_TimerValues
                   _ReceiveInterrupt
 ---------------------------------------------------------------------------------
 (8) _ReceiveInterrupt                                     2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) _PetitModBus_TimerValues                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitPetitModbus
     _PetitModBus_TIMER_Initialise
       _InitTMR1
     _PetitModBus_UART_Initialise
       _InitUART
   _ProcessPetitModbus
     _HandleMPetitodbusWriteMultipleRegistersSlaveReadback
       ___bmul
     _HandlePetitModbusReadHoldingRegistersSlaveReadback
       ___bmul
     _HandlePetitModbusWriteSingleRegisterSlaveReadback
       ___bmul
     _Petit_RxDataAvailable
     _Petit_RxRTU
       _CheckPetitModbusBufferComplete
       _Petit_CRC16
       _Petit_CheckRxTimeout
     _Petit_TxRTU
       _Petit_CRC16
       _Petit_DoSlaveTX
         _PetitModBus_UART_String
           _PetitModBus_UART_Putch
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_StartTimer
       _TMR2_StopTimer
   _SendPetitModbus
     _PetitSendMessage
     ___bmul

 _INTERRUPT_InterruptManager (ROOT)
   _PetitModbusIntHandler
     _PetitModBus_TimerValues
     _ReceiveInterrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      4C      10       79.2%
BITBANK3            60      0       0       9        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      18      12       25.0%
BITBANK2            60      0       0      11        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      3D       8       76.3%
BITBANK1            50      0       0       7        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     16      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      FB       6        0.0%
ABS                  0      0      FB       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Apr 12 10:47:14 2018

                                                                             pc 0002  
                                                          ??_ProcessPetitModbus 005E  
                                                                ___bmul@product 004C  
                                                                   __CFG_CP$OFF 0000  
                                                                            fsr 0004  
                                                                           l224 0DD8  
                                                                           l153 07CA  
                                                                           l371 033E  
                                                                           l383 04DD  
                                                                           _PR2 0092  
                                                                           fsr0 0004  
                                                                           indf 0000  
                                                                  __CFG_BORV$20 0000  
                                                               _TMR2_Initialize 0E85  
                                                                  __CFG_FOSC$HS 0000  
                HandlePetitModbusReadHoldingRegistersSlaveReadback@BufReadIndex 005C  
                                                                          l2203 0F20  
                                                                          l2107 00DD  
                                                                          l2213 0F30  
                                                                          l2301 0716  
                                                                          l2223 0E4F  
                                                                          l2207 0F22  
                                                                          l2305 072A  
                                                                          l2241 0DF4  
                                                                          l2227 0E55  
                                                                          l2413 07A4  
                                                                          l2333 0615  
                                                                          l2415 07BA  
                                                                          l2191 0F1A  
                                                                          l2335 064E  
                                                                          l2511 00B4  
                                                                          l2185 0F00  
                                                                          l2281 06D8  
                                                                          l2187 0F06  
                                                                          l2347 0677  
                                                                          l2373 0538  
                                                                          l2197 0F1D  
                                                                          l2285 06DD  
                                                                          l2517 00D6  
                                                                          l2509 0090  
                                                                          l2621 03E6  
                                                                          l2605 03B0  
                                                                          l2375 0587  
                                                                          l2279 06BE  
                                                                          l2543 032A  
                                                                          l2377 05B5  
                                                                          l2481 07E4  
                                                                          l2641 040D  
                                                                          l2633 0405  
                                                                          l2617 03CF  
                                                                          l2609 03C7  
                                                                          l2537 0322  
                                                                          l2379 05CB  
                                                                          l2395 0FE8  
                                                                          l2299 06F6  
                                                                          l2475 07D8  
                                                                          l2563 034F  
                                                                          l2571 0363  
                                                                          l2547 0334  
                                                                          l2397 0FFE  
                                                                          l2477 07DC  
                                                                          l2485 07E8  
                                                                          l2661 044B  
                                                                          l2653 042C  
                                                                          l2645 0424  
                                                                          l2629 03EE  
                                                                          l2581 0376  
                                                                          l2557 0347  
                                                                          l2479 07E0  
                                                                          l2575 036C  
                                                                          l2567 0359  
                                                                          l2681 0490  
                                                                          l2673 046F  
                                                                          l2665 0450  
                                                                          l2657 0443  
                                                                          l2593 0398  
                                                                          l2585 0390  
                                                                          l2685 0499  
                                                                          l2677 0474  
                                                                          l2669 0467  
                                                                          l2597 03AF  
                                                                          l2693 04A5  
                                                                          l2689 04A3  
                                                                          u1615 0F2C  
                                                                          u1705 0726  
                                                                          u1545 00E3  
                                                                          u1715 0623  
                                                                 __CFG_DEBUG$ON 0000  
                                                                          u1745 0532  
                                                                          u1835 076C  
                                                                          u1755 053E  
                                                                          u1845 0774  
                                                                          u1695 06FF  
                                                                          u1885 009E  
                                                                          _TMR0 0001  
                                                                          _TMR2 0011  
                                                                 __CFG_FCMEN$ON 0000  
          HandlePetitModbusReadHoldingRegistersSlaveReadback@Petit_StartAddress 0056  
        HandleMPetitodbusWriteMultipleRegistersSlaveReadback@Petit_StartAddress 0051  
                                                                          _main 0312  
                                                                          _temp 0064  
                                                                          _wait 006C  
                                                                          btemp 007E  
                                                        _PetitModBus_UART_Putch 0DD5  
                                                                          start 0012  
                                                                 __CFG_IESO$OFF 0000  
                                                             ??_InitPetitModbus 004A  
                                                             ___bmul@multiplier 004D  
                                                                 __CFG_MCLRE$ON 0000  
                                                       ??_Petit_RxDataAvailable 004A  
                                                __size_of_OSCILLATOR_Initialize 0004  
                                                 __end_of_OSCILLATOR_Initialize 0DB1  
                                                                         ?_main 0076  
                                                                 __CFG_WDTE$OFF 0000  
                                                                         _RCREG 001A  
                                                                         _SPBRG 0099  
                                                                         _PORTA 0005  
                                                                         _PORTB 0006  
                                                                         _PORTC 0007  
                                                                         _PORTD 0008  
                                                                         _TRISA 0085  
                                                                         _TRISB 0086  
                                                                         _TRISC 0087  
                                                                         _TRISD 0088  
                                                                         _TXREG 0019  
                     __end_of_HandlePetitModbusWriteSingleRegisterSlaveReadback 1000  
                    __size_of_HandlePetitModbusWriteSingleRegisterSlaveReadback 0076  
                           ??_HandlePetitModbusWriteSingleRegisterSlaveReadback 004E  
                            ?_HandlePetitModbusWriteSingleRegisterSlaveReadback 0076  
                             _HandlePetitModbusWriteSingleRegisterSlaveReadback 0F8A  
                                                                         _temp2 0046  
                                                                         _temp3 0060  
                                                                         _temp4 00D4  
                                                                         _wait2 003C  
                                                                Petit_CRC16@CRC 004A  
                                                       ??_PetitModbusIntHandler 0078  
                                                                         _state 0042  
                                                                __CFG_BOREN$OFF 0000  
                                                                         pclath 000A  
                                                      ?_PetitModBus_TimerValues 0076  
                                                       _PetitModBus_UART_String 00D8  
                                                                         status 0003  
                  __end_of_HandleMPetitodbusWriteMultipleRegistersSlaveReadback 07BC  
                 __size_of_HandleMPetitodbusWriteMultipleRegistersSlaveReadback 0090  
                        ??_HandleMPetitodbusWriteMultipleRegistersSlaveReadback 004E  
                         ?_HandleMPetitodbusWriteMultipleRegistersSlaveReadback 0076  
                          _HandleMPetitodbusWriteMultipleRegistersSlaveReadback 072C  
                                                                         wtemp0 007E  
                                                               _TMR2_StartTimer 0DB1  
                                                              _ReceiveInterrupt 0E71  
                                                             _Petit_Tx_Buf_Size 003E  
                                                               __initialization 0015  
                                                                  __end_of_main 04E2  
                                                              __end_of_InitUART 0EEB  
                                                              __end_of_InitTMR1 0E09  
                                                                 ??_Petit_CRC16 004B  
                                                       __end_of_TMR2_Initialize 0E9C  
                                                   ?_INTERRUPT_InterruptManager 0076  
                                                                        ??_main 005E  
                                                  __end_of_Petit_CheckRxTimeout 0DD5  
                                                                 ??_Petit_RxRTU 0055  
                                                                 ??_Petit_TxRTU 0055  
                                                               __CFG_CCP2MX$RC1 0000  
                                                                        i1l1851 0EBF  
                                                                        _OSCCON 008F  
                                                                __CFG_PWRTE$OFF 0000  
                                                      __size_of_SendPetitModbus 007E  
                                                                        ___bmul 0E4B  
                                                               Petit_CRC16@Data 004F  
                                                           __end_of_Petit_CRC16 0F8A  
                                                                        saved_w 007E  
                                         Petit_RxRTU@Petit_ReceiveBufferControl 0057  
                                               __end_of_PetitModBus_TimerValues 00FF  
                                                       __end_of_TMR2_StartTimer 0DB5  
                                                     ??_PetitModBus_UART_String 004D  
                                                               __CFG_BORSEN$OFF 0000  
                                                           __end_of_Petit_RxRTU 072C  
                                                           __end_of_Petit_TxRTU 067D  
                                                  ?_PetitModBus_UART_Initialise 0076  
                                                 __size_of_INTERRUPT_Initialize 0003  
                                                             _SYSTEM_Initialize 0E5E  
                                                       __end_of__initialization 0056  
                                                            ?_SYSTEM_Initialize 0076  
                                                           ___bmul@multiplicand 004A  
                                                                __pcstackCOMMON 0076  
                                                                  __pidataBANK0 0DE1  
                                                                  __pidataBANK1 07F6  
                                                           ??_SYSTEM_Initialize 004A  
                                                              ?_TMR2_Initialize 0076  
                                                     __size_of_PetitSendMessage 000D  
                                                                _OPTION_REGbits 0081  
                                                       InitPetitModbus@location 004B  
     HandlePetitModbusReadHoldingRegistersSlaveReadback@Petit_NumberOfRegisters 005A  
   HandleMPetitodbusWriteMultipleRegistersSlaveReadback@Petit_NumberOfRegisters 0053  
                                                               _InitPetitModbus 0E18  
                                                     __end_of_SYSTEM_Initialize 0E71  
                                                      __size_of_Petit_DoSlaveTX 000F  
                                                                    __pbssBANK0 0020  
                                                                    __pbssBANK1 00A0  
                                                                    __pbssBANK2 0110  
                                                                    __pbssBANK3 0190  
                                                       ?_PetitModBus_UART_Putch 0076  
                                                                     ?_InitUART 0076  
                                                                     ?_InitTMR1 0076  
                                                 ??_PetitModBus_UART_Initialise 004A  
                                           PetitModBus_UART_String@DummyCounter 004F  
                                                          _Petit_CheckRxTimeout 0DCA  
                                                                    __pmaintext 0312  
                                                                       ?___bmul 004A  
                                                __size_of_Petit_RxDataAvailable 0009  
                                                 __end_of_Petit_RxDataAvailable 0DCA  
                                                                    __pintentry 0004  
                                                   __size_of_ProcessPetitModbus 003A  
                                                                   _Petit_CRC16 0F32  
                                                             ??_SendPetitModbus 0052  
                                                      __end_of_ReceiveInterrupt 0E85  
                                                                   _Petit_RxRTU 067D  
                                                                   _Petit_TxRTU 05CD  
                                                       __size_of_TMR2_StopTimer 0004  
                                                __end_of_PetitModBus_UART_Putch 0DE1  
                                                              ?_TMR2_StartTimer 0076  
                                                                    __stringtab 0100  
                                                                    ??_InitUART 004A  
                                                                    ??_InitTMR1 004A  
                                                             __end_of_auchCRCHi 0312  
                                                __size_of_PetitModbusIntHandler 001B  
                                                             __end_of_auchCRCLo 0212  
                                                 __end_of_PetitModbusIntHandler 0ED0  
                                                         ?_Petit_CheckRxTimeout 0076  
                                                               __size_of___bmul 0013  
                                              __size_of_PetitModBus_TimerValues 0005  
                                                                       __ptext1 005A  
                                                                       __ptext2 0DED  
                                                                       __ptext3 0E5E  
                                                                       __ptext4 0E85  
                                                                       __ptext5 0DB5  
                                                                       __ptext6 0DB1  
                                                                       __ptext7 0E9C  
                                                                       __ptext8 0DAD  
                                                                       __ptext9 0DA2  
                                                       __end_of_InitPetitModbus 0E28  
                                                         _OSCILLATOR_Initialize 0DAD  
                                                                     _T2CONbits 0012  
                                                      ??_PIN_MANAGER_Initialize 004A  
                                                    __size_of_SYSTEM_Initialize 0013  
                                                                       clrloop0 0DBA  
                                                                 _Petit_Rx_Data 0020  
                                                          end_of_initialization 0056  
                                                                 _Petit_Tx_Data 00A0  
                                                             ??_Petit_DoSlaveTX 0051  
                                                   Petit_RxDataAvailable@Result 004B  
                                                                     _RCSTAbits 0018  
                                                                  __pstringtext 0100  
                                                              _PetitSendMessage 0DED  
                                                                     _PORTDbits 0008  
                                                          ReceiveInterrupt@Data 0077  
                                                                     _TRISCbits 0087  
                                                                     _TRISDbits 0088  
                                                        ??_Petit_CheckRxTimeout 004A  
                                                                     _TXSTAbits 0098  
                                                  __end_of_INTERRUPT_Initialize 0DA5  
                                                                __end_of___bmul 0E5E  
                                                 PetitModBus_UART_String@Length 004B  
                                                        ?_OSCILLATOR_Initialize 0076  
                                                              ?_InitPetitModbus 0076  
                                                           start_initialization 0015  
                                          __end_of_PetitModBus_TIMER_Initialise 0DA9  
                                         __size_of_PetitModBus_TIMER_Initialise 0004  
                                                  _PetitModBus_TIMER_Initialise 0DA5  
                                               __size_of_PIN_MANAGER_Initialize 0019  
                                                                _TMR2_StopTimer 0DB5  
                                                              _Petit_Tx_Current 0040  
                                                           Petit_CRC16@uchCRCHi 0051  
                                                           Petit_CRC16@uchCRCLo 0053  
                                                             __size_of_InitUART 001B  
                                                             __size_of_InitTMR1 000F  
                                                               _SendPetitModbus 005A  
                                                      PetitModBus_UART_String@s 004E  
                                                     SendPetitModbus@return_val 0054  
                                                                     _SlaveInfo 0190  
                                                                      ??___bmul 004B  
                                                       _PetitModBus_TimerValues 00FA  
                                                                    init_fetch0 0E28  
                                                                   __pdataBANK0 0060  
                                                                   __pdataBANK1 00D4  
                                                                  ?_Petit_CRC16 004A  
                                        __end_of_CheckPetitModbusBufferComplete 0F32  
                                       __size_of_CheckPetitModbusBufferComplete 0047  
                                                _CheckPetitModbusBufferComplete 0EEB  
                                                                  ?_Petit_RxRTU 0076  
                                                                  ?_Petit_TxRTU 0076  
                                                             ?_ReceiveInterrupt 0076  
                                                        __end_of_TMR2_StopTimer 0DB9  
                                                      ?_PetitModBus_UART_String 004B  
                                                                   __pbssCOMMON 0070  
                                                                     ___latbits 0002  
                                                                 __pcstackBANK0 004A  
                                                      __size_of_TMR2_Initialize 0017  
                                                           _PetitReceiveCounter 0075  
                                                            ??_ReceiveInterrupt 0076  
                                                 ?_PetitModBus_TIMER_Initialise 0076  
                                                                     __pnvBANK0 006C  
                                                                     _auchCRCHi 0212  
                                                                     _auchCRCLo 0112  
                                                        _PIN_MANAGER_Initialize 0E9C  
                                                    __end_of_ProcessPetitModbus 07F6  
                                                  ??_INTERRUPT_InterruptManager 0078  
                                                         _Petit_RxDataAvailable 0DC1  
                                                               ?_TMR2_StopTimer 0076  
                                                               _Petit_DoSlaveTX 0E09  
                                           __end_of_PetitModBus_UART_Initialise 0DAD  
                                                   _PetitModBus_UART_Initialise 0DA9  
                                                       __end_of_SendPetitModbus 00D8  
                                                       _Petit_Rx_Data_Available 0074  
                                                          _INTERRUPT_Initialize 0DA2  
                                                             _MASTER_SLAVE_DATA 0045  
                                                             interrupt_function 0004  
                                                      __end_of_PetitSendMessage 0DFA  
                                                                  _Petit_Tx_Buf 0110  
                                                                     clear_ram0 0DB9  
                                                         _PetitModbusIntHandler 0EB5  
                                                                      _PIE1bits 008C  
                                                      __size_of_TMR2_StartTimer 0004  
                                                     ??_PetitModBus_TimerValues 0076  
                                           __size_of_INTERRUPT_InterruptManager 0012  
                                                                      _PIR1bits 000C  
                                               __end_of_PetitModBus_UART_String 00FA  
                                                            Petit_RxRTU@Petit_i 0058  
                                                                   __stringbase 0112  
                                                                    _ADCON1bits 009F  
HandlePetitModbusReadHoldingRegistersSlaveReadback@Petit_NumberOfRegistersBytes 0052  
                    __end_of_HandlePetitModbusReadHoldingRegistersSlaveReadback 05CD  
                   __size_of_HandlePetitModbusReadHoldingRegistersSlaveReadback 00EB  
                          ??_HandlePetitModbusReadHoldingRegistersSlaveReadback 004E  
                           ?_HandlePetitModbusReadHoldingRegistersSlaveReadback 0076  
                            _HandlePetitModbusReadHoldingRegistersSlaveReadback 04E2  
                                                         ?_INTERRUPT_Initialize 0076  
                                                                      _InitUART 0ED0  
                                                                      _InitTMR1 0DFA  
                                                             ??_TMR2_Initialize 004A  
                                                ??_PetitModBus_TIMER_Initialise 004A  
                                                       PetitModBus_UART_Putch@c 004A  
                                                       ??_OSCILLATOR_Initialize 004A  
                                                        ?_Petit_RxDataAvailable 0076  
                                                            _PetitReceiveBuffer 00BC  
                                                         _PetitModbusTimerValue 0070  
                                                            __end_of__stringtab 0112  
                                                       __end_of_Petit_DoSlaveTX 0E18  
                                                          __size_of_Petit_CRC16 0058  
                                                      ??_PetitModBus_UART_Putch 004A  
                                                          __size_of_Petit_RxRTU 00AF  
                                                          __size_of_Petit_TxRTU 00B0  
                                                                      __ptext10 07BC  
                                                                      __ptext11 05CD  
                                                                      __ptext20 0F8A  
                                                                      __ptext12 0E09  
                                                                      __ptext21 04E2  
                                                                      __ptext13 00D8  
                                                                      __ptext30 0EB5  
                                                                      __ptext22 072C  
                                                                      __ptext14 0DD5  
                                                                      __ptext31 0E71  
                                                                      __ptext23 0E4B  
                                                                      __ptext15 067D  
                                                                      __ptext32 00FA  
                                                                      __ptext24 0E18  
                                                                      __ptext16 0DCA  
                                                                      __ptext25 0DA9  
                                                                      __ptext17 0F32  
                                                                      __ptext26 0ED0  
                                                                      __ptext18 0EEB  
                                                                      __ptext27 0DA5  
                                                                      __ptext19 0DC1  
                                                                      __ptext28 0DFA  
                                                                      __ptext29 0E39  
                                                              ?_SendPetitModbus 004E  
                                                        ?_PetitModbusIntHandler 0076  
                                                                 __size_of_main 01D0  
                                                 __size_of_Petit_CheckRxTimeout 000B  
                                                             ??_TMR2_StartTimer 004A  
                                            __end_of_INTERRUPT_InterruptManager 0E4B  
                                                    _INTERRUPT_InterruptManager 0E39  
                                                                _Petit_Rx_CRC16 0068  
                                                                _Petit_Tx_CRC16 006A  
                                                                _Petit_Rx_State 0043  
                                                                    _INTCONbits 000B  
                                                             Petit_CRC16@uIndex 0050  
                                                                _Petit_Tx_State 0044  
                                                                      init_ram0 0E2C  
                                                        ??_INTERRUPT_Initialize 004A  
                                                      __size_of_InitPetitModbus 0010  
                                                                      intlevel1 0000  
                                              ??_CheckPetitModbusBufferComplete 004A  
                                               ?_CheckPetitModbusBufferComplete 0076  
                                                           _Timer1_Tick_Counter 0072  
                                                       SendPetitModbus@Function 004E  
                                                       ?_PIN_MANAGER_Initialize 0076  
                                              __size_of_PetitModBus_UART_String 0022  
                                                     __size_of_ReceiveInterrupt 0014  
                                                                     stringcode 010A  
                     HandlePetitModbusReadHoldingRegistersSlaveReadback@RegData 0054  
                                                        SendPetitModbus@Address 0055  
                                                        SendPetitModbus@DataBuf 004F  
                                                        SendPetitModbus@DataLen 0050  
                                                              ??_TMR2_StopTimer 004A  
                     HandlePetitModbusReadHoldingRegistersSlaveReadback@Petit_i 0058  
                                                              ?_Petit_DoSlaveTX 0076  
                                                            _ProcessPetitModbus 07BC  
                                               __size_of_PetitModBus_UART_Putch 000C  
                                                                      stringtab 0100  
                       CheckPetitModbusBufferComplete@PetitExpectedReceiveCount 004C  
                                                           ?_ProcessPetitModbus 0076  
                                                __end_of_PIN_MANAGER_Initialize 0EB5  
                                                             ?_PetitSendMessage 0076  
                                                            ??_PetitSendMessage 004A  
                                          __size_of_PetitModBus_UART_Initialise 0004  
