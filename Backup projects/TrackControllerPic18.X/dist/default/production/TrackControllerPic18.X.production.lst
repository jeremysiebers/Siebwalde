

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Feb 04 16:58:08 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og9 
     1                           	processor	18F97J60
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK5,global,class=CODE,delta=1,noexec
    10                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    11                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    22                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    23                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    24                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    25                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    26                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    27                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    28                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    29                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    30                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    31                           	psect	text0,global,reloc=2,class=CODE,delta=1
    32                           	psect	text1,global,reloc=2,class=CODE,delta=1
    33                           	psect	text2,global,reloc=2,class=CODE,delta=1
    34                           	psect	text3,global,reloc=2,class=CODE,delta=1
    35                           	psect	text4,global,reloc=2,class=CODE,delta=1
    36                           	psect	text5,global,reloc=2,class=CODE,delta=1
    37                           	psect	text6,global,reloc=2,class=CODE,delta=1
    38                           	psect	text7,global,reloc=2,class=CODE,delta=1
    39                           	psect	text8,global,reloc=2,class=CODE,delta=1
    40                           	psect	text9,global,reloc=2,class=CODE,delta=1
    41                           	psect	text10,global,reloc=2,class=CODE,delta=1
    42                           	psect	text11,global,reloc=2,class=CODE,delta=1
    43                           	psect	text12,global,reloc=2,class=CODE,delta=1
    44                           	psect	text13,global,reloc=2,class=CODE,delta=1
    45                           	psect	text14,global,reloc=2,class=CODE,delta=1
    46                           	psect	text15,global,reloc=2,class=CODE,delta=1
    47                           	psect	text16,global,reloc=2,class=CODE,delta=1
    48                           	psect	text17,global,reloc=2,class=CODE,delta=1
    49                           	psect	text18,global,reloc=2,class=CODE,delta=1
    50                           	psect	text19,global,reloc=2,class=CODE,delta=1
    51                           	psect	text20,global,reloc=2,class=CODE,delta=1
    52                           	psect	text21,global,reloc=2,class=CODE,delta=1
    53                           	psect	text22,global,reloc=2,class=CODE,delta=1
    54                           	psect	text23,global,reloc=2,class=CODE,delta=1
    55                           	psect	text24,global,reloc=2,class=CODE,delta=1
    56                           	psect	text25,global,reloc=2,class=CODE,delta=1
    57                           	psect	text26,global,reloc=2,class=CODE,delta=1
    58                           	psect	text27,global,reloc=2,class=CODE,delta=1
    59                           	psect	text28,global,reloc=2,class=CODE,delta=1
    60                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text30,global,reloc=2,class=CODE,delta=1
    62                           	psect	text31,global,reloc=2,class=CODE,delta=1
    63                           	psect	text32,global,reloc=2,class=CODE,delta=1
    64                           	psect	text33,global,reloc=2,class=CODE,delta=1
    65                           	psect	text34,global,reloc=2,class=CODE,delta=1
    66                           	psect	text35,global,reloc=2,class=CODE,delta=1
    67                           	psect	text36,global,reloc=2,class=CODE,delta=1
    68                           	psect	text37,global,reloc=2,class=CODE,delta=1
    69                           	psect	text38,global,reloc=2,class=CODE,delta=1
    70                           	psect	text39,global,reloc=2,class=CODE,delta=1
    71                           	psect	text40,global,reloc=2,class=CODE,delta=1
    72                           	psect	text41,global,reloc=2,class=CODE,delta=1
    73                           	psect	text42,global,reloc=2,class=CODE,delta=1
    74                           	psect	text43,global,reloc=2,class=CODE,delta=1
    75                           	psect	text44,global,reloc=2,class=CODE,delta=1
    76                           	psect	text45,global,reloc=2,class=CODE,delta=1
    77                           	psect	text46,global,reloc=2,class=CODE,delta=1
    78                           	psect	text47,global,reloc=2,class=CODE,delta=1
    79                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=3
    80                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=3
    91                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=3
    92                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=3
    93                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=3
    94                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text65,global,reloc=2,class=CODE,delta=1
    97                           	psect	text66,global,reloc=2,class=CODE,delta=1
    98                           	psect	text67,global,reloc=2,class=CODE,delta=1
    99                           	psect	text68,global,reloc=2,class=CODE,delta=1
   100                           	psect	text69,global,reloc=2,class=CODE,delta=1
   101                           	psect	text70,global,reloc=2,class=CODE,delta=1
   102                           	psect	text71,global,reloc=2,class=CODE,delta=1
   103                           	psect	text72,global,reloc=2,class=CODE,delta=1
   104                           	psect	text73,global,reloc=2,class=CODE,delta=1
   105                           	psect	text74,global,reloc=2,class=CODE,delta=1
   106                           	psect	text75,global,reloc=2,class=CODE,delta=1
   107                           	psect	text76,global,reloc=2,class=CODE,delta=1
   108                           	psect	text77,global,reloc=2,class=CODE,delta=1
   109                           	psect	text78,global,reloc=2,class=CODE,delta=1
   110                           	psect	text79,global,reloc=2,class=CODE,delta=1
   111                           	psect	text80,global,reloc=2,class=CODE,delta=1
   112                           	psect	text81,global,reloc=2,class=CODE,delta=1
   113                           	psect	text82,global,reloc=2,class=CODE,delta=1
   114                           	psect	text83,global,reloc=2,class=CODE,delta=1
   115                           	psect	text84,global,reloc=2,class=CODE,delta=1
   116                           	psect	text85,global,reloc=2,class=CODE,delta=1
   117                           	psect	text86,global,reloc=2,class=CODE,delta=1
   118                           	psect	text87,global,reloc=2,class=CODE,delta=1
   119                           	psect	text88,global,reloc=2,class=CODE,delta=1
   120                           	psect	text89,global,reloc=2,class=CODE,delta=1
   121                           	psect	text90,global,reloc=2,class=CODE,delta=1
   122                           	psect	text91,global,reloc=2,class=CODE,delta=1
   123                           	psect	text92,global,reloc=2,class=CODE,delta=1
   124                           	psect	text93,global,reloc=2,class=CODE,delta=1
   125                           	psect	text94,global,reloc=2,class=CODE,delta=1
   126                           	psect	text95,global,reloc=2,class=CODE,delta=1
   127                           	psect	text96,global,reloc=2,class=CODE,delta=1
   128                           	psect	text97,global,reloc=2,class=CODE,delta=1
   129                           	psect	text98,global,reloc=2,class=CODE,delta=1
   130                           	psect	text99,global,reloc=2,class=CODE,delta=1
   131                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=3
   132                           	psect	text101,global,reloc=2,class=CODE,delta=1
   133                           	psect	text102,global,reloc=2,class=CODE,delta=1
   134                           	psect	text103,global,reloc=2,class=CODE,delta=1
   135                           	psect	text104,global,reloc=2,class=CODE,delta=1,inline
   136                           	psect	text105,global,reloc=2,class=CODE,delta=1
   137                           	psect	text106,global,reloc=2,class=CODE,delta=1
   138                           	psect	text107,global,reloc=2,class=CODE,delta=1,inline
   139                           	psect	text108,global,reloc=2,class=CODE,delta=1
   140                           	psect	text109,global,reloc=2,class=CODE,delta=1
   141                           	psect	text110,global,reloc=2,class=CODE,delta=1,group=2
   142                           	psect	text111,global,reloc=2,class=CODE,delta=1
   143                           	psect	text112,global,reloc=2,class=CODE,delta=1
   144                           	psect	text113,global,reloc=2,class=CODE,delta=1
   145                           	psect	text114,global,reloc=2,class=CODE,delta=1
   146                           	psect	text115,global,reloc=2,class=CODE,delta=1,inline
   147                           	psect	text116,global,reloc=2,class=CODE,delta=1
   148                           	psect	text117,global,reloc=2,class=CODE,delta=1
   149                           	psect	text118,global,reloc=2,class=CODE,delta=1
   150                           	psect	text119,global,reloc=2,class=CODE,delta=1
   151                           	psect	text120,global,reloc=2,class=CODE,delta=1
   152                           	psect	text121,global,reloc=2,class=CODE,delta=1
   153                           	psect	text122,global,reloc=2,class=CODE,delta=1
   154                           	psect	text123,global,reloc=2,class=CODE,delta=1
   155                           	psect	text124,global,reloc=2,class=CODE,delta=1
   156                           	psect	text125,global,reloc=2,class=CODE,delta=1
   157                           	psect	text126,global,reloc=2,class=CODE,delta=1
   158                           	psect	text127,global,reloc=2,class=CODE,delta=1
   159                           	psect	text128,global,reloc=2,class=CODE,delta=1
   160                           	psect	text129,global,reloc=2,class=CODE,delta=1
   161                           	psect	text130,global,reloc=2,class=CODE,delta=1,group=3
   162                           	psect	text131,global,reloc=2,class=CODE,delta=1,group=2
   163                           	psect	text132,global,reloc=2,class=CODE,delta=1
   164                           	psect	text133,global,reloc=2,class=CODE,delta=1
   165                           	psect	text134,global,reloc=2,class=CODE,delta=1
   166                           	psect	text135,global,reloc=2,class=CODE,delta=1
   167                           	psect	text136,global,reloc=2,class=CODE,delta=1
   168                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   169                           	psect	text138,global,reloc=2,class=CODE,delta=1
   170                           	psect	text139,global,reloc=2,class=CODE,delta=1
   171                           	psect	text140,global,reloc=2,class=CODE,delta=1
   172                           	psect	text141,global,reloc=2,class=CODE,delta=1
   173                           	psect	text142,global,reloc=2,class=CODE,delta=1
   174                           	psect	text143,global,reloc=2,class=CODE,delta=1
   175                           	psect	text144,global,reloc=2,class=CODE,delta=1
   176                           	psect	text145,global,reloc=2,class=CODE,delta=1
   177                           	psect	text146,global,reloc=2,class=CODE,delta=1
   178                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   179                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   180                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
   181                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   182                           	dabs	1,0xE7E,2,_errataTemp
   183   000000                     
   184                           ; Generated 17/08/2023 GMT
   185                           ; 
   186                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   187                           ; All rights reserved.
   188                           ; 
   189                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   190                           ; 
   191                           ; Redistribution and use in source and binary forms, with or without modification, are
   192                           ; permitted provided that the following conditions are met:
   193                           ; 
   194                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   195                           ;        conditions and the following disclaimer.
   196                           ; 
   197                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   198                           ;        of conditions and the following disclaimer in the documentation and/or other
   199                           ;        materials provided with the distribution. Publication is not required when
   200                           ;        this file is used in an embedded application.
   201                           ; 
   202                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   203                           ;        software without specific prior written permission.
   204                           ; 
   205                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   206                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   207                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   208                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   209                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   210                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   211                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   212                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   213                           ; 
   214                           ; 
   215                           ; Code-generator required, PIC18F97J60 Definitions
   216                           ; 
   217                           ; SFR Addresses
   218   000000                     
   219                           	psect	idataBANK1
   220   018326                     __pidataBANK1:
   221                           	callstack 0
   222                           
   223                           ;initializer for _milliseconds_counter
   224   018326  0001               	dw	1
   225   018328  0000               	dw	0
   226                           
   227                           ;initializer for _tBootWaitTimeCnt
   228   01832A  0001               	dw	1
   229   01832C  0000               	dw	0
   230                           
   231                           ;initializer for _lfsr_value
   232   01832E  40                 	db	64
   233                           
   234                           ;initializer for _xor_mask
   235   01832F  41                 	db	65
   236                           
   237                           ;initializer for _invert
   238   018330  01                 	db	1
   239                           
   240                           	psect	idataBANK2
   241   017B2C                     __pidataBANK2:
   242                           	callstack 0
   243                           
   244                           ;initializer for _VOLTDETECT
   245   017B2C  0005               	dw	5
   246   017B2E  0000               	dw	0
   247   017B30  0000               	dw	0
   248   017B32  00                 	db	0
   249   017B33  00                 	db	0
   250   017B34  84                 	db	132
   251   017B35  0F                 	db	15
   252   017B36  80                 	db	128
   253   017B37  00                 	db	0
   254   017B38  01                 	db	1
   255   017B39  00                 	db	0
   256                           
   257                           ;initializer for _HALL_BLK_13
   258   017B3A  0005               	dw	5
   259   017B3C  0000               	dw	0
   260   017B3E  0000               	dw	0
   261   017B40  00                 	db	0
   262   017B41  00                 	db	0
   263   017B42  85                 	db	133
   264   017B43  0F                 	db	15
   265   017B44  01                 	db	1
   266   017B45  00                 	db	0
   267   017B46  00                 	db	0
   268   017B47  01                 	db	1
   269                           
   270                           ;initializer for _macAddress
   271   017B48  02                 	db	2
   272   017B49  00                 	db	0
   273   017B4A  00                 	db	0
   274   017B4B  00                 	db	0
   275   017B4C  00                 	db	0
   276   017B4D  01                 	db	1
   277                           
   278                           ;initializer for _REL_T5
   279   017B4E  8C                 	db	140
   280   017B4F  0F                 	db	15
   281   017B50  20                 	db	32
   282                           
   283                           ;initializer for _REL_T4
   284   017B51  8C                 	db	140
   285   017B52  0F                 	db	15
   286   017B53  10                 	db	16
   287                           
   288                           ;initializer for _OCC_TO_T3
   289   017B54  8D                 	db	141
   290   017B55  0F                 	db	15
   291   017B56  04                 	db	4
   292                           
   293                           ;initializer for _OCC_TO_T6
   294   017B57  8D                 	db	141
   295   017B58  0F                 	db	15
   296   017B59  08                 	db	8
   297                           
   298                           ;initializer for _OCC_TO_STN_12
   299   017B5A  8D                 	db	141
   300   017B5B  0F                 	db	15
   301   017B5C  02                 	db	2
   302                           
   303                           ;initializer for _OCC_TO_STN_11
   304   017B5D  8D                 	db	141
   305   017B5E  0F                 	db	15
   306   017B5F  01                 	db	1
   307                           
   308                           ;initializer for _OCC_TO_STN_10
   309   017B60  91                 	db	145
   310   017B61  0F                 	db	15
   311   017B62  80                 	db	128
   312                           
   313                           ;initializer for _OCC_TO_STN_3
   314   017B63  91                 	db	145
   315   017B64  0F                 	db	15
   316   017B65  40                 	db	64
   317                           
   318                           ;initializer for _OCC_TO_STN_2
   319   017B66  91                 	db	145
   320   017B67  0F                 	db	15
   321   017B68  20                 	db	32
   322                           
   323                           ;initializer for _OCC_TO_STN_1
   324   017B69  91                 	db	145
   325   017B6A  0F                 	db	15
   326   017B6B  10                 	db	16
   327                           
   328                           ;initializer for _OCC_TO_9B
   329   017B6C  8C                 	db	140
   330   017B6D  0F                 	db	15
   331   017B6E  80                 	db	128
   332                           
   333                           ;initializer for _OCC_TO_21B
   334   017B6F  8C                 	db	140
   335   017B70  0F                 	db	15
   336   017B71  40                 	db	64
   337                           
   338                           	psect	idataBANK3
   339   0175E4                     __pidataBANK3:
   340                           	callstack 0
   341                           
   342                           ;initializer for _HALL_BLK_4A
   343   0175E4  0005               	dw	5
   344   0175E6  0000               	dw	0
   345   0175E8  0000               	dw	0
   346   0175EA  00                 	db	0
   347   0175EB  00                 	db	0
   348   0175EC  85                 	db	133
   349   0175ED  0F                 	db	15
   350   0175EE  80                 	db	128
   351   0175EF  00                 	db	0
   352   0175F0  00                 	db	0
   353   0175F1  01                 	db	1
   354                           
   355                           ;initializer for _HALL_BLK_9B
   356   0175F2  0005               	dw	5
   357   0175F4  0000               	dw	0
   358   0175F6  0000               	dw	0
   359   0175F8  00                 	db	0
   360   0175F9  00                 	db	0
   361   0175FA  85                 	db	133
   362   0175FB  0F                 	db	15
   363   0175FC  40                 	db	64
   364   0175FD  00                 	db	0
   365   0175FE  00                 	db	0
   366   0175FF  01                 	db	1
   367                           
   368                           ;initializer for _HALL_BLK_T2
   369   017600  0005               	dw	5
   370   017602  0000               	dw	0
   371   017604  0000               	dw	0
   372   017606  00                 	db	0
   373   017607  00                 	db	0
   374   017608  85                 	db	133
   375   017609  0F                 	db	15
   376   01760A  20                 	db	32
   377   01760B  00                 	db	0
   378   01760C  00                 	db	0
   379   01760D  01                 	db	1
   380                           
   381                           ;initializer for _HALL_BLK_T1
   382   01760E  0005               	dw	5
   383   017610  0000               	dw	0
   384   017612  0000               	dw	0
   385   017614  00                 	db	0
   386   017615  00                 	db	0
   387   017616  85                 	db	133
   388   017617  0F                 	db	15
   389   017618  10                 	db	16
   390   017619  00                 	db	0
   391   01761A  00                 	db	0
   392   01761B  01                 	db	1
   393                           
   394                           ;initializer for _HALL_BLK_T5
   395   01761C  0005               	dw	5
   396   01761E  0000               	dw	0
   397   017620  0000               	dw	0
   398   017622  00                 	db	0
   399   017623  00                 	db	0
   400   017624  85                 	db	133
   401   017625  0F                 	db	15
   402   017626  08                 	db	8
   403   017627  00                 	db	0
   404   017628  00                 	db	0
   405   017629  01                 	db	1
   406                           
   407                           ;initializer for _HALL_BLK_T4
   408   01762A  0005               	dw	5
   409   01762C  0000               	dw	0
   410   01762E  0000               	dw	0
   411   017630  00                 	db	0
   412   017631  00                 	db	0
   413   017632  85                 	db	133
   414   017633  0F                 	db	15
   415   017634  04                 	db	4
   416   017635  00                 	db	0
   417   017636  00                 	db	0
   418   017637  01                 	db	1
   419                           
   420                           ;initializer for _HALL_BLK_21A
   421   017638  0005               	dw	5
   422   01763A  0000               	dw	0
   423   01763C  0000               	dw	0
   424   01763E  00                 	db	0
   425   01763F  00                 	db	0
   426   017640  85                 	db	133
   427   017641  0F                 	db	15
   428   017642  02                 	db	2
   429   017643  00                 	db	0
   430   017644  00                 	db	0
   431   017645  01                 	db	1
   432                           
   433                           	psect	idataBANK4
   434   0164D2                     __pidataBANK4:
   435                           	callstack 0
   436                           
   437                           ;initializer for _OCC_FR_21B
   438   0164D2  00C8               	dw	200
   439   0164D4  0000               	dw	0
   440   0164D6  0000               	dw	0
   441   0164D8  00                 	db	0
   442   0164D9  00                 	db	0
   443   0164DA  84                 	db	132
   444   0164DB  0F                 	db	15
   445   0164DC  40                 	db	64
   446   0164DD  00                 	db	0
   447   0164DE  01                 	db	1
   448   0164DF  01                 	db	1
   449                           
   450                           ;initializer for _OCC_FR_9B
   451   0164E0  00C8               	dw	200
   452   0164E2  0000               	dw	0
   453   0164E4  0000               	dw	0
   454   0164E6  00                 	db	0
   455   0164E7  00                 	db	0
   456   0164E8  86                 	db	134
   457   0164E9  0F                 	db	15
   458   0164EA  80                 	db	128
   459   0164EB  00                 	db	0
   460   0164EC  01                 	db	1
   461   0164ED  01                 	db	1
   462                           
   463                           ;initializer for _OCC_FR_22B
   464   0164EE  00C8               	dw	200
   465   0164F0  0000               	dw	0
   466   0164F2  0000               	dw	0
   467   0164F4  00                 	db	0
   468   0164F5  00                 	db	0
   469   0164F6  86                 	db	134
   470   0164F7  0F                 	db	15
   471   0164F8  40                 	db	64
   472   0164F9  00                 	db	0
   473   0164FA  01                 	db	1
   474   0164FB  01                 	db	1
   475                           
   476                           ;initializer for _OCC_FR_23B
   477   0164FC  00C8               	dw	200
   478   0164FE  0000               	dw	0
   479   016500  0000               	dw	0
   480   016502  00                 	db	0
   481   016503  00                 	db	0
   482   016504  86                 	db	134
   483   016505  0F                 	db	15
   484   016506  20                 	db	32
   485   016507  00                 	db	0
   486   016508  01                 	db	1
   487   016509  01                 	db	1
   488                           
   489                           ;initializer for _CTRL_OFF
   490   01650A  00C8               	dw	200
   491   01650C  0000               	dw	0
   492   01650E  0000               	dw	0
   493   016510  00                 	db	0
   494   016511  00                 	db	0
   495   016512  86                 	db	134
   496   016513  0F                 	db	15
   497   016514  10                 	db	16
   498   016515  00                 	db	0
   499   016516  01                 	db	1
   500   016517  01                 	db	1
   501                           
   502                           ;initializer for _OCC_FR_T3
   503   016518  00C8               	dw	200
   504   01651A  0000               	dw	0
   505   01651C  0000               	dw	0
   506   01651E  00                 	db	0
   507   01651F  00                 	db	0
   508   016520  86                 	db	134
   509   016521  0F                 	db	15
   510   016522  08                 	db	8
   511   016523  00                 	db	0
   512   016524  01                 	db	1
   513   016525  01                 	db	1
   514                           
   515                           ;initializer for _OCC_FR_T6
   516   016526  00C8               	dw	200
   517   016528  0000               	dw	0
   518   01652A  0000               	dw	0
   519   01652C  00                 	db	0
   520   01652D  00                 	db	0
   521   01652E  86                 	db	134
   522   01652F  0F                 	db	15
   523   016530  04                 	db	4
   524   016531  00                 	db	0
   525   016532  01                 	db	1
   526   016533  01                 	db	1
   527                           
   528                           ;initializer for _OCC_FR_STN_12
   529   016534  00C8               	dw	200
   530   016536  0000               	dw	0
   531   016538  0000               	dw	0
   532   01653A  00                 	db	0
   533   01653B  00                 	db	0
   534   01653C  86                 	db	134
   535   01653D  0F                 	db	15
   536   01653E  02                 	db	2
   537   01653F  00                 	db	0
   538   016540  01                 	db	1
   539   016541  01                 	db	1
   540                           
   541                           ;initializer for _OCC_FR_STN_11
   542   016542  00C8               	dw	200
   543   016544  0000               	dw	0
   544   016546  0000               	dw	0
   545   016548  00                 	db	0
   546   016549  00                 	db	0
   547   01654A  86                 	db	134
   548   01654B  0F                 	db	15
   549   01654C  01                 	db	1
   550   01654D  00                 	db	0
   551   01654E  01                 	db	1
   552   01654F  01                 	db	1
   553                           
   554                           ;initializer for _OCC_FR_STN_10
   555   016550  00C8               	dw	200
   556   016552  0000               	dw	0
   557   016554  0000               	dw	0
   558   016556  00                 	db	0
   559   016557  00                 	db	0
   560   016558  87                 	db	135
   561   016559  0F                 	db	15
   562   01655A  80                 	db	128
   563   01655B  00                 	db	0
   564   01655C  01                 	db	1
   565   01655D  01                 	db	1
   566                           
   567                           ;initializer for _OCC_FR_STN_3
   568   01655E  00C8               	dw	200
   569   016560  0000               	dw	0
   570   016562  0000               	dw	0
   571   016564  00                 	db	0
   572   016565  00                 	db	0
   573   016566  87                 	db	135
   574   016567  0F                 	db	15
   575   016568  40                 	db	64
   576   016569  00                 	db	0
   577   01656A  01                 	db	1
   578   01656B  01                 	db	1
   579                           
   580                           ;initializer for _OCC_FR_STN_2
   581   01656C  00C8               	dw	200
   582   01656E  0000               	dw	0
   583   016570  0000               	dw	0
   584   016572  00                 	db	0
   585   016573  00                 	db	0
   586   016574  87                 	db	135
   587   016575  0F                 	db	15
   588   016576  20                 	db	32
   589   016577  00                 	db	0
   590   016578  01                 	db	1
   591   016579  01                 	db	1
   592                           
   593                           ;initializer for _OCC_FR_STN_1
   594   01657A  00C8               	dw	200
   595   01657C  0000               	dw	0
   596   01657E  0000               	dw	0
   597   016580  00                 	db	0
   598   016581  00                 	db	0
   599   016582  87                 	db	135
   600   016583  0F                 	db	15
   601   016584  10                 	db	16
   602   016585  00                 	db	0
   603   016586  01                 	db	1
   604   016587  01                 	db	1
   605                           
   606                           ;initializer for _OCC_FR_BLK4
   607   016588  07D0               	dw	2000
   608   01658A  0000               	dw	0
   609   01658C  0000               	dw	0
   610   01658E  00                 	db	0
   611   01658F  00                 	db	0
   612   016590  87                 	db	135
   613   016591  0F                 	db	15
   614   016592  08                 	db	8
   615   016593  00                 	db	0
   616   016594  01                 	db	1
   617   016595  01                 	db	1
   618                           
   619                           ;initializer for _OCC_FR_BLK13
   620   016596  07D0               	dw	2000
   621   016598  0000               	dw	0
   622   01659A  0000               	dw	0
   623   01659C  00                 	db	0
   624   01659D  00                 	db	0
   625   01659E  87                 	db	135
   626   01659F  0F                 	db	15
   627   0165A0  04                 	db	4
   628   0165A1  00                 	db	0
   629   0165A2  01                 	db	1
   630   0165A3  01                 	db	1
   631                           
   632                           ;initializer for _HALL_BLK_T8
   633   0165A4  0005               	dw	5
   634   0165A6  0000               	dw	0
   635   0165A8  0000               	dw	0
   636   0165AA  00                 	db	0
   637   0165AB  00                 	db	0
   638   0165AC  87                 	db	135
   639   0165AD  0F                 	db	15
   640   0165AE  02                 	db	2
   641   0165AF  00                 	db	0
   642   0165B0  00                 	db	0
   643   0165B1  01                 	db	1
   644                           
   645                           ;initializer for _HALL_BLK_T7
   646   0165B2  0005               	dw	5
   647   0165B4  0000               	dw	0
   648   0165B6  0000               	dw	0
   649   0165B8  00                 	db	0
   650   0165B9  00                 	db	0
   651   0165BA  87                 	db	135
   652   0165BB  0F                 	db	15
   653   0165BC  01                 	db	1
   654   0165BD  00                 	db	0
   655   0165BE  00                 	db	0
   656   0165BF  01                 	db	1
   657                           
   658                           	psect	idataBANK5
   659   01705E                     __pidataBANK5:
   660                           	callstack 0
   661                           
   662                           ;initializer for _network_errors
   663   01705E  E5                 	db	low STR_1
   664   01705F  FF                 	db	high STR_1
   665   017060  D6                 	db	low STR_2
   666   017061  FF                 	db	high STR_2
   667   017062  7F                 	db	low STR_3
   668   017063  FF                 	db	high STR_3
   669   017064  C2                 	db	low STR_4
   670   017065  FF                 	db	high STR_4
   671   017066  4B                 	db	low STR_5
   672   017067  FF                 	db	high STR_5
   673   017068  8E                 	db	low STR_6
   674   017069  FF                 	db	high STR_6
   675   01706A  6E                 	db	low STR_7
   676   01706B  FF                 	db	high STR_7
   677   01706C  C4                 	db	low STR_8
   678   01706D  FE                 	db	high STR_8
   679   01706E  B0                 	db	low STR_9
   680   01706F  FE                 	db	high STR_9
   681   017070  D8                 	db	low STR_10
   682   017071  FE                 	db	high STR_10
   683   017072  25                 	db	low STR_11
   684   017073  FF                 	db	high STR_11
   685   017074  12                 	db	low STR_12
   686   017075  FF                 	db	high STR_12
   687   017076  B6                 	db	low STR_13
   688   017077  FF                 	db	high STR_13
   689   017078  FF                 	db	low STR_14
   690   017079  FE                 	db	high STR_14
   691   01707A  EC                 	db	low STR_15
   692   01707B  FE                 	db	high STR_15
   693   01707C  86                 	db	low STR_16
   694   01707D  FE                 	db	high STR_16
   695                           
   696                           ;initializer for _SIG_BOT
   697   01707E  8A                 	db	138
   698   01707F  0F                 	db	15
   699   017080  04                 	db	4
   700   017081  8A                 	db	138
   701   017082  0F                 	db	15
   702   017083  08                 	db	8
   703   017084  8A                 	db	138
   704   017085  0F                 	db	15
   705   017086  10                 	db	16
   706   017087  8A                 	db	138
   707   017088  0F                 	db	15
   708   017089  20                 	db	32
   709   01708A  8A                 	db	138
   710   01708B  0F                 	db	15
   711   01708C  40                 	db	64
   712   01708D  8A                 	db	138
   713   01708E  0F                 	db	15
   714   01708F  80                 	db	128
   715                           
   716                           ;initializer for _SIG_TOP
   717   017090  8A                 	db	138
   718   017091  0F                 	db	15
   719   017092  01                 	db	1
   720   017093  8A                 	db	138
   721   017094  0F                 	db	15
   722   017095  02                 	db	2
   723   017096  91                 	db	145
   724   017097  0F                 	db	15
   725   017098  01                 	db	1
   726   017099  91                 	db	145
   727   01709A  0F                 	db	15
   728   01709B  02                 	db	2
   729   01709C  91                 	db	145
   730   01709D  0F                 	db	15
   731   01709E  04                 	db	4
   732   01709F  91                 	db	145
   733   0170A0  0F                 	db	15
   734   0170A1  08                 	db	8
   735                           
   736                           ;initializer for _WS_WALDBERG
   737   0170A2  8C                 	db	140
   738   0170A3  0F                 	db	15
   739   0170A4  08                 	db	8
   740   0170A5  00                 	db	0
   741   0170A6  00                 	db	0
   742   0170A7  00                 	db	0
   743   0170A8  00                 	db	0
   744   0170A9  00                 	db	0
   745   0170AA  00                 	db	0
   746   0170AB  00                 	db	0
   747   0170AC  00                 	db	0
   748   0170AD  00                 	db	0
   749   0170AE  00                 	db	0
   750   0170AF  00                 	db	0
   751   0170B0  00                 	db	0
   752   0170B1  00                 	db	0
   753   0170B2  00                 	db	0
   754   0170B3  00                 	db	0
   755                           
   756                           ;initializer for _WS_WALDSEE
   757   0170B4  8C                 	db	140
   758   0170B5  0F                 	db	15
   759   0170B6  01                 	db	1
   760   0170B7  00                 	db	0
   761   0170B8  00                 	db	0
   762   0170B9  00                 	db	0
   763   0170BA  00                 	db	0
   764   0170BB  00                 	db	0
   765   0170BC  00                 	db	0
   766   0170BD  00                 	db	0
   767   0170BE  00                 	db	0
   768   0170BF  00                 	db	0
   769   0170C0  00                 	db	0
   770   0170C1  00                 	db	0
   771   0170C2  00                 	db	0
   772   0170C3  00                 	db	0
   773   0170C4  00                 	db	0
   774   0170C5  00                 	db	0
   775                           
   776                           ;initializer for _WS_BOT
   777   0170C6  8B                 	db	139
   778   0170C7  0F                 	db	15
   779   0170C8  01                 	db	1
   780   0170C9  8B                 	db	139
   781   0170CA  0F                 	db	15
   782   0170CB  02                 	db	2
   783   0170CC  8B                 	db	139
   784   0170CD  0F                 	db	15
   785   0170CE  04                 	db	4
   786   0170CF  8B                 	db	139
   787   0170D0  0F                 	db	15
   788   0170D1  08                 	db	8
   789   0170D2  00                 	db	0
   790   0170D3  00                 	db	0
   791   0170D4  00                 	db	0
   792   0170D5  00                 	db	0
   793   0170D6  00                 	db	0
   794   0170D7  00                 	db	0
   795                           
   796                           ;initializer for _WS_TOP
   797   0170D8  8B                 	db	139
   798   0170D9  0F                 	db	15
   799   0170DA  10                 	db	16
   800   0170DB  8B                 	db	139
   801   0170DC  0F                 	db	15
   802   0170DD  20                 	db	32
   803   0170DE  8B                 	db	139
   804   0170DF  0F                 	db	15
   805   0170E0  40                 	db	64
   806   0170E1  8B                 	db	139
   807   0170E2  0F                 	db	15
   808   0170E3  80                 	db	128
   809   0170E4  00                 	db	0
   810   0170E5  00                 	db	0
   811   0170E6  00                 	db	0
   812   0170E7  00                 	db	0
   813   0170E8  00                 	db	0
   814   0170E9  00                 	db	0
   815                           
   816                           	psect	mediumconst
   817   00FD8A                     __pmediumconst:
   818                           	callstack 0
   819   00FD8A  00                 	db	0
   820   00FD8B                     _severityThresholdTable:
   821                           	callstack 0
   822   00FD8B  00                 	db	0
   823   00FD8C  06                 	db	6
   824   00FD8D  01                 	db	1
   825   00FD8E  05                 	db	5
   826   00FD8F  02                 	db	2
   827   00FD90  05                 	db	5
   828   00FD91  03                 	db	3
   829   00FD92  06                 	db	6
   830   00FD93  04                 	db	4
   831   00FD94  05                 	db	5
   832   00FD95  05                 	db	5
   833   00FD96  05                 	db	5
   834   00FD97  06                 	db	6
   835   00FD98  06                 	db	6
   836   00FD99  07                 	db	7
   837   00FD9A  05                 	db	5
   838   00FD9B  08                 	db	8
   839   00FD9C  06                 	db	6
   840   00FD9D  09                 	db	9
   841   00FD9E  05                 	db	5
   842   00FD9F  0A                 	db	10
   843   00FDA0  05                 	db	5
   844   00FDA1  0B                 	db	11
   845   00FDA2  05                 	db	5
   846   00FDA3  0C                 	db	12
   847   00FDA4  06                 	db	6
   848   00FDA5  0D                 	db	13
   849   00FDA6  05                 	db	5
   850   00FDA7  0E                 	db	14
   851   00FDA8  05                 	db	5
   852   00FDA9  0F                 	db	15
   853   00FDAA  05                 	db	5
   854   00FDAB  10                 	db	16
   855   00FDAC  06                 	db	6
   856   00FDAD  11                 	db	17
   857   00FDAE  05                 	db	5
   858   00FDAF  12                 	db	18
   859   00FDB0  05                 	db	5
   860   00FDB1  13                 	db	19
   861   00FDB2  06                 	db	6
   862   00FDB3  14                 	db	20
   863   00FDB4  05                 	db	5
   864   00FDB5  15                 	db	21
   865   00FDB6  06                 	db	6
   866   00FDB7  16                 	db	22
   867   00FDB8  05                 	db	5
   868   00FDB9  17                 	db	23
   869   00FDBA  05                 	db	5
   870   00FDBB                     __end_of_severityThresholdTable:
   871                           	callstack 0
   872   00FDBB  41                 	db	65
   873   00FDBC  44                 	db	68
   874   00FDBD  47                 	db	71
   875   00FDBE  48                 	db	72
   876   00FDBF  4E                 	db	78
   877   00FDC0  53                 	db	83
   878   00FDC1  55                 	db	85
   879   00FDC2  5C                 	db	92
   880   00FDC3  5F                 	db	95
   881   00FDC4  60                 	db	96
   882   00FDC5  65                 	db	101
   883   00FDC6  69                 	db	105
   884   00FDC7  6A                 	db	106
   885   00FDC8  72                 	db	114
   886   00FDC9  77                 	db	119
   887   00FDCA  78                 	db	120
   888   00FDCB  7B                 	db	123
   889   00FDCC  7E                 	db	126
   890   00FDCD                     __end_of_xorSequences:
   891                           	callstack 0
   892   00FDCD                     ___secs_to_tm@days_in_month:
   893                           	callstack 0
   894   00FDCD  1F                 	db	31
   895   00FDCE  1E                 	db	30
   896   00FDCF  1F                 	db	31
   897   00FDD0  1E                 	db	30
   898   00FDD1  1F                 	db	31
   899   00FDD2  1F                 	db	31
   900   00FDD3  1E                 	db	30
   901   00FDD4  1F                 	db	31
   902   00FDD5  1E                 	db	30
   903   00FDD6  1F                 	db	31
   904   00FDD7  1F                 	db	31
   905   00FDD8  1D                 	db	29
   906   00FDD9                     __end_of___secs_to_tm@days_in_month:
   907                           	callstack 0
   908   00FDD9  C350               	dw	50000
   909   00FDDB  0000               	dw	0
   910   00FDDD                     __end_of_tMountainTrainWaitTime:
   911                           	callstack 0
   912   00FDDD  2710               	dw	10000
   913   00FDDF  0000               	dw	0
   914   00FDE1                     __end_of_tInOutboundStopWaitTime:
   915                           	callstack 0
   916   00FDE1  2710               	dw	10000
   917   00FDE3  0000               	dw	0
   918   00FDE5                     __end_of_tOutboundWaitTime:
   919                           	callstack 0
   920   00FDE5  2710               	dw	10000
   921   00FDE7  0000               	dw	0
   922   00FDE9                     __end_of_tReadIoSignalWaitTime:
   923                           	callstack 0
   924   00FDE9  1388               	dw	5000
   925   00FDEB  0000               	dw	0
   926   00FDED                     __end_of_tFreightTrainWaitTime:
   927                           	callstack 0
   928   00FDED  86A0               	dw	34464
   929   00FDEF  0001               	dw	1
   930   00FDF1                     __end_of_tTrainWaitTime:
   931                           	callstack 0
   932   00FDF1  1B58               	dw	7000
   933   00FDF3  0000               	dw	0
   934   00FDF5                     __end_of_tSwitchPointWaitTime:
   935                           	callstack 0
   936   00FDF5  0005               	dw	5
   937   00FDF7  0000               	dw	0
   938   00FDF9                     __end_of_tHallSignalDebounceTime:
   939                           	callstack 0
   940   00FDF9  07D0               	dw	2000
   941   00FDFB  0000               	dw	0
   942   00FDFD                     __end_of_tBlkOutDebounceTime:
   943                           	callstack 0
   944   00FDFD  00C8               	dw	200
   945   00FDFF  0000               	dw	0
   946   00FE01                     __end_of_tIoSignalDebounceTime:
   947                           	callstack 0
   948   00FE01  08                 	db	8
   949   00FE02                     __end_of_udpTrans_t_data_length:
   950                           	callstack 0
   951   00FE02                     _sizeOfMntStationStruct:
   952                           	callstack 0
   953   00FE02  36                 	db	54
   954   00FE03                     __end_of_sizeOfMntStationStruct:
   955                           	callstack 0
   956   00FE03  02                 	db	2
   957   00FE04                     __end_of_tMountainRandomShift:
   958                           	callstack 0
   959   00FE04  03                 	db	3
   960   00FE05                     __end_of_tRandomShift:
   961                           	callstack 0
   962   00FE05                     _broadcastMAC:
   963                           	callstack 0
   964   00FE05  FF                 	db	255
   965   00FE06  FF                 	db	255
   966   00FE07  FF                 	db	255
   967   00FE08  FF                 	db	255
   968   00FE09  FF                 	db	255
   969   00FE0A  FF                 	db	255
   970   00FE0B                     __end_of_broadcastMAC:
   971                           	callstack 0
   972   00FE0B                     _UDP_CallBackTable:
   973                           	callstack 0
   974   00FE0B  EA60               	dw	60000
   975   00FE0D  F0                 	db	low _UDPxDATAxRECV
   976   00FE0E  7C                 	db	high _UDPxDATAxRECV
   977   00FE0F  01                 	db	low (_UDPxDATAxRECV shr (0+16))
   978   00FE10                     __end_of_UDP_CallBackTable:
   979                           	callstack 0
   980   00FE10  03E8               	dw	1000
   981   00FE12  0000               	dw	0
   982   00FE14                     __end_of_tFactorSec:
   983                           	callstack 0
   984   00FE14  0A                 	db	10
   985   00FE15                     __end_of_udpTrans_t_length:
   986                           	callstack 0
   987   000000                     _EDMAND	set	3826
   988   000000                     _TMR0L	set	4054
   989   000000                     _TMR0H	set	4055
   990   000000                     _TRISJ	set	3994
   991   000000                     _TRISD	set	3989
   992   000000                     _TRISC	set	3988
   993   000000                     _TRISH	set	3993
   994   000000                     _TRISB	set	3987
   995   000000                     _TRISG	set	3992
   996   000000                     _TRISA	set	3986
   997   000000                     _TRISF	set	3991
   998   000000                     _TRISE	set	3990
   999   000000                     _LATH	set	3984
  1000   000000                     _LATG	set	3983
  1001   000000                     _LATF	set	3982
  1002   000000                     _OSCTUNE	set	3995
  1003   000000                     _PIR2bits	set	4001
  1004   000000                     _MAADR6	set	3713
  1005   000000                     _MAADR5	set	3712
  1006   000000                     _MAADR4	set	3715
  1007   000000                     _MAADR3	set	3714
  1008   000000                     _MAADR1	set	3716
  1009   000000                     _MACON1	set	3744
  1010   000000                     _ESTATbits	set	3837
  1011   000000                     _ECON1	set	4050
  1012   000000                     _LATE	set	3981
  1013   000000                     _LATJ	set	3985
  1014   000000                     _PORTG	set	3974
  1015   000000                     _PORTH	set	3975
  1016   00FE15                     
  1017                           ; BSR set to: 2
  1018   00FE15  3C                 	db	60	;'<'
  1019   00FE16  25                 	db	37
  1020   00FE17  64                 	db	100	;'d'
  1021   00FE18  3E                 	db	62	;'>'
  1022   00FE19  25                 	db	37
  1023   00FE1A  64                 	db	100	;'d'
  1024   00FE1B  20                 	db	32
  1025   00FE1C  25                 	db	37
  1026   00FE1D  64                 	db	100	;'d'
  1027   00FE1E  2D                 	db	45
  1028   00FE1F  25                 	db	37
  1029   00FE20  2E                 	db	46
  1030   00FE21  32                 	db	50	;'2'
  1031   00FE22  64                 	db	100	;'d'
  1032   00FE23  2D                 	db	45
  1033   00FE24  25                 	db	37
  1034   00FE25  2E                 	db	46
  1035   00FE26  32                 	db	50	;'2'
  1036   00FE27  64                 	db	100	;'d'
  1037   00FE28  54                 	db	84	;'T'
  1038   00FE29  25                 	db	37
  1039   00FE2A  2E                 	db	46
  1040   00FE2B  32                 	db	50	;'2'
  1041   00FE2C  64                 	db	100	;'d'
  1042   00FE2D  3A                 	db	58	;':'
  1043   00FE2E  25                 	db	37
  1044   00FE2F  2E                 	db	46
  1045   00FE30  32                 	db	50	;'2'
  1046   00FE31  64                 	db	100	;'d'
  1047   00FE32  3A                 	db	58	;':'
  1048   00FE33  25                 	db	37
  1049   00FE34  2E                 	db	46
  1050   00FE35  32                 	db	50	;'2'
  1051   00FE36  64                 	db	100	;'d'
  1052   00FE37  5A                 	db	90	;'Z'
  1053   00FE38  20                 	db	32
  1054   00FE39  25                 	db	37
  1055   00FE3A  64                 	db	100	;'d'
  1056   00FE3B  2E                 	db	46
  1057   00FE3C  25                 	db	37
  1058   00FE3D  64                 	db	100	;'d'
  1059   00FE3E  2E                 	db	46
  1060   00FE3F  25                 	db	37
  1061   00FE40  64                 	db	100	;'d'
  1062   00FE41  2E                 	db	46
  1063   00FE42  25                 	db	37
  1064   00FE43  64                 	db	100	;'d'
  1065   00FE44  20                 	db	32
  1066   00FE45  25                 	db	37
  1067   00FE46  73                 	db	115	;'s'
  1068   00FE47  20                 	db	32
  1069   00FE48  25                 	db	37
  1070   00FE49  73                 	db	115	;'s'
  1071   00FE4A  20                 	db	32
  1072   00FE4B  25                 	db	37
  1073   00FE4C  73                 	db	115	;'s'
  1074   00FE4D  20                 	db	32
  1075   00FE4E  25                 	db	37
  1076   00FE4F  73                 	db	115	;'s'
  1077   00FE50  5B                 	db	91	;'['
  1078   00FE51  25                 	db	37
  1079   00FE52  73                 	db	115	;'s'
  1080   00FE53  5D                 	db	93	;']'
  1081   00FE54  0D                 	db	13
  1082   00FE55  0A                 	db	10
  1083   00FE56  00                 	db	0
  1084   00FE57                     STR_41:
  1085                           
  1086                           ; BSR set to: 2
  1087   00FE57  0A                 	db	10
  1088   00FE58  0A                 	db	10
  1089   00FE59  53                 	db	83	;'S'
  1090   00FE5A  74                 	db	116	;'t'
  1091   00FE5B  61                 	db	97	;'a'
  1092   00FE5C  72                 	db	114	;'r'
  1093   00FE5D  74                 	db	116	;'t'
  1094   00FE5E  69                 	db	105	;'i'
  1095   00FE5F  6E                 	db	110	;'n'
  1096   00FE60  67                 	db	103	;'g'
  1097   00FE61  20                 	db	32
  1098   00FE62  53                 	db	83	;'S'
  1099   00FE63  79                 	db	121	;'y'
  1100   00FE64  73                 	db	115	;'s'
  1101   00FE65  6C                 	db	108	;'l'
  1102   00FE66  6F                 	db	111	;'o'
  1103   00FE67  67                 	db	103	;'g'
  1104   00FE68  20                 	db	32
  1105   00FE69  61                 	db	97	;'a'
  1106   00FE6A  74                 	db	116	;'t'
  1107   00FE6B  20                 	db	32
  1108   00FE6C  25                 	db	37
  1109   00FE6D  6C                 	db	108	;'l'
  1110   00FE6E  75                 	db	117	;'u'
  1111   00FE6F  0A                 	db	10
  1112   00FE70  00                 	db	0
  1113   00FE71                     STR_27:
  1114                           
  1115                           ; BSR set to: 2
  1116   00FE71  69                 	db	105	;'i'
  1117   00FE72  63                 	db	99	;'c'
  1118   00FE73  6D                 	db	109	;'m'
  1119   00FE74  70                 	db	112	;'p'
  1120   00FE75  20                 	db	32
  1121   00FE76  77                 	db	119	;'w'
  1122   00FE77  72                 	db	114	;'r'
  1123   00FE78  6F                 	db	111	;'o'
  1124   00FE79  6E                 	db	110	;'n'
  1125   00FE7A  67                 	db	103	;'g'
  1126   00FE7B  20                 	db	32
  1127   00FE7C  63                 	db	99	;'c'
  1128   00FE7D  6B                 	db	107	;'k'
  1129   00FE7E  73                 	db	115	;'s'
  1130   00FE7F  6D                 	db	109	;'m'
  1131   00FE80  20                 	db	32
  1132   00FE81  3A                 	db	58	;':'
  1133   00FE82  20                 	db	32
  1134   00FE83  25                 	db	37
  1135   00FE84  78                 	db	120	;'x'
  1136   00FE85  00                 	db	0
  1137   00FE86                     STR_16:
  1138                           
  1139                           ; BSR set to: 2
  1140   00FE86  45                 	db	69	;'E'
  1141   00FE87  41                 	db	65	;'A'
  1142   00FE88  50                 	db	80	;'P'
  1143   00FE89  6F                 	db	111	;'o'
  1144   00FE8A  6C                 	db	108	;'l'
  1145   00FE8B  5F                 	db	95	;'_'
  1146   00FE8C  50                 	db	80	;'P'
  1147   00FE8D  41                 	db	65	;'A'
  1148   00FE8E  43                 	db	67	;'C'
  1149   00FE8F  4B                 	db	75	;'K'
  1150   00FE90  45                 	db	69	;'E'
  1151   00FE91  54                 	db	84	;'T'
  1152   00FE92  5F                 	db	95	;'_'
  1153   00FE93  46                 	db	70	;'F'
  1154   00FE94  41                 	db	65	;'A'
  1155   00FE95  49                 	db	73	;'I'
  1156   00FE96  4C                 	db	76	;'L'
  1157   00FE97  55                 	db	85	;'U'
  1158   00FE98  52                 	db	82	;'R'
  1159   00FE99  45                 	db	69	;'E'
  1160   00FE9A  00                 	db	0
  1161   00FE9B                     STR_17:
  1162                           
  1163                           ; BSR set to: 2
  1164   00FE9B  38                 	db	56	;'8'
  1165   00FE9C  30                 	db	48	;'0'
  1166   00FE9D  32                 	db	50	;'2'
  1167   00FE9E  2E                 	db	46
  1168   00FE9F  33                 	db	51	;'3'
  1169   00FEA0  20                 	db	32
  1170   00FEA1  6C                 	db	108	;'l'
  1171   00FEA2  65                 	db	101	;'e'
  1172   00FEA3  6E                 	db	110	;'n'
  1173   00FEA4  67                 	db	103	;'g'
  1174   00FEA5  74                 	db	116	;'t'
  1175   00FEA6  68                 	db	104	;'h'
  1176   00FEA7  20                 	db	32
  1177   00FEA8  30                 	db	48	;'0'
  1178   00FEA9  78                 	db	120	;'x'
  1179   00FEAA  25                 	db	37
  1180   00FEAB  30                 	db	48	;'0'
  1181   00FEAC  34                 	db	52	;'4'
  1182   00FEAD  6C                 	db	108	;'l'
  1183   00FEAE  58                 	db	88	;'X'
  1184   00FEAF  00                 	db	0
  1185   00FEB0                     STR_9:
  1186                           
  1187                           ; BSR set to: 2
  1188   00FEB0  44                 	db	68	;'D'
  1189   00FEB1  45                 	db	69	;'E'
  1190   00FEB2  53                 	db	83	;'S'
  1191   00FEB3  54                 	db	84	;'T'
  1192   00FEB4  5F                 	db	95	;'_'
  1193   00FEB5  49                 	db	73	;'I'
  1194   00FEB6  50                 	db	80	;'P'
  1195   00FEB7  5F                 	db	95	;'_'
  1196   00FEB8  4E                 	db	78	;'N'
  1197   00FEB9  4F                 	db	79	;'O'
  1198   00FEBA  54                 	db	84	;'T'
  1199   00FEBB  5F                 	db	95	;'_'
  1200   00FEBC  4D                 	db	77	;'M'
  1201   00FEBD  41                 	db	65	;'A'
  1202   00FEBE  54                 	db	84	;'T'
  1203   00FEBF  43                 	db	67	;'C'
  1204   00FEC0  48                 	db	72	;'H'
  1205   00FEC1  45                 	db	69	;'E'
  1206   00FEC2  44                 	db	68	;'D'
  1207   00FEC3  00                 	db	0
  1208   00FEC4                     STR_8:
  1209                           
  1210                           ; BSR set to: 2
  1211   00FEC4  49                 	db	73	;'I'
  1212   00FEC5  50                 	db	80	;'P'
  1213   00FEC6  56                 	db	86	;'V'
  1214   00FEC7  34                 	db	52	;'4'
  1215   00FEC8  5F                 	db	95	;'_'
  1216   00FEC9  43                 	db	67	;'C'
  1217   00FECA  48                 	db	72	;'H'
  1218   00FECB  45                 	db	69	;'E'
  1219   00FECC  43                 	db	67	;'C'
  1220   00FECD  4B                 	db	75	;'K'
  1221   00FECE  53                 	db	83	;'S'
  1222   00FECF  55                 	db	85	;'U'
  1223   00FED0  4D                 	db	77	;'M'
  1224   00FED1  5F                 	db	95	;'_'
  1225   00FED2  46                 	db	70	;'F'
  1226   00FED3  41                 	db	65	;'A'
  1227   00FED4  49                 	db	73	;'I'
  1228   00FED5  4C                 	db	76	;'L'
  1229   00FED6  53                 	db	83	;'S'
  1230   00FED7  00                 	db	0
  1231   00FED8                     STR_10:
  1232                           
  1233                           ; BSR set to: 2
  1234   00FED8  49                 	db	73	;'I'
  1235   00FED9  43                 	db	67	;'C'
  1236   00FEDA  4D                 	db	77	;'M'
  1237   00FEDB  50                 	db	80	;'P'
  1238   00FEDC  5F                 	db	95	;'_'
  1239   00FEDD  43                 	db	67	;'C'
  1240   00FEDE  48                 	db	72	;'H'
  1241   00FEDF  45                 	db	69	;'E'
  1242   00FEE0  43                 	db	67	;'C'
  1243   00FEE1  4B                 	db	75	;'K'
  1244   00FEE2  53                 	db	83	;'S'
  1245   00FEE3  55                 	db	85	;'U'
  1246   00FEE4  4D                 	db	77	;'M'
  1247   00FEE5  5F                 	db	95	;'_'
  1248   00FEE6  46                 	db	70	;'F'
  1249   00FEE7  41                 	db	65	;'A'
  1250   00FEE8  49                 	db	73	;'I'
  1251   00FEE9  4C                 	db	76	;'L'
  1252   00FEEA  53                 	db	83	;'S'
  1253   00FEEB  00                 	db	0
  1254   00FEEC                     STR_15:
  1255                           
  1256                           ; BSR set to: 2
  1257   00FEEC  41                 	db	65	;'A'
  1258   00FEED  52                 	db	82	;'R'
  1259   00FEEE  50                 	db	80	;'P'
  1260   00FEEF  5F                 	db	95	;'_'
  1261   00FEF0  49                 	db	73	;'I'
  1262   00FEF1  50                 	db	80	;'P'
  1263   00FEF2  5F                 	db	95	;'_'
  1264   00FEF3  4E                 	db	78	;'N'
  1265   00FEF4  4F                 	db	79	;'O'
  1266   00FEF5  54                 	db	84	;'T'
  1267   00FEF6  5F                 	db	95	;'_'
  1268   00FEF7  4D                 	db	77	;'M'
  1269   00FEF8  41                 	db	65	;'A'
  1270   00FEF9  54                 	db	84	;'T'
  1271   00FEFA  43                 	db	67	;'C'
  1272   00FEFB  48                 	db	72	;'H'
  1273   00FEFC  45                 	db	69	;'E'
  1274   00FEFD  44                 	db	68	;'D'
  1275   00FEFE  00                 	db	0
  1276   00FEFF                     STR_14:
  1277                           
  1278                           ; BSR set to: 2
  1279   00FEFF  50                 	db	80	;'P'
  1280   00FF00  4F                 	db	79	;'O'
  1281   00FF01  52                 	db	82	;'R'
  1282   00FF02  54                 	db	84	;'T'
  1283   00FF03  5F                 	db	95	;'_'
  1284   00FF04  4E                 	db	78	;'N'
  1285   00FF05  4F                 	db	79	;'O'
  1286   00FF06  54                 	db	84	;'T'
  1287   00FF07  5F                 	db	95	;'_'
  1288   00FF08  41                 	db	65	;'A'
  1289   00FF09  56                 	db	86	;'V'
  1290   00FF0A  41                 	db	65	;'A'
  1291   00FF0B  49                 	db	73	;'I'
  1292   00FF0C  4C                 	db	76	;'L'
  1293   00FF0D  41                 	db	65	;'A'
  1294   00FF0E  42                 	db	66	;'B'
  1295   00FF0F  4C                 	db	76	;'L'
  1296   00FF10  45                 	db	69	;'E'
  1297   00FF11  00                 	db	0
  1298   00FF12                     STR_12:
  1299                           
  1300                           ; BSR set to: 2
  1301   00FF12  54                 	db	84	;'T'
  1302   00FF13  43                 	db	67	;'C'
  1303   00FF14  50                 	db	80	;'P'
  1304   00FF15  5F                 	db	95	;'_'
  1305   00FF16  43                 	db	67	;'C'
  1306   00FF17  48                 	db	72	;'H'
  1307   00FF18  45                 	db	69	;'E'
  1308   00FF19  43                 	db	67	;'C'
  1309   00FF1A  4B                 	db	75	;'K'
  1310   00FF1B  53                 	db	83	;'S'
  1311   00FF1C  55                 	db	85	;'U'
  1312   00FF1D  4D                 	db	77	;'M'
  1313   00FF1E  5F                 	db	95	;'_'
  1314   00FF1F  46                 	db	70	;'F'
  1315   00FF20  41                 	db	65	;'A'
  1316   00FF21  49                 	db	73	;'I'
  1317   00FF22  4C                 	db	76	;'L'
  1318   00FF23  53                 	db	83	;'S'
  1319   00FF24  00                 	db	0
  1320   00FF25                     STR_11:
  1321                           
  1322                           ; BSR set to: 2
  1323   00FF25  55                 	db	85	;'U'
  1324   00FF26  44                 	db	68	;'D'
  1325   00FF27  50                 	db	80	;'P'
  1326   00FF28  5F                 	db	95	;'_'
  1327   00FF29  43                 	db	67	;'C'
  1328   00FF2A  48                 	db	72	;'H'
  1329   00FF2B  45                 	db	69	;'E'
  1330   00FF2C  43                 	db	67	;'C'
  1331   00FF2D  4B                 	db	75	;'K'
  1332   00FF2E  53                 	db	83	;'S'
  1333   00FF2F  55                 	db	85	;'U'
  1334   00FF30  4D                 	db	77	;'M'
  1335   00FF31  5F                 	db	95	;'_'
  1336   00FF32  46                 	db	70	;'F'
  1337   00FF33  41                 	db	65	;'A'
  1338   00FF34  49                 	db	73	;'I'
  1339   00FF35  4C                 	db	76	;'L'
  1340   00FF36  53                 	db	83	;'S'
  1341   00FF37  00                 	db	0
  1342   00FF38                     STR_18:
  1343                           
  1344                           ; BSR set to: 2
  1345   00FF38  38                 	db	56	;'8'
  1346   00FF39  30                 	db	48	;'0'
  1347   00FF3A  32                 	db	50	;'2'
  1348   00FF3B  2E                 	db	46
  1349   00FF3C  33                 	db	51	;'3'
  1350   00FF3D  20                 	db	32
  1351   00FF3E  74                 	db	116	;'t'
  1352   00FF3F  79                 	db	121	;'y'
  1353   00FF40  70                 	db	112	;'p'
  1354   00FF41  65                 	db	101	;'e'
  1355   00FF42  20                 	db	32
  1356   00FF43  30                 	db	48	;'0'
  1357   00FF44  78                 	db	120	;'x'
  1358   00FF45  25                 	db	37
  1359   00FF46  30                 	db	48	;'0'
  1360   00FF47  34                 	db	52	;'4'
  1361   00FF48  6C                 	db	108	;'l'
  1362   00FF49  58                 	db	88	;'X'
  1363   00FF4A  00                 	db	0
  1364   00FF4B                     STR_5:
  1365                           
  1366                           ; BSR set to: 2
  1367   00FF4B  54                 	db	84	;'T'
  1368   00FF4C  58                 	db	88	;'X'
  1369   00FF4D  5F                 	db	95	;'_'
  1370   00FF4E  4C                 	db	76	;'L'
  1371   00FF4F  4F                 	db	79	;'O'
  1372   00FF50  47                 	db	71	;'G'
  1373   00FF51  49                 	db	73	;'I'
  1374   00FF52  43                 	db	67	;'C'
  1375   00FF53  5F                 	db	95	;'_'
  1376   00FF54  4E                 	db	78	;'N'
  1377   00FF55  4F                 	db	79	;'O'
  1378   00FF56  54                 	db	84	;'T'
  1379   00FF57  5F                 	db	95	;'_'
  1380   00FF58  49                 	db	73	;'I'
  1381   00FF59  44                 	db	68	;'D'
  1382   00FF5A  4C                 	db	76	;'L'
  1383   00FF5B  45                 	db	69	;'E'
  1384   00FF5C  00                 	db	0
  1385   00FF5D                     
  1386                           ; BSR set to: 2
  1387   00FF5D  54                 	db	84	;'T'
  1388   00FF5E  25                 	db	37
  1389   00FF5F  2E                 	db	46
  1390   00FF60  32                 	db	50	;'2'
  1391   00FF61  64                 	db	100	;'d'
  1392   00FF62  3A                 	db	58	;':'
  1393   00FF63  25                 	db	37
  1394   00FF64  2E                 	db	46
  1395   00FF65  32                 	db	50	;'2'
  1396   00FF66  64                 	db	100	;'d'
  1397   00FF67  3A                 	db	58	;':'
  1398   00FF68  25                 	db	37
  1399   00FF69  2E                 	db	46
  1400   00FF6A  32                 	db	50	;'2'
  1401   00FF6B  64                 	db	100	;'d'
  1402   00FF6C  5A                 	db	90	;'Z'
  1403   00FF6D  00                 	db	0
  1404   00FF6E                     STR_7:
  1405                           
  1406                           ; BSR set to: 2
  1407   00FF6E  49                 	db	73	;'I'
  1408   00FF6F  50                 	db	80	;'P'
  1409   00FF70  5F                 	db	95	;'_'
  1410   00FF71  57                 	db	87	;'W'
  1411   00FF72  52                 	db	82	;'R'
  1412   00FF73  4F                 	db	79	;'O'
  1413   00FF74  4E                 	db	78	;'N'
  1414   00FF75  47                 	db	71	;'G'
  1415   00FF76  5F                 	db	95	;'_'
  1416   00FF77  56                 	db	86	;'V'
  1417   00FF78  45                 	db	69	;'E'
  1418   00FF79  52                 	db	82	;'R'
  1419   00FF7A  53                 	db	83	;'S'
  1420   00FF7B  49                 	db	73	;'I'
  1421   00FF7C  4F                 	db	79	;'O'
  1422   00FF7D  4E                 	db	78	;'N'
  1423   00FF7E  00                 	db	0
  1424   00FF7F                     STR_3:
  1425                           
  1426                           ; BSR set to: 2
  1427   00FF7F  4C                 	db	76	;'L'
  1428   00FF80  49                 	db	73	;'I'
  1429   00FF81  4E                 	db	78	;'N'
  1430   00FF82  4B                 	db	75	;'K'
  1431   00FF83  5F                 	db	95	;'_'
  1432   00FF84  4E                 	db	78	;'N'
  1433   00FF85  4F                 	db	79	;'O'
  1434   00FF86  54                 	db	84	;'T'
  1435   00FF87  5F                 	db	95	;'_'
  1436   00FF88  46                 	db	70	;'F'
  1437   00FF89  4F                 	db	79	;'O'
  1438   00FF8A  55                 	db	85	;'U'
  1439   00FF8B  4E                 	db	78	;'N'
  1440   00FF8C  44                 	db	68	;'D'
  1441   00FF8D  00                 	db	0
  1442   00FF8E                     STR_6:
  1443                           
  1444                           ; BSR set to: 2
  1445   00FF8E  4D                 	db	77	;'M'
  1446   00FF8F  41                 	db	65	;'A'
  1447   00FF90  43                 	db	67	;'C'
  1448   00FF91  5F                 	db	95	;'_'
  1449   00FF92  4E                 	db	78	;'N'
  1450   00FF93  4F                 	db	79	;'O'
  1451   00FF94  54                 	db	84	;'T'
  1452   00FF95  5F                 	db	95	;'_'
  1453   00FF96  46                 	db	70	;'F'
  1454   00FF97  4F                 	db	79	;'O'
  1455   00FF98  55                 	db	85	;'U'
  1456   00FF99  4E                 	db	78	;'N'
  1457   00FF9A  44                 	db	68	;'D'
  1458   00FF9B  00                 	db	0
  1459   00FF9C                     STR_31:
  1460                           
  1461                           ; BSR set to: 2
  1462   00FF9C  20                 	db	32
  1463   00FF9D  25                 	db	37
  1464   00FF9E  64                 	db	100	;'d'
  1465   00FF9F  2E                 	db	46
  1466   00FFA0  25                 	db	37
  1467   00FFA1  64                 	db	100	;'d'
  1468   00FFA2  2E                 	db	46
  1469   00FFA3  25                 	db	37
  1470   00FFA4  64                 	db	100	;'d'
  1471   00FFA5  2E                 	db	46
  1472   00FFA6  25                 	db	37
  1473   00FFA7  64                 	db	100	;'d'
  1474   00FFA8  00                 	db	0
  1475   00FFA9                     
  1476                           ; BSR set to: 2
  1477   00FFA9  25                 	db	37
  1478   00FFAA  64                 	db	100	;'d'
  1479   00FFAB  2D                 	db	45
  1480   00FFAC  25                 	db	37
  1481   00FFAD  2E                 	db	46
  1482   00FFAE  32                 	db	50	;'2'
  1483   00FFAF  64                 	db	100	;'d'
  1484   00FFB0  2D                 	db	45
  1485   00FFB1  25                 	db	37
  1486   00FFB2  2E                 	db	46
  1487   00FFB3  32                 	db	50	;'2'
  1488   00FFB4  64                 	db	100	;'d'
  1489   00FFB5  00                 	db	0
  1490   00FFB6                     STR_13:
  1491                           
  1492                           ; BSR set to: 2
  1493   00FFB6  44                 	db	68	;'D'
  1494   00FFB7  4D                 	db	77	;'M'
  1495   00FFB8  41                 	db	65	;'A'
  1496   00FFB9  5F                 	db	95	;'_'
  1497   00FFBA  54                 	db	84	;'T'
  1498   00FFBB  49                 	db	73	;'I'
  1499   00FFBC  4D                 	db	77	;'M'
  1500   00FFBD  45                 	db	69	;'E'
  1501   00FFBE  4F                 	db	79	;'O'
  1502   00FFBF  55                 	db	85	;'U'
  1503   00FFC0  54                 	db	84	;'T'
  1504   00FFC1  00                 	db	0
  1505   00FFC2                     STR_4:
  1506                           
  1507                           ; BSR set to: 2
  1508   00FFC2  42                 	db	66	;'B'
  1509   00FFC3  55                 	db	85	;'U'
  1510   00FFC4  46                 	db	70	;'F'
  1511   00FFC5  46                 	db	70	;'F'
  1512   00FFC6  45                 	db	69	;'E'
  1513   00FFC7  52                 	db	82	;'R'
  1514   00FFC8  5F                 	db	95	;'_'
  1515   00FFC9  42                 	db	66	;'B'
  1516   00FFCA  55                 	db	85	;'U'
  1517   00FFCB  53                 	db	83	;'S'
  1518   00FFCC  59                 	db	89	;'Y'
  1519   00FFCD  00                 	db	0
  1520   00FFCE                     
  1521                           ; BSR set to: 2
  1522   00FFCE  3C                 	db	60	;'<'
  1523   00FFCF  25                 	db	37
  1524   00FFD0  64                 	db	100	;'d'
  1525   00FFD1  3E                 	db	62	;'>'
  1526   00FFD2  25                 	db	37
  1527   00FFD3  64                 	db	100	;'d'
  1528   00FFD4  20                 	db	32
  1529   00FFD5  00                 	db	0
  1530   00FFD6                     STR_2:
  1531                           
  1532                           ; BSR set to: 2
  1533   00FFD6  53                 	db	83	;'S'
  1534   00FFD7  55                 	db	85	;'U'
  1535   00FFD8  43                 	db	67	;'C'
  1536   00FFD9  43                 	db	67	;'C'
  1537   00FFDA  45                 	db	69	;'E'
  1538   00FFDB  53                 	db	83	;'S'
  1539   00FFDC  53                 	db	83	;'S'
  1540   00FFDD  00                 	db	0
  1541   00FFDE                     STR_43:
  1542                           
  1543                           ; BSR set to: 2
  1544   00FFDE  28                 	db	40
  1545   00FFDF  6E                 	db	110	;'n'
  1546   00FFE0  75                 	db	117	;'u'
  1547   00FFE1  6C                 	db	108	;'l'
  1548   00FFE2  6C                 	db	108	;'l'
  1549   00FFE3  29                 	db	41
  1550   00FFE4  00                 	db	0
  1551   00FFE5                     STR_1:
  1552                           
  1553                           ; BSR set to: 2
  1554   00FFE5  45                 	db	69	;'E'
  1555   00FFE6  52                 	db	82	;'R'
  1556   00FFE7  52                 	db	82	;'R'
  1557   00FFE8  4F                 	db	79	;'O'
  1558   00FFE9  52                 	db	82	;'R'
  1559   00FFEA  00                 	db	0
  1560   00FFEB                     
  1561                           ; BSR set to: 2
  1562   00FFEB  20                 	db	32
  1563   00FFEC  25                 	db	37
  1564   00FFED  73                 	db	115	;'s'
  1565   00FFEE  5B                 	db	91	;'['
  1566   00FFEF  00                 	db	0
  1567   00FFF0                     
  1568                           ; BSR set to: 2
  1569   00FFF0  47                 	db	71	;'G'
  1570   00FFF1  4D                 	db	77	;'M'
  1571   00FFF2  54                 	db	84	;'T'
  1572   00FFF3  00                 	db	0
  1573   00FFF4                     STR_32:
  1574                           
  1575                           ; BSR set to: 2
  1576   00FFF4  20                 	db	32
  1577   00FFF5  25                 	db	37
  1578   00FFF6  73                 	db	115	;'s'
  1579   00FFF7  00                 	db	0
  1580   00FFF8                     
  1581                           ; BSR set to: 2
  1582   00FFF8  5D                 	db	93	;']'
  1583   00FFF9  00                 	db	0
  1584   00FFFA                     STR_23:
  1585                           
  1586                           ; BSR set to: 2
  1587   00FFFA  2D                 	db	45
  1588   00FFFB  00                 	db	0
  1589   00FFFC                     STR_19:
  1590                           
  1591                           ; BSR set to: 2
  1592   00FFFC  2E                 	db	46
  1593   00FFFD  00                 	db	0
  1594   00FFFE  00                 	db	0	; dummy byte at the end
  1595   000000                     
  1596                           	psect	nvBANK2
  1597   0002F3                     __pnvBANK2:
  1598                           	callstack 0
  1599   0002F3                     _TMR1_InterruptHandler:
  1600                           	callstack 0
  1601   0002F3                     	ds	3
  1602   0002F6                     _TMR0_InterruptHandler:
  1603                           	callstack 0
  1604   0002F6                     	ds	3
  1605   000000                     _MICMDbits	set	3762
  1606   000000                     _EIEbits	set	3835
  1607   000000                     _TMR1	set	4046
  1608   000000                     _LATAbits	set	3977
  1609   000000                     _PORTEbits	set	3972
  1610   000000                     _LATEbits	set	3981
  1611   000000                     _LATDbits	set	3980
  1612   000000                     _LATCbits	set	3979
  1613   000000                     _LATJbits	set	3985
  1614   000000                     _LATBbits	set	3978
  1615   000000                     _PORTGbits	set	3974
  1616   000000                     _T1CONbits	set	4045
  1617   000000                     _T0CON	set	4053
  1618   000000                     _INTCONbits	set	4082
  1619   000000                     _ECON1bits	set	4050
  1620   000000                     _GIE	set	32663
  1621   000000                     _ERDPT	set	3962
  1622   000000                     _EIRbits	set	3936
  1623   000000                     _PORTE	set	3972
  1624   000000                     _PORTF	set	3973
  1625   000000                     _LATA	set	3977
  1626   000000                     _LATB	set	3978
  1627   000000                     _LATC	set	3979
  1628   000000                     _LATD	set	3980
  1629   000000                     _T0CONbits	set	4053
  1630   000000                     _OSCCON	set	4051
  1631   000000                     _INTCON	set	4082
  1632   000000                     _ECON2	set	3838
  1633   000000                     _MACON3	set	3746
  1634   000000                     _MAIPG	set	3750
  1635   000000                     _MABBIPG	set	3748
  1636   000000                     _MACON4	set	3747
  1637   000000                     _MAMXFL	set	3754
  1638   000000                     _EWRPT	set	3810
  1639   000000                     _ETXST	set	3812
  1640   000000                     _EDMAST	set	3824
  1641   000000                     _EDMADST	set	3828
  1642   000000                     _ERXRDPT	set	3820
  1643   000000                     _ERXND	set	3818
  1644   000000                     _ERXST	set	3816
  1645   000000                     _ETXND	set	3814
  1646   000000                     _EIE	set	3835
  1647   000000                     _MICMD	set	3762
  1648   000000                     _MIREGADR	set	3764
  1649   000000                     _ERXFCON	set	3800
  1650   000000                     _MISTATbits	set	3722
  1651   000000                     _MAADR2	set	3717
  1652   000000                     _ADCON1bits	set	4033
  1653   000000                     _MIWR	set	3766
  1654   000000                     _MIRD	set	3768
  1655   000000                     _PIE1bits	set	3997
  1656   000000                     _T1CON	set	4045
  1657   000000                     _TMR1L	set	4046
  1658   000000                     _TMR1H	set	4047
  1659   000000                     _RCONbits	set	4048
  1660   000000                     _PIR1bits	set	3998
  1661                           
  1662                           ; #config settings
  1663                           
  1664                           	psect	cinit
  1665   015F7C                     __pcinit:
  1666                           	callstack 0
  1667   015F7C                     start_initialization:
  1668                           	callstack 0
  1669   015F7C                     __initialization:
  1670                           	callstack 0
  1671                           
  1672                           ; Initialize objects allocated to BANK5 (140 bytes)
  1673                           ; load TBLPTR registers with __pidataBANK5
  1674   015F7C  0E5E               	movlw	low __pidataBANK5
  1675   015F7E  6EF6               	movwf	tblptrl,c
  1676   015F80  0E70               	movlw	high __pidataBANK5
  1677   015F82  6EF7               	movwf	tblptrh,c
  1678   015F84  0E01               	movlw	low (__pidataBANK5 shr (0+16))
  1679   015F86  6EF8               	movwf	tblptru,c
  1680   015F88  EE05  F000         	lfsr	0,__pdataBANK5
  1681   015F8C  EE10 F08C          	lfsr	1,140
  1682   015F90                     copy_data0:
  1683   015F90  0009               	tblrd		*+
  1684   015F92  CFF5 FFEE          	movff	tablat,postinc0
  1685   015F96  50E5               	movf	postdec1,w,c
  1686   015F98  50E1               	movf	fsr1l,w,c
  1687   015F9A  E1FA               	bnz	copy_data0
  1688                           
  1689                           ; Initialize objects allocated to BANK4 (238 bytes)
  1690                           ; load TBLPTR registers with __pidataBANK4
  1691   015F9C  0ED2               	movlw	low __pidataBANK4
  1692   015F9E  6EF6               	movwf	tblptrl,c
  1693   015FA0  0E64               	movlw	high __pidataBANK4
  1694   015FA2  6EF7               	movwf	tblptrh,c
  1695   015FA4  0E01               	movlw	low (__pidataBANK4 shr (0+16))
  1696   015FA6  6EF8               	movwf	tblptru,c
  1697   015FA8  EE04  F000         	lfsr	0,__pdataBANK4
  1698   015FAC  EE10 F0EE          	lfsr	1,238
  1699   015FB0                     copy_data1:
  1700   015FB0  0009               	tblrd		*+
  1701   015FB2  CFF5 FFEE          	movff	tablat,postinc0
  1702   015FB6  50E5               	movf	postdec1,w,c
  1703   015FB8  50E1               	movf	fsr1l,w,c
  1704   015FBA  E1FA               	bnz	copy_data1
  1705                           
  1706                           ; Initialize objects allocated to BANK3 (98 bytes)
  1707                           ; load TBLPTR registers with __pidataBANK3
  1708   015FBC  0EE4               	movlw	low __pidataBANK3
  1709   015FBE  6EF6               	movwf	tblptrl,c
  1710   015FC0  0E75               	movlw	high __pidataBANK3
  1711   015FC2  6EF7               	movwf	tblptrh,c
  1712   015FC4  0E01               	movlw	low (__pidataBANK3 shr (0+16))
  1713   015FC6  6EF8               	movwf	tblptru,c
  1714   015FC8  EE03  F098         	lfsr	0,__pdataBANK3
  1715   015FCC  EE10 F062          	lfsr	1,98
  1716   015FD0                     copy_data2:
  1717   015FD0  0009               	tblrd		*+
  1718   015FD2  CFF5 FFEE          	movff	tablat,postinc0
  1719   015FD6  50E5               	movf	postdec1,w,c
  1720   015FD8  50E1               	movf	fsr1l,w,c
  1721   015FDA  E1FA               	bnz	copy_data2
  1722                           
  1723                           ; Initialize objects allocated to BANK2 (70 bytes)
  1724                           ; load TBLPTR registers with __pidataBANK2
  1725   015FDC  0E2C               	movlw	low __pidataBANK2
  1726   015FDE  6EF6               	movwf	tblptrl,c
  1727   015FE0  0E7B               	movlw	high __pidataBANK2
  1728   015FE2  6EF7               	movwf	tblptrh,c
  1729   015FE4  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1730   015FE6  6EF8               	movwf	tblptru,c
  1731   015FE8  EE02  F0AD         	lfsr	0,__pdataBANK2
  1732   015FEC  EE10 F046          	lfsr	1,70
  1733   015FF0                     copy_data3:
  1734   015FF0  0009               	tblrd		*+
  1735   015FF2  CFF5 FFEE          	movff	tablat,postinc0
  1736   015FF6  50E5               	movf	postdec1,w,c
  1737   015FF8  50E1               	movf	fsr1l,w,c
  1738   015FFA  E1FA               	bnz	copy_data3
  1739                           
  1740                           ; Initialize objects allocated to BANK1 (11 bytes)
  1741                           ; load TBLPTR registers with __pidataBANK1
  1742   015FFC  0E26               	movlw	low __pidataBANK1
  1743   015FFE  6EF6               	movwf	tblptrl,c
  1744   016000  0E83               	movlw	high __pidataBANK1
  1745   016002  6EF7               	movwf	tblptrh,c
  1746   016004  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1747   016006  6EF8               	movwf	tblptru,c
  1748   016008  EE01  F0F4         	lfsr	0,__pdataBANK1
  1749   01600C  EE10 F00B          	lfsr	1,11
  1750   016010                     copy_data4:
  1751   016010  0009               	tblrd		*+
  1752   016012  CFF5 FFEE          	movff	tablat,postinc0
  1753   016016  50E5               	movf	postdec1,w,c
  1754   016018  50E1               	movf	fsr1l,w,c
  1755   01601A  E1FA               	bnz	copy_data4
  1756                           
  1757                           ; Clear objects allocated to BANK8 (80 bytes)
  1758   01601C  EE08  F000         	lfsr	0,__pbssBANK8
  1759   016020  0E50               	movlw	80
  1760   016022                     clear_0:
  1761   016022  6AEE               	clrf	postinc0,c
  1762   016024  06E8               	decf	wreg,f,c
  1763   016026  E1FD               	bnz	clear_0
  1764                           
  1765                           ; Clear objects allocated to BANK7 (184 bytes)
  1766   016028  EE07  F000         	lfsr	0,__pbssBANK7
  1767   01602C  0EB8               	movlw	184
  1768   01602E                     clear_1:
  1769   01602E  6AEE               	clrf	postinc0,c
  1770   016030  06E8               	decf	wreg,f,c
  1771   016032  E1FD               	bnz	clear_1
  1772                           
  1773                           ; Clear objects allocated to BANK6 (200 bytes)
  1774   016034  EE06  F000         	lfsr	0,__pbssBANK6
  1775   016038  0EC8               	movlw	200
  1776   01603A                     clear_2:
  1777   01603A  6AEE               	clrf	postinc0,c
  1778   01603C  06E8               	decf	wreg,f,c
  1779   01603E  E1FD               	bnz	clear_2
  1780                           
  1781                           ; Clear objects allocated to BANK5 (104 bytes)
  1782   016040  EE05  F08C         	lfsr	0,__pbssBANK5
  1783   016044  0E68               	movlw	104
  1784   016046                     clear_3:
  1785   016046  6AEE               	clrf	postinc0,c
  1786   016048  06E8               	decf	wreg,f,c
  1787   01604A  E1FD               	bnz	clear_3
  1788                           
  1789                           ; Clear objects allocated to BANK4 (10 bytes)
  1790   01604C  EE04  F0EE         	lfsr	0,__pbssBANK4
  1791   016050  0E0A               	movlw	10
  1792   016052                     clear_4:
  1793   016052  6AEE               	clrf	postinc0,c
  1794   016054  06E8               	decf	wreg,f,c
  1795   016056  E1FD               	bnz	clear_4
  1796                           
  1797                           ; Clear objects allocated to BANK3 (152 bytes)
  1798   016058  EE03  F000         	lfsr	0,__pbssBANK3
  1799   01605C  0E98               	movlw	152
  1800   01605E                     clear_5:
  1801   01605E  6AEE               	clrf	postinc0,c
  1802   016060  06E8               	decf	wreg,f,c
  1803   016062  E1FD               	bnz	clear_5
  1804                           
  1805                           ; Clear objects allocated to BANK2 (173 bytes)
  1806   016064  EE02  F000         	lfsr	0,__pbssBANK2
  1807   016068  0EAD               	movlw	173
  1808   01606A                     clear_6:
  1809   01606A  6AEE               	clrf	postinc0,c
  1810   01606C  06E8               	decf	wreg,f,c
  1811   01606E  E1FD               	bnz	clear_6
  1812                           
  1813                           ; Clear objects allocated to BANK1 (146 bytes)
  1814   016070  EE01  F000         	lfsr	0,__pbssBANK1
  1815   016074  0E92               	movlw	146
  1816   016076                     clear_7:
  1817   016076  6AEE               	clrf	postinc0,c
  1818   016078  06E8               	decf	wreg,f,c
  1819   01607A  E1FD               	bnz	clear_7
  1820                           
  1821                           ; Clear objects allocated to BANK0 (7 bytes)
  1822   01607C  EE00  F0F6         	lfsr	0,__pbssBANK0
  1823   016080  0E07               	movlw	7
  1824   016082                     clear_8:
  1825   016082  6AEE               	clrf	postinc0,c
  1826   016084  06E8               	decf	wreg,f,c
  1827   016086  E1FD               	bnz	clear_8
  1828                           
  1829                           ; Clear objects allocated to COMRAM (4 bytes)
  1830   016088  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
  1831   01608A  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
  1832   01608C  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1833   01608E  6A57               	clrf	__pbssCOMRAM& (0+255),c
  1834   016090                     end_of_initialization:
  1835                           	callstack 0
  1836   016090                     __end_of__initialization:
  1837                           	callstack 0
  1838   016090  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1839   016092  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1840   016094  0100               	movlb	0
  1841   016096  EF96  F092         	goto	_main	;jump to C main() function
  1842                           
  1843                           	psect	bssCOMRAM
  1844   000057                     __pbssCOMRAM:
  1845                           	callstack 0
  1846   000057                     _activeTrack@mountainStationInbound$F3654:
  1847                           	callstack 0
  1848   000057                     	ds	2
  1849   000059                     _activeTrack:
  1850                           	callstack 0
  1851   000059                     	ds	2
  1852                           
  1853                           	psect	bssBANK0
  1854   0000F6                     __pbssBANK0:
  1855                           	callstack 0
  1856   0000F6                     _activeTrack@mountainStationOutbound$F3951:
  1857                           	callstack 0
  1858   0000F6                     	ds	2
  1859   0000F8                     _activeTrack@mainStationOutbound$F2630:
  1860                           	callstack 0
  1861   0000F8                     	ds	2
  1862   0000FA                     _activeTrack@mainStationInbound$F2313:
  1863                           	callstack 0
  1864   0000FA                     	ds	2
  1865   0000FC                     _tmp:
  1866                           	callstack 0
  1867   0000FC                     	ds	1
  1868                           
  1869                           	psect	bssBANK1
  1870   000100                     __pbssBANK1:
  1871                           	callstack 0
  1872   000100                     _ip_database_info:
  1873                           	callstack 0
  1874   000100                     	ds	36
  1875   000124                     _ethData:
  1876                           	callstack 0
  1877   000124                     	ds	6
  1878   00012A                     _deviceTime:
  1879                           	callstack 0
  1880   00012A                     	ds	4
  1881   00012E                     _rxPacketStatusVector:
  1882                           	callstack 0
  1883   00012E                     	ds	4
  1884   000132                     _Millisecond_Update_Handler3:
  1885                           	callstack 0
  1886   000132                     	ds	3
  1887   000135                     _Millisecond_Update_Handler2:
  1888                           	callstack 0
  1889   000135                     	ds	3
  1890   000138                     _Millisecond_Update_Handler:
  1891                           	callstack 0
  1892   000138                     	ds	3
  1893   00013B                     _width:
  1894                           	callstack 0
  1895   00013B                     	ds	2
  1896   00013D                     _prec:
  1897                           	callstack 0
  1898   00013D                     	ds	2
  1899   00013F                     _RandomNumber:
  1900                           	callstack 0
  1901   00013F                     	ds	2
  1902   000141                     _timer1ReloadVal:
  1903                           	callstack 0
  1904   000141                     	ds	2
  1905   000143                     _timer0ReloadVal:
  1906                           	callstack 0
  1907   000143                     	ds	2
  1908   000145                     _nextPacketPointer:
  1909                           	callstack 0
  1910   000145                     	ds	2
  1911   000147                     _pTail:
  1912                           	callstack 0
  1913   000147                     	ds	2
  1914   000149                     _pHead:
  1915                           	callstack 0
  1916   000149                     	ds	2
  1917   00014B                     _networkStartPosition:
  1918                           	callstack 0
  1919   00014B                     	ds	2
  1920   00014D                     _M_Box_Eth_Send_Ptr_prev:
  1921                           	callstack 0
  1922   00014D                     	ds	2
  1923   00014F                     _M_Box_Eth_Send_Ptr:
  1924                           	callstack 0
  1925   00014F                     	ds	2
  1926   000151                     _M_Box_Eth_Recv_Ptr_prev:
  1927                           	callstack 0
  1928   000151                     	ds	2
  1929   000153                     _M_Box_Eth_Recv_Ptr:
  1930                           	callstack 0
  1931   000153                     	ds	2
  1932   000155                     _destPort:
  1933                           	callstack 0
  1934   000155                     	ds	2
  1935   000157                     _setT5ToAmpT3:
  1936                           	callstack 0
  1937   000157                     	ds	2
  1938   000159                     _setT4ToAmpT6:
  1939                           	callstack 0
  1940   000159                     	ds	2
  1941   00015B                     _refWALDBERG:
  1942                           	callstack 0
  1943   00015B                     	ds	2
  1944   00015D                     _refWALDSEE:
  1945                           	callstack 0
  1946   00015D                     	ds	2
  1947   00015F                     _refBOT:
  1948                           	callstack 0
  1949   00015F                     	ds	2
  1950   000161                     _refTOP:
  1951                           	callstack 0
  1952   000161                     	ds	2
  1953   000163                     _flags:
  1954                           	callstack 0
  1955   000163                     	ds	1
  1956   000164                     _justSendData:
  1957                           	callstack 0
  1958   000164                     	ds	1
  1959   000165                     _booted:
  1960                           	callstack 0
  1961   000165                     	ds	1
  1962   000166                     _updateTick:
  1963                           	callstack 0
  1964   000166                     	ds	1
  1965   000167                     _dirtyTime:
  1966                           	callstack 0
  1967   000167                     	ds	1
  1968   000168                     _ethListSize:
  1969                           	callstack 0
  1970   000168                     	ds	1
  1971   000169                     	ds	1
  1972   00016A                     _ret:
  1973                           	callstack 0
  1974   00016A                     	ds	1
  1975   00016B                     _isUdpConnected:
  1976                           	callstack 0
  1977   00016B                     	ds	1
  1978   00016C                     _ethernetState:
  1979                           	callstack 0
  1980   00016C                     	ds	1
  1981   00016D                     	ds	1
  1982   00016E                     _ipv4Header:
  1983                           	callstack 0
  1984   00016E                     	ds	20
  1985   000182                     _udpHeader:
  1986                           	callstack 0
  1987   000182                     	ds	8
  1988   00018A                     _seed:
  1989                           	callstack 0
  1990   00018A                     	ds	4
  1991   00018E                     _arpTimer:
  1992                           	callstack 0
  1993   00018E                     	ds	4
  1994                           
  1995                           	psect	dataBANK1
  1996   0001F4                     __pdataBANK1:
  1997                           	callstack 0
  1998   0001F4                     _milliseconds_counter:
  1999                           	callstack 0
  2000   0001F4                     	ds	4
  2001   0001F8                     _tBootWaitTimeCnt:
  2002                           	callstack 0
  2003   0001F8                     	ds	4
  2004   0001FC                     _lfsr_value:
  2005                           	callstack 0
  2006   0001FC                     	ds	1
  2007   0001FD                     _xor_mask:
  2008                           	callstack 0
  2009   0001FD                     	ds	1
  2010   0001FE                     _invert:
  2011                           	callstack 0
  2012   0001FE                     	ds	1
  2013                           
  2014                           	psect	bssBANK2
  2015   000200                     __pbssBANK2:
  2016                           	callstack 0
  2017   000200                     _udpPacketHeader:
  2018                           	callstack 0
  2019   000200                     	ds	12
  2020   00020C                     _tSendAliveMessWaitTimeCnt:
  2021                           	callstack 0
  2022   00020C                     	ds	4
  2023   000210                     Network_Manage@nowPv:
  2024                           	callstack 0
  2025   000210                     	ds	4
  2026   000214                     	ds	4
  2027   000218                     	ds	4
  2028   00021C                     _DataRxHandler:
  2029                           	callstack 0
  2030   00021C                     	ds	3
  2031   00021F                     strtok@p:
  2032                           	callstack 0
  2033   00021F                     	ds	2
  2034   000221                     _errno:
  2035                           	callstack 0
  2036   000221                     	ds	2
  2037   000223                     _seconds_counter:
  2038                           	callstack 0
  2039   000223                     	ds	2
  2040   000225                     _portUnreachable:
  2041                           	callstack 0
  2042   000225                     	ds	2
  2043   000227                     _waldberg:
  2044                           	callstack 0
  2045   000227                     	ds	54
  2046   00025D                     _waldsee:
  2047                           	callstack 0
  2048   00025D                     	ds	54
  2049   000293                     _DataMessage:
  2050                           	callstack 0
  2051   000293                     	ds	10
  2052   00029D                     _StatusMessage:
  2053                           	callstack 0
  2054   00029D                     	ds	10
  2055   0002A7                     _hostMacAddress:
  2056                           	callstack 0
  2057   0002A7                     	ds	6
  2058                           
  2059                           	psect	dataBANK2
  2060   0002AD                     __pdataBANK2:
  2061                           	callstack 0
  2062   0002AD                     _VOLTDETECT:
  2063                           	callstack 0
  2064   0002AD                     	ds	14
  2065   0002BB                     _HALL_BLK_13:
  2066                           	callstack 0
  2067   0002BB                     	ds	14
  2068   0002C9                     _macAddress:
  2069                           	callstack 0
  2070   0002C9                     	ds	6
  2071   0002CF                     _REL_T5:
  2072                           	callstack 0
  2073   0002CF                     	ds	3
  2074   0002D2                     _REL_T4:
  2075                           	callstack 0
  2076   0002D2                     	ds	3
  2077   0002D5                     _OCC_TO_T3:
  2078                           	callstack 0
  2079   0002D5                     	ds	3
  2080   0002D8                     _OCC_TO_T6:
  2081                           	callstack 0
  2082   0002D8                     	ds	3
  2083   0002DB                     _OCC_TO_STN_12:
  2084                           	callstack 0
  2085   0002DB                     	ds	3
  2086   0002DE                     _OCC_TO_STN_11:
  2087                           	callstack 0
  2088   0002DE                     	ds	3
  2089   0002E1                     _OCC_TO_STN_10:
  2090                           	callstack 0
  2091   0002E1                     	ds	3
  2092   0002E4                     _OCC_TO_STN_3:
  2093                           	callstack 0
  2094   0002E4                     	ds	3
  2095   0002E7                     _OCC_TO_STN_2:
  2096                           	callstack 0
  2097   0002E7                     	ds	3
  2098   0002EA                     _OCC_TO_STN_1:
  2099                           	callstack 0
  2100   0002EA                     	ds	3
  2101   0002ED                     _OCC_TO_9B:
  2102                           	callstack 0
  2103   0002ED                     	ds	3
  2104   0002F0                     _OCC_TO_21B:
  2105                           	callstack 0
  2106   0002F0                     	ds	3
  2107                           
  2108                           	psect	bssBANK3
  2109   000300                     __pbssBANK3:
  2110                           	callstack 0
  2111   000300                     _bot:
  2112                           	callstack 0
  2113   000300                     	ds	76
  2114   00034C                     _top:
  2115                           	callstack 0
  2116   00034C                     	ds	76
  2117                           
  2118                           	psect	dataBANK3
  2119   000398                     __pdataBANK3:
  2120                           	callstack 0
  2121   000398                     _HALL_BLK_4A:
  2122                           	callstack 0
  2123   000398                     	ds	14
  2124   0003A6                     _HALL_BLK_9B:
  2125                           	callstack 0
  2126   0003A6                     	ds	14
  2127   0003B4                     _HALL_BLK_T2:
  2128                           	callstack 0
  2129   0003B4                     	ds	14
  2130   0003C2                     _HALL_BLK_T1:
  2131                           	callstack 0
  2132   0003C2                     	ds	14
  2133   0003D0                     _HALL_BLK_T5:
  2134                           	callstack 0
  2135   0003D0                     	ds	14
  2136   0003DE                     _HALL_BLK_T4:
  2137                           	callstack 0
  2138   0003DE                     	ds	14
  2139   0003EC                     _HALL_BLK_21A:
  2140                           	callstack 0
  2141   0003EC                     	ds	14
  2142                           
  2143                           	psect	bssBANK4
  2144   0004EE                     __pbssBANK4:
  2145                           	callstack 0
  2146   0004EE                     _udpReceivedData:
  2147                           	callstack 0
  2148   0004EE                     	ds	10
  2149                           
  2150                           	psect	dataBANK4
  2151   000400                     __pdataBANK4:
  2152                           	callstack 0
  2153   000400                     _OCC_FR_21B:
  2154                           	callstack 0
  2155   000400                     	ds	14
  2156   00040E                     _OCC_FR_9B:
  2157                           	callstack 0
  2158   00040E                     	ds	14
  2159   00041C                     _OCC_FR_22B:
  2160                           	callstack 0
  2161   00041C                     	ds	14
  2162   00042A                     _OCC_FR_23B:
  2163                           	callstack 0
  2164   00042A                     	ds	14
  2165   000438                     _CTRL_OFF:
  2166                           	callstack 0
  2167   000438                     	ds	14
  2168   000446                     _OCC_FR_T3:
  2169                           	callstack 0
  2170   000446                     	ds	14
  2171   000454                     _OCC_FR_T6:
  2172                           	callstack 0
  2173   000454                     	ds	14
  2174   000462                     _OCC_FR_STN_12:
  2175                           	callstack 0
  2176   000462                     	ds	14
  2177   000470                     _OCC_FR_STN_11:
  2178                           	callstack 0
  2179   000470                     	ds	14
  2180   00047E                     _OCC_FR_STN_10:
  2181                           	callstack 0
  2182   00047E                     	ds	14
  2183   00048C                     _OCC_FR_STN_3:
  2184                           	callstack 0
  2185   00048C                     	ds	14
  2186   00049A                     _OCC_FR_STN_2:
  2187                           	callstack 0
  2188   00049A                     	ds	14
  2189   0004A8                     _OCC_FR_STN_1:
  2190                           	callstack 0
  2191   0004A8                     	ds	14
  2192   0004B6                     _OCC_FR_BLK4:
  2193                           	callstack 0
  2194   0004B6                     	ds	14
  2195   0004C4                     _OCC_FR_BLK13:
  2196                           	callstack 0
  2197   0004C4                     	ds	14
  2198   0004D2                     _HALL_BLK_T8:
  2199                           	callstack 0
  2200   0004D2                     	ds	14
  2201   0004E0                     _HALL_BLK_T7:
  2202                           	callstack 0
  2203   0004E0                     	ds	14
  2204                           
  2205                           	psect	bssBANK5
  2206   00058C                     __pbssBANK5:
  2207                           	callstack 0
  2208   00058C                     _limit:
  2209                           	callstack 0
  2210   00058C                     	ds	23
  2211   0005A3                     _dbuf:
  2212                           	callstack 0
  2213   0005A3                     	ds	32
  2214   0005C3                     gmtime@tm:
  2215                           	callstack 0
  2216   0005C3                     	ds	24
  2217   0005DB                     makeIpv4AddresstoStr@ip_str:
  2218                           	callstack 0
  2219   0005DB                     	ds	15
  2220   0005EA                     _prevDataMessage:
  2221                           	callstack 0
  2222   0005EA                     	ds	10
  2223                           
  2224                           	psect	dataBANK5
  2225   000500                     __pdataBANK5:
  2226                           	callstack 0
  2227   000500                     _network_errors:
  2228                           	callstack 0
  2229   000500                     	ds	32
  2230   000520                     _SIG_BOT:
  2231                           	callstack 0
  2232   000520                     	ds	18
  2233   000532                     _SIG_TOP:
  2234                           	callstack 0
  2235   000532                     	ds	18
  2236   000544                     _WS_WALDBERG:
  2237                           	callstack 0
  2238   000544                     	ds	18
  2239   000556                     _WS_WALDSEE:
  2240                           	callstack 0
  2241   000556                     	ds	18
  2242   000568                     _WS_BOT:
  2243                           	callstack 0
  2244   000568                     	ds	18
  2245   00057A                     _WS_TOP:
  2246                           	callstack 0
  2247   00057A                     	ds	18
  2248                           
  2249                           	psect	bssBANK6
  2250   000600                     __pbssBANK6:
  2251                           	callstack 0
  2252   000600                     _txData:
  2253                           	callstack 0
  2254   000600                     	ds	200
  2255                           
  2256                           	psect	bssBANK7
  2257   000700                     __pbssBANK7:
  2258                           	callstack 0
  2259   000700                     _arpMap:
  2260                           	callstack 0
  2261   000700                     	ds	104
  2262   000768                     _udpRecvBox:
  2263                           	callstack 0
  2264   000768                     	ds	80
  2265                           
  2266                           	psect	bssBANK8
  2267   000800                     __pbssBANK8:
  2268                           	callstack 0
  2269   000800                     _udpTransBox:
  2270                           	callstack 0
  2271   000800                     	ds	80
  2272                           
  2273                           	psect	cstackBANK1
  2274   000192                     __pcstackBANK1:
  2275                           	callstack 0
  2276   000192                     Network_Read@debug_str:
  2277                           	callstack 0
  2278                           
  2279                           ; 80 bytes @ 0x0
  2280   000192                     	ds	80
  2281   0001E2                     Network_Read@t:
  2282                           	callstack 0
  2283                           
  2284                           ; 4 bytes @ 0x50
  2285   0001E2                     	ds	4
  2286   0001E6                     Network_Read@header:
  2287                           	callstack 0
  2288                           
  2289                           ; 14 bytes @ 0x54
  2290   0001E6                     	ds	14
  2291                           
  2292                           	psect	cstackBANK0
  2293   000060                     __pcstackBANK0:
  2294                           	callstack 0
  2295   000060                     sprintf@ap:
  2296                           	callstack 0
  2297   000060                     ARPV4_Packet@length:
  2298                           	callstack 0
  2299   000060                     IPv4_Start@destAddress:
  2300                           	callstack 0
  2301                           
  2302                           ; 4 bytes @ 0x0
  2303   000060                     	ds	1
  2304   000061                     sprintf@f:
  2305                           	callstack 0
  2306                           
  2307                           ; 12 bytes @ 0x1
  2308   000061                     	ds	1
  2309   000062                     ARPV4_Packet@mergeFlag:
  2310                           	callstack 0
  2311                           
  2312                           ; 1 bytes @ 0x2
  2313   000062                     	ds	1
  2314   000063                     ARPV4_Packet@ret:
  2315                           	callstack 0
  2316                           
  2317                           ; 1 bytes @ 0x3
  2318   000063                     	ds	1
  2319   000064                     IPv4_Start@protocol:
  2320                           	callstack 0
  2321   000064                     ARPV4_Packet@arpPtr:
  2322                           	callstack 0
  2323                           
  2324                           ; 2 bytes @ 0x4
  2325   000064                     	ds	1
  2326   000065                     ??_IPv4_Start:
  2327                           
  2328                           ; 1 bytes @ 0x5
  2329   000065                     	ds	1
  2330   000066                     ARPV4_Packet@x:
  2331                           	callstack 0
  2332                           
  2333                           ; 1 bytes @ 0x6
  2334   000066                     	ds	1
  2335   000067                     ARPV4_Packet@x_6263:
  2336                           	callstack 0
  2337                           
  2338                           ; 1 bytes @ 0x7
  2339   000067                     	ds	1
  2340   000068                     ARPV4_Packet@entryPointer:
  2341                           	callstack 0
  2342                           
  2343                           ; 2 bytes @ 0x8
  2344   000068                     	ds	2
  2345   00006A                     ARPV4_Packet@header:
  2346                           	callstack 0
  2347                           
  2348                           ; 28 bytes @ 0xA
  2349   00006A                     	ds	3
  2350   00006D                     IPv4_Start@targetAddress:
  2351                           	callstack 0
  2352                           
  2353                           ; 4 bytes @ 0xD
  2354   00006D                     	ds	4
  2355   000071                     IPv4_Start@destMacAddress:
  2356                           	callstack 0
  2357                           
  2358                           ; 2 bytes @ 0x11
  2359   000071                     	ds	2
  2360   000073                     IPv4_Start@ret:
  2361                           	callstack 0
  2362                           
  2363                           ; 1 bytes @ 0x13
  2364   000073                     	ds	1
  2365   000074                     ICMP_EchoReply@ipv4Hdr:
  2366                           	callstack 0
  2367   000074                     ICMP_PortUnreachable@srcIPAddress:
  2368                           	callstack 0
  2369   000074                     UDP_Start@destIP:
  2370                           	callstack 0
  2371                           
  2372                           ; 4 bytes @ 0x14
  2373   000074                     	ds	2
  2374   000076                     ??_ICMP_EchoReply:
  2375                           
  2376                           ; 1 bytes @ 0x16
  2377   000076                     	ds	2
  2378   000078                     UDP_Start@srcPort:
  2379                           	callstack 0
  2380   000078                     ICMP_PortUnreachable@destIPAddress:
  2381                           	callstack 0
  2382                           
  2383                           ; 4 bytes @ 0x18
  2384   000078                     	ds	2
  2385   00007A                     ICMP_EchoReply@identifier:
  2386                           	callstack 0
  2387   00007A                     UDP_Start@dstPort:
  2388                           	callstack 0
  2389                           
  2390                           ; 2 bytes @ 0x1A
  2391   00007A                     	ds	2
  2392   00007C                     ICMP_EchoReply@sequence:
  2393                           	callstack 0
  2394   00007C                     ICMP_PortUnreachable@length:
  2395                           	callstack 0
  2396                           
  2397                           ; 2 bytes @ 0x1C
  2398   00007C                     	ds	2
  2399   00007E                     ICMP_EchoReply@icmp_cksm_start:
  2400                           	callstack 0
  2401   00007E                     ICMP_PortUnreachable@cksm:
  2402                           	callstack 0
  2403                           
  2404                           ; 2 bytes @ 0x1E
  2405   00007E                     	ds	2
  2406   000080                     ICMP_PortUnreachable@ret:
  2407                           	callstack 0
  2408   000080                     ICMP_EchoReply@cksm:
  2409                           	callstack 0
  2410                           
  2411                           ; 2 bytes @ 0x20
  2412   000080                     	ds	1
  2413   000081                     UDP_Receive@udpcksm:
  2414                           	callstack 0
  2415                           
  2416                           ; 2 bytes @ 0x21
  2417   000081                     	ds	1
  2418   000082                     ICMP_EchoReply@ipv4PayloadLength:
  2419                           	callstack 0
  2420                           
  2421                           ; 2 bytes @ 0x22
  2422   000082                     	ds	1
  2423   000083                     ??_UDP_Receive:
  2424                           
  2425                           ; 1 bytes @ 0x23
  2426   000083                     	ds	1
  2427   000084                     ICMP_EchoReply@ret:
  2428                           	callstack 0
  2429                           
  2430                           ; 1 bytes @ 0x24
  2431   000084                     	ds	1
  2432   000085                     ICMP_Receive@ipv4Hdr:
  2433                           	callstack 0
  2434                           
  2435                           ; 2 bytes @ 0x25
  2436   000085                     	ds	2
  2437   000087                     ??_ICMP_Receive:
  2438   000087                     UDP_Receive@ret:
  2439                           	callstack 0
  2440                           
  2441                           ; 1 bytes @ 0x27
  2442   000087                     	ds	1
  2443   000088                     UDP_Receive@hptr:
  2444                           	callstack 0
  2445                           
  2446                           ; 2 bytes @ 0x28
  2447   000088                     	ds	5
  2448   00008D                     ICMP_Receive@icmpHdr:
  2449                           	callstack 0
  2450                           
  2451                           ; 4 bytes @ 0x2D
  2452   00008D                     	ds	4
  2453   000091                     ??_IPV4_Packet:
  2454                           
  2455                           ; 1 bytes @ 0x31
  2456   000091                     	ds	32
  2457   0000B1                     IPV4_Packet@msg:
  2458                           	callstack 0
  2459                           
  2460                           ; 40 bytes @ 0x51
  2461   0000B1                     	ds	40
  2462   0000D9                     IPV4_Packet@length:
  2463                           	callstack 0
  2464                           
  2465                           ; 2 bytes @ 0x79
  2466   0000D9                     	ds	2
  2467   0000DB                     IPV4_Packet@hdrLen:
  2468                           	callstack 0
  2469                           
  2470                           ; 1 bytes @ 0x7B
  2471   0000DB                     	ds	1
  2472   0000DC                     IPV4_Packet@cksm:
  2473                           	callstack 0
  2474                           
  2475                           ; 2 bytes @ 0x7C
  2476   0000DC                     	ds	2
  2477   0000DE                     ??_Network_Read:
  2478                           
  2479                           ; 1 bytes @ 0x7E
  2480   0000DE                     	ds	4
  2481   0000E2                     Network_Manage@now:
  2482                           	callstack 0
  2483                           
  2484                           ; 4 bytes @ 0x82
  2485   0000E2                     	ds	4
  2486   0000E6                     ??_PROCESSxETHxDATA:
  2487                           
  2488                           ; 1 bytes @ 0x86
  2489   0000E6                     	ds	2
  2490   0000E8                     PROCESSxETHxDATA@udpSend:
  2491                           	callstack 0
  2492                           
  2493                           ; 2 bytes @ 0x88
  2494   0000E8                     	ds	2
  2495   0000EA                     ??_main:
  2496                           
  2497                           ; 1 bytes @ 0x8A
  2498   0000EA                     	ds	4
  2499   0000EE                     main@millis:
  2500                           	callstack 0
  2501                           
  2502                           ; 4 bytes @ 0x8E
  2503   0000EE                     	ds	4
  2504   0000F2                     main@udpReceived:
  2505                           	callstack 0
  2506                           
  2507                           ; 2 bytes @ 0x92
  2508   0000F2                     	ds	2
  2509   0000F4                     main@i:
  2510                           	callstack 0
  2511                           
  2512                           ; 2 bytes @ 0x94
  2513   0000F4                     	ds	2
  2514                           
  2515                           	psect	cstackCOMRAM
  2516   000001                     __pcstackCOMRAM:
  2517                           	callstack 0
  2518   000001                     TMR1_WriteTimer@timerVal:
  2519                           	callstack 0
  2520                           
  2521                           ; 2 bytes @ 0x0
  2522   000001                     	ds	2
  2523   000003                     ??_INTERRUPT_InterruptManager:
  2524   000003                     
  2525                           ; 1 bytes @ 0x2
  2526   000003                     	ds	2
  2527   000005                     ??_ETH_Flush:
  2528   000005                     ??_ETH_SendQueued:
  2529   000005                     ?_GETxDATAxFROMxRECEIVExMAILxBOX:
  2530                           	callstack 0
  2531   000005                     ?_GetDataFromSendMailBox:
  2532                           	callstack 0
  2533   000005                     ?_ETH_ReadBlock:
  2534                           	callstack 0
  2535   000005                     ?_ETH_GetReadPtr:
  2536                           	callstack 0
  2537   000005                     ?_udp_table_getIterator:
  2538                           	callstack 0
  2539   000005                     ?_udp_table_nextEntry:
  2540                           	callstack 0
  2541   000005                     ?_MAC_getAddress:
  2542                           	callstack 0
  2543   000005                     ?_ETH_NewPacket:
  2544                           	callstack 0
  2545   000005                     ?_IPV4_GetDatagramLength:
  2546                           	callstack 0
  2547   000005                     ?_ARPV4_Lookup:
  2548                           	callstack 0
  2549   000005                     ?_Network_GetStartPosition:
  2550                           	callstack 0
  2551   000005                     ?_ETH_Read16:
  2552                           	callstack 0
  2553   000005                     ?_ETH_ComputeChecksum:
  2554                           	callstack 0
  2555   000005                     ?_ETH_GetRxByteCount:
  2556                           	callstack 0
  2557   000005                     ?_ETH_GetByteCount:
  2558                           	callstack 0
  2559   000005                     ?_IPV4_PseudoHeaderChecksum:
  2560                           	callstack 0
  2561   000005                     ?___wmul:
  2562                           	callstack 0
  2563   000005                     ?_GETxMILLIS:
  2564                           	callstack 0
  2565   000005                     ?_time:
  2566                           	callstack 0
  2567   000005                     ?___lmul:
  2568                           	callstack 0
  2569   000005                     ?___lldiv:
  2570                           	callstack 0
  2571   000005                     ?___aldiv:
  2572                           	callstack 0
  2573   000005                     ?___almod:
  2574                           	callstack 0
  2575   000005                     ?___llmod:
  2576                           	callstack 0
  2577   000005                     PHY_WaitForBusy@ret:
  2578                           	callstack 0
  2579   000005                     ETH_Read8@ret:
  2580                           	callstack 0
  2581   000005                     ETH_Write8@data:
  2582                           	callstack 0
  2583   000005                     ETH_Insert@data:
  2584                           	callstack 0
  2585   000005                     ipdb_init@x:
  2586                           	callstack 0
  2587   000005                     memcpy@d1:
  2588                           	callstack 0
  2589   000005                     INITxPATHWAYxSTATION@reftop:
  2590                           	callstack 0
  2591   000005                     INITxPATHWAYxMNTSTATION@refwaldsee:
  2592                           	callstack 0
  2593   000005                     PUTxDATAxINxSENDxMAILxBOX@data:
  2594                           	callstack 0
  2595   000005                     udp_table_nextEntry@i:
  2596                           	callstack 0
  2597   000005                     ETH_ReadBlock@buffer:
  2598                           	callstack 0
  2599   000005                     ETH_Write16@data:
  2600                           	callstack 0
  2601   000005                     ETH_WriteBlock@buffer:
  2602                           	callstack 0
  2603   000005                     ETH_Dump@length:
  2604                           	callstack 0
  2605   000005                     ETH_ComputeChecksum@len:
  2606                           	callstack 0
  2607   000005                     ETH_GetMAC@mac:
  2608                           	callstack 0
  2609   000005                     ETH_PacketListReset@ptr:
  2610                           	callstack 0
  2611   000005                     ETH_RemovePacket@pPacket:
  2612                           	callstack 0
  2613   000005                     IPV4_PseudoHeaderChecksum@payloadLen:
  2614                           	callstack 0
  2615   000005                     ARPV4_Update@entryPointer:
  2616                           	callstack 0
  2617   000005                     time@t:
  2618                           	callstack 0
  2619   000005                     compareDataToSend@arr1:
  2620                           	callstack 0
  2621   000005                     DEBOUNCExIO@instance:
  2622                           	callstack 0
  2623   000005                     SETxOCC@self:
  2624                           	callstack 0
  2625   000005                     ___wmul@multiplier:
  2626                           	callstack 0
  2627   000005                     fputc@c:
  2628                           	callstack 0
  2629   000005                     TMR0_SetInterruptHandler@InterruptHandler:
  2630                           	callstack 0
  2631   000005                     TMR1_SetInterruptHandler@InterruptHandler:
  2632                           	callstack 0
  2633   000005                     SETxMILLISECONDxUPDATExHANDLER@InterruptHandler:
  2634                           	callstack 0
  2635   000005                     ETH_Write32@data:
  2636                           	callstack 0
  2637   000005                     ARPV4_Lookup@ip_address:
  2638                           	callstack 0
  2639   000005                     ___lmul@multiplier:
  2640                           	callstack 0
  2641   000005                     ___lldiv@dividend:
  2642                           	callstack 0
  2643   000005                     ___aldiv@dividend:
  2644                           	callstack 0
  2645   000005                     ___almod@dividend:
  2646                           	callstack 0
  2647   000005                     ___llmod@dividend:
  2648                           	callstack 0
  2649   000005                     PutDataInReceiveMailBox@data:
  2650                           	callstack 0
  2651                           
  2652                           ; 10 bytes @ 0x4
  2653   000005                     	ds	1
  2654   000006                     PHY_WaitForBusy@timeout:
  2655                           	callstack 0
  2656   000006                     ETH_Insert@len:
  2657                           	callstack 0
  2658   000006                     memcpy@s1:
  2659                           	callstack 0
  2660                           
  2661                           ; 2 bytes @ 0x5
  2662   000006                     	ds	1
  2663   000007                     ??_GETxDATAxFROMxRECEIVExMAILxBOX:
  2664   000007                     ??_GetDataFromSendMailBox:
  2665   000007                     ??_PUTxDATAxINxSENDxMAILxBOX:
  2666   000007                     ??_udp_table_nextEntry:
  2667   000007                     ??_ETH_NewPacket:
  2668   000007                     ??_IPV4_PseudoHeaderChecksum:
  2669   000007                     ?_PHY_Read:
  2670                           	callstack 0
  2671   000007                     ARPV4_Init@x:
  2672                           	callstack 0
  2673   000007                     ARPV4_Update@x:
  2674                           	callstack 0
  2675   000007                     DEBOUNCExIO@millisPtr:
  2676                           	callstack 0
  2677   000007                     SETxOCC@value:
  2678                           	callstack 0
  2679   000007                     INITxPATHWAYxSTATION@refbot:
  2680                           	callstack 0
  2681   000007                     INITxPATHWAYxMNTSTATION@refwaldberg:
  2682                           	callstack 0
  2683   000007                     PHY_Write@data:
  2684                           	callstack 0
  2685   000007                     ETH_Read16@ret:
  2686                           	callstack 0
  2687   000007                     ETH_ReadBlock@length:
  2688                           	callstack 0
  2689   000007                     ETH_WriteBlock@length:
  2690                           	callstack 0
  2691   000007                     ETH_ComputeChecksum@seed:
  2692                           	callstack 0
  2693   000007                     ETH_SetReadPtr@rdptr:
  2694                           	callstack 0
  2695   000007                     ETH_SetRxByteCount@count:
  2696                           	callstack 0
  2697   000007                     ETH_PacketListReset@index:
  2698                           	callstack 0
  2699   000007                     compareDataToSend@arr2:
  2700                           	callstack 0
  2701   000007                     ___wmul@multiplicand:
  2702                           	callstack 0
  2703   000007                     fputc@fp:
  2704                           	callstack 0
  2705                           
  2706                           ; 2 bytes @ 0x6
  2707   000007                     	ds	1
  2708   000008                     ??_SETxOCC:
  2709   000008                     ??_TMR0_Initialize:
  2710   000008                     ??_DEBOUNCExIO:
  2711   000008                     ETH_Insert@offset:
  2712                           	callstack 0
  2713   000008                     memcpy@n:
  2714                           	callstack 0
  2715                           
  2716                           ; 2 bytes @ 0x7
  2717   000008                     	ds	1
  2718   000009                     ??_fputc:
  2719   000009                     ??_ETH_Send:
  2720   000009                     ??_ETH_ComputeChecksum:
  2721   000009                     PHY_Write@reg:
  2722                           	callstack 0
  2723   000009                     ETH_NewPacket@index:
  2724                           	callstack 0
  2725   000009                     time@gie_val:
  2726                           	callstack 0
  2727   000009                     compareDataToSend@size:
  2728                           	callstack 0
  2729   000009                     GETxDATAxFROMxRECEIVExMAILxBOX@data:
  2730                           	callstack 0
  2731   000009                     GetDataFromSendMailBox@data:
  2732                           	callstack 0
  2733   000009                     ETH_ReadBlock@len:
  2734                           	callstack 0
  2735   000009                     ETH_WriteBlock@p:
  2736                           	callstack 0
  2737   000009                     getHeaderLen@rxptr:
  2738                           	callstack 0
  2739   000009                     ___wmul@product:
  2740                           	callstack 0
  2741   000009                     ___lmul@multiplicand:
  2742                           	callstack 0
  2743   000009                     ___lldiv@divisor:
  2744                           	callstack 0
  2745   000009                     ___aldiv@divisor:
  2746                           	callstack 0
  2747   000009                     ___almod@divisor:
  2748                           	callstack 0
  2749   000009                     ___llmod@divisor:
  2750                           	callstack 0
  2751                           
  2752                           ; 4 bytes @ 0x8
  2753   000009                     	ds	1
  2754   00000A                     ??_ETH_Insert:
  2755   00000A                     PHY_Write@GIESave:
  2756                           	callstack 0
  2757   00000A                     memcpy@tmp:
  2758                           	callstack 0
  2759   00000A                     time@the_time:
  2760                           	callstack 0
  2761                           
  2762                           ; 4 bytes @ 0x9
  2763   00000A                     	ds	1
  2764   00000B                     ??_ETH_Shift_Tx_Packets:
  2765   00000B                     ?_read_prec_or_width:
  2766                           	callstack 0
  2767   00000B                     PHY_Read@reg:
  2768                           	callstack 0
  2769   00000B                     IPV4_PseudoHeaderChecksum@v:
  2770                           	callstack 0
  2771   00000B                     getHeaderLen@header_len:
  2772                           	callstack 0
  2773   00000B                     read_prec_or_width@fmt:
  2774                           	callstack 0
  2775   00000B                     ETH_ReadBlock@p:
  2776                           	callstack 0
  2777   00000B                     ETH_Copy@len:
  2778                           	callstack 0
  2779   00000B                     memcpy@s:
  2780                           	callstack 0
  2781                           
  2782                           ; 2 bytes @ 0xA
  2783   00000B                     	ds	1
  2784   00000C                     IPV4_PseudoHeaderChecksum@len:
  2785                           	callstack 0
  2786   00000C                     compareDataToSend@i:
  2787                           	callstack 0
  2788   00000C                     read_prec_or_width@ap:
  2789                           	callstack 0
  2790   00000C                     ETH_Insert@current_tx_ptr:
  2791                           	callstack 0
  2792   00000C                     PHY_Read@ret:
  2793                           	callstack 0
  2794                           
  2795                           ; 4 bytes @ 0xB
  2796   00000C                     	ds	1
  2797   00000D                     ___aldiv@counter:
  2798                           	callstack 0
  2799   00000D                     ___almod@counter:
  2800                           	callstack 0
  2801   00000D                     ___llmod@counter:
  2802                           	callstack 0
  2803   00000D                     memcpy@d:
  2804                           	callstack 0
  2805   00000D                     read_prec_or_width@c:
  2806                           	callstack 0
  2807   00000D                     ETH_Send@packetEnd:
  2808                           	callstack 0
  2809   00000D                     ETH_Copy@timer:
  2810                           	callstack 0
  2811   00000D                     ETH_ComputeChecksum@v:
  2812                           	callstack 0
  2813   00000D                     ARPV4_Lookup@entry_pointer:
  2814                           	callstack 0
  2815   00000D                     IPV4_PseudoHeaderChecksum@cksm:
  2816                           	callstack 0
  2817   00000D                     ___lmul@product:
  2818                           	callstack 0
  2819   00000D                     ___lldiv@quotient:
  2820                           	callstack 0
  2821                           
  2822                           ; 4 bytes @ 0xC
  2823   00000D                     	ds	1
  2824   00000E                     ___aldiv@sign:
  2825                           	callstack 0
  2826   00000E                     ___almod@sign:
  2827                           	callstack 0
  2828   00000E                     stoa@fp:
  2829                           	callstack 0
  2830   00000E                     read_prec_or_width@n:
  2831                           	callstack 0
  2832   00000E                     fputs@s:
  2833                           	callstack 0
  2834                           
  2835                           ; 2 bytes @ 0xD
  2836   00000E                     	ds	1
  2837   00000F                     ??_PutDataInReceiveMailBox:
  2838   00000F                     ?_abs:
  2839                           	callstack 0
  2840   00000F                     ARPV4_Lookup@x:
  2841                           	callstack 0
  2842   00000F                     ETH_Copy@tmp_len:
  2843                           	callstack 0
  2844   00000F                     ETH_Shift_Tx_Packets@shiftOffset:
  2845                           	callstack 0
  2846   00000F                     abs@a:
  2847                           	callstack 0
  2848   00000F                     ETH_ComputeChecksum@cksm:
  2849                           	callstack 0
  2850   00000F                     ___aldiv@quotient:
  2851                           	callstack 0
  2852                           
  2853                           ; 4 bytes @ 0xE
  2854   00000F                     	ds	1
  2855   000010                     stoa@s:
  2856                           	callstack 0
  2857   000010                     fputs@fp:
  2858                           	callstack 0
  2859   000010                     ETH_CheckLinkUp@value:
  2860                           	callstack 0
  2861                           
  2862                           ; 4 bytes @ 0xF
  2863   000010                     	ds	1
  2864   000011                     ??_abs:
  2865   000011                     ?_rand:
  2866                           	callstack 0
  2867   000011                     ___lldiv@counter:
  2868                           	callstack 0
  2869   000011                     UDPxDATAxRECV@length:
  2870                           	callstack 0
  2871   000011                     ETH_Shift_Tx_Packets@timer:
  2872                           	callstack 0
  2873   000011                     IPV4_PseudoHeaderChecksum@tmp:
  2874                           	callstack 0
  2875                           
  2876                           ; 12 bytes @ 0x10
  2877   000011                     	ds	1
  2878   000012                     ??_stoa:
  2879   000012                     CREATExTASKxSTATUSxMESSAGE@task_command:
  2880                           	callstack 0
  2881   000012                     fputs@c:
  2882                           	callstack 0
  2883                           
  2884                           ; 1 bytes @ 0x11
  2885   000012                     	ds	1
  2886   000013                     ??_rand:
  2887   000013                     ?_ETH_TxComputeChecksum:
  2888                           	callstack 0
  2889   000013                     ?_ETH_RxComputeChecksum:
  2890                           	callstack 0
  2891   000013                     CREATExTASKxSTATUSxMESSAGE@task_state:
  2892                           	callstack 0
  2893   000013                     ETH_Shift_Tx_Packets@len:
  2894                           	callstack 0
  2895   000013                     ETH_TxComputeChecksum@position:
  2896                           	callstack 0
  2897   000013                     ETH_RxComputeChecksum@len:
  2898                           	callstack 0
  2899   000013                     fputs@i:
  2900                           	callstack 0
  2901                           
  2902                           ; 2 bytes @ 0x12
  2903   000013                     	ds	1
  2904   000014                     CREATExTASKxSTATUSxMESSAGE@task_messages:
  2905                           	callstack 0
  2906   000014                     ETH_Init@mac:
  2907                           	callstack 0
  2908   000014                     stoa@p:
  2909                           	callstack 0
  2910                           
  2911                           ; 2 bytes @ 0x13
  2912   000014                     	ds	1
  2913   000015                     ??_CREATExTASKxSTATUSxMESSAGE:
  2914   000015                     ETH_Shift_Tx_Packets@pElem:
  2915                           	callstack 0
  2916   000015                     ETH_TxComputeChecksum@len:
  2917                           	callstack 0
  2918   000015                     ETH_RxComputeChecksum@seed:
  2919                           	callstack 0
  2920   000015                     pad@fp:
  2921                           	callstack 0
  2922                           
  2923                           ; 2 bytes @ 0x14
  2924   000015                     	ds	1
  2925   000016                     CREATExTASKxSTATUSxMESSAGE@task_id:
  2926                           	callstack 0
  2927   000016                     stoa@w:
  2928                           	callstack 0
  2929                           
  2930                           ; 2 bytes @ 0x15
  2931   000016                     	ds	1
  2932   000017                     ??_ETH_RxComputeChecksum:
  2933   000017                     ?_GETxRANDOMxNUMBER:
  2934                           	callstack 0
  2935   000017                     CREATExTASKxSTATUSxMESSAGE@i:
  2936                           	callstack 0
  2937   000017                     ETH_WriteStart@dest_mac:
  2938                           	callstack 0
  2939   000017                     ETH_TxComputeChecksum@seed:
  2940                           	callstack 0
  2941   000017                     pad@buf:
  2942                           	callstack 0
  2943                           
  2944                           ; 2 bytes @ 0x16
  2945   000017                     	ds	1
  2946   000018                     stoa@cp:
  2947                           	callstack 0
  2948   000018                     CREATExTASKxSTATUSxMESSAGE@StatusMessage:
  2949                           	callstack 0
  2950                           
  2951                           ; 10 bytes @ 0x17
  2952   000018                     	ds	1
  2953   000019                     ??_ETH_TxComputeChecksum:
  2954   000019                     ETH_WriteStart@type:
  2955                           	callstack 0
  2956   000019                     pad@p:
  2957                           	callstack 0
  2958                           
  2959                           ; 2 bytes @ 0x18
  2960   000019                     	ds	1
  2961   00001A                     DebounceIO@trackio:
  2962                           	callstack 0
  2963   00001A                     stoa@l:
  2964                           	callstack 0
  2965                           
  2966                           ; 2 bytes @ 0x19
  2967   00001A                     	ds	1
  2968   00001B                     ??_ETH_WriteStart:
  2969   00001B                     ??_pad:
  2970   00001B                     DebounceIO@millis:
  2971                           	callstack 0
  2972                           
  2973                           ; 4 bytes @ 0x1A
  2974   00001B                     	ds	1
  2975   00001C                     pad@i:
  2976                           	callstack 0
  2977                           
  2978                           ; 2 bytes @ 0x1B
  2979   00001C                     	ds	1
  2980   00001D                     ETH_WriteStart@ethPacket:
  2981                           	callstack 0
  2982   00001D                     ETH_TxComputeChecksum@rxptr:
  2983                           	callstack 0
  2984                           
  2985                           ; 2 bytes @ 0x1C
  2986   00001D                     	ds	1
  2987   00001E                     dtoa@fp:
  2988                           	callstack 0
  2989   00001E                     utoa@fp:
  2990                           	callstack 0
  2991   00001E                     xtoa@fp:
  2992                           	callstack 0
  2993                           
  2994                           ; 2 bytes @ 0x1D
  2995   00001E                     	ds	1
  2996   00001F                     ??_ARPV4_Packet:
  2997   00001F                     ETH_TxComputeChecksum@cksm:
  2998                           	callstack 0
  2999   00001F                     ARPV4_Request@destAddress:
  3000                           	callstack 0
  3001                           
  3002                           ; 4 bytes @ 0x1E
  3003   00001F                     	ds	1
  3004   000020                     dtoa@d:
  3005                           	callstack 0
  3006   000020                     utoa@d:
  3007                           	callstack 0
  3008   000020                     xtoa@d:
  3009                           	callstack 0
  3010                           
  3011                           ; 4 bytes @ 0x1F
  3012   000020                     	ds	1
  3013   000021                     IPV4_Send@payloadLength:
  3014                           	callstack 0
  3015                           
  3016                           ; 2 bytes @ 0x20
  3017   000021                     	ds	1
  3018   000022                     SETxSTATIONxPATHWAY@self:
  3019                           	callstack 0
  3020   000022                     SETxMNTSTATIONxPATHWAY@self:
  3021                           	callstack 0
  3022   000022                     UPDATExSTATIONxTRAINxWAIT@self:
  3023                           	callstack 0
  3024   000022                     SETxSIGNAL@self:
  3025                           	callstack 0
  3026   000022                     UPDATExMOUNTAINxTRAINxWAIT@self:
  3027                           	callstack 0
  3028   000022                     ETH_RxComputeChecksum@rxptr:
  3029                           	callstack 0
  3030                           
  3031                           ; 2 bytes @ 0x21
  3032   000022                     	ds	1
  3033   000023                     ??_IPV4_Send:
  3034   000023                     ??_ARPV4_Request:
  3035                           
  3036                           ; 1 bytes @ 0x22
  3037   000023                     	ds	1
  3038   000024                     ??_UPDATExSTATIONxTRAINxWAIT:
  3039   000024                     ??_UPDATExMOUNTAINxTRAINxWAIT:
  3040   000024                     SETxSTATIONxPATHWAY@path:
  3041                           	callstack 0
  3042   000024                     SETxMNTSTATIONxPATHWAY@path:
  3043                           	callstack 0
  3044   000024                     SETxSIGNAL@path:
  3045                           	callstack 0
  3046   000024                     xtoa@x:
  3047                           	callstack 0
  3048   000024                     _dtoa$8747:
  3049                           	callstack 0
  3050   000024                     utoa@p:
  3051                           	callstack 0
  3052   000024                     ETH_RxComputeChecksum@cksm:
  3053                           	callstack 0
  3054                           
  3055                           ; 4 bytes @ 0x23
  3056   000024                     	ds	1
  3057   000025                     ??_SETxMNTSTATIONxPATHWAY:
  3058   000025                     ??_xtoa:
  3059   000025                     SETxSTATIONxPATHWAY@dir:
  3060                           	callstack 0
  3061   000025                     SETxSIGNAL@signal:
  3062                           	callstack 0
  3063                           
  3064                           ; 1 bytes @ 0x24
  3065   000025                     	ds	1
  3066   000026                     ??_SETxSIGNAL:
  3067   000026                     ??_SETxSTATIONxPATHWAY:
  3068   000026                     dtoa@p:
  3069                           	callstack 0
  3070   000026                     utoa@w:
  3071                           	callstack 0
  3072                           
  3073                           ; 2 bytes @ 0x25
  3074   000026                     	ds	1
  3075   000027                     IPV4_Send@ret:
  3076                           	callstack 0
  3077                           
  3078                           ; 1 bytes @ 0x26
  3079   000027                     	ds	1
  3080   000028                     IPV4_Send@cksm:
  3081                           	callstack 0
  3082   000028                     dtoa@w:
  3083                           	callstack 0
  3084   000028                     utoa@i:
  3085                           	callstack 0
  3086                           
  3087                           ; 2 bytes @ 0x27
  3088   000028                     	ds	1
  3089   000029                     xtoa@a:
  3090                           	callstack 0
  3091                           
  3092                           ; 1 bytes @ 0x28
  3093   000029                     	ds	1
  3094   00002A                     SETxMNTSTATIONxPATHWAY@pin1:
  3095                           	callstack 0
  3096   00002A                     dtoa@s:
  3097                           	callstack 0
  3098   00002A                     IPV4_Send@totalLength:
  3099                           	callstack 0
  3100   00002A                     _xtoa$8772:
  3101                           	callstack 0
  3102                           
  3103                           ; 2 bytes @ 0x29
  3104   00002A                     	ds	1
  3105   00002B                     SETxSTATIONxPATHWAY@pin1:
  3106                           	callstack 0
  3107   00002B                     SETxSIGNAL@pin1:
  3108                           	callstack 0
  3109   00002B                     MOUNTAINxSTATIONxINBOUND@self:
  3110                           	callstack 0
  3111   00002B                     MOUNTAINxSTATIONxOUTBOUND@self:
  3112                           	callstack 0
  3113   00002B                     dtoa@i:
  3114                           	callstack 0
  3115                           
  3116                           ; 2 bytes @ 0x2A
  3117   00002B                     	ds	1
  3118   00002C                     ??_UDP_Send:
  3119   00002C                     SETxSTATIONxPATHWAY@pin2:
  3120                           	callstack 0
  3121   00002C                     SETxSIGNAL@pin2:
  3122                           	callstack 0
  3123   00002C                     xtoa@p:
  3124                           	callstack 0
  3125                           
  3126                           ; 2 bytes @ 0x2B
  3127   00002C                     	ds	1
  3128   00002D                     ??_MOUNTAINxSTATIONxOUTBOUND:
  3129   00002D                     ??_MOUNTAINxSTATIONxINBOUND:
  3130   00002D                     SETxSTATIONxPATHWAY@pin3:
  3131                           	callstack 0
  3132   00002D                     SETxSIGNAL@pin3:
  3133                           	callstack 0
  3134                           
  3135                           ; 1 bytes @ 0x2C
  3136   00002D                     	ds	1
  3137   00002E                     SETxSTATIONxPATHWAY@pin4:
  3138                           	callstack 0
  3139   00002E                     SETxSIGNAL@pin4:
  3140                           	callstack 0
  3141   00002E                     xtoa@w:
  3142                           	callstack 0
  3143                           
  3144                           ; 2 bytes @ 0x2D
  3145   00002E                     	ds	1
  3146   00002F                     SETxSIGNAL@pin5:
  3147                           	callstack 0
  3148   00002F                     MAINxSTATIONxINBOUND@self:
  3149                           	callstack 0
  3150                           
  3151                           ; 2 bytes @ 0x2E
  3152   00002F                     	ds	1
  3153   000030                     SETxSIGNAL@pin6:
  3154                           	callstack 0
  3155   000030                     xtoa@c:
  3156                           	callstack 0
  3157   000030                     UDP_Send@cksm:
  3158                           	callstack 0
  3159   000030                     UPDATExSTATIONxTRAINxWAIT@millis:
  3160                           	callstack 0
  3161   000030                     UPDATExMOUNTAINxTRAINxWAIT@millis:
  3162                           	callstack 0
  3163                           
  3164                           ; 4 bytes @ 0x2F
  3165   000030                     	ds	1
  3166   000031                     ??_MAINxSTATIONxINBOUND:
  3167   000031                     MAINxSTATIONxPASSING@self:
  3168                           	callstack 0
  3169   000031                     MAINxSTATIONxOUTBOUND@self:
  3170                           	callstack 0
  3171   000031                     xtoa@i:
  3172                           	callstack 0
  3173                           
  3174                           ; 2 bytes @ 0x30
  3175   000031                     	ds	1
  3176   000032                     UDP_Send@udpLength:
  3177                           	callstack 0
  3178                           
  3179                           ; 2 bytes @ 0x31
  3180   000032                     	ds	1
  3181   000033                     ??_MAINxSTATIONxPASSING:
  3182   000033                     ??_MAINxSTATIONxOUTBOUND:
  3183   000033                     vfpfcnvrt@fp:
  3184                           	callstack 0
  3185                           
  3186                           ; 2 bytes @ 0x32
  3187   000033                     	ds	2
  3188   000035                     vfpfcnvrt@fmt:
  3189                           	callstack 0
  3190                           
  3191                           ; 1 bytes @ 0x34
  3192   000035                     	ds	1
  3193   000036                     vfpfcnvrt@ap:
  3194                           	callstack 0
  3195                           
  3196                           ; 1 bytes @ 0x35
  3197   000036                     	ds	1
  3198   000037                     ??_vfpfcnvrt:
  3199                           
  3200                           ; 1 bytes @ 0x36
  3201   000037                     	ds	2
  3202   000039                     ARPV4_Request@ret:
  3203                           	callstack 0
  3204   000039                     vfpfcnvrt@done:
  3205                           	callstack 0
  3206   000039                     UPDATExMOUNTAINxSTATION@self:
  3207                           	callstack 0
  3208                           
  3209                           ; 2 bytes @ 0x38
  3210   000039                     	ds	1
  3211   00003A                     vfpfcnvrt@convarg:
  3212                           	callstack 0
  3213   00003A                     ARPV4_Request@header:
  3214                           	callstack 0
  3215                           
  3216                           ; 28 bytes @ 0x39
  3217   00003A                     	ds	1
  3218   00003B                     ??_UPDATExMOUNTAINxSTATION:
  3219                           
  3220                           ; 1 bytes @ 0x3A
  3221   00003B                     	ds	3
  3222   00003E                     vfpfcnvrt@c:
  3223                           	callstack 0
  3224                           
  3225                           ; 1 bytes @ 0x3D
  3226   00003E                     	ds	1
  3227   00003F                     UPDATExSTATION@self:
  3228                           	callstack 0
  3229   00003F                     vfpfcnvrt@cp:
  3230                           	callstack 0
  3231                           
  3232                           ; 2 bytes @ 0x3E
  3233   00003F                     	ds	2
  3234   000041                     ??_UPDATExSTATION:
  3235   000041                     ?_vfprintf:
  3236                           	callstack 0
  3237   000041                     vfprintf@fp:
  3238                           	callstack 0
  3239                           
  3240                           ; 2 bytes @ 0x40
  3241   000041                     	ds	2
  3242   000043                     vfprintf@fmt:
  3243                           	callstack 0
  3244                           
  3245                           ; 2 bytes @ 0x42
  3246   000043                     	ds	2
  3247   000045                     vfprintf@ap:
  3248                           	callstack 0
  3249                           
  3250                           ; 1 bytes @ 0x44
  3251   000045                     	ds	1
  3252   000046                     vfprintf@cfmt:
  3253                           	callstack 0
  3254                           
  3255                           ; 2 bytes @ 0x45
  3256   000046                     	ds	2
  3257   000048                     ?_sprintf:
  3258                           	callstack 0
  3259   000048                     ?_printf:
  3260                           	callstack 0
  3261   000048                     sprintf@s:
  3262                           	callstack 0
  3263   000048                     printf@fmt:
  3264                           	callstack 0
  3265                           
  3266                           ; 2 bytes @ 0x47
  3267   000048                     	ds	2
  3268   00004A                     sprintf@fmt:
  3269                           	callstack 0
  3270                           
  3271                           ; 2 bytes @ 0x49
  3272   00004A                     	ds	4
  3273   00004E                     printf@ap:
  3274                           	callstack 0
  3275                           
  3276                           ; 1 bytes @ 0x4D
  3277   00004E                     	ds	1
  3278   00004F                     ??_LOG_Init:
  3279                           
  3280                           ; 1 bytes @ 0x4E
  3281   00004F                     	ds	1
  3282   000050                     
  3283                           ; 1 bytes @ 0x4F
  3284   000050                     	ds	1
  3285   000051                     LOG_Init@t:
  3286                           	callstack 0
  3287                           
  3288                           ; 4 bytes @ 0x50
  3289   000051                     	ds	4
  3290   000055                     LOG_Init@x:
  3291                           	callstack 0
  3292                           
  3293                           ; 1 bytes @ 0x54
  3294   000055                     	ds	1
  3295   000056                     UDP_Start@ret:
  3296                           	callstack 0
  3297                           
  3298                           ; 1 bytes @ 0x55
  3299   000056                     	ds	1
  3300                           
  3301 ;;
  3302 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  3303 ;;
  3304 ;; *************** function _main *****************
  3305 ;; Defined at:
  3306 ;;		line 25 in file "main.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;		None
  3309 ;; Auto vars:     Size  Location     Type
  3310 ;;  i               2  148[BANK0 ] unsigned int 
  3311 ;;  udpReceived     2  146[BANK0 ] PTR struct .
  3312 ;;		 -> udpRecvBox(80), NULL(0), 
  3313 ;;  millis          4  142[BANK0 ] unsigned long 
  3314 ;; Return value:  Size  Location     Type
  3315 ;;                  1    wreg      void 
  3316 ;; Registers used:
  3317 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  3318 ;; Tracked objects:
  3319 ;;		On entry : 0/0
  3320 ;;		On exit  : 3F/1
  3321 ;;		Unchanged: 0/0
  3322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3324 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3325 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3326 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3327 ;;Total ram usage:       12 bytes
  3328 ;; Hardware stack levels required when called: 16
  3329 ;; This function calls:
  3330 ;;		_CHECKxDATAxINxRECEIVExMAILxBOX
  3331 ;;		_CREATExTASKxSTATUSxMESSAGE
  3332 ;;		_DebounceIO
  3333 ;;		_GETxDATAxFROMxRECEIVExMAILxBOX
  3334 ;;		_GETxMILLIS
  3335 ;;		_INITxMOUNTAINxSTATION
  3336 ;;		_INITxRANDxNUMBER
  3337 ;;		_INITxSTATION
  3338 ;;		_MILLIESxINIT
  3339 ;;		_PROCESSxETHxDATA
  3340 ;;		_PROCESSxETHxDATAxINIT
  3341 ;;		_PUTxDATAxINxSENDxMAILxBOX
  3342 ;;		_SETxMILLISECONDxUPDATExHANDLER
  3343 ;;		_SYSTEM_Initialize
  3344 ;;		_UPDATExMOUNTAINxSTATION
  3345 ;;		_UPDATExMOUNTAINxTRAINxWAIT
  3346 ;;		_UPDATExSTATION
  3347 ;;		_UPDATExSTATIONxTRAINxWAIT
  3348 ;;		_compareDataToSend
  3349 ;; This function is called by:
  3350 ;;		Startup code after reset
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353                           
  3354                           	psect	text0
  3355   01252C                     __ptext0:
  3356                           	callstack 0
  3357   01252C                     _main:
  3358                           	callstack 15
  3359                           
  3360                           ;main.c: 29:     SYSTEM_Initialize();
  3361                           
  3362                           ;incstack = 0
  3363   01252C  ECF6  F0C0         	call	_SYSTEM_Initialize	;wreg free
  3364                           
  3365                           ;main.c: 36:     (INTCONbits.GIE = 1);
  3366   012530  8EF2               	bsf	242,7,c	;volatile
  3367                           
  3368                           ;main.c: 42:     (INTCONbits.PEIE = 1);
  3369   012532  8CF2               	bsf	242,6,c	;volatile
  3370                           
  3371                           ;main.c: 47:     MILLIESxINIT();
  3372   012534  EC9D  F0C0         	call	_MILLIESxINIT	;wreg free
  3373                           
  3374                           ;main.c: 48:     SETxMILLISECONDxUPDATExHANDLER(UpdateTick);
  3375   012538  0EB6               	movlw	low _UpdateTick
  3376   01253A  6E05               	movwf	SETxMILLISECONDxUPDATExHANDLER@InterruptHandler^0,c
  3377   01253C  0E83               	movlw	high _UpdateTick
  3378   01253E  6E06               	movwf	(SETxMILLISECONDxUPDATExHANDLER@InterruptHandler+1)^0,c
  3379   012540  0E01               	movlw	low (_UpdateTick shr (0+16))
  3380   012542  6E07               	movwf	(SETxMILLISECONDxUPDATExHANDLER@InterruptHandler+2)^0,c
  3381   012544  EC8C  F0C1         	call	_SETxMILLISECONDxUPDATExHANDLER	;wreg free
  3382                           
  3383                           ;main.c: 49:     PROCESSxETHxDATAxINIT();
  3384   012548  ECD4  F0BF         	call	_PROCESSxETHxDATAxINIT	;wreg free
  3385                           
  3386                           ; BSR set to: 1
  3387                           ;main.c: 50:     INITxSTATION();
  3388   01254C  ECDB  F0AA         	call	_INITxSTATION	;wreg free
  3389                           
  3390                           ; BSR set to: 3
  3391                           ;main.c: 51:     INITxMOUNTAINxSTATION();
  3392   012550  ECE0  F0B2         	call	_INITxMOUNTAINxSTATION	;wreg free
  3393                           
  3394                           ; BSR set to: 2
  3395                           ;main.c: 52:     INITxRANDxNUMBER();
  3396   012554  EC44  F0BF         	call	_INITxRANDxNUMBER	;wreg free
  3397   012558                     l16199:
  3398                           
  3399                           ;main.c: 57:     {;main.c: 59:         PROCESSxETHxDATA();
  3400   012558  EC7E  F0AE         	call	_PROCESSxETHxDATA	;wreg free
  3401                           
  3402                           ; BSR set to: 1
  3403                           ;main.c: 64:         if(PORTGbits.RG4)
  3404   01255C  A886               	btfss	134,4,c	;volatile
  3405   01255E  D013               	goto	l16203
  3406                           
  3407                           ; BSR set to: 1
  3408                           
  3409                           ;main.c: 65:         {;main.c: 66:             do { LATBbits.LATB6 = 1; } while(0);
  3410   012560  8C8A               	bsf	138,6,c	;volatile
  3411                           
  3412                           ; BSR set to: 1
  3413                           
  3414                           ;main.c: 67:             do { LATJbits.LATJ2 = 1; } while(0);
  3415   012562  8491               	bsf	145,2,c	;volatile
  3416                           
  3417                           ; BSR set to: 1
  3418                           
  3419                           ;main.c: 68:             do { LATBbits.LATB3 = 1; } while(0);
  3420   012564  868A               	bsf	138,3,c	;volatile
  3421                           
  3422                           ; BSR set to: 1
  3423                           
  3424                           ;main.c: 69:             do { LATBbits.LATB5 = 1; } while(0);
  3425   012566  8A8A               	bsf	138,5,c	;volatile
  3426                           
  3427                           ; BSR set to: 1
  3428                           
  3429                           ;main.c: 70:             do { LATBbits.LATB1 = 1; } while(0);
  3430   012568  828A               	bsf	138,1,c	;volatile
  3431                           
  3432                           ; BSR set to: 1
  3433                           
  3434                           ;main.c: 71:             do { LATJbits.LATJ1 = 1; } while(0);
  3435   01256A  8291               	bsf	145,1,c	;volatile
  3436                           
  3437                           ; BSR set to: 1
  3438                           
  3439                           ;main.c: 73:             do { LATCbits.LATC6 = 0; } while(0);
  3440   01256C  9C8B               	bcf	139,6,c	;volatile
  3441                           
  3442                           ; BSR set to: 1
  3443                           
  3444                           ;main.c: 75:             do { LATDbits.LATD6 = 0; } while(0);
  3445   01256E  9C8C               	bcf	140,6,c	;volatile
  3446                           
  3447                           ; BSR set to: 1
  3448                           
  3449                           ;main.c: 76:             do { LATDbits.LATD7 = 0; } while(0);
  3450   012570  9E8C               	bcf	140,7,c	;volatile
  3451                           
  3452                           ; BSR set to: 1
  3453                           
  3454                           ;main.c: 77:             do { LATEbits.LATE2 = 1; } while(0);
  3455   012572  848D               	bsf	141,2,c	;volatile
  3456                           
  3457                           ; BSR set to: 1
  3458                           
  3459                           ;main.c: 78:             do { LATEbits.LATE3 = 1; } while(0);
  3460   012574  868D               	bsf	141,3,c	;volatile
  3461                           
  3462                           ; BSR set to: 1
  3463                           
  3464                           ;main.c: 79:             do { LATEbits.LATE4 = 0; } while(0);
  3465   012576  988D               	bcf	141,4,c	;volatile
  3466                           
  3467                           ; BSR set to: 1
  3468                           
  3469                           ;main.c: 80:             do { LATJbits.LATJ4 = 1; } while(0);
  3470   012578  8891               	bsf	145,4,c	;volatile
  3471                           
  3472                           ; BSR set to: 1
  3473                           
  3474                           ;main.c: 81:             do { LATJbits.LATJ5 = 1; } while(0);
  3475   01257A  8A91               	bsf	145,5,c	;volatile
  3476                           
  3477                           ; BSR set to: 1
  3478                           
  3479                           ;main.c: 82:             do { LATJbits.LATJ6 = 0; } while(0);
  3480   01257C  9C91               	bcf	145,6,c	;volatile
  3481                           
  3482                           ; BSR set to: 1
  3483                           
  3484                           ;main.c: 83:             do { LATJbits.LATJ7 = 1; } while(0);
  3485   01257E  8E91               	bsf	145,7,c	;volatile
  3486                           
  3487                           ; BSR set to: 1
  3488                           
  3489                           ;main.c: 84:             do { LATEbits.LATE0 = 1; } while(0);
  3490   012580  808D               	bsf	141,0,c	;volatile
  3491                           
  3492                           ; BSR set to: 1
  3493                           
  3494                           ;main.c: 85:             do { LATEbits.LATE1 = 0; } while(0);
  3495   012582  928D               	bcf	141,1,c	;volatile
  3496   012584  D7E9               	goto	l16199
  3497   012586                     l16203:
  3498                           
  3499                           ; BSR set to: 1
  3500   012586  5165               	movf	_booted& (0+255),w,b
  3501   012588  A4D8               	btfss	status,2,c
  3502   01258A  D035               	goto	l16221
  3503                           
  3504                           ; BSR set to: 1
  3505                           
  3506                           ;main.c: 91:             do { LATBbits.LATB7 = 1; } while(0);
  3507   01258C  8E8A               	bsf	138,7,c	;volatile
  3508                           
  3509                           ; BSR set to: 1
  3510                           
  3511                           ;main.c: 92:             do { LATJbits.LATJ3 = 1; } while(0);
  3512   01258E  8691               	bsf	145,3,c	;volatile
  3513                           
  3514                           ; BSR set to: 1
  3515                           
  3516                           ;main.c: 93:             do { LATBbits.LATB3 = 1; } while(0);
  3517   012590  868A               	bsf	138,3,c	;volatile
  3518                           
  3519                           ; BSR set to: 1
  3520                           
  3521                           ;main.c: 94:             do { LATBbits.LATB5 = 1; } while(0);
  3522   012592  8A8A               	bsf	138,5,c	;volatile
  3523                           
  3524                           ; BSR set to: 1
  3525                           
  3526                           ;main.c: 95:             do { LATBbits.LATB1 = 1; } while(0);
  3527   012594  828A               	bsf	138,1,c	;volatile
  3528                           
  3529                           ; BSR set to: 1
  3530                           
  3531                           ;main.c: 96:             do { LATJbits.LATJ1 = 1; } while(0);
  3532   012596  8291               	bsf	145,1,c	;volatile
  3533                           
  3534                           ; BSR set to: 1
  3535                           
  3536                           ;main.c: 97:             do { LATDbits.LATD6 = 1; } while(0);
  3537   012598  8C8C               	bsf	140,6,c	;volatile
  3538                           
  3539                           ; BSR set to: 1
  3540                           
  3541                           ;main.c: 98:             do { LATDbits.LATD7 = 1; } while(0);
  3542   01259A  8E8C               	bsf	140,7,c	;volatile
  3543                           
  3544                           ; BSR set to: 1
  3545                           
  3546                           ;main.c: 99:             do { LATEbits.LATE2 = 1; } while(0);
  3547   01259C  848D               	bsf	141,2,c	;volatile
  3548                           
  3549                           ; BSR set to: 1
  3550                           
  3551                           ;main.c: 100:             do { LATEbits.LATE3 = 1; } while(0);
  3552   01259E  868D               	bsf	141,3,c	;volatile
  3553                           
  3554                           ; BSR set to: 1
  3555                           
  3556                           ;main.c: 101:             do { LATJbits.LATJ4 = 1; } while(0);
  3557   0125A0  8891               	bsf	145,4,c	;volatile
  3558                           
  3559                           ; BSR set to: 1
  3560                           
  3561                           ;main.c: 102:             do { LATJbits.LATJ5 = 1; } while(0);
  3562   0125A2  8A91               	bsf	145,5,c	;volatile
  3563                           
  3564                           ; BSR set to: 1
  3565                           
  3566                           ;main.c: 103:             do { LATJbits.LATJ6 = 1; } while(0);
  3567   0125A4  8C91               	bsf	145,6,c	;volatile
  3568                           
  3569                           ; BSR set to: 1
  3570                           
  3571                           ;main.c: 104:             do { LATJbits.LATJ7 = 1; } while(0);
  3572   0125A6  8E91               	bsf	145,7,c	;volatile
  3573                           
  3574                           ; BSR set to: 1
  3575                           
  3576                           ;main.c: 105:             do { LATEbits.LATE0 = 1; } while(0);
  3577   0125A8  808D               	bsf	141,0,c	;volatile
  3578                           
  3579                           ; BSR set to: 1
  3580                           
  3581                           ;main.c: 106:             do { LATEbits.LATE1 = 1; } while(0);
  3582   0125AA  828D               	bsf	141,1,c	;volatile
  3583                           
  3584                           ; BSR set to: 1
  3585                           ;main.c: 108:             if(1 == updateTick){
  3586   0125AC  0566               	decf	_updateTick& (0+255),w,b
  3587   0125AE  A4D8               	btfss	status,2,c
  3588   0125B0  D00C               	goto	l16213
  3589                           
  3590                           ; BSR set to: 1
  3591                           ;main.c: 109:                 DebounceIO(0);
  3592   0125B2  0E00               	movlw	0
  3593   0125B4  EC5C  F0A8         	call	_DebounceIO
  3594                           
  3595                           ;main.c: 110:                 tBootWaitTimeCnt++;
  3596   0125B8  0E01               	movlw	1
  3597   0125BA  0101               	movlb	1	; () banked
  3598   0125BC  27F8               	addwf	_tBootWaitTimeCnt& (0+255),f,b
  3599   0125BE  0E00               	movlw	0
  3600   0125C0  23F9               	addwfc	(_tBootWaitTimeCnt+1)& (0+255),f,b
  3601   0125C2  23FA               	addwfc	(_tBootWaitTimeCnt+2)& (0+255),f,b
  3602   0125C4  23FB               	addwfc	(_tBootWaitTimeCnt+3)& (0+255),f,b
  3603                           
  3604                           ; BSR set to: 1
  3605                           ;main.c: 111:                 updateTick = 0;
  3606   0125C6  0E00               	movlw	0
  3607   0125C8  6F66               	movwf	_updateTick& (0+255),b
  3608   0125CA                     l16213:
  3609                           
  3610                           ; BSR set to: 1
  3611   0125CA  51FB               	movf	(_tBootWaitTimeCnt+3)& (0+255),w,b
  3612   0125CC  11FA               	iorwf	(_tBootWaitTimeCnt+2)& (0+255),w,b
  3613   0125CE  E106               	bnz	u15020
  3614   0125D0  0E11               	movlw	17
  3615   0125D2  5DF8               	subwf	_tBootWaitTimeCnt& (0+255),w,b
  3616   0125D4  0E27               	movlw	39
  3617   0125D6  59F9               	subwfb	(_tBootWaitTimeCnt+1)& (0+255),w,b
  3618   0125D8  A0D8               	btfss	status,0,c
  3619   0125DA  D7BE               	goto	l16199
  3620   0125DC                     u15020:
  3621                           
  3622                           ; BSR set to: 1
  3623                           ;main.c: 118:                 tBootWaitTimeCnt = 0;
  3624   0125DC  0E00               	movlw	0
  3625   0125DE  6FF8               	movwf	_tBootWaitTimeCnt& (0+255),b
  3626   0125E0  0E00               	movlw	0
  3627   0125E2  6FF9               	movwf	(_tBootWaitTimeCnt+1)& (0+255),b
  3628   0125E4  0E00               	movlw	0
  3629   0125E6  6FFA               	movwf	(_tBootWaitTimeCnt+2)& (0+255),b
  3630   0125E8  0E00               	movlw	0
  3631   0125EA  6FFB               	movwf	(_tBootWaitTimeCnt+3)& (0+255),b
  3632                           
  3633                           ; BSR set to: 1
  3634                           ;main.c: 119:                 if(PORTEbits.RE7){
  3635   0125EC  AE84               	btfss	132,7,c	;volatile
  3636   0125EE  D7B4               	goto	l16199
  3637                           
  3638                           ; BSR set to: 1
  3639                           ;main.c: 120:                     booted = 1;
  3640   0125F0  0E01               	movlw	1
  3641   0125F2  6F65               	movwf	_booted& (0+255),b
  3642   0125F4  D7B1               	goto	l16199
  3643   0125F6                     l16221:
  3644                           
  3645                           ; BSR set to: 1
  3646   0125F6  0102               	movlb	2	; () banked
  3647   0125F8  51B8               	movf	(_VOLTDETECT+11)& (0+255),w,b
  3648   0125FA  A4D8               	btfss	status,2,c
  3649   0125FC  D03E               	goto	l16239
  3650                           
  3651                           ; BSR set to: 2
  3652   0125FE  0101               	movlb	1	; () banked
  3653   012600  5165               	movf	_booted& (0+255),w,b
  3654   012602  B4D8               	btfsc	status,2,c
  3655   012604  D03A               	goto	l16239
  3656                           
  3657                           ; BSR set to: 1
  3658                           ;main.c: 131:             if(1 == updateTick){
  3659   012606  0566               	decf	_updateTick& (0+255),w,b
  3660   012608  A4D8               	btfss	status,2,c
  3661   01260A  D7A6               	goto	l16199
  3662                           
  3663                           ; BSR set to: 1
  3664                           ;main.c: 132:                 DebounceIO(1);
  3665   01260C  0E01               	movlw	1
  3666   01260E  EC5C  F0A8         	call	_DebounceIO
  3667                           
  3668                           ;main.c: 133:                 if(PORTEbits.RE7){
  3669   012612  AE84               	btfss	132,7,c	;volatile
  3670   012614  D026               	goto	l16237
  3671                           
  3672                           ;main.c: 134:                     tBootWaitTimeCnt++;
  3673   012616  0E01               	movlw	1
  3674   012618  0101               	movlb	1	; () banked
  3675   01261A  27F8               	addwf	_tBootWaitTimeCnt& (0+255),f,b
  3676   01261C  0E00               	movlw	0
  3677   01261E  23F9               	addwfc	(_tBootWaitTimeCnt+1)& (0+255),f,b
  3678   012620  23FA               	addwfc	(_tBootWaitTimeCnt+2)& (0+255),f,b
  3679   012622  23FB               	addwfc	(_tBootWaitTimeCnt+3)& (0+255),f,b
  3680   012624  51FB               	movf	(_tBootWaitTimeCnt+3)& (0+255),w,b
  3681   012626  11FA               	iorwf	(_tBootWaitTimeCnt+2)& (0+255),w,b
  3682   012628  E106               	bnz	u15080
  3683   01262A  0E11               	movlw	17
  3684   01262C  5DF8               	subwf	_tBootWaitTimeCnt& (0+255),w,b
  3685   01262E  0E27               	movlw	39
  3686   012630  59F9               	subwfb	(_tBootWaitTimeCnt+1)& (0+255),w,b
  3687   012632  A0D8               	btfss	status,0,c
  3688   012634  D01F               	goto	l3312
  3689   012636                     u15080:
  3690                           
  3691                           ; BSR set to: 1
  3692                           ;main.c: 136:                         VOLTDETECT.value = 1;
  3693   012636  0E01               	movlw	1
  3694   012638  0102               	movlb	2	; () banked
  3695   01263A  6FB8               	movwf	(_VOLTDETECT+11)& (0+255),b
  3696                           
  3697                           ;main.c: 137:                         tBootWaitTimeCnt = 0;
  3698   01263C  0E00               	movlw	0
  3699   01263E  0101               	movlb	1	; () banked
  3700   012640  6FF8               	movwf	_tBootWaitTimeCnt& (0+255),b
  3701   012642  0E00               	movlw	0
  3702   012644  6FF9               	movwf	(_tBootWaitTimeCnt+1)& (0+255),b
  3703   012646  0E00               	movlw	0
  3704   012648  6FFA               	movwf	(_tBootWaitTimeCnt+2)& (0+255),b
  3705   01264A  0E00               	movlw	0
  3706   01264C  6FFB               	movwf	(_tBootWaitTimeCnt+3)& (0+255),b
  3707                           
  3708                           ; BSR set to: 1
  3709                           ;main.c: 138:                         CREATExTASKxSTATUSxMESSAGE(
  3710   01264E  0E58               	movlw	88
  3711   012650  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
  3712   012652  0E6B               	movlw	107
  3713   012654  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
  3714   012656  0E96               	movlw	150
  3715   012658  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
  3716   01265A  0E01               	movlw	1
  3717   01265C  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
  3718   012660  D009               	goto	l3312
  3719   012662                     l16237:
  3720                           
  3721                           ;main.c: 146:                     tBootWaitTimeCnt = 0;
  3722   012662  0E00               	movlw	0
  3723   012664  0101               	movlb	1	; () banked
  3724   012666  6FF8               	movwf	_tBootWaitTimeCnt& (0+255),b
  3725   012668  0E00               	movlw	0
  3726   01266A  6FF9               	movwf	(_tBootWaitTimeCnt+1)& (0+255),b
  3727   01266C  0E00               	movlw	0
  3728   01266E  6FFA               	movwf	(_tBootWaitTimeCnt+2)& (0+255),b
  3729   012670  0E00               	movlw	0
  3730   012672  6FFB               	movwf	(_tBootWaitTimeCnt+3)& (0+255),b
  3731   012674                     l3312:
  3732                           
  3733                           ; BSR set to: 1
  3734                           ;main.c: 148:                 updateTick = 0;
  3735   012674  0E00               	movlw	0
  3736   012676  6F66               	movwf	_updateTick& (0+255),b
  3737   012678  D76F               	goto	l16199
  3738   01267A                     l16239:
  3739   01267A  0102               	movlb	2	; () banked
  3740   01267C  51B8               	movf	(_VOLTDETECT+11)& (0+255),w,b
  3741   01267E  B4D8               	btfsc	status,2,c
  3742   012680  D76B               	goto	l16199
  3743                           
  3744                           ; BSR set to: 2
  3745   012682  0101               	movlb	1	; () banked
  3746   012684  5165               	movf	_booted& (0+255),w,b
  3747   012686  B4D8               	btfsc	status,2,c
  3748   012688  D767               	goto	l16199
  3749                           
  3750                           ; BSR set to: 1
  3751                           ;main.c: 159:         {;main.c: 160:             if(1 == updateTick){
  3752   01268A  0566               	decf	_updateTick& (0+255),w,b
  3753   01268C  A4D8               	btfss	status,2,c
  3754   01268E  D764               	goto	l16199
  3755                           
  3756                           ; BSR set to: 1
  3757                           
  3758                           ;main.c: 161:                 do { LATAbits.LATA3 = 1; } while(0);
  3759   012690  8689               	bsf	137,3,c	;volatile
  3760                           
  3761                           ; BSR set to: 1
  3762                           
  3763                           ;main.c: 163:                 do { LATAbits.LATA4 = 1; } while(0);
  3764   012692  8889               	bsf	137,4,c	;volatile
  3765                           
  3766                           ; BSR set to: 1
  3767                           ;main.c: 164:                 DebounceIO(1);
  3768   012694  0E01               	movlw	1
  3769   012696  EC5C  F0A8         	call	_DebounceIO
  3770   01269A  9889               	bcf	137,4,c	;volatile
  3771   01269C  8A89               	bsf	137,5,c	;volatile
  3772                           
  3773                           ;main.c: 173:                     UPDATExSTATIONxTRAINxWAIT(&top);
  3774   01269E  0E4C               	movlw	low _top
  3775   0126A0  6E22               	movwf	UPDATExSTATIONxTRAINxWAIT@self^0,c
  3776   0126A2  0E03               	movlw	high _top
  3777   0126A4  6E23               	movwf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,c
  3778   0126A6  EC7A  F09B         	call	_UPDATExSTATIONxTRAINxWAIT	;wreg free
  3779                           
  3780                           ;main.c: 174:                     UPDATExSTATIONxTRAINxWAIT(&bot);
  3781   0126AA  0E00               	movlw	low _bot
  3782   0126AC  6E22               	movwf	UPDATExSTATIONxTRAINxWAIT@self^0,c
  3783   0126AE  0E03               	movlw	high _bot
  3784   0126B0  6E23               	movwf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,c
  3785   0126B2  EC7A  F09B         	call	_UPDATExSTATIONxTRAINxWAIT	;wreg free
  3786   0126B6  9A89               	bcf	137,5,c	;volatile
  3787   0126B8  8889               	bsf	137,4,c	;volatile
  3788                           
  3789                           ;main.c: 178:                     UPDATExSTATION(&top);
  3790   0126BA  0E4C               	movlw	low _top
  3791   0126BC  6E3F               	movwf	UPDATExSTATION@self^0,c
  3792   0126BE  0E03               	movlw	high _top
  3793   0126C0  6E40               	movwf	(UPDATExSTATION@self+1)^0,c
  3794   0126C2  EC00  F080         	call	_UPDATExSTATION	;wreg free
  3795                           
  3796                           ;main.c: 179:                     UPDATExSTATION(&bot);
  3797   0126C6  0E00               	movlw	low _bot
  3798   0126C8  6E3F               	movwf	UPDATExSTATION@self^0,c
  3799   0126CA  0E03               	movlw	high _bot
  3800   0126CC  6E40               	movwf	(UPDATExSTATION@self+1)^0,c
  3801   0126CE  EC00  F080         	call	_UPDATExSTATION	;wreg free
  3802   0126D2  9889               	bcf	137,4,c	;volatile
  3803   0126D4  8A89               	bsf	137,5,c	;volatile
  3804                           
  3805                           ;main.c: 186:                     UPDATExMOUNTAINxTRAINxWAIT(&waldsee);
  3806   0126D6  0E5D               	movlw	low _waldsee
  3807   0126D8  6E22               	movwf	UPDATExMOUNTAINxTRAINxWAIT@self^0,c
  3808   0126DA  0E02               	movlw	high _waldsee
  3809   0126DC  6E23               	movwf	(UPDATExMOUNTAINxTRAINxWAIT@self+1)^0,c
  3810   0126DE  ECDD  F0A2         	call	_UPDATExMOUNTAINxTRAINxWAIT	;wreg free
  3811                           
  3812                           ;main.c: 187:                     UPDATExMOUNTAINxTRAINxWAIT(&waldberg);
  3813   0126E2  0E27               	movlw	low _waldberg
  3814   0126E4  6E22               	movwf	UPDATExMOUNTAINxTRAINxWAIT@self^0,c
  3815   0126E6  0E02               	movlw	high _waldberg
  3816   0126E8  6E23               	movwf	(UPDATExMOUNTAINxTRAINxWAIT@self+1)^0,c
  3817   0126EA  ECDD  F0A2         	call	_UPDATExMOUNTAINxTRAINxWAIT	;wreg free
  3818   0126EE  9A89               	bcf	137,5,c	;volatile
  3819   0126F0  8889               	bsf	137,4,c	;volatile
  3820                           
  3821                           ;main.c: 190:                     UPDATExMOUNTAINxSTATION(&waldsee);
  3822   0126F2  0E5D               	movlw	low _waldsee
  3823   0126F4  6E39               	movwf	UPDATExMOUNTAINxSTATION@self^0,c
  3824   0126F6  0E02               	movlw	high _waldsee
  3825   0126F8  6E3A               	movwf	(UPDATExMOUNTAINxSTATION@self+1)^0,c
  3826   0126FA  EC8A  F084         	call	_UPDATExMOUNTAINxSTATION	;wreg free
  3827                           
  3828                           ;main.c: 191:                     UPDATExMOUNTAINxSTATION(&waldberg);
  3829   0126FE  0E27               	movlw	low _waldberg
  3830   012700  6E39               	movwf	UPDATExMOUNTAINxSTATION@self^0,c
  3831   012702  0E02               	movlw	high _waldberg
  3832   012704  6E3A               	movwf	(UPDATExMOUNTAINxSTATION@self+1)^0,c
  3833   012706  EC8A  F084         	call	_UPDATExMOUNTAINxSTATION	;wreg free
  3834   01270A  9889               	bcf	137,4,c	;volatile
  3835   01270C  8A89               	bsf	137,5,c	;volatile
  3836                           
  3837                           ;main.c: 198:                     DataMessage.header = (uint8_t)HEADER;
  3838   01270E  0EAA               	movlw	170
  3839   012710  0102               	movlb	2	; () banked
  3840   012712  6F93               	movwf	_DataMessage& (0+255),b
  3841                           
  3842                           ; BSR set to: 2
  3843                           ;main.c: 199:                     DataMessage.command = (uint8_t)IODATA;
  3844   012714  0E3C               	movlw	60
  3845   012716  6F94               	movwf	(_DataMessage+1)& (0+255),b
  3846                           
  3847                           ; BSR set to: 2
  3848                           ;main.c: 200:                     tmp = 0;
  3849   012718  0E00               	movlw	0
  3850   01271A  0100               	movlb	0	; () banked
  3851   01271C  6FFC               	movwf	_tmp& (0+255),b
  3852                           
  3853                           ; BSR set to: 0
  3854                           ;main.c: 201:                     tmp = (uint8_t)(tmp << 1) | HALL_BLK_13.value;
  3855   01271E  51FC               	movf	_tmp& (0+255),w,b
  3856   012720  25FC               	addwf	_tmp& (0+255),w,b
  3857   012722  0102               	movlb	2	; () banked
  3858   012724  11C6               	iorwf	(_HALL_BLK_13+11)& (0+255),w,b
  3859   012726  0100               	movlb	0	; () banked
  3860   012728  6FFC               	movwf	_tmp& (0+255),b
  3861                           
  3862                           ; BSR set to: 0
  3863                           ;main.c: 202:                     tmp = (uint8_t)(tmp << 1) | HALL_BLK_21A.value;
  3864   01272A  51FC               	movf	_tmp& (0+255),w,b
  3865   01272C  25FC               	addwf	_tmp& (0+255),w,b
  3866   01272E  0103               	movlb	3	; () banked
  3867   012730  11F7               	iorwf	(_HALL_BLK_21A+11)& (0+255),w,b
  3868   012732  0100               	movlb	0	; () banked
  3869   012734  6FFC               	movwf	_tmp& (0+255),b
  3870                           
  3871                           ; BSR set to: 0
  3872                           ;main.c: 203:                     tmp = (uint8_t)(tmp << 1) | HALL_BLK_T4.value;
  3873   012736  51FC               	movf	_tmp& (0+255),w,b
  3874   012738  25FC               	addwf	_tmp& (0+255),w,b
  3875   01273A  0103               	movlb	3	; () banked
  3876   01273C  11E9               	iorwf	(_HALL_BLK_T4+11)& (0+255),w,b
  3877   01273E  0100               	movlb	0	; () banked
  3878   012740  6FFC               	movwf	_tmp& (0+255),b
  3879                           
  3880                           ; BSR set to: 0
  3881                           ;main.c: 204:                     tmp = (uint8_t)(tmp << 1) | HALL_BLK_T5.value;
  3882   012742  51FC               	movf	_tmp& (0+255),w,b
  3883   012744  25FC               	addwf	_tmp& (0+255),w,b
  3884   012746  0103               	movlb	3	; () banked
  3885   012748  11DB               	iorwf	(_HALL_BLK_T5+11)& (0+255),w,b
  3886   01274A  0100               	movlb	0	; () banked
  3887   01274C  6FFC               	movwf	_tmp& (0+255),b
  3888                           
  3889                           ; BSR set to: 0
  3890                           ;main.c: 205:                     tmp = (uint8_t)(tmp << 1) | HALL_BLK_T1.value;
  3891   01274E  51FC               	movf	_tmp& (0+255),w,b
  3892   012750  25FC               	addwf	_tmp& (0+255),w,b
  3893   012752  0103               	movlb	3	; () banked
  3894   012754  11CD               	iorwf	(_HALL_BLK_T1+11)& (0+255),w,b
  3895   012756  0100               	movlb	0	; () banked
  3896   012758  6FFC               	movwf	_tmp& (0+255),b
  3897                           
  3898                           ; BSR set to: 0
  3899                           ;main.c: 206:                     tmp = (uint8_t)(tmp << 1) | HALL_BLK_T2.value;
  3900   01275A  51FC               	movf	_tmp& (0+255),w,b
  3901   01275C  25FC               	addwf	_tmp& (0+255),w,b
  3902   01275E  0103               	movlb	3	; () banked
  3903   012760  11BF               	iorwf	(_HALL_BLK_T2+11)& (0+255),w,b
  3904   012762  0100               	movlb	0	; () banked
  3905   012764  6FFC               	movwf	_tmp& (0+255),b
  3906                           
  3907                           ; BSR set to: 0
  3908                           ;main.c: 207:                     tmp = (uint8_t)(tmp << 1) | HALL_BLK_9B.value;
  3909   012766  51FC               	movf	_tmp& (0+255),w,b
  3910   012768  25FC               	addwf	_tmp& (0+255),w,b
  3911   01276A  0103               	movlb	3	; () banked
  3912   01276C  11B1               	iorwf	(_HALL_BLK_9B+11)& (0+255),w,b
  3913   01276E  0100               	movlb	0	; () banked
  3914   012770  6FFC               	movwf	_tmp& (0+255),b
  3915                           
  3916                           ; BSR set to: 0
  3917                           ;main.c: 208:                     tmp = (uint8_t)(tmp << 1) | HALL_BLK_4A.value;
  3918   012772  51FC               	movf	_tmp& (0+255),w,b
  3919   012774  25FC               	addwf	_tmp& (0+255),w,b
  3920   012776  0103               	movlb	3	; () banked
  3921   012778  11A3               	iorwf	(_HALL_BLK_4A+11)& (0+255),w,b
  3922   01277A  0100               	movlb	0	; () banked
  3923   01277C  6FFC               	movwf	_tmp& (0+255),b
  3924                           
  3925                           ; BSR set to: 0
  3926                           ;main.c: 209:                     DataMessage.data[0] = tmp;
  3927   01277E  C0FC  F295         	movff	_tmp,_DataMessage+2
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;main.c: 211:                     tmp = 0;
  3931   012782  0E00               	movlw	0
  3932   012784  6FFC               	movwf	_tmp& (0+255),b
  3933                           
  3934                           ; BSR set to: 0
  3935                           ;main.c: 212:                     tmp = (uint8_t)(tmp << 1) | HALL_BLK_T7.value;
  3936   012786  51FC               	movf	_tmp& (0+255),w,b
  3937   012788  25FC               	addwf	_tmp& (0+255),w,b
  3938   01278A  0104               	movlb	4	; () banked
  3939   01278C  11EB               	iorwf	(_HALL_BLK_T7+11)& (0+255),w,b
  3940   01278E  0100               	movlb	0	; () banked
  3941   012790  6FFC               	movwf	_tmp& (0+255),b
  3942                           
  3943                           ; BSR set to: 0
  3944                           ;main.c: 213:                     tmp = (uint8_t)(tmp << 1) | HALL_BLK_T8.value;
  3945   012792  51FC               	movf	_tmp& (0+255),w,b
  3946   012794  25FC               	addwf	_tmp& (0+255),w,b
  3947   012796  0104               	movlb	4	; () banked
  3948   012798  11DD               	iorwf	(_HALL_BLK_T8+11)& (0+255),w,b
  3949   01279A  0100               	movlb	0	; () banked
  3950   01279C  6FFC               	movwf	_tmp& (0+255),b
  3951                           
  3952                           ; BSR set to: 0
  3953                           ;main.c: 214:                     tmp = (uint8_t)(tmp << 1) | OCC_FR_BLK13.value;
  3954   01279E  51FC               	movf	_tmp& (0+255),w,b
  3955   0127A0  25FC               	addwf	_tmp& (0+255),w,b
  3956   0127A2  0104               	movlb	4	; () banked
  3957   0127A4  11CF               	iorwf	(_OCC_FR_BLK13+11)& (0+255),w,b
  3958   0127A6  0100               	movlb	0	; () banked
  3959   0127A8  6FFC               	movwf	_tmp& (0+255),b
  3960                           
  3961                           ; BSR set to: 0
  3962                           ;main.c: 215:                     tmp = (uint8_t)(tmp << 1) | OCC_FR_BLK4.value;
  3963   0127AA  51FC               	movf	_tmp& (0+255),w,b
  3964   0127AC  25FC               	addwf	_tmp& (0+255),w,b
  3965   0127AE  0104               	movlb	4	; () banked
  3966   0127B0  11C1               	iorwf	(_OCC_FR_BLK4+11)& (0+255),w,b
  3967   0127B2  0100               	movlb	0	; () banked
  3968   0127B4  6FFC               	movwf	_tmp& (0+255),b
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;main.c: 216:                     tmp = (uint8_t)(tmp << 1) | OCC_FR_STN_1.value;
  3972   0127B6  51FC               	movf	_tmp& (0+255),w,b
  3973   0127B8  25FC               	addwf	_tmp& (0+255),w,b
  3974   0127BA  0104               	movlb	4	; () banked
  3975   0127BC  11B3               	iorwf	(_OCC_FR_STN_1+11)& (0+255),w,b
  3976   0127BE  0100               	movlb	0	; () banked
  3977   0127C0  6FFC               	movwf	_tmp& (0+255),b
  3978                           
  3979                           ; BSR set to: 0
  3980                           ;main.c: 217:                     tmp = (uint8_t)(tmp << 1) | OCC_FR_STN_2.value;
  3981   0127C2  51FC               	movf	_tmp& (0+255),w,b
  3982   0127C4  25FC               	addwf	_tmp& (0+255),w,b
  3983   0127C6  0104               	movlb	4	; () banked
  3984   0127C8  11A5               	iorwf	(_OCC_FR_STN_2+11)& (0+255),w,b
  3985   0127CA  0100               	movlb	0	; () banked
  3986   0127CC  6FFC               	movwf	_tmp& (0+255),b
  3987                           
  3988                           ; BSR set to: 0
  3989                           ;main.c: 218:                     tmp = (uint8_t)(tmp << 1) | OCC_FR_STN_3.value;
  3990   0127CE  51FC               	movf	_tmp& (0+255),w,b
  3991   0127D0  25FC               	addwf	_tmp& (0+255),w,b
  3992   0127D2  0104               	movlb	4	; () banked
  3993   0127D4  1197               	iorwf	(_OCC_FR_STN_3+11)& (0+255),w,b
  3994   0127D6  0100               	movlb	0	; () banked
  3995   0127D8  6FFC               	movwf	_tmp& (0+255),b
  3996                           
  3997                           ; BSR set to: 0
  3998                           ;main.c: 219:                     tmp = (uint8_t)(tmp << 1) | OCC_FR_STN_10.value;
  3999   0127DA  51FC               	movf	_tmp& (0+255),w,b
  4000   0127DC  25FC               	addwf	_tmp& (0+255),w,b
  4001   0127DE  0104               	movlb	4	; () banked
  4002   0127E0  1189               	iorwf	(_OCC_FR_STN_10+11)& (0+255),w,b
  4003   0127E2  0100               	movlb	0	; () banked
  4004   0127E4  6FFC               	movwf	_tmp& (0+255),b
  4005                           
  4006                           ; BSR set to: 0
  4007                           ;main.c: 220:                     DataMessage.data[1] = tmp;
  4008   0127E6  C0FC  F296         	movff	_tmp,_DataMessage+3
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;main.c: 222:                     tmp = 0;
  4012   0127EA  0E00               	movlw	0
  4013   0127EC  6FFC               	movwf	_tmp& (0+255),b
  4014                           
  4015                           ; BSR set to: 0
  4016                           ;main.c: 223:                     tmp = (uint8_t)(tmp << 1) | OCC_FR_STN_11.value;
  4017   0127EE  51FC               	movf	_tmp& (0+255),w,b
  4018   0127F0  25FC               	addwf	_tmp& (0+255),w,b
  4019   0127F2  0104               	movlb	4	; () banked
  4020   0127F4  117B               	iorwf	(_OCC_FR_STN_11+11)& (0+255),w,b
  4021   0127F6  0100               	movlb	0	; () banked
  4022   0127F8  6FFC               	movwf	_tmp& (0+255),b
  4023                           
  4024                           ; BSR set to: 0
  4025                           ;main.c: 224:                     tmp = (uint8_t)(tmp << 1) | OCC_FR_STN_12.value;
  4026   0127FA  51FC               	movf	_tmp& (0+255),w,b
  4027   0127FC  25FC               	addwf	_tmp& (0+255),w,b
  4028   0127FE  0104               	movlb	4	; () banked
  4029   012800  116D               	iorwf	(_OCC_FR_STN_12+11)& (0+255),w,b
  4030   012802  0100               	movlb	0	; () banked
  4031   012804  6FFC               	movwf	_tmp& (0+255),b
  4032                           
  4033                           ; BSR set to: 0
  4034                           ;main.c: 225:                     tmp = (uint8_t)(tmp << 1) | OCC_FR_T6.value;
  4035   012806  51FC               	movf	_tmp& (0+255),w,b
  4036   012808  25FC               	addwf	_tmp& (0+255),w,b
  4037   01280A  0104               	movlb	4	; () banked
  4038   01280C  115F               	iorwf	(_OCC_FR_T6+11)& (0+255),w,b
  4039   01280E  0100               	movlb	0	; () banked
  4040   012810  6FFC               	movwf	_tmp& (0+255),b
  4041                           
  4042                           ; BSR set to: 0
  4043                           ;main.c: 226:                     tmp = (uint8_t)(tmp << 1) | OCC_FR_T3.value;
  4044   012812  51FC               	movf	_tmp& (0+255),w,b
  4045   012814  25FC               	addwf	_tmp& (0+255),w,b
  4046   012816  0104               	movlb	4	; () banked
  4047   012818  1151               	iorwf	(_OCC_FR_T3+11)& (0+255),w,b
  4048   01281A  0100               	movlb	0	; () banked
  4049   01281C  6FFC               	movwf	_tmp& (0+255),b
  4050                           
  4051                           ; BSR set to: 0
  4052                           ;main.c: 227:                     tmp = (uint8_t)(tmp << 1) | CTRL_OFF.value;
  4053   01281E  51FC               	movf	_tmp& (0+255),w,b
  4054   012820  25FC               	addwf	_tmp& (0+255),w,b
  4055   012822  0104               	movlb	4	; () banked
  4056   012824  1143               	iorwf	(_CTRL_OFF+11)& (0+255),w,b
  4057   012826  0100               	movlb	0	; () banked
  4058   012828  6FFC               	movwf	_tmp& (0+255),b
  4059                           
  4060                           ; BSR set to: 0
  4061                           ;main.c: 228:                     tmp = (uint8_t)(tmp << 1) | OCC_FR_23B.value;
  4062   01282A  51FC               	movf	_tmp& (0+255),w,b
  4063   01282C  25FC               	addwf	_tmp& (0+255),w,b
  4064   01282E  0104               	movlb	4	; () banked
  4065   012830  1135               	iorwf	(_OCC_FR_23B+11)& (0+255),w,b
  4066   012832  0100               	movlb	0	; () banked
  4067   012834  6FFC               	movwf	_tmp& (0+255),b
  4068                           
  4069                           ; BSR set to: 0
  4070                           ;main.c: 229:                     tmp = (uint8_t)(tmp << 1) | OCC_FR_22B.value;
  4071   012836  51FC               	movf	_tmp& (0+255),w,b
  4072   012838  25FC               	addwf	_tmp& (0+255),w,b
  4073   01283A  0104               	movlb	4	; () banked
  4074   01283C  1127               	iorwf	(_OCC_FR_22B+11)& (0+255),w,b
  4075   01283E  0100               	movlb	0	; () banked
  4076   012840  6FFC               	movwf	_tmp& (0+255),b
  4077                           
  4078                           ; BSR set to: 0
  4079                           ;main.c: 230:                     tmp = (uint8_t)(tmp << 1) | OCC_FR_9B.value;
  4080   012842  51FC               	movf	_tmp& (0+255),w,b
  4081   012844  25FC               	addwf	_tmp& (0+255),w,b
  4082   012846  0104               	movlb	4	; () banked
  4083   012848  1119               	iorwf	(_OCC_FR_9B+11)& (0+255),w,b
  4084   01284A  0100               	movlb	0	; () banked
  4085   01284C  6FFC               	movwf	_tmp& (0+255),b
  4086                           
  4087                           ; BSR set to: 0
  4088                           ;main.c: 231:                     DataMessage.data[2] = tmp;
  4089   01284E  C0FC  F297         	movff	_tmp,_DataMessage+4
  4090                           
  4091                           ; BSR set to: 0
  4092                           ;main.c: 233:                     tmp = 0;
  4093   012852  0E00               	movlw	0
  4094   012854  6FFC               	movwf	_tmp& (0+255),b
  4095                           
  4096                           ; BSR set to: 0
  4097                           ;main.c: 234:                     tmp = (uint8_t)(tmp << 1) | OCC_FR_21B.value;
  4098   012856  51FC               	movf	_tmp& (0+255),w,b
  4099   012858  25FC               	addwf	_tmp& (0+255),w,b
  4100   01285A  0104               	movlb	4	; () banked
  4101   01285C  110B               	iorwf	(_OCC_FR_21B+11)& (0+255),w,b
  4102   01285E  0100               	movlb	0	; () banked
  4103   012860  6FFC               	movwf	_tmp& (0+255),b
  4104                           
  4105                           ; BSR set to: 0
  4106                           ;main.c: 235:                     tmp = (uint8_t)(tmp << 1) | VOLTDETECT.value;
  4107   012862  51FC               	movf	_tmp& (0+255),w,b
  4108   012864  25FC               	addwf	_tmp& (0+255),w,b
  4109   012866  0102               	movlb	2	; () banked
  4110   012868  11B8               	iorwf	(_VOLTDETECT+11)& (0+255),w,b
  4111   01286A  0100               	movlb	0	; () banked
  4112   01286C  6FFC               	movwf	_tmp& (0+255),b
  4113                           
  4114                           ; BSR set to: 0
  4115                           ;main.c: 236:                     tmp = (uint8_t)(tmp << 1) | 1;
  4116   01286E  80D8               	bsf	status,0,c
  4117   012870  37FC               	rlcf	_tmp& (0+255),f,b
  4118                           
  4119                           ; BSR set to: 0
  4120                           ;main.c: 237:                     tmp = (uint8_t)(tmp << 1) | 1;
  4121   012872  80D8               	bsf	status,0,c
  4122   012874  37FC               	rlcf	_tmp& (0+255),f,b
  4123                           
  4124                           ; BSR set to: 0
  4125                           ;main.c: 238:                     tmp = (uint8_t)(tmp << 1) | 1;
  4126   012876  80D8               	bsf	status,0,c
  4127   012878  37FC               	rlcf	_tmp& (0+255),f,b
  4128                           
  4129                           ; BSR set to: 0
  4130                           ;main.c: 239:                     tmp = (uint8_t)(tmp << 1) | 1;
  4131   01287A  80D8               	bsf	status,0,c
  4132   01287C  37FC               	rlcf	_tmp& (0+255),f,b
  4133                           
  4134                           ; BSR set to: 0
  4135                           ;main.c: 240:                     tmp = (uint8_t)(tmp << 1) | 1;
  4136   01287E  80D8               	bsf	status,0,c
  4137   012880  37FC               	rlcf	_tmp& (0+255),f,b
  4138                           
  4139                           ; BSR set to: 0
  4140                           ;main.c: 241:                     tmp = (uint8_t)(tmp << 1) | 1;
  4141   012882  80D8               	bsf	status,0,c
  4142   012884  37FC               	rlcf	_tmp& (0+255),f,b
  4143                           
  4144                           ; BSR set to: 0
  4145                           ;main.c: 242:                     DataMessage.data[3] = tmp;
  4146   012886  C0FC  F298         	movff	_tmp,_DataMessage+5
  4147                           
  4148                           ; BSR set to: 0
  4149   01288A  9A89               	bcf	137,5,c	;volatile
  4150                           
  4151                           ; BSR set to: 0
  4152   01288C  8489               	bsf	137,2,c	;volatile
  4153                           
  4154                           ; BSR set to: 0
  4155   01288E  0EEC               	movlw	low (_prevDataMessage+2)
  4156   012890  6E05               	movwf	compareDataToSend@arr1^0,c
  4157   012892  0E05               	movlw	high (_prevDataMessage+2)
  4158   012894  6E06               	movwf	(compareDataToSend@arr1+1)^0,c
  4159   012896  0E95               	movlw	low (_DataMessage+2)
  4160   012898  6E07               	movwf	compareDataToSend@arr2^0,c
  4161   01289A  0E02               	movlw	high (_DataMessage+2)
  4162   01289C  6E08               	movwf	(compareDataToSend@arr2+1)^0,c
  4163   01289E  0E08               	movlw	8
  4164   0128A0  6E09               	movwf	compareDataToSend@size^0,c
  4165   0128A2  EC0C  F0BF         	call	_compareDataToSend	;wreg free
  4166   0128A6  0900               	iorlw	0
  4167   0128A8  B4D8               	btfsc	status,2,c
  4168   0128AA  D011               	goto	l16361
  4169                           
  4170                           ; BSR set to: 0
  4171                           ;main.c: 247:                         PUTxDATAxINxSENDxMAILxBOX(&DataMessage);
  4172   0128AC  0E93               	movlw	low _DataMessage
  4173   0128AE  6E05               	movwf	PUTxDATAxINxSENDxMAILxBOX@data^0,c
  4174   0128B0  0E02               	movlw	high _DataMessage
  4175   0128B2  6E06               	movwf	(PUTxDATAxINxSENDxMAILxBOX@data+1)^0,c
  4176   0128B4  EC28  F0BD         	call	_PUTxDATAxINxSENDxMAILxBOX	;wreg free
  4177                           
  4178                           ; BSR set to: 1
  4179                           ;main.c: 248:                         prevDataMessage = DataMessage;
  4180   0128B8  EE22  F093         	lfsr	2,_DataMessage
  4181   0128BC  EE15  F0EA         	lfsr	1,_prevDataMessage
  4182   0128C0  0E09               	movlw	9
  4183   0128C2                     u15131:
  4184   0128C2  CFDB FFE3          	movff	plusw2,plusw1
  4185   0128C6  06E8               	decf	wreg,f,c
  4186   0128C8  E2FC               	bc	u15131
  4187                           
  4188                           ; BSR set to: 1
  4189                           ;main.c: 249:                         justSendData = 1;
  4190   0128CA  0E01               	movlw	1
  4191   0128CC  6F64               	movwf	_justSendData& (0+255),b
  4192   0128CE                     l16361:
  4193   0128CE  9489               	bcf	137,2,c	;volatile
  4194   0128D0  8889               	bsf	137,4,c	;volatile
  4195                           
  4196                           ;main.c: 257:                     tSendAliveMessWaitTimeCnt++;
  4197   0128D2  0E01               	movlw	1
  4198   0128D4  0102               	movlb	2	; () banked
  4199   0128D6  270C               	addwf	_tSendAliveMessWaitTimeCnt& (0+255),f,b
  4200   0128D8  0E00               	movlw	0
  4201   0128DA  230D               	addwfc	(_tSendAliveMessWaitTimeCnt+1)& (0+255),f,b
  4202   0128DC  230E               	addwfc	(_tSendAliveMessWaitTimeCnt+2)& (0+255),f,b
  4203   0128DE  230F               	addwfc	(_tSendAliveMessWaitTimeCnt+3)& (0+255),f,b
  4204                           
  4205                           ; BSR set to: 2
  4206                           ;main.c: 258:                     if(tSendAliveMessWaitTimeCnt >= 999){
  4207   0128E0  510F               	movf	(_tSendAliveMessWaitTimeCnt+3)& (0+255),w,b
  4208   0128E2  110E               	iorwf	(_tSendAliveMessWaitTimeCnt+2)& (0+255),w,b
  4209   0128E4  E106               	bnz	u15140
  4210   0128E6  0EE7               	movlw	231
  4211   0128E8  5D0C               	subwf	_tSendAliveMessWaitTimeCnt& (0+255),w,b
  4212   0128EA  0E03               	movlw	3
  4213   0128EC  590D               	subwfb	(_tSendAliveMessWaitTimeCnt+1)& (0+255),w,b
  4214   0128EE  A0D8               	btfss	status,0,c
  4215   0128F0  D054               	goto	l16397
  4216   0128F2                     u15140:
  4217                           
  4218                           ; BSR set to: 2
  4219                           ;main.c: 260:                         uint32_t millis = GETxMILLIS();
  4220   0128F2  EC50  F0C1         	call	_GETxMILLIS	;wreg free
  4221   0128F6  C005  F0EE         	movff	?_GETxMILLIS,main@millis
  4222   0128FA  C006  F0EF         	movff	?_GETxMILLIS+1,main@millis+1
  4223   0128FE  C007  F0F0         	movff	?_GETxMILLIS+2,main@millis+2
  4224   012902  C008  F0F1         	movff	?_GETxMILLIS+3,main@millis+3
  4225                           
  4226                           ;main.c: 261:                         StatusMessage.header = (uint8_t)HEADER;
  4227   012906  0EAA               	movlw	170
  4228   012908  0102               	movlb	2	; () banked
  4229   01290A  6F9D               	movwf	_StatusMessage& (0+255),b
  4230                           
  4231                           ; BSR set to: 2
  4232                           ;main.c: 262:                         StatusMessage.command = (uint8_t)ALIVE;
  4233   01290C  699E               	setf	(_StatusMessage+1)& (0+255),b
  4234                           
  4235                           ; BSR set to: 2
  4236                           ;main.c: 264:                         for(size_t i=0; i < sizeof(millis); i++){
  4237   01290E  0E00               	movlw	0
  4238   012910  0100               	movlb	0	; () banked
  4239   012912  6FF5               	movwf	(main@i+1)& (0+255),b
  4240   012914  0E00               	movlw	0
  4241   012916  6FF4               	movwf	main@i& (0+255),b
  4242   012918                     l16377:
  4243                           
  4244                           ; BSR set to: 0
  4245   012918  51F5               	movf	(main@i+1)& (0+255),w,b
  4246   01291A  E123               	bnz	l16387
  4247   01291C  0E04               	movlw	4
  4248   01291E  5DF4               	subwf	main@i& (0+255),w,b
  4249   012920  B0D8               	btfsc	status,0,c
  4250   012922  D01F               	goto	l16387
  4251                           
  4252                           ; BSR set to: 0
  4253                           ;main.c: 265:                            StatusMessage.data[i] = (millis >> (8 * i)) & 0
      +                          xFF;
  4254   012924  0E9F               	movlw	low (_StatusMessage+2)
  4255   012926  25F4               	addwf	main@i& (0+255),w,b
  4256   012928  6ED9               	movwf	fsr2l,c
  4257   01292A  0E02               	movlw	high (_StatusMessage+2)
  4258   01292C  21F5               	addwfc	(main@i+1)& (0+255),w,b
  4259   01292E  6EDA               	movwf	fsr2h,c
  4260   012930  39F4               	swapf	main@i& (0+255),w,b
  4261   012932  42E8               	rrncf	wreg,f,c
  4262   012934  0BF8               	andlw	248
  4263   012936  C0EE  F0EA         	movff	main@millis,??_main
  4264   01293A  C0EF  F0EB         	movff	main@millis+1,??_main+1
  4265   01293E  C0F0  F0EC         	movff	main@millis+2,??_main+2
  4266   012942  C0F1  F0ED         	movff	main@millis+3,??_main+3
  4267   012946  2AE8               	incf	wreg,f,c
  4268   012948  D005               	goto	u15160
  4269   01294A                     u15165:
  4270   01294A  90D8               	bcf	status,0,c
  4271   01294C  33ED               	rrcf	(??_main+3)& (0+255),f,b
  4272   01294E  33EC               	rrcf	(??_main+2)& (0+255),f,b
  4273   012950  33EB               	rrcf	(??_main+1)& (0+255),f,b
  4274   012952  33EA               	rrcf	??_main& (0+255),f,b
  4275   012954                     u15160:
  4276   012954  2EE8               	decfsz	wreg,f,c
  4277   012956  D7F9               	goto	u15165
  4278   012958  51EA               	movf	??_main& (0+255),w,b
  4279   01295A  6EDF               	movwf	indf2,c
  4280                           
  4281                           ; BSR set to: 0
  4282                           ;main.c: 266:                         }
  4283   01295C  4BF4               	infsnz	main@i& (0+255),f,b
  4284   01295E  2BF5               	incf	(main@i+1)& (0+255),f,b
  4285   012960  D7DB               	goto	l16377
  4286   012962                     l16387:
  4287                           
  4288                           ; BSR set to: 0
  4289                           ;main.c: 268:                         PUTxDATAxINxSENDxMAILxBOX(&StatusMessage);
  4290   012962  0E9D               	movlw	low _StatusMessage
  4291   012964  6E05               	movwf	PUTxDATAxINxSENDxMAILxBOX@data^0,c
  4292   012966  0E02               	movlw	high _StatusMessage
  4293   012968  6E06               	movwf	(PUTxDATAxINxSENDxMAILxBOX@data+1)^0,c
  4294   01296A  EC28  F0BD         	call	_PUTxDATAxINxSENDxMAILxBOX	;wreg free
  4295                           
  4296                           ; BSR set to: 1
  4297                           ;main.c: 269:                         tSendAliveMessWaitTimeCnt = 0;
  4298   01296E  0E00               	movlw	0
  4299   012970  0102               	movlb	2	; () banked
  4300   012972  6F0C               	movwf	_tSendAliveMessWaitTimeCnt& (0+255),b
  4301   012974  0E00               	movlw	0
  4302   012976  6F0D               	movwf	(_tSendAliveMessWaitTimeCnt+1)& (0+255),b
  4303   012978  0E00               	movlw	0
  4304   01297A  6F0E               	movwf	(_tSendAliveMessWaitTimeCnt+2)& (0+255),b
  4305   01297C  0E00               	movlw	0
  4306   01297E  6F0F               	movwf	(_tSendAliveMessWaitTimeCnt+3)& (0+255),b
  4307                           
  4308                           ; BSR set to: 2
  4309                           ;main.c: 275:                         if(0 == justSendData){
  4310   012980  0101               	movlb	1	; () banked
  4311   012982  5164               	movf	_justSendData& (0+255),w,b
  4312   012984  A4D8               	btfss	status,2,c
  4313   012986  D007               	goto	l16395
  4314                           
  4315                           ; BSR set to: 1
  4316                           ;main.c: 276:                             PUTxDATAxINxSENDxMAILxBOX(&DataMessage);
  4317   012988  0E93               	movlw	low _DataMessage
  4318   01298A  6E05               	movwf	PUTxDATAxINxSENDxMAILxBOX@data^0,c
  4319   01298C  0E02               	movlw	high _DataMessage
  4320   01298E  6E06               	movwf	(PUTxDATAxINxSENDxMAILxBOX@data+1)^0,c
  4321   012990  EC28  F0BD         	call	_PUTxDATAxINxSENDxMAILxBOX	;wreg free
  4322                           
  4323                           ;main.c: 277:                         }
  4324   012994  D002               	goto	l16397
  4325   012996                     l16395:
  4326                           
  4327                           ; BSR set to: 1
  4328                           ;main.c: 279:                             justSendData = 0;
  4329   012996  0E00               	movlw	0
  4330   012998  6F64               	movwf	_justSendData& (0+255),b
  4331   01299A                     l16397:
  4332   01299A  9889               	bcf	137,4,c	;volatile
  4333   01299C  8A89               	bsf	137,5,c	;volatile
  4334                           
  4335                           ;main.c: 288:                     if(CHECKxDATAxINxRECEIVExMAILxBOX() == 1){
  4336   01299E  EC1C  F0C1         	call	_CHECKxDATAxINxRECEIVExMAILxBOX	;wreg free
  4337   0129A2  06E8               	decf	wreg,f,c
  4338   0129A4  A4D8               	btfss	status,2,c
  4339   0129A6  D006               	goto	l3361
  4340                           
  4341                           ; BSR set to: 1
  4342                           ;main.c: 290:                         udpTrans_t *udpReceived;;main.c: 291:             
      +                                      udpReceived = GETxDATAxFROMxRECEIVExMAILxBOX();
  4343   0129A8  EC02  F0BD         	call	_GETxDATAxFROMxRECEIVExMAILxBOX	;wreg free
  4344   0129AC  C005  F0F2         	movff	?_GETxDATAxFROMxRECEIVExMAILxBOX,main@udpReceived
  4345   0129B0  C006  F0F3         	movff	?_GETxDATAxFROMxRECEIVExMAILxBOX+1,main@udpReceived+1
  4346   0129B4                     l3361:
  4347                           
  4348                           ; BSR set to: 1
  4349   0129B4  9A89               	bcf	137,5,c	;volatile
  4350                           
  4351                           ; BSR set to: 1
  4352                           ;main.c: 299:                 updateTick = 0;
  4353   0129B6  0E00               	movlw	0
  4354   0129B8  6F66               	movwf	_updateTick& (0+255),b
  4355                           
  4356                           ; BSR set to: 1
  4357   0129BA  9689               	bcf	137,3,c	;volatile
  4358   0129BC  D5CD               	goto	l16199
  4359   0129BE                     __end_of_main:
  4360                           	callstack 0
  4361                           
  4362 ;; *************** function _compareDataToSend *****************
  4363 ;; Defined at:
  4364 ;;		line 308 in file "main.c"
  4365 ;; Parameters:    Size  Location     Type
  4366 ;;  arr1            2    4[COMRAM] PTR const unsigned char 
  4367 ;;		 -> prevDataMessage$data(8), prevDataMessage(10), 
  4368 ;;  arr2            2    6[COMRAM] PTR const unsigned char 
  4369 ;;		 -> DataMessage$data(8), DataMessage(10), 
  4370 ;;  size            1    8[COMRAM] unsigned char 
  4371 ;; Auto vars:     Size  Location     Type
  4372 ;;  i               1   11[COMRAM] unsigned char 
  4373 ;; Return value:  Size  Location     Type
  4374 ;;                  1    wreg      _Bool 
  4375 ;; Registers used:
  4376 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4377 ;; Tracked objects:
  4378 ;;		On entry : 3F/0
  4379 ;;		On exit  : 3F/0
  4380 ;;		Unchanged: 3F/0
  4381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4382 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4383 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4384 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4385 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4386 ;;Total ram usage:        8 bytes
  4387 ;; Hardware stack levels used: 1
  4388 ;; Hardware stack levels required when called: 4
  4389 ;; This function calls:
  4390 ;;		Nothing
  4391 ;; This function is called by:
  4392 ;;		_main
  4393 ;; This function uses a non-reentrant model
  4394 ;;
  4395                           
  4396                           	psect	text1
  4397   017E18                     __ptext1:
  4398                           	callstack 0
  4399   017E18                     _compareDataToSend:
  4400                           	callstack 26
  4401                           
  4402                           ; BSR set to: 0
  4403                           ;main.c: 309:     for (uint8_t i = 0; i < size; ++i) {
  4404                           
  4405                           ; BSR set to: 1
  4406                           ;incstack = 0
  4407   017E18  0E00               	movlw	0
  4408   017E1A  6E0C               	movwf	compareDataToSend@i^0,c
  4409   017E1C  D013               	goto	l16171
  4410   017E1E                     l16163:
  4411                           
  4412                           ; BSR set to: 0
  4413                           ;main.c: 310:         if (arr1[i] != arr2[i]) {
  4414   017E1E  500C               	movf	compareDataToSend@i^0,w,c
  4415   017E20  2407               	addwf	compareDataToSend@arr2^0,w,c
  4416   017E22  6ED9               	movwf	fsr2l,c
  4417   017E24  0E00               	movlw	0
  4418   017E26  2008               	addwfc	(compareDataToSend@arr2+1)^0,w,c
  4419   017E28  6EDA               	movwf	fsr2h,c
  4420   017E2A  500C               	movf	compareDataToSend@i^0,w,c
  4421   017E2C  2405               	addwf	compareDataToSend@arr1^0,w,c
  4422   017E2E  6EE1               	movwf	fsr1l,c
  4423   017E30  0E00               	movlw	0
  4424   017E32  2006               	addwfc	(compareDataToSend@arr1+1)^0,w,c
  4425   017E34  6EE2               	movwf	fsr1h,c
  4426   017E36  50DE               	movf	postinc2,w,c
  4427   017E38  18E6               	xorwf	postinc1,w,c
  4428   017E3A  B4D8               	btfsc	status,2,c
  4429   017E3C  D002               	goto	l16169
  4430                           
  4431                           ; BSR set to: 0
  4432                           ;main.c: 311:             return 1;
  4433   017E3E  0E01               	movlw	1
  4434   017E40  0012               	return	
  4435   017E42                     l16169:
  4436                           
  4437                           ; BSR set to: 0
  4438                           ;main.c: 313:     }
  4439   017E42  2A0C               	incf	compareDataToSend@i^0,f,c
  4440   017E44                     l16171:
  4441                           
  4442                           ; BSR set to: 0
  4443   017E44  5009               	movf	compareDataToSend@size^0,w,c
  4444   017E46  5C0C               	subwf	compareDataToSend@i^0,w,c
  4445   017E48  A0D8               	btfss	status,0,c
  4446   017E4A  D7E9               	goto	l16163
  4447                           
  4448                           ; BSR set to: 0
  4449                           ;main.c: 314:     return 0;
  4450   017E4C  0E00               	movlw	0
  4451                           
  4452                           ; BSR set to: 0
  4453   017E4E  0012               	return		;funcret
  4454   017E50                     __end_of_compareDataToSend:
  4455                           	callstack 0
  4456                           
  4457 ;; *************** function _UPDATExSTATIONxTRAINxWAIT *****************
  4458 ;; Defined at:
  4459 ;;		line 352 in file "mainstation.c"
  4460 ;; Parameters:    Size  Location     Type
  4461 ;;  self            2   33[COMRAM] PTR struct .
  4462 ;;		 -> bot(76), top(76), 
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;  millis          4   47[COMRAM] unsigned long 
  4465 ;; Return value:  Size  Location     Type
  4466 ;;                  1    wreg      void 
  4467 ;; Registers used:
  4468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4469 ;; Tracked objects:
  4470 ;;		On entry : 0/1
  4471 ;;		On exit  : 0/0
  4472 ;;		Unchanged: 0/0
  4473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4474 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4475 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4476 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4477 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4478 ;;Total ram usage:       18 bytes
  4479 ;; Hardware stack levels used: 1
  4480 ;; Hardware stack levels required when called: 7
  4481 ;; This function calls:
  4482 ;;		_CREATExTASKxSTATUSxMESSAGE
  4483 ;;		_GETxMILLIS
  4484 ;;		_GETxRANDOMxNUMBER
  4485 ;; This function is called by:
  4486 ;;		_main
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490                           	psect	text2
  4491   0136F4                     __ptext2:
  4492                           	callstack 0
  4493   0136F4                     _UPDATExSTATIONxTRAINxWAIT:
  4494                           	callstack 23
  4495                           
  4496                           ;mainstation.c: 352: void UPDATExSTATIONxTRAINxWAIT(STATION *self);mainstation.c: 353: {
      +                          ;mainstation.c: 355:     uint32_t millis = GETxMILLIS();
  4497                           
  4498                           ; BSR set to: 0
  4499                           ;incstack = 0
  4500   0136F4  EC50  F0C1         	call	_GETxMILLIS	;wreg free
  4501   0136F8  C005  F030         	movff	?_GETxMILLIS,UPDATExSTATIONxTRAINxWAIT@millis
  4502   0136FC  C006  F031         	movff	?_GETxMILLIS+1,UPDATExSTATIONxTRAINxWAIT@millis+1
  4503   013700  C007  F032         	movff	?_GETxMILLIS+2,UPDATExSTATIONxTRAINxWAIT@millis+2
  4504   013704  C008  F033         	movff	?_GETxMILLIS+3,UPDATExSTATIONxTRAINxWAIT@millis+3
  4505                           
  4506                           ;mainstation.c: 357:     if(STN_WAIT == self->stnTrack1.stnState){
  4507   013708  EE20 F017          	lfsr	2,23
  4508   01370C  5022               	movf	UPDATExSTATIONxTRAINxWAIT@self^0,w,c
  4509   01370E  26D9               	addwf	fsr2l,f,c
  4510   013710  5023               	movf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,w,c
  4511   013712  22DA               	addwfc	fsr2h,f,c
  4512   013714  0E77               	movlw	119
  4513   013716  18DE               	xorwf	postinc2,w,c
  4514   013718  A4D8               	btfss	status,2,c
  4515   01371A  D0A8               	goto	l15757
  4516                           
  4517                           ;mainstation.c: 358:         if((millis - self->stnTrack1.tCountTime) > self->stnTrack1.
      +                          tWaitTime){
  4518   01371C  EE20 F01C          	lfsr	2,28
  4519   013720  5022               	movf	UPDATExSTATIONxTRAINxWAIT@self^0,w,c
  4520   013722  26D9               	addwf	fsr2l,f,c
  4521   013724  5023               	movf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,w,c
  4522   013726  22DA               	addwfc	fsr2h,f,c
  4523   013728  CFDE F024          	movff	postinc2,??_UPDATExSTATIONxTRAINxWAIT
  4524   01372C  CFDE F025          	movff	postinc2,??_UPDATExSTATIONxTRAINxWAIT+1
  4525   013730  CFDE F026          	movff	postinc2,??_UPDATExSTATIONxTRAINxWAIT+2
  4526   013734  CFDE F027          	movff	postinc2,??_UPDATExSTATIONxTRAINxWAIT+3
  4527   013738  5024               	movf	??_UPDATExSTATIONxTRAINxWAIT^0,w,c
  4528   01373A  5C30               	subwf	UPDATExSTATIONxTRAINxWAIT@millis^0,w,c
  4529   01373C  6E28               	movwf	(??_UPDATExSTATIONxTRAINxWAIT+4)^0,c
  4530   01373E  5025               	movf	(??_UPDATExSTATIONxTRAINxWAIT+1)^0,w,c
  4531   013740  5831               	subwfb	(UPDATExSTATIONxTRAINxWAIT@millis+1)^0,w,c
  4532   013742  6E29               	movwf	(??_UPDATExSTATIONxTRAINxWAIT+5)^0,c
  4533   013744  5026               	movf	(??_UPDATExSTATIONxTRAINxWAIT+2)^0,w,c
  4534   013746  5832               	subwfb	(UPDATExSTATIONxTRAINxWAIT@millis+2)^0,w,c
  4535   013748  6E2A               	movwf	(??_UPDATExSTATIONxTRAINxWAIT+6)^0,c
  4536   01374A  5027               	movf	(??_UPDATExSTATIONxTRAINxWAIT+3)^0,w,c
  4537   01374C  5833               	subwfb	(UPDATExSTATIONxTRAINxWAIT@millis+3)^0,w,c
  4538   01374E  6E2B               	movwf	(??_UPDATExSTATIONxTRAINxWAIT+7)^0,c
  4539   013750  EE20 F020          	lfsr	2,32
  4540   013754  5022               	movf	UPDATExSTATIONxTRAINxWAIT@self^0,w,c
  4541   013756  26D9               	addwf	fsr2l,f,c
  4542   013758  5023               	movf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,w,c
  4543   01375A  22DA               	addwfc	fsr2h,f,c
  4544   01375C  5028               	movf	(??_UPDATExSTATIONxTRAINxWAIT+4)^0,w,c
  4545   01375E  5CDE               	subwf	postinc2,w,c
  4546   013760  5029               	movf	(??_UPDATExSTATIONxTRAINxWAIT+5)^0,w,c
  4547   013762  58DE               	subwfb	postinc2,w,c
  4548   013764  502A               	movf	(??_UPDATExSTATIONxTRAINxWAIT+6)^0,w,c
  4549   013766  58DE               	subwfb	postinc2,w,c
  4550   013768  502B               	movf	(??_UPDATExSTATIONxTRAINxWAIT+7)^0,w,c
  4551   01376A  58DE               	subwfb	postinc2,w,c
  4552   01376C  B0D8               	btfsc	status,0,c
  4553   01376E  D07E               	goto	l15757
  4554                           
  4555                           ;mainstation.c: 359:             if(STN_OUTBOUND != self->stnTrack2.stnState &&
  4556   013770  EE20 F029          	lfsr	2,41
  4557   013774  5022               	movf	UPDATExSTATIONxTRAINxWAIT@self^0,w,c
  4558   013776  26D9               	addwf	fsr2l,f,c
  4559   013778  5023               	movf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,w,c
  4560   01377A  22DA               	addwfc	fsr2h,f,c
  4561   01377C  0E75               	movlw	117
  4562   01377E  18DE               	xorwf	postinc2,w,c
  4563   013780  B4D8               	btfsc	status,2,c
  4564   013782  D026               	goto	l15749
  4565   013784  EE20 F03B          	lfsr	2,59
  4566   013788  5022               	movf	UPDATExSTATIONxTRAINxWAIT@self^0,w,c
  4567   01378A  26D9               	addwf	fsr2l,f,c
  4568   01378C  5023               	movf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,w,c
  4569   01378E  22DA               	addwfc	fsr2h,f,c
  4570   013790  0E75               	movlw	117
  4571   013792  18DE               	xorwf	postinc2,w,c
  4572   013794  B4D8               	btfsc	status,2,c
  4573   013796  D01C               	goto	l15749
  4574   013798  EE20 F029          	lfsr	2,41
  4575   01379C  5022               	movf	UPDATExSTATIONxTRAINxWAIT@self^0,w,c
  4576   01379E  26D9               	addwf	fsr2l,f,c
  4577   0137A0  5023               	movf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,w,c
  4578   0137A2  22DA               	addwfc	fsr2h,f,c
  4579   0137A4  0E76               	movlw	118
  4580   0137A6  18DE               	xorwf	postinc2,w,c
  4581   0137A8  B4D8               	btfsc	status,2,c
  4582   0137AA  D012               	goto	l15749
  4583   0137AC  EE20 F03B          	lfsr	2,59
  4584   0137B0  5022               	movf	UPDATExSTATIONxTRAINxWAIT@self^0,w,c
  4585   0137B2  26D9               	addwf	fsr2l,f,c
  4586   0137B4  5023               	movf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,w,c
  4587   0137B6  22DA               	addwfc	fsr2h,f,c
  4588   0137B8  0E76               	movlw	118
  4589   0137BA  18DE               	xorwf	postinc2,w,c
  4590   0137BC  B4D8               	btfsc	status,2,c
  4591   0137BE  D008               	goto	l15749
  4592                           
  4593                           ;mainstation.c: 362:                     STN_PASSING != self->stnTrack3.stnState){;mains
      +                          tation.c: 363:                 self->stnTrack1.stnState = STN_OUTBOUND;
  4594   0137C0  EE20 F017          	lfsr	2,23
  4595   0137C4  5022               	movf	UPDATExSTATIONxTRAINxWAIT@self^0,w,c
  4596   0137C6  26D9               	addwf	fsr2l,f,c
  4597   0137C8  5023               	movf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,w,c
  4598   0137CA  22DA               	addwfc	fsr2h,f,c
  4599   0137CC  0E75               	movlw	117
  4600   0137CE  D034               	goto	L1
  4601   0137D0                     l15749:
  4602                           
  4603                           ;mainstation.c: 366:                 self->stnTrack1.tCountTime = millis;
  4604   0137D0  EE20 F01C          	lfsr	2,28
  4605   0137D4  5022               	movf	UPDATExSTATIONxTRAINxWAIT@self^0,w,c
  4606   0137D6  26D9               	addwf	fsr2l,f,c
  4607   0137D8  5023               	movf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,w,c
  4608   0137DA  22DA               	addwfc	fsr2h,f,c
  4609   0137DC  C030  FFDE         	movff	UPDATExSTATIONxTRAINxWAIT@millis,postinc2
  4610   0137E0  C031  FFDE         	movff	UPDATExSTATIONxTRAINxWAIT@millis+1,postinc2
  4611   0137E4  C032  FFDE         	movff	UPDATExSTATIONxTRAINxWAIT@millis+2,postinc2
  4612   0137E8  C033  FFDE         	movff	UPDATExSTATIONxTRAINxWAIT@millis+3,postinc2
  4613   0137EC  EC10  F0C1         	call	_GETxRANDOMxNUMBER	;wreg free
  4614   0137F0  90D8               	bcf	status,0,c
  4615   0137F2  3617               	rlcf	?_GETxRANDOMxNUMBER^0,f,c
  4616   0137F4  3618               	rlcf	(?_GETxRANDOMxNUMBER+1)^0,f,c
  4617   0137F6  90D8               	bcf	status,0,c
  4618   0137F8  3617               	rlcf	?_GETxRANDOMxNUMBER^0,f,c
  4619   0137FA  3618               	rlcf	(?_GETxRANDOMxNUMBER+1)^0,f,c
  4620   0137FC  90D8               	bcf	status,0,c
  4621   0137FE  3617               	rlcf	?_GETxRANDOMxNUMBER^0,f,c
  4622   013800  3618               	rlcf	(?_GETxRANDOMxNUMBER+1)^0,f,c
  4623   013802  5017               	movf	?_GETxRANDOMxNUMBER^0,w,c
  4624   013804  6E24               	movwf	??_UPDATExSTATIONxTRAINxWAIT^0,c
  4625   013806  5018               	movf	(?_GETxRANDOMxNUMBER+1)^0,w,c
  4626   013808  6E25               	movwf	(??_UPDATExSTATIONxTRAINxWAIT+1)^0,c
  4627   01380A  6A26               	clrf	(??_UPDATExSTATIONxTRAINxWAIT+2)^0,c
  4628   01380C  6A27               	clrf	(??_UPDATExSTATIONxTRAINxWAIT+3)^0,c
  4629   01380E  EE20 F020          	lfsr	2,32
  4630   013812  5022               	movf	UPDATExSTATIONxTRAINxWAIT@self^0,w,c
  4631   013814  26D9               	addwf	fsr2l,f,c
  4632   013816  5023               	movf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,w,c
  4633   013818  22DA               	addwfc	fsr2h,f,c
  4634   01381A  C024  FFDE         	movff	??_UPDATExSTATIONxTRAINxWAIT,postinc2
  4635   01381E  C025  FFDE         	movff	??_UPDATExSTATIONxTRAINxWAIT+1,postinc2
  4636   013822  C026  FFDE         	movff	??_UPDATExSTATIONxTRAINxWAIT+2,postinc2
  4637   013826  C027  FFDE         	movff	??_UPDATExSTATIONxTRAINxWAIT+3,postinc2
  4638                           
  4639                           ; BSR set to: 1
  4640                           ;mainstation.c: 368:                 self->stnTrack1.stnState = STN_WAIT;
  4641   01382A  EE20 F017          	lfsr	2,23
  4642   01382E  5022               	movf	UPDATExSTATIONxTRAINxWAIT@self^0,w,c
  4643   013830  26D9               	addwf	fsr2l,f,c
  4644   013832  5023               	movf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,w,c
  4645   013834  22DA               	addwfc	fsr2h,f,c
  4646   013836  0E77               	movlw	119
  4647   013838                     L1:
  4648   013838  6EDF               	movwf	indf2,c
  4649                           
  4650                           ;mainstation.c: 370:             CREATExTASKxSTATUSxMESSAGE(self->name,
  4651   01383A  EE20 F016          	lfsr	2,22
  4652   01383E  5022               	movf	UPDATExSTATIONxTRAINxWAIT@self^0,w,c
  4653   013840  26D9               	addwf	fsr2l,f,c
  4654   013842  5023               	movf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,w,c
  4655   013844  22DA               	addwfc	fsr2h,f,c
  4656   013846  50DF               	movf	indf2,w,c
  4657   013848  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
  4658   01384A  EE20 F017          	lfsr	2,23
  4659   01384E  5022               	movf	UPDATExSTATIONxTRAINxWAIT@self^0,w,c
  4660   013850  26D9               	addwf	fsr2l,f,c
  4661   013852  5023               	movf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,w,c
  4662   013854  22DA               	addwfc	fsr2h,f,c
  4663   013856  50DF               	movf	indf2,w,c
  4664   013858  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
  4665   01385A  0E96               	movlw	150
  4666   01385C  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
  4667   01385E  C022  FFD9         	movff	UPDATExSTATIONxTRAINxWAIT@self,fsr2l
  4668   013862  C023  FFDA         	movff	UPDATExSTATIONxTRAINxWAIT@self+1,fsr2h
  4669   013866  50DF               	movf	indf2,w,c
  4670   013868  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
  4671   01386C                     l15757:
  4672                           
  4673                           ;mainstation.c: 376:     if(STN_WAIT == self->stnTrack2.stnState){
  4674   01386C  EE20 F029          	lfsr	2,41
  4675   013870  5022               	movf	UPDATExSTATIONxTRAINxWAIT@self^0,w,c
  4676   013872  26D9               	addwf	fsr2l,f,c
  4677   013874  5023               	movf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,w,c
  4678   013876  22DA               	addwfc	fsr2h,f,c
  4679   013878  0E77               	movlw	119
  4680   01387A  18DE               	xorwf	postinc2,w,c
  4681   01387C  A4D8               	btfss	status,2,c
  4682   01387E  D0A8               	goto	l15779
  4683                           
  4684                           ;mainstation.c: 377:         if((millis - self->stnTrack2.tCountTime) > self->stnTrack2.
      +                          tWaitTime){
  4685   013880  EE20 F02E          	lfsr	2,46
  4686   013884  5022               	movf	UPDATExSTATIONxTRAINxWAIT@self^0,w,c
  4687   013886  26D9               	addwf	fsr2l,f,c
  4688   013888  5023               	movf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,w,c
  4689   01388A  22DA               	addwfc	fsr2h,f,c
  4690   01388C  CFDE F024          	movff	postinc2,??_UPDATExSTATIONxTRAINxWAIT
  4691   013890  CFDE F025          	movff	postinc2,??_UPDATExSTATIONxTRAINxWAIT+1
  4692   013894  CFDE F026          	movff	postinc2,??_UPDATExSTATIONxTRAINxWAIT+2
  4693   013898  CFDE F027          	movff	postinc2,??_UPDATExSTATIONxTRAINxWAIT+3
  4694   01389C  5024               	movf	??_UPDATExSTATIONxTRAINxWAIT^0,w,c
  4695   01389E  5C30               	subwf	UPDATExSTATIONxTRAINxWAIT@millis^0,w,c
  4696   0138A0  6E28               	movwf	(??_UPDATExSTATIONxTRAINxWAIT+4)^0,c
  4697   0138A2  5025               	movf	(??_UPDATExSTATIONxTRAINxWAIT+1)^0,w,c
  4698   0138A4  5831               	subwfb	(UPDATExSTATIONxTRAINxWAIT@millis+1)^0,w,c
  4699   0138A6  6E29               	movwf	(??_UPDATExSTATIONxTRAINxWAIT+5)^0,c
  4700   0138A8  5026               	movf	(??_UPDATExSTATIONxTRAINxWAIT+2)^0,w,c
  4701   0138AA  5832               	subwfb	(UPDATExSTATIONxTRAINxWAIT@millis+2)^0,w,c
  4702   0138AC  6E2A               	movwf	(??_UPDATExSTATIONxTRAINxWAIT+6)^0,c
  4703   0138AE  5027               	movf	(??_UPDATExSTATIONxTRAINxWAIT+3)^0,w,c
  4704   0138B0  5833               	subwfb	(UPDATExSTATIONxTRAINxWAIT@millis+3)^0,w,c
  4705   0138B2  6E2B               	movwf	(??_UPDATExSTATIONxTRAINxWAIT+7)^0,c
  4706   0138B4  EE20 F032          	lfsr	2,50
  4707   0138B8  5022               	movf	UPDATExSTATIONxTRAINxWAIT@self^0,w,c
  4708   0138BA  26D9               	addwf	fsr2l,f,c
  4709   0138BC  5023               	movf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,w,c
  4710   0138BE  22DA               	addwfc	fsr2h,f,c
  4711   0138C0  5028               	movf	(??_UPDATExSTATIONxTRAINxWAIT+4)^0,w,c
  4712   0138C2  5CDE               	subwf	postinc2,w,c
  4713   0138C4  5029               	movf	(??_UPDATExSTATIONxTRAINxWAIT+5)^0,w,c
  4714   0138C6  58DE               	subwfb	postinc2,w,c
  4715   0138C8  502A               	movf	(??_UPDATExSTATIONxTRAINxWAIT+6)^0,w,c
  4716   0138CA  58DE               	subwfb	postinc2,w,c
  4717   0138CC  502B               	movf	(??_UPDATExSTATIONxTRAINxWAIT+7)^0,w,c
  4718   0138CE  58DE               	subwfb	postinc2,w,c
  4719   0138D0  B0D8               	btfsc	status,0,c
  4720   0138D2  D07E               	goto	l15779
  4721                           
  4722                           ;mainstation.c: 378:             if(STN_OUTBOUND != self->stnTrack1.stnState &&
  4723   0138D4  EE20 F017          	lfsr	2,23
  4724   0138D8  5022               	movf	UPDATExSTATIONxTRAINxWAIT@self^0,w,c
  4725   0138DA  26D9               	addwf	fsr2l,f,c
  4726   0138DC  5023               	movf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,w,c
  4727   0138DE  22DA               	addwfc	fsr2h,f,c
  4728   0138E0  0E75               	movlw	117
  4729   0138E2  18DE               	xorwf	postinc2,w,c
  4730   0138E4  B4D8               	btfsc	status,2,c
  4731   0138E6  D026               	goto	l15771
  4732   0138E8  EE20 F03B          	lfsr	2,59
  4733   0138EC  5022               	movf	UPDATExSTATIONxTRAINxWAIT@self^0,w,c
  4734   0138EE  26D9               	addwf	fsr2l,f,c
  4735   0138F0  5023               	movf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,w,c
  4736   0138F2  22DA               	addwfc	fsr2h,f,c
  4737   0138F4  0E75               	movlw	117
  4738   0138F6  18DE               	xorwf	postinc2,w,c
  4739   0138F8  B4D8               	btfsc	status,2,c
  4740   0138FA  D01C               	goto	l15771
  4741   0138FC  EE20 F017          	lfsr	2,23
  4742   013900  5022               	movf	UPDATExSTATIONxTRAINxWAIT@self^0,w,c
  4743   013902  26D9               	addwf	fsr2l,f,c
  4744   013904  5023               	movf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,w,c
  4745   013906  22DA               	addwfc	fsr2h,f,c
  4746   013908  0E76               	movlw	118
  4747   01390A  18DE               	xorwf	postinc2,w,c
  4748   01390C  B4D8               	btfsc	status,2,c
  4749   01390E  D012               	goto	l15771
  4750   013910  EE20 F03B          	lfsr	2,59
  4751   013914  5022               	movf	UPDATExSTATIONxTRAINxWAIT@self^0,w,c
  4752   013916  26D9               	addwf	fsr2l,f,c
  4753   013918  5023               	movf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,w,c
  4754   01391A  22DA               	addwfc	fsr2h,f,c
  4755   01391C  0E76               	movlw	118
  4756   01391E  18DE               	xorwf	postinc2,w,c
  4757   013920  B4D8               	btfsc	status,2,c
  4758   013922  D008               	goto	l15771
  4759                           
  4760                           ;mainstation.c: 381:                     STN_PASSING != self->stnTrack3.stnState){;mains
      +                          tation.c: 382:                 self->stnTrack2.stnState = STN_OUTBOUND;
  4761   013924  EE20 F029          	lfsr	2,41
  4762   013928  5022               	movf	UPDATExSTATIONxTRAINxWAIT@self^0,w,c
  4763   01392A  26D9               	addwf	fsr2l,f,c
  4764   01392C  5023               	movf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,w,c
  4765   01392E  22DA               	addwfc	fsr2h,f,c
  4766   013930  0E75               	movlw	117
  4767   013932  D034               	goto	L2
  4768   013934                     l15771:
  4769                           
  4770                           ;mainstation.c: 385:                 self->stnTrack2.tCountTime = millis;
  4771   013934  EE20 F02E          	lfsr	2,46
  4772   013938  5022               	movf	UPDATExSTATIONxTRAINxWAIT@self^0,w,c
  4773   01393A  26D9               	addwf	fsr2l,f,c
  4774   01393C  5023               	movf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,w,c
  4775   01393E  22DA               	addwfc	fsr2h,f,c
  4776   013940  C030  FFDE         	movff	UPDATExSTATIONxTRAINxWAIT@millis,postinc2
  4777   013944  C031  FFDE         	movff	UPDATExSTATIONxTRAINxWAIT@millis+1,postinc2
  4778   013948  C032  FFDE         	movff	UPDATExSTATIONxTRAINxWAIT@millis+2,postinc2
  4779   01394C  C033  FFDE         	movff	UPDATExSTATIONxTRAINxWAIT@millis+3,postinc2
  4780   013950  EC10  F0C1         	call	_GETxRANDOMxNUMBER	;wreg free
  4781   013954  90D8               	bcf	status,0,c
  4782   013956  3617               	rlcf	?_GETxRANDOMxNUMBER^0,f,c
  4783   013958  3618               	rlcf	(?_GETxRANDOMxNUMBER+1)^0,f,c
  4784   01395A  90D8               	bcf	status,0,c
  4785   01395C  3617               	rlcf	?_GETxRANDOMxNUMBER^0,f,c
  4786   01395E  3618               	rlcf	(?_GETxRANDOMxNUMBER+1)^0,f,c
  4787   013960  90D8               	bcf	status,0,c
  4788   013962  3617               	rlcf	?_GETxRANDOMxNUMBER^0,f,c
  4789   013964  3618               	rlcf	(?_GETxRANDOMxNUMBER+1)^0,f,c
  4790   013966  5017               	movf	?_GETxRANDOMxNUMBER^0,w,c
  4791   013968  6E24               	movwf	??_UPDATExSTATIONxTRAINxWAIT^0,c
  4792   01396A  5018               	movf	(?_GETxRANDOMxNUMBER+1)^0,w,c
  4793   01396C  6E25               	movwf	(??_UPDATExSTATIONxTRAINxWAIT+1)^0,c
  4794   01396E  6A26               	clrf	(??_UPDATExSTATIONxTRAINxWAIT+2)^0,c
  4795   013970  6A27               	clrf	(??_UPDATExSTATIONxTRAINxWAIT+3)^0,c
  4796   013972  EE20 F032          	lfsr	2,50
  4797   013976  5022               	movf	UPDATExSTATIONxTRAINxWAIT@self^0,w,c
  4798   013978  26D9               	addwf	fsr2l,f,c
  4799   01397A  5023               	movf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,w,c
  4800   01397C  22DA               	addwfc	fsr2h,f,c
  4801   01397E  C024  FFDE         	movff	??_UPDATExSTATIONxTRAINxWAIT,postinc2
  4802   013982  C025  FFDE         	movff	??_UPDATExSTATIONxTRAINxWAIT+1,postinc2
  4803   013986  C026  FFDE         	movff	??_UPDATExSTATIONxTRAINxWAIT+2,postinc2
  4804   01398A  C027  FFDE         	movff	??_UPDATExSTATIONxTRAINxWAIT+3,postinc2
  4805                           
  4806                           ; BSR set to: 1
  4807                           ;mainstation.c: 387:                 self->stnTrack2.stnState = STN_WAIT;
  4808   01398E  EE20 F029          	lfsr	2,41
  4809   013992  5022               	movf	UPDATExSTATIONxTRAINxWAIT@self^0,w,c
  4810   013994  26D9               	addwf	fsr2l,f,c
  4811   013996  5023               	movf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,w,c
  4812   013998  22DA               	addwfc	fsr2h,f,c
  4813   01399A  0E77               	movlw	119
  4814   01399C                     L2:
  4815   01399C  6EDF               	movwf	indf2,c
  4816                           
  4817                           ;mainstation.c: 389:             CREATExTASKxSTATUSxMESSAGE(self->name,
  4818   01399E  EE20 F028          	lfsr	2,40
  4819   0139A2  5022               	movf	UPDATExSTATIONxTRAINxWAIT@self^0,w,c
  4820   0139A4  26D9               	addwf	fsr2l,f,c
  4821   0139A6  5023               	movf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,w,c
  4822   0139A8  22DA               	addwfc	fsr2h,f,c
  4823   0139AA  50DF               	movf	indf2,w,c
  4824   0139AC  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
  4825   0139AE  EE20 F029          	lfsr	2,41
  4826   0139B2  5022               	movf	UPDATExSTATIONxTRAINxWAIT@self^0,w,c
  4827   0139B4  26D9               	addwf	fsr2l,f,c
  4828   0139B6  5023               	movf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,w,c
  4829   0139B8  22DA               	addwfc	fsr2h,f,c
  4830   0139BA  50DF               	movf	indf2,w,c
  4831   0139BC  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
  4832   0139BE  0E96               	movlw	150
  4833   0139C0  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
  4834   0139C2  C022  FFD9         	movff	UPDATExSTATIONxTRAINxWAIT@self,fsr2l
  4835   0139C6  C023  FFDA         	movff	UPDATExSTATIONxTRAINxWAIT@self+1,fsr2h
  4836   0139CA  50DF               	movf	indf2,w,c
  4837   0139CC  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
  4838   0139D0                     l15779:
  4839                           
  4840                           ;mainstation.c: 395:     if(STN_WAIT == self->stnTrack3.stnState){
  4841   0139D0  EE20 F03B          	lfsr	2,59
  4842   0139D4  5022               	movf	UPDATExSTATIONxTRAINxWAIT@self^0,w,c
  4843   0139D6  26D9               	addwf	fsr2l,f,c
  4844   0139D8  5023               	movf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,w,c
  4845   0139DA  22DA               	addwfc	fsr2h,f,c
  4846   0139DC  0E77               	movlw	119
  4847   0139DE  18DE               	xorwf	postinc2,w,c
  4848   0139E0  A4D8               	btfss	status,2,c
  4849   0139E2  0012               	return	
  4850                           
  4851                           ;mainstation.c: 396:         if((millis - self->stnTrack3.tCountTime) > self->stnTrack3.
      +                          tWaitTime){
  4852   0139E4  EE20 F040          	lfsr	2,64
  4853   0139E8  5022               	movf	UPDATExSTATIONxTRAINxWAIT@self^0,w,c
  4854   0139EA  26D9               	addwf	fsr2l,f,c
  4855   0139EC  5023               	movf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,w,c
  4856   0139EE  22DA               	addwfc	fsr2h,f,c
  4857   0139F0  CFDE F024          	movff	postinc2,??_UPDATExSTATIONxTRAINxWAIT
  4858   0139F4  CFDE F025          	movff	postinc2,??_UPDATExSTATIONxTRAINxWAIT+1
  4859   0139F8  CFDE F026          	movff	postinc2,??_UPDATExSTATIONxTRAINxWAIT+2
  4860   0139FC  CFDE F027          	movff	postinc2,??_UPDATExSTATIONxTRAINxWAIT+3
  4861   013A00  5024               	movf	??_UPDATExSTATIONxTRAINxWAIT^0,w,c
  4862   013A02  5C30               	subwf	UPDATExSTATIONxTRAINxWAIT@millis^0,w,c
  4863   013A04  6E28               	movwf	(??_UPDATExSTATIONxTRAINxWAIT+4)^0,c
  4864   013A06  5025               	movf	(??_UPDATExSTATIONxTRAINxWAIT+1)^0,w,c
  4865   013A08  5831               	subwfb	(UPDATExSTATIONxTRAINxWAIT@millis+1)^0,w,c
  4866   013A0A  6E29               	movwf	(??_UPDATExSTATIONxTRAINxWAIT+5)^0,c
  4867   013A0C  5026               	movf	(??_UPDATExSTATIONxTRAINxWAIT+2)^0,w,c
  4868   013A0E  5832               	subwfb	(UPDATExSTATIONxTRAINxWAIT@millis+2)^0,w,c
  4869   013A10  6E2A               	movwf	(??_UPDATExSTATIONxTRAINxWAIT+6)^0,c
  4870   013A12  5027               	movf	(??_UPDATExSTATIONxTRAINxWAIT+3)^0,w,c
  4871   013A14  5833               	subwfb	(UPDATExSTATIONxTRAINxWAIT@millis+3)^0,w,c
  4872   013A16  6E2B               	movwf	(??_UPDATExSTATIONxTRAINxWAIT+7)^0,c
  4873   013A18  EE20 F044          	lfsr	2,68
  4874   013A1C  5022               	movf	UPDATExSTATIONxTRAINxWAIT@self^0,w,c
  4875   013A1E  26D9               	addwf	fsr2l,f,c
  4876   013A20  5023               	movf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,w,c
  4877   013A22  22DA               	addwfc	fsr2h,f,c
  4878   013A24  5028               	movf	(??_UPDATExSTATIONxTRAINxWAIT+4)^0,w,c
  4879   013A26  5CDE               	subwf	postinc2,w,c
  4880   013A28  5029               	movf	(??_UPDATExSTATIONxTRAINxWAIT+5)^0,w,c
  4881   013A2A  58DE               	subwfb	postinc2,w,c
  4882   013A2C  502A               	movf	(??_UPDATExSTATIONxTRAINxWAIT+6)^0,w,c
  4883   013A2E  58DE               	subwfb	postinc2,w,c
  4884   013A30  502B               	movf	(??_UPDATExSTATIONxTRAINxWAIT+7)^0,w,c
  4885   013A32  58DE               	subwfb	postinc2,w,c
  4886   013A34  B0D8               	btfsc	status,0,c
  4887   013A36  0012               	return	
  4888                           
  4889                           ;mainstation.c: 397:             if(STN_OUTBOUND != self->stnTrack1.stnState &&
  4890   013A38  EE20 F017          	lfsr	2,23
  4891   013A3C  5022               	movf	UPDATExSTATIONxTRAINxWAIT@self^0,w,c
  4892   013A3E  26D9               	addwf	fsr2l,f,c
  4893   013A40  5023               	movf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,w,c
  4894   013A42  22DA               	addwfc	fsr2h,f,c
  4895   013A44  0E75               	movlw	117
  4896   013A46  18DE               	xorwf	postinc2,w,c
  4897   013A48  B4D8               	btfsc	status,2,c
  4898   013A4A  D026               	goto	l15793
  4899   013A4C  EE20 F029          	lfsr	2,41
  4900   013A50  5022               	movf	UPDATExSTATIONxTRAINxWAIT@self^0,w,c
  4901   013A52  26D9               	addwf	fsr2l,f,c
  4902   013A54  5023               	movf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,w,c
  4903   013A56  22DA               	addwfc	fsr2h,f,c
  4904   013A58  0E75               	movlw	117
  4905   013A5A  18DE               	xorwf	postinc2,w,c
  4906   013A5C  B4D8               	btfsc	status,2,c
  4907   013A5E  D01C               	goto	l15793
  4908   013A60  EE20 F017          	lfsr	2,23
  4909   013A64  5022               	movf	UPDATExSTATIONxTRAINxWAIT@self^0,w,c
  4910   013A66  26D9               	addwf	fsr2l,f,c
  4911   013A68  5023               	movf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,w,c
  4912   013A6A  22DA               	addwfc	fsr2h,f,c
  4913   013A6C  0E76               	movlw	118
  4914   013A6E  18DE               	xorwf	postinc2,w,c
  4915   013A70  B4D8               	btfsc	status,2,c
  4916   013A72  D012               	goto	l15793
  4917   013A74  EE20 F029          	lfsr	2,41
  4918   013A78  5022               	movf	UPDATExSTATIONxTRAINxWAIT@self^0,w,c
  4919   013A7A  26D9               	addwf	fsr2l,f,c
  4920   013A7C  5023               	movf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,w,c
  4921   013A7E  22DA               	addwfc	fsr2h,f,c
  4922   013A80  0E76               	movlw	118
  4923   013A82  18DE               	xorwf	postinc2,w,c
  4924   013A84  B4D8               	btfsc	status,2,c
  4925   013A86  D008               	goto	l15793
  4926                           
  4927                           ;mainstation.c: 400:                     STN_PASSING != self->stnTrack2.stnState){;mains
      +                          tation.c: 401:                 self->stnTrack3.stnState = STN_OUTBOUND;
  4928   013A88  EE20 F03B          	lfsr	2,59
  4929   013A8C  5022               	movf	UPDATExSTATIONxTRAINxWAIT@self^0,w,c
  4930   013A8E  26D9               	addwf	fsr2l,f,c
  4931   013A90  5023               	movf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,w,c
  4932   013A92  22DA               	addwfc	fsr2h,f,c
  4933   013A94  0E75               	movlw	117
  4934   013A96  D023               	goto	L3
  4935   013A98                     l15793:
  4936                           
  4937                           ;mainstation.c: 404:                 self->stnTrack3.tCountTime = millis;
  4938   013A98  EE20 F040          	lfsr	2,64
  4939   013A9C  5022               	movf	UPDATExSTATIONxTRAINxWAIT@self^0,w,c
  4940   013A9E  26D9               	addwf	fsr2l,f,c
  4941   013AA0  5023               	movf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,w,c
  4942   013AA2  22DA               	addwfc	fsr2h,f,c
  4943   013AA4  C030  FFDE         	movff	UPDATExSTATIONxTRAINxWAIT@millis,postinc2
  4944   013AA8  C031  FFDE         	movff	UPDATExSTATIONxTRAINxWAIT@millis+1,postinc2
  4945   013AAC  C032  FFDE         	movff	UPDATExSTATIONxTRAINxWAIT@millis+2,postinc2
  4946   013AB0  C033  FFDE         	movff	UPDATExSTATIONxTRAINxWAIT@millis+3,postinc2
  4947   013AB4  EE20 F044          	lfsr	2,68
  4948   013AB8  5022               	movf	UPDATExSTATIONxTRAINxWAIT@self^0,w,c
  4949   013ABA  26D9               	addwf	fsr2l,f,c
  4950   013ABC  5023               	movf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,w,c
  4951   013ABE  22DA               	addwfc	fsr2h,f,c
  4952   013AC0  0E88               	movlw	136
  4953   013AC2  6EDE               	movwf	postinc2,c
  4954   013AC4  0E13               	movlw	19
  4955   013AC6  6EDE               	movwf	postinc2,c
  4956   013AC8  0E00               	movlw	0
  4957   013ACA  6EDE               	movwf	postinc2,c
  4958   013ACC  0E00               	movlw	0
  4959   013ACE  6EDD               	movwf	postdec2,c
  4960                           
  4961                           ;mainstation.c: 406:                 self->stnTrack3.stnState = STN_WAIT;
  4962   013AD0  EE20 F03B          	lfsr	2,59
  4963   013AD4  5022               	movf	UPDATExSTATIONxTRAINxWAIT@self^0,w,c
  4964   013AD6  26D9               	addwf	fsr2l,f,c
  4965   013AD8  5023               	movf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,w,c
  4966   013ADA  22DA               	addwfc	fsr2h,f,c
  4967   013ADC  0E77               	movlw	119
  4968   013ADE                     L3:
  4969   013ADE  6EDF               	movwf	indf2,c
  4970                           
  4971                           ;mainstation.c: 408:             CREATExTASKxSTATUSxMESSAGE(self->name,
  4972   013AE0  EE20 F03A          	lfsr	2,58
  4973   013AE4  5022               	movf	UPDATExSTATIONxTRAINxWAIT@self^0,w,c
  4974   013AE6  26D9               	addwf	fsr2l,f,c
  4975   013AE8  5023               	movf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,w,c
  4976   013AEA  22DA               	addwfc	fsr2h,f,c
  4977   013AEC  50DF               	movf	indf2,w,c
  4978   013AEE  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
  4979   013AF0  EE20 F03B          	lfsr	2,59
  4980   013AF4  5022               	movf	UPDATExSTATIONxTRAINxWAIT@self^0,w,c
  4981   013AF6  26D9               	addwf	fsr2l,f,c
  4982   013AF8  5023               	movf	(UPDATExSTATIONxTRAINxWAIT@self+1)^0,w,c
  4983   013AFA  22DA               	addwfc	fsr2h,f,c
  4984   013AFC  50DF               	movf	indf2,w,c
  4985   013AFE  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
  4986   013B00  0E96               	movlw	150
  4987   013B02  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
  4988   013B04  C022  FFD9         	movff	UPDATExSTATIONxTRAINxWAIT@self,fsr2l
  4989   013B08  C023  FFDA         	movff	UPDATExSTATIONxTRAINxWAIT@self+1,fsr2h
  4990   013B0C  50DF               	movf	indf2,w,c
  4991   013B0E  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
  4992   013B12  0012               	return		;funcret
  4993   013B14                     __end_of_UPDATExSTATIONxTRAINxWAIT:
  4994                           	callstack 0
  4995                           
  4996 ;; *************** function _UPDATExSTATION *****************
  4997 ;; Defined at:
  4998 ;;		line 88 in file "mainstation.c"
  4999 ;; Parameters:    Size  Location     Type
  5000 ;;  self            2   62[COMRAM] PTR struct .
  5001 ;;		 -> bot(76), top(76), 
  5002 ;; Auto vars:     Size  Location     Type
  5003 ;;		None
  5004 ;; Return value:  Size  Location     Type
  5005 ;;                  1    wreg      void 
  5006 ;; Registers used:
  5007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5008 ;; Tracked objects:
  5009 ;;		On entry : 0/1
  5010 ;;		On exit  : 0/0
  5011 ;;		Unchanged: 0/0
  5012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5013 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5015 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5016 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5017 ;;Total ram usage:       10 bytes
  5018 ;; Hardware stack levels used: 1
  5019 ;; Hardware stack levels required when called: 8
  5020 ;; This function calls:
  5021 ;;		_CREATExTASKxSTATUSxMESSAGE
  5022 ;;		_GETxRANDOMxNUMBER
  5023 ;;		_MAINxSTATIONxINBOUND
  5024 ;;		_MAINxSTATIONxOUTBOUND
  5025 ;;		_MAINxSTATIONxPASSING
  5026 ;;		_SETxOCC
  5027 ;;		_SETxSIGNAL
  5028 ;; This function is called by:
  5029 ;;		_main
  5030 ;; This function uses a non-reentrant model
  5031 ;;
  5032                           
  5033                           	psect	text3
  5034   010000                     __ptext3:
  5035                           	callstack 0
  5036   010000                     _UPDATExSTATION:
  5037                           	callstack 22
  5038                           
  5039                           ;mainstation.c: 88: void UPDATExSTATION(STATION *self);mainstation.c: 89: {;mainstation.
      +                          c: 90:     switch(self->AppState)
  5040                           
  5041                           ;incstack = 0
  5042   010000  EF74  F084         	goto	l15727
  5043   010004                     l15561:
  5044                           
  5045                           ;mainstation.c: 94:             CREATExTASKxSTATUSxMESSAGE(self->name,
  5046   010004  0E00               	movlw	0
  5047   010006  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
  5048   010008  EE20 F001          	lfsr	2,1
  5049   01000C  503F               	movf	UPDATExSTATION@self^0,w,c
  5050   01000E  26D9               	addwf	fsr2l,f,c
  5051   010010  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5052   010012  22DA               	addwfc	fsr2h,f,c
  5053   010014  50DF               	movf	indf2,w,c
  5054   010016  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
  5055   010018  0E96               	movlw	150
  5056   01001A  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
  5057   01001C  C03F  FFD9         	movff	UPDATExSTATION@self,fsr2l
  5058   010020  C040  FFDA         	movff	UPDATExSTATION@self+1,fsr2h
  5059   010024  50DF               	movf	indf2,w,c
  5060   010026  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
  5061                           
  5062                           ; BSR set to: 1
  5063                           ;mainstation.c: 99:             self->getFreightLeaveStation->value = 0;
  5064   01002A  EE20 F002          	lfsr	2,2
  5065   01002E  503F               	movf	UPDATExSTATION@self^0,w,c
  5066   010030  26D9               	addwf	fsr2l,f,c
  5067   010032  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5068   010034  22DA               	addwfc	fsr2h,f,c
  5069   010036  EE10 F00B          	lfsr	1,11
  5070   01003A  50DE               	movf	postinc2,w,c
  5071   01003C  26E1               	addwf	fsr1l,f,c
  5072   01003E  50DD               	movf	postdec2,w,c
  5073   010040  22E2               	addwfc	fsr1h,f,c
  5074   010042  6AE7               	clrf	indf1,c
  5075                           
  5076                           ; BSR set to: 1
  5077                           ;mainstation.c: 100:             self->getFreightEnterStation->value = 0;
  5078   010044  EE20 F004          	lfsr	2,4
  5079   010048  503F               	movf	UPDATExSTATION@self^0,w,c
  5080   01004A  26D9               	addwf	fsr2l,f,c
  5081   01004C  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5082   01004E  22DA               	addwfc	fsr2h,f,c
  5083   010050  EE10 F00B          	lfsr	1,11
  5084   010054  50DE               	movf	postinc2,w,c
  5085   010056  26E1               	addwf	fsr1l,f,c
  5086   010058  50DD               	movf	postdec2,w,c
  5087   01005A  22E2               	addwfc	fsr1h,f,c
  5088   01005C  6AE7               	clrf	indf1,c
  5089                           
  5090                           ; BSR set to: 1
  5091                           ;mainstation.c: 106:             SETxOCC(self->setOccBlkIn, 1);
  5092   01005E  EE20 F006          	lfsr	2,6
  5093   010062  503F               	movf	UPDATExSTATION@self^0,w,c
  5094   010064  26D9               	addwf	fsr2l,f,c
  5095   010066  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5096   010068  22DA               	addwfc	fsr2h,f,c
  5097   01006A  CFDE F005          	movff	postinc2,SETxOCC@self
  5098   01006E  CFDD F006          	movff	postdec2,SETxOCC@self+1
  5099   010072  0E01               	movlw	1
  5100   010074  6E07               	movwf	SETxOCC@value^0,c
  5101   010076  ECC0  F0BA         	call	_SETxOCC	;wreg free
  5102                           
  5103                           ;mainstation.c: 107:             SETxOCC(self->stnTrack1.setOccStn , 1);
  5104   01007A  EE20 F024          	lfsr	2,36
  5105   01007E  503F               	movf	UPDATExSTATION@self^0,w,c
  5106   010080  26D9               	addwf	fsr2l,f,c
  5107   010082  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5108   010084  22DA               	addwfc	fsr2h,f,c
  5109   010086  CFDE F005          	movff	postinc2,SETxOCC@self
  5110   01008A  CFDD F006          	movff	postdec2,SETxOCC@self+1
  5111   01008E  0E01               	movlw	1
  5112   010090  6E07               	movwf	SETxOCC@value^0,c
  5113   010092  ECC0  F0BA         	call	_SETxOCC	;wreg free
  5114                           
  5115                           ;mainstation.c: 108:             SETxOCC(self->stnTrack2.setOccStn , 1);
  5116   010096  EE20 F036          	lfsr	2,54
  5117   01009A  503F               	movf	UPDATExSTATION@self^0,w,c
  5118   01009C  26D9               	addwf	fsr2l,f,c
  5119   01009E  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5120   0100A0  22DA               	addwfc	fsr2h,f,c
  5121   0100A2  CFDE F005          	movff	postinc2,SETxOCC@self
  5122   0100A6  CFDD F006          	movff	postdec2,SETxOCC@self+1
  5123   0100AA  0E01               	movlw	1
  5124   0100AC  6E07               	movwf	SETxOCC@value^0,c
  5125   0100AE  ECC0  F0BA         	call	_SETxOCC	;wreg free
  5126                           
  5127                           ;mainstation.c: 109:             SETxOCC(self->stnTrack3.setOccStn , 1);
  5128   0100B2  EE20 F048          	lfsr	2,72
  5129   0100B6  503F               	movf	UPDATExSTATION@self^0,w,c
  5130   0100B8  26D9               	addwf	fsr2l,f,c
  5131   0100BA  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5132   0100BC  22DA               	addwfc	fsr2h,f,c
  5133   0100BE  CFDE F005          	movff	postinc2,SETxOCC@self
  5134   0100C2  CFDD F006          	movff	postdec2,SETxOCC@self+1
  5135   0100C6  0E01               	movlw	1
  5136   0100C8  6E07               	movwf	SETxOCC@value^0,c
  5137   0100CA  ECC0  F0BA         	call	_SETxOCC	;wreg free
  5138                           
  5139                           ;mainstation.c: 114:             if(self->name == MAIN_STATION_TOP){
  5140   0100CE  C03F  FFD9         	movff	UPDATExSTATION@self,fsr2l
  5141   0100D2  C040  FFDA         	movff	UPDATExSTATION@self+1,fsr2h
  5142   0100D6  0E0A               	movlw	10
  5143   0100D8  18DE               	xorwf	postinc2,w,c
  5144   0100DA  A4D8               	btfss	status,2,c
  5145   0100DC  D01F               	goto	l15579
  5146                           
  5147                           ;mainstation.c: 115:                 SETxSIGNAL(self, 10, SIG_RED);
  5148   0100DE  C03F  F022         	movff	UPDATExSTATION@self,SETxSIGNAL@self
  5149   0100E2  C040  F023         	movff	UPDATExSTATION@self+1,SETxSIGNAL@self+1
  5150   0100E6  0E0A               	movlw	10
  5151   0100E8  6E24               	movwf	SETxSIGNAL@path^0,c
  5152   0100EA  0E81               	movlw	129
  5153   0100EC  6E25               	movwf	SETxSIGNAL@signal^0,c
  5154   0100EE  EC36  F0A1         	call	_SETxSIGNAL	;wreg free
  5155                           
  5156                           ;mainstation.c: 116:                 SETxSIGNAL(self, 11, SIG_RED);
  5157   0100F2  C03F  F022         	movff	UPDATExSTATION@self,SETxSIGNAL@self
  5158   0100F6  C040  F023         	movff	UPDATExSTATION@self+1,SETxSIGNAL@self+1
  5159   0100FA  0E0B               	movlw	11
  5160   0100FC  6E24               	movwf	SETxSIGNAL@path^0,c
  5161   0100FE  0E81               	movlw	129
  5162   010100  6E25               	movwf	SETxSIGNAL@signal^0,c
  5163   010102  EC36  F0A1         	call	_SETxSIGNAL	;wreg free
  5164                           
  5165                           ;mainstation.c: 117:                 SETxSIGNAL(self, 12, SIG_RED);
  5166   010106  C03F  F022         	movff	UPDATExSTATION@self,SETxSIGNAL@self
  5167   01010A  C040  F023         	movff	UPDATExSTATION@self+1,SETxSIGNAL@self+1
  5168   01010E  0E0C               	movlw	12
  5169   010110  6E24               	movwf	SETxSIGNAL@path^0,c
  5170   010112  0E81               	movlw	129
  5171   010114  6E25               	movwf	SETxSIGNAL@signal^0,c
  5172   010116  EC36  F0A1         	call	_SETxSIGNAL	;wreg free
  5173                           
  5174                           ;mainstation.c: 118:             }
  5175   01011A  D026               	goto	l15583
  5176   01011C                     l15579:
  5177   01011C  C03F  FFD9         	movff	UPDATExSTATION@self,fsr2l
  5178   010120  C040  FFDA         	movff	UPDATExSTATION@self+1,fsr2h
  5179   010124  0E14               	movlw	20
  5180   010126  18DE               	xorwf	postinc2,w,c
  5181   010128  A4D8               	btfss	status,2,c
  5182   01012A  D01E               	goto	l15583
  5183                           
  5184                           ;mainstation.c: 120:                 SETxSIGNAL(self, 1, SIG_RED);
  5185   01012C  C03F  F022         	movff	UPDATExSTATION@self,SETxSIGNAL@self
  5186   010130  C040  F023         	movff	UPDATExSTATION@self+1,SETxSIGNAL@self+1
  5187   010134  0E01               	movlw	1
  5188   010136  6E24               	movwf	SETxSIGNAL@path^0,c
  5189   010138  0E81               	movlw	129
  5190   01013A  6E25               	movwf	SETxSIGNAL@signal^0,c
  5191   01013C  EC36  F0A1         	call	_SETxSIGNAL	;wreg free
  5192                           
  5193                           ;mainstation.c: 121:                 SETxSIGNAL(self, 2, SIG_RED);
  5194   010140  C03F  F022         	movff	UPDATExSTATION@self,SETxSIGNAL@self
  5195   010144  C040  F023         	movff	UPDATExSTATION@self+1,SETxSIGNAL@self+1
  5196   010148  0E02               	movlw	2
  5197   01014A  6E24               	movwf	SETxSIGNAL@path^0,c
  5198   01014C  0E81               	movlw	129
  5199   01014E  6E25               	movwf	SETxSIGNAL@signal^0,c
  5200   010150  EC36  F0A1         	call	_SETxSIGNAL	;wreg free
  5201                           
  5202                           ;mainstation.c: 122:                 SETxSIGNAL(self, 3, SIG_RED);
  5203   010154  C03F  F022         	movff	UPDATExSTATION@self,SETxSIGNAL@self
  5204   010158  C040  F023         	movff	UPDATExSTATION@self+1,SETxSIGNAL@self+1
  5205   01015C  0E03               	movlw	3
  5206   01015E  6E24               	movwf	SETxSIGNAL@path^0,c
  5207   010160  0E81               	movlw	129
  5208   010162  6E25               	movwf	SETxSIGNAL@signal^0,c
  5209   010164  EC36  F0A1         	call	_SETxSIGNAL	;wreg free
  5210   010168                     l15583:
  5211                           
  5212                           ;mainstation.c: 126:             if(self->stnTrack1.getOccStn->value){
  5213   010168  EE20 F026          	lfsr	2,38
  5214   01016C  503F               	movf	UPDATExSTATION@self^0,w,c
  5215   01016E  26D9               	addwf	fsr2l,f,c
  5216   010170  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5217   010172  22DA               	addwfc	fsr2h,f,c
  5218   010174  EE10 F00B          	lfsr	1,11
  5219   010178  50DE               	movf	postinc2,w,c
  5220   01017A  26E1               	addwf	fsr1l,f,c
  5221   01017C  50DD               	movf	postdec2,w,c
  5222   01017E  22E2               	addwfc	fsr1h,f,c
  5223   010180  50E7               	movf	indf1,w,c
  5224   010182  B4D8               	btfsc	status,2,c
  5225   010184  D03C               	goto	l15589
  5226                           
  5227                           ;mainstation.c: 130:                 self->stnTrack1.stnOccupied = 1;
  5228   010186  EE20 F01A          	lfsr	2,26
  5229   01018A  503F               	movf	UPDATExSTATION@self^0,w,c
  5230   01018C  26D9               	addwf	fsr2l,f,c
  5231   01018E  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5232   010190  22DA               	addwfc	fsr2h,f,c
  5233   010192  0E01               	movlw	1
  5234   010194  6EDF               	movwf	indf2,c
  5235                           
  5236                           ;mainstation.c: 131:                 self->stnTrack1.stnState = STN_WAIT;
  5237   010196  EE20 F017          	lfsr	2,23
  5238   01019A  503F               	movf	UPDATExSTATION@self^0,w,c
  5239   01019C  26D9               	addwf	fsr2l,f,c
  5240   01019E  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5241   0101A0  22DA               	addwfc	fsr2h,f,c
  5242   0101A2  0E77               	movlw	119
  5243   0101A4  6EDF               	movwf	indf2,c
  5244   0101A6  EC10  F0C1         	call	_GETxRANDOMxNUMBER	;wreg free
  5245   0101AA  90D8               	bcf	status,0,c
  5246   0101AC  3617               	rlcf	?_GETxRANDOMxNUMBER^0,f,c
  5247   0101AE  3618               	rlcf	(?_GETxRANDOMxNUMBER+1)^0,f,c
  5248   0101B0  90D8               	bcf	status,0,c
  5249   0101B2  3617               	rlcf	?_GETxRANDOMxNUMBER^0,f,c
  5250   0101B4  3618               	rlcf	(?_GETxRANDOMxNUMBER+1)^0,f,c
  5251   0101B6  90D8               	bcf	status,0,c
  5252   0101B8  3617               	rlcf	?_GETxRANDOMxNUMBER^0,f,c
  5253   0101BA  3618               	rlcf	(?_GETxRANDOMxNUMBER+1)^0,f,c
  5254   0101BC  5017               	movf	?_GETxRANDOMxNUMBER^0,w,c
  5255   0101BE  6E41               	movwf	??_UPDATExSTATION^0,c
  5256   0101C0  5018               	movf	(?_GETxRANDOMxNUMBER+1)^0,w,c
  5257   0101C2  6E42               	movwf	(??_UPDATExSTATION+1)^0,c
  5258   0101C4  6A43               	clrf	(??_UPDATExSTATION+2)^0,c
  5259   0101C6  6A44               	clrf	(??_UPDATExSTATION+3)^0,c
  5260   0101C8  0EA0               	movlw	160
  5261   0101CA  2441               	addwf	??_UPDATExSTATION^0,w,c
  5262   0101CC  6E45               	movwf	(??_UPDATExSTATION+4)^0,c
  5263   0101CE  0E86               	movlw	134
  5264   0101D0  2042               	addwfc	(??_UPDATExSTATION+1)^0,w,c
  5265   0101D2  6E46               	movwf	(??_UPDATExSTATION+5)^0,c
  5266   0101D4  0E01               	movlw	1
  5267   0101D6  2043               	addwfc	(??_UPDATExSTATION+2)^0,w,c
  5268   0101D8  6E47               	movwf	(??_UPDATExSTATION+6)^0,c
  5269   0101DA  0E00               	movlw	0
  5270   0101DC  2044               	addwfc	(??_UPDATExSTATION+3)^0,w,c
  5271   0101DE  6E48               	movwf	(??_UPDATExSTATION+7)^0,c
  5272   0101E0  EE20 F020          	lfsr	2,32
  5273   0101E4  503F               	movf	UPDATExSTATION@self^0,w,c
  5274   0101E6  26D9               	addwf	fsr2l,f,c
  5275   0101E8  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5276   0101EA  22DA               	addwfc	fsr2h,f,c
  5277   0101EC  C045  FFDE         	movff	??_UPDATExSTATION+4,postinc2
  5278   0101F0  C046  FFDE         	movff	??_UPDATExSTATION+5,postinc2
  5279   0101F4  C047  FFDE         	movff	??_UPDATExSTATION+6,postinc2
  5280   0101F8  C048  FFDE         	movff	??_UPDATExSTATION+7,postinc2
  5281                           
  5282                           ;mainstation.c: 134:             }
  5283   0101FC  D00F               	goto	l15591
  5284   0101FE                     l15589:
  5285                           
  5286                           ;mainstation.c: 136:                 self->stnTrack1.stnOccupied = 0;
  5287   0101FE  EE20 F01A          	lfsr	2,26
  5288   010202  503F               	movf	UPDATExSTATION@self^0,w,c
  5289   010204  26D9               	addwf	fsr2l,f,c
  5290   010206  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5291   010208  22DA               	addwfc	fsr2h,f,c
  5292   01020A  6ADF               	clrf	indf2,c
  5293                           
  5294                           ;mainstation.c: 137:                 self->stnTrack1.stnState = STN_IDLE;
  5295   01020C  EE20 F017          	lfsr	2,23
  5296   010210  503F               	movf	UPDATExSTATION@self^0,w,c
  5297   010212  26D9               	addwf	fsr2l,f,c
  5298   010214  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5299   010216  22DA               	addwfc	fsr2h,f,c
  5300   010218  0E78               	movlw	120
  5301   01021A  6EDF               	movwf	indf2,c
  5302   01021C                     l15591:
  5303                           
  5304                           ;mainstation.c: 139:             CREATExTASKxSTATUSxMESSAGE(self->name,
  5305   01021C  EE20 F016          	lfsr	2,22
  5306   010220  503F               	movf	UPDATExSTATION@self^0,w,c
  5307   010222  26D9               	addwf	fsr2l,f,c
  5308   010224  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5309   010226  22DA               	addwfc	fsr2h,f,c
  5310   010228  50DF               	movf	indf2,w,c
  5311   01022A  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
  5312   01022C  EE20 F017          	lfsr	2,23
  5313   010230  503F               	movf	UPDATExSTATION@self^0,w,c
  5314   010232  26D9               	addwf	fsr2l,f,c
  5315   010234  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5316   010236  22DA               	addwfc	fsr2h,f,c
  5317   010238  50DF               	movf	indf2,w,c
  5318   01023A  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
  5319   01023C  0E96               	movlw	150
  5320   01023E  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
  5321   010240  C03F  FFD9         	movff	UPDATExSTATION@self,fsr2l
  5322   010244  C040  FFDA         	movff	UPDATExSTATION@self+1,fsr2h
  5323   010248  50DF               	movf	indf2,w,c
  5324   01024A  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
  5325                           
  5326                           ; BSR set to: 1
  5327                           ;mainstation.c: 145:             if(self->stnTrack2.getOccStn->value){
  5328   01024E  EE20 F038          	lfsr	2,56
  5329   010252  503F               	movf	UPDATExSTATION@self^0,w,c
  5330   010254  26D9               	addwf	fsr2l,f,c
  5331   010256  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5332   010258  22DA               	addwfc	fsr2h,f,c
  5333   01025A  EE10 F00B          	lfsr	1,11
  5334   01025E  50DE               	movf	postinc2,w,c
  5335   010260  26E1               	addwf	fsr1l,f,c
  5336   010262  50DD               	movf	postdec2,w,c
  5337   010264  22E2               	addwfc	fsr1h,f,c
  5338   010266  50E7               	movf	indf1,w,c
  5339   010268  B4D8               	btfsc	status,2,c
  5340   01026A  D03C               	goto	l15599
  5341                           
  5342                           ; BSR set to: 1
  5343                           ;mainstation.c: 149:                 self->stnTrack2.stnOccupied = 1;
  5344   01026C  EE20 F02C          	lfsr	2,44
  5345   010270  503F               	movf	UPDATExSTATION@self^0,w,c
  5346   010272  26D9               	addwf	fsr2l,f,c
  5347   010274  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5348   010276  22DA               	addwfc	fsr2h,f,c
  5349   010278  0E01               	movlw	1
  5350   01027A  6EDF               	movwf	indf2,c
  5351                           
  5352                           ;mainstation.c: 150:                 self->stnTrack2.stnState = STN_WAIT;
  5353   01027C  EE20 F029          	lfsr	2,41
  5354   010280  503F               	movf	UPDATExSTATION@self^0,w,c
  5355   010282  26D9               	addwf	fsr2l,f,c
  5356   010284  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5357   010286  22DA               	addwfc	fsr2h,f,c
  5358   010288  0E77               	movlw	119
  5359   01028A  6EDF               	movwf	indf2,c
  5360                           
  5361                           ; BSR set to: 1
  5362   01028C  EC10  F0C1         	call	_GETxRANDOMxNUMBER	;wreg free
  5363   010290  90D8               	bcf	status,0,c
  5364   010292  3617               	rlcf	?_GETxRANDOMxNUMBER^0,f,c
  5365   010294  3618               	rlcf	(?_GETxRANDOMxNUMBER+1)^0,f,c
  5366   010296  90D8               	bcf	status,0,c
  5367   010298  3617               	rlcf	?_GETxRANDOMxNUMBER^0,f,c
  5368   01029A  3618               	rlcf	(?_GETxRANDOMxNUMBER+1)^0,f,c
  5369   01029C  90D8               	bcf	status,0,c
  5370   01029E  3617               	rlcf	?_GETxRANDOMxNUMBER^0,f,c
  5371   0102A0  3618               	rlcf	(?_GETxRANDOMxNUMBER+1)^0,f,c
  5372   0102A2  5017               	movf	?_GETxRANDOMxNUMBER^0,w,c
  5373   0102A4  6E41               	movwf	??_UPDATExSTATION^0,c
  5374   0102A6  5018               	movf	(?_GETxRANDOMxNUMBER+1)^0,w,c
  5375   0102A8  6E42               	movwf	(??_UPDATExSTATION+1)^0,c
  5376   0102AA  6A43               	clrf	(??_UPDATExSTATION+2)^0,c
  5377   0102AC  6A44               	clrf	(??_UPDATExSTATION+3)^0,c
  5378   0102AE  0EA0               	movlw	160
  5379   0102B0  2441               	addwf	??_UPDATExSTATION^0,w,c
  5380   0102B2  6E45               	movwf	(??_UPDATExSTATION+4)^0,c
  5381   0102B4  0E86               	movlw	134
  5382   0102B6  2042               	addwfc	(??_UPDATExSTATION+1)^0,w,c
  5383   0102B8  6E46               	movwf	(??_UPDATExSTATION+5)^0,c
  5384   0102BA  0E01               	movlw	1
  5385   0102BC  2043               	addwfc	(??_UPDATExSTATION+2)^0,w,c
  5386   0102BE  6E47               	movwf	(??_UPDATExSTATION+6)^0,c
  5387   0102C0  0E00               	movlw	0
  5388   0102C2  2044               	addwfc	(??_UPDATExSTATION+3)^0,w,c
  5389   0102C4  6E48               	movwf	(??_UPDATExSTATION+7)^0,c
  5390   0102C6  EE20 F032          	lfsr	2,50
  5391   0102CA  503F               	movf	UPDATExSTATION@self^0,w,c
  5392   0102CC  26D9               	addwf	fsr2l,f,c
  5393   0102CE  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5394   0102D0  22DA               	addwfc	fsr2h,f,c
  5395   0102D2  C045  FFDE         	movff	??_UPDATExSTATION+4,postinc2
  5396   0102D6  C046  FFDE         	movff	??_UPDATExSTATION+5,postinc2
  5397   0102DA  C047  FFDE         	movff	??_UPDATExSTATION+6,postinc2
  5398   0102DE  C048  FFDE         	movff	??_UPDATExSTATION+7,postinc2
  5399                           
  5400                           ;mainstation.c: 152:             }
  5401   0102E2  D00F               	goto	l15601
  5402   0102E4                     l15599:
  5403                           
  5404                           ; BSR set to: 1
  5405                           ;mainstation.c: 154:                 self->stnTrack2.stnOccupied = 0;
  5406   0102E4  EE20 F02C          	lfsr	2,44
  5407   0102E8  503F               	movf	UPDATExSTATION@self^0,w,c
  5408   0102EA  26D9               	addwf	fsr2l,f,c
  5409   0102EC  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5410   0102EE  22DA               	addwfc	fsr2h,f,c
  5411   0102F0  6ADF               	clrf	indf2,c
  5412                           
  5413                           ;mainstation.c: 155:                 self->stnTrack2.stnState = STN_IDLE;
  5414   0102F2  EE20 F029          	lfsr	2,41
  5415   0102F6  503F               	movf	UPDATExSTATION@self^0,w,c
  5416   0102F8  26D9               	addwf	fsr2l,f,c
  5417   0102FA  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5418   0102FC  22DA               	addwfc	fsr2h,f,c
  5419   0102FE  0E78               	movlw	120
  5420   010300  6EDF               	movwf	indf2,c
  5421   010302                     l15601:
  5422                           
  5423                           ; BSR set to: 1
  5424                           ;mainstation.c: 157:             CREATExTASKxSTATUSxMESSAGE(self->name,
  5425   010302  EE20 F028          	lfsr	2,40
  5426   010306  503F               	movf	UPDATExSTATION@self^0,w,c
  5427   010308  26D9               	addwf	fsr2l,f,c
  5428   01030A  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5429   01030C  22DA               	addwfc	fsr2h,f,c
  5430   01030E  50DF               	movf	indf2,w,c
  5431   010310  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
  5432   010312  EE20 F029          	lfsr	2,41
  5433   010316  503F               	movf	UPDATExSTATION@self^0,w,c
  5434   010318  26D9               	addwf	fsr2l,f,c
  5435   01031A  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5436   01031C  22DA               	addwfc	fsr2h,f,c
  5437   01031E  50DF               	movf	indf2,w,c
  5438   010320  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
  5439   010322  0E96               	movlw	150
  5440   010324  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
  5441   010326  C03F  FFD9         	movff	UPDATExSTATION@self,fsr2l
  5442   01032A  C040  FFDA         	movff	UPDATExSTATION@self+1,fsr2h
  5443   01032E  50DF               	movf	indf2,w,c
  5444   010330  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
  5445                           
  5446                           ; BSR set to: 1
  5447                           ;mainstation.c: 163:             if(self->stnTrack3.getOccStn->value){
  5448   010334  EE20 F04A          	lfsr	2,74
  5449   010338  503F               	movf	UPDATExSTATION@self^0,w,c
  5450   01033A  26D9               	addwf	fsr2l,f,c
  5451   01033C  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5452   01033E  22DA               	addwfc	fsr2h,f,c
  5453   010340  EE10 F00B          	lfsr	1,11
  5454   010344  50DE               	movf	postinc2,w,c
  5455   010346  26E1               	addwf	fsr1l,f,c
  5456   010348  50DD               	movf	postdec2,w,c
  5457   01034A  22E2               	addwfc	fsr1h,f,c
  5458   01034C  50E7               	movf	indf1,w,c
  5459   01034E  B4D8               	btfsc	status,2,c
  5460   010350  D010               	goto	l15607
  5461                           
  5462                           ; BSR set to: 1
  5463                           ;mainstation.c: 166:                 self->stnTrack3.stnOccupied = 1;
  5464   010352  EE20 F03E          	lfsr	2,62
  5465   010356  503F               	movf	UPDATExSTATION@self^0,w,c
  5466   010358  26D9               	addwf	fsr2l,f,c
  5467   01035A  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5468   01035C  22DA               	addwfc	fsr2h,f,c
  5469   01035E  0E01               	movlw	1
  5470   010360  6EDF               	movwf	indf2,c
  5471                           
  5472                           ;mainstation.c: 167:                 self->stnTrack3.stnState = STN_OUTBOUND;
  5473   010362  EE20 F03B          	lfsr	2,59
  5474   010366  503F               	movf	UPDATExSTATION@self^0,w,c
  5475   010368  26D9               	addwf	fsr2l,f,c
  5476   01036A  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5477   01036C  22DA               	addwfc	fsr2h,f,c
  5478   01036E  0E75               	movlw	117
  5479   010370  D03C               	goto	L4
  5480   010372                     l15607:
  5481                           
  5482                           ; BSR set to: 1
  5483   010372  EE20 F008          	lfsr	2,8
  5484   010376  503F               	movf	UPDATExSTATION@self^0,w,c
  5485   010378  26D9               	addwf	fsr2l,f,c
  5486   01037A  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5487   01037C  22DA               	addwfc	fsr2h,f,c
  5488   01037E  EE10 F00B          	lfsr	1,11
  5489   010382  50DE               	movf	postinc2,w,c
  5490   010384  26E1               	addwf	fsr1l,f,c
  5491   010386  50DD               	movf	postdec2,w,c
  5492   010388  22E2               	addwfc	fsr1h,f,c
  5493   01038A  50E7               	movf	indf1,w,c
  5494   01038C  B4D8               	btfsc	status,2,c
  5495   01038E  D01F               	goto	l15615
  5496                           
  5497                           ; BSR set to: 1
  5498                           ;mainstation.c: 178:                 if(self->getOccBlkOut->value){
  5499   010390  EE20 F00A          	lfsr	2,10
  5500   010394  503F               	movf	UPDATExSTATION@self^0,w,c
  5501   010396  26D9               	addwf	fsr2l,f,c
  5502   010398  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5503   01039A  22DA               	addwfc	fsr2h,f,c
  5504   01039C  EE10 F00B          	lfsr	1,11
  5505   0103A0  50DE               	movf	postinc2,w,c
  5506   0103A2  26E1               	addwf	fsr1l,f,c
  5507   0103A4  50DD               	movf	postdec2,w,c
  5508   0103A6  22E2               	addwfc	fsr1h,f,c
  5509   0103A8  50E7               	movf	indf1,w,c
  5510   0103AA  B4D8               	btfsc	status,2,c
  5511   0103AC  D008               	goto	l15613
  5512                           
  5513                           ; BSR set to: 1
  5514                           ;mainstation.c: 183:                     self->stnTrack3.stnState = STN_INBOUND;
  5515   0103AE  EE20 F03B          	lfsr	2,59
  5516   0103B2  503F               	movf	UPDATExSTATION@self^0,w,c
  5517   0103B4  26D9               	addwf	fsr2l,f,c
  5518   0103B6  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5519   0103B8  22DA               	addwfc	fsr2h,f,c
  5520   0103BA  0E74               	movlw	116
  5521   0103BC  D016               	goto	L4
  5522   0103BE                     l15613:
  5523                           
  5524                           ; BSR set to: 1
  5525                           ;mainstation.c: 190:                     self->stnTrack3.stnState = STN_PASSING;
  5526   0103BE  EE20 F03B          	lfsr	2,59
  5527   0103C2  503F               	movf	UPDATExSTATION@self^0,w,c
  5528   0103C4  26D9               	addwf	fsr2l,f,c
  5529   0103C6  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5530   0103C8  22DA               	addwfc	fsr2h,f,c
  5531   0103CA  0E76               	movlw	118
  5532   0103CC  D00E               	goto	L4
  5533   0103CE                     l15615:
  5534                           
  5535                           ; BSR set to: 1
  5536                           ;mainstation.c: 194:                 self->stnTrack3.stnOccupied = 0;
  5537   0103CE  EE20 F03E          	lfsr	2,62
  5538   0103D2  503F               	movf	UPDATExSTATION@self^0,w,c
  5539   0103D4  26D9               	addwf	fsr2l,f,c
  5540   0103D6  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5541   0103D8  22DA               	addwfc	fsr2h,f,c
  5542   0103DA  6ADF               	clrf	indf2,c
  5543                           
  5544                           ;mainstation.c: 195:                 self->stnTrack3.stnState = STN_IDLE;
  5545   0103DC  EE20 F03B          	lfsr	2,59
  5546   0103E0  503F               	movf	UPDATExSTATION@self^0,w,c
  5547   0103E2  26D9               	addwf	fsr2l,f,c
  5548   0103E4  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5549   0103E6  22DA               	addwfc	fsr2h,f,c
  5550   0103E8  0E78               	movlw	120
  5551   0103EA                     L4:
  5552   0103EA  6EDF               	movwf	indf2,c
  5553                           
  5554                           ; BSR set to: 1
  5555                           ;mainstation.c: 197:             CREATExTASKxSTATUSxMESSAGE(self->name,
  5556   0103EC  EE20 F03A          	lfsr	2,58
  5557   0103F0  503F               	movf	UPDATExSTATION@self^0,w,c
  5558   0103F2  26D9               	addwf	fsr2l,f,c
  5559   0103F4  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5560   0103F6  22DA               	addwfc	fsr2h,f,c
  5561   0103F8  50DF               	movf	indf2,w,c
  5562   0103FA  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
  5563   0103FC  EE20 F03B          	lfsr	2,59
  5564   010400  503F               	movf	UPDATExSTATION@self^0,w,c
  5565   010402  26D9               	addwf	fsr2l,f,c
  5566   010404  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5567   010406  22DA               	addwfc	fsr2h,f,c
  5568   010408  50DF               	movf	indf2,w,c
  5569   01040A  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
  5570   01040C  0E96               	movlw	150
  5571   01040E  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
  5572   010410  C03F  FFD9         	movff	UPDATExSTATION@self,fsr2l
  5573   010414  C040  FFDA         	movff	UPDATExSTATION@self+1,fsr2h
  5574   010418  50DF               	movf	indf2,w,c
  5575   01041A  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
  5576                           
  5577                           ; BSR set to: 1
  5578                           ;mainstation.c: 203:             self->AppState = RUN;
  5579   01041E  EE20 F001          	lfsr	2,1
  5580   010422  503F               	movf	UPDATExSTATION@self^0,w,c
  5581   010424  26D9               	addwf	fsr2l,f,c
  5582   010426  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5583   010428  22DA               	addwfc	fsr2h,f,c
  5584   01042A  0E6B               	movlw	107
  5585   01042C  6EDF               	movwf	indf2,c
  5586                           
  5587                           ;mainstation.c: 204:             CREATExTASKxSTATUSxMESSAGE(self->name,
  5588   01042E  0E00               	movlw	0
  5589   010430  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
  5590   010432  EE20 F001          	lfsr	2,1
  5591   010436  503F               	movf	UPDATExSTATION@self^0,w,c
  5592   010438  26D9               	addwf	fsr2l,f,c
  5593   01043A  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5594   01043C  22DA               	addwfc	fsr2h,f,c
  5595   01043E  50DF               	movf	indf2,w,c
  5596   010440  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
  5597   010442  0E96               	movlw	150
  5598   010444  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
  5599   010446  C03F  FFD9         	movff	UPDATExSTATION@self,fsr2l
  5600   01044A  C040  FFDA         	movff	UPDATExSTATION@self+1,fsr2h
  5601   01044E  50DF               	movf	indf2,w,c
  5602   010450  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
  5603                           
  5604                           ;mainstation.c: 208:             break;
  5605   010454  0012               	return	
  5606   010456                     l15621:
  5607                           
  5608                           ;mainstation.c: 220:             if(1 == self->getOccBlkIn->value &&
  5609   010456  EE20 F008          	lfsr	2,8
  5610   01045A  503F               	movf	UPDATExSTATION@self^0,w,c
  5611   01045C  26D9               	addwf	fsr2l,f,c
  5612   01045E  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5613   010460  22DA               	addwfc	fsr2h,f,c
  5614   010462  EE10 F00B          	lfsr	1,11
  5615   010466  50DE               	movf	postinc2,w,c
  5616   010468  26E1               	addwf	fsr1l,f,c
  5617   01046A  50DD               	movf	postdec2,w,c
  5618   01046C  22E2               	addwfc	fsr1h,f,c
  5619   01046E  04E6               	decf	postinc1,w,c
  5620   010470  A4D8               	btfss	status,2,c
  5621   010472  D21E               	goto	l15717
  5622   010474  EE20 F017          	lfsr	2,23
  5623   010478  503F               	movf	UPDATExSTATION@self^0,w,c
  5624   01047A  26D9               	addwf	fsr2l,f,c
  5625   01047C  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5626   01047E  22DA               	addwfc	fsr2h,f,c
  5627   010480  0E74               	movlw	116
  5628   010482  18DE               	xorwf	postinc2,w,c
  5629   010484  B4D8               	btfsc	status,2,c
  5630   010486  D214               	goto	l15717
  5631   010488  EE20 F029          	lfsr	2,41
  5632   01048C  503F               	movf	UPDATExSTATION@self^0,w,c
  5633   01048E  26D9               	addwf	fsr2l,f,c
  5634   010490  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5635   010492  22DA               	addwfc	fsr2h,f,c
  5636   010494  0E74               	movlw	116
  5637   010496  18DE               	xorwf	postinc2,w,c
  5638   010498  B4D8               	btfsc	status,2,c
  5639   01049A  D20A               	goto	l15717
  5640   01049C  EE20 F03B          	lfsr	2,59
  5641   0104A0  503F               	movf	UPDATExSTATION@self^0,w,c
  5642   0104A2  26D9               	addwf	fsr2l,f,c
  5643   0104A4  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5644   0104A6  22DA               	addwfc	fsr2h,f,c
  5645   0104A8  0E74               	movlw	116
  5646   0104AA  18DE               	xorwf	postinc2,w,c
  5647   0104AC  B4D8               	btfsc	status,2,c
  5648   0104AE  D200               	goto	l15717
  5649   0104B0  EE20 F017          	lfsr	2,23
  5650   0104B4  503F               	movf	UPDATExSTATION@self^0,w,c
  5651   0104B6  26D9               	addwf	fsr2l,f,c
  5652   0104B8  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5653   0104BA  22DA               	addwfc	fsr2h,f,c
  5654   0104BC  0E76               	movlw	118
  5655   0104BE  18DE               	xorwf	postinc2,w,c
  5656   0104C0  B4D8               	btfsc	status,2,c
  5657   0104C2  D1F6               	goto	l15717
  5658   0104C4  EE20 F029          	lfsr	2,41
  5659   0104C8  503F               	movf	UPDATExSTATION@self^0,w,c
  5660   0104CA  26D9               	addwf	fsr2l,f,c
  5661   0104CC  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5662   0104CE  22DA               	addwfc	fsr2h,f,c
  5663   0104D0  0E76               	movlw	118
  5664   0104D2  18DE               	xorwf	postinc2,w,c
  5665   0104D4  B4D8               	btfsc	status,2,c
  5666   0104D6  D1EC               	goto	l15717
  5667   0104D8  EE20 F03B          	lfsr	2,59
  5668   0104DC  503F               	movf	UPDATExSTATION@self^0,w,c
  5669   0104DE  26D9               	addwf	fsr2l,f,c
  5670   0104E0  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5671   0104E2  22DA               	addwfc	fsr2h,f,c
  5672   0104E4  0E76               	movlw	118
  5673   0104E6  18DE               	xorwf	postinc2,w,c
  5674   0104E8  B4D8               	btfsc	status,2,c
  5675   0104EA  D1E2               	goto	l15717
  5676                           
  5677                           ;mainstation.c: 226:                     STN_PASSING != self->stnTrack3.stnState){;mains
      +                          tation.c: 228:                 if(0 == self->getFreightEnterStation->value){
  5678   0104EC  EE20 F004          	lfsr	2,4
  5679   0104F0  503F               	movf	UPDATExSTATION@self^0,w,c
  5680   0104F2  26D9               	addwf	fsr2l,f,c
  5681   0104F4  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5682   0104F6  22DA               	addwfc	fsr2h,f,c
  5683   0104F8  EE10 F00B          	lfsr	1,11
  5684   0104FC  50DE               	movf	postinc2,w,c
  5685   0104FE  26E1               	addwf	fsr1l,f,c
  5686   010500  50DD               	movf	postdec2,w,c
  5687   010502  22E2               	addwfc	fsr1h,f,c
  5688   010504  50E7               	movf	indf1,w,c
  5689   010506  A4D8               	btfss	status,2,c
  5690   010508  D0A6               	goto	l15665
  5691                           
  5692                           ;mainstation.c: 230:                     if(0 == self->stnTrack1.stnOccupied &&
  5693   01050A  EE20 F01A          	lfsr	2,26
  5694   01050E  503F               	movf	UPDATExSTATION@self^0,w,c
  5695   010510  26D9               	addwf	fsr2l,f,c
  5696   010512  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5697   010514  22DA               	addwfc	fsr2h,f,c
  5698   010516  50DF               	movf	indf2,w,c
  5699   010518  A4D8               	btfss	status,2,c
  5700   01051A  D04A               	goto	l15651
  5701   01051C  EE20 F029          	lfsr	2,41
  5702   010520  503F               	movf	UPDATExSTATION@self^0,w,c
  5703   010522  26D9               	addwf	fsr2l,f,c
  5704   010524  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5705   010526  22DA               	addwfc	fsr2h,f,c
  5706   010528  0E74               	movlw	116
  5707   01052A  18DE               	xorwf	postinc2,w,c
  5708   01052C  B4D8               	btfsc	status,2,c
  5709   01052E  D040               	goto	l15651
  5710   010530  EE20 F03B          	lfsr	2,59
  5711   010534  503F               	movf	UPDATExSTATION@self^0,w,c
  5712   010536  26D9               	addwf	fsr2l,f,c
  5713   010538  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5714   01053A  22DA               	addwfc	fsr2h,f,c
  5715   01053C  0E74               	movlw	116
  5716   01053E  18DE               	xorwf	postinc2,w,c
  5717   010540  B4D8               	btfsc	status,2,c
  5718   010542  D036               	goto	l15651
  5719   010544  EE20 F029          	lfsr	2,41
  5720   010548  503F               	movf	UPDATExSTATION@self^0,w,c
  5721   01054A  26D9               	addwf	fsr2l,f,c
  5722   01054C  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5723   01054E  22DA               	addwfc	fsr2h,f,c
  5724   010550  0E76               	movlw	118
  5725   010552  18DE               	xorwf	postinc2,w,c
  5726   010554  B4D8               	btfsc	status,2,c
  5727   010556  D02C               	goto	l15651
  5728   010558  EE20 F03B          	lfsr	2,59
  5729   01055C  503F               	movf	UPDATExSTATION@self^0,w,c
  5730   01055E  26D9               	addwf	fsr2l,f,c
  5731   010560  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5732   010562  22DA               	addwfc	fsr2h,f,c
  5733   010564  0E76               	movlw	118
  5734   010566  18DE               	xorwf	postinc2,w,c
  5735   010568  B4D8               	btfsc	status,2,c
  5736   01056A  D022               	goto	l15651
  5737                           
  5738                           ;mainstation.c: 235:                             ){;mainstation.c: 236:                 
      +                                  self->stnTrack1.stnState = STN_INBOUND;
  5739   01056C  EE20 F017          	lfsr	2,23
  5740   010570  503F               	movf	UPDATExSTATION@self^0,w,c
  5741   010572  26D9               	addwf	fsr2l,f,c
  5742   010574  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5743   010576  22DA               	addwfc	fsr2h,f,c
  5744   010578  0E74               	movlw	116
  5745   01057A  6EDF               	movwf	indf2,c
  5746                           
  5747                           ;mainstation.c: 237:                         CREATExTASKxSTATUSxMESSAGE(self->name,
  5748   01057C  EE20 F016          	lfsr	2,22
  5749   010580  503F               	movf	UPDATExSTATION@self^0,w,c
  5750   010582  26D9               	addwf	fsr2l,f,c
  5751   010584  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5752   010586  22DA               	addwfc	fsr2h,f,c
  5753   010588  50DF               	movf	indf2,w,c
  5754   01058A  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
  5755   01058C  EE20 F017          	lfsr	2,23
  5756   010590  503F               	movf	UPDATExSTATION@self^0,w,c
  5757   010592  26D9               	addwf	fsr2l,f,c
  5758   010594  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5759   010596  22DA               	addwfc	fsr2h,f,c
  5760   010598  50DF               	movf	indf2,w,c
  5761   01059A  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
  5762   01059C  0E96               	movlw	150
  5763   01059E  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
  5764   0105A0  C03F  FFD9         	movff	UPDATExSTATION@self,fsr2l
  5765   0105A4  C040  FFDA         	movff	UPDATExSTATION@self+1,fsr2h
  5766   0105A8  50DF               	movf	indf2,w,c
  5767   0105AA  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
  5768                           
  5769                           ;mainstation.c: 241:                     }
  5770   0105AE  D180               	goto	l15717
  5771   0105B0                     l15651:
  5772   0105B0  EE20 F02C          	lfsr	2,44
  5773   0105B4  503F               	movf	UPDATExSTATION@self^0,w,c
  5774   0105B6  26D9               	addwf	fsr2l,f,c
  5775   0105B8  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5776   0105BA  22DA               	addwfc	fsr2h,f,c
  5777   0105BC  50DF               	movf	indf2,w,c
  5778   0105BE  A4D8               	btfss	status,2,c
  5779   0105C0  D177               	goto	l15717
  5780   0105C2  EE20 F017          	lfsr	2,23
  5781   0105C6  503F               	movf	UPDATExSTATION@self^0,w,c
  5782   0105C8  26D9               	addwf	fsr2l,f,c
  5783   0105CA  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5784   0105CC  22DA               	addwfc	fsr2h,f,c
  5785   0105CE  0E74               	movlw	116
  5786   0105D0  18DE               	xorwf	postinc2,w,c
  5787   0105D2  B4D8               	btfsc	status,2,c
  5788   0105D4  D16D               	goto	l15717
  5789   0105D6  EE20 F03B          	lfsr	2,59
  5790   0105DA  503F               	movf	UPDATExSTATION@self^0,w,c
  5791   0105DC  26D9               	addwf	fsr2l,f,c
  5792   0105DE  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5793   0105E0  22DA               	addwfc	fsr2h,f,c
  5794   0105E2  0E74               	movlw	116
  5795   0105E4  18DE               	xorwf	postinc2,w,c
  5796   0105E6  B4D8               	btfsc	status,2,c
  5797   0105E8  D163               	goto	l15717
  5798   0105EA  EE20 F017          	lfsr	2,23
  5799   0105EE  503F               	movf	UPDATExSTATION@self^0,w,c
  5800   0105F0  26D9               	addwf	fsr2l,f,c
  5801   0105F2  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5802   0105F4  22DA               	addwfc	fsr2h,f,c
  5803   0105F6  0E76               	movlw	118
  5804   0105F8  18DE               	xorwf	postinc2,w,c
  5805   0105FA  B4D8               	btfsc	status,2,c
  5806   0105FC  D159               	goto	l15717
  5807   0105FE  EE20 F03B          	lfsr	2,59
  5808   010602  503F               	movf	UPDATExSTATION@self^0,w,c
  5809   010604  26D9               	addwf	fsr2l,f,c
  5810   010606  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5811   010608  22DA               	addwfc	fsr2h,f,c
  5812   01060A  0E76               	movlw	118
  5813   01060C  18DE               	xorwf	postinc2,w,c
  5814   01060E  B4D8               	btfsc	status,2,c
  5815   010610  D14F               	goto	l15717
  5816                           
  5817                           ;mainstation.c: 248:                             ){;mainstation.c: 249:                 
      +                                  self->stnTrack2.stnState = STN_INBOUND;
  5818   010612  EE20 F029          	lfsr	2,41
  5819   010616  503F               	movf	UPDATExSTATION@self^0,w,c
  5820   010618  26D9               	addwf	fsr2l,f,c
  5821   01061A  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5822   01061C  22DA               	addwfc	fsr2h,f,c
  5823   01061E  0E74               	movlw	116
  5824   010620  6EDF               	movwf	indf2,c
  5825                           
  5826                           ;mainstation.c: 250:                         CREATExTASKxSTATUSxMESSAGE(self->name,
  5827   010622  EE20 F028          	lfsr	2,40
  5828   010626  503F               	movf	UPDATExSTATION@self^0,w,c
  5829   010628  26D9               	addwf	fsr2l,f,c
  5830   01062A  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5831   01062C  22DA               	addwfc	fsr2h,f,c
  5832   01062E  50DF               	movf	indf2,w,c
  5833   010630  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
  5834   010632  EE20 F029          	lfsr	2,41
  5835   010636  503F               	movf	UPDATExSTATION@self^0,w,c
  5836   010638  26D9               	addwf	fsr2l,f,c
  5837   01063A  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5838   01063C  22DA               	addwfc	fsr2h,f,c
  5839   01063E  50DF               	movf	indf2,w,c
  5840   010640  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
  5841   010642  0E96               	movlw	150
  5842   010644  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
  5843   010646  C03F  FFD9         	movff	UPDATExSTATION@self,fsr2l
  5844   01064A  C040  FFDA         	movff	UPDATExSTATION@self+1,fsr2h
  5845   01064E  50DF               	movf	indf2,w,c
  5846   010650  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
  5847                           
  5848                           ;mainstation.c: 263:                 }
  5849   010654  D12D               	goto	l15717
  5850   010656                     l15665:
  5851   010656  EE20 F00A          	lfsr	2,10
  5852   01065A  503F               	movf	UPDATExSTATION@self^0,w,c
  5853   01065C  26D9               	addwf	fsr2l,f,c
  5854   01065E  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5855   010660  22DA               	addwfc	fsr2h,f,c
  5856   010662  EE10 F00B          	lfsr	1,11
  5857   010666  50DE               	movf	postinc2,w,c
  5858   010668  26E1               	addwf	fsr1l,f,c
  5859   01066A  50DD               	movf	postdec2,w,c
  5860   01066C  22E2               	addwfc	fsr1h,f,c
  5861   01066E  50E7               	movf	indf1,w,c
  5862   010670  A4D8               	btfss	status,2,c
  5863   010672  D083               	goto	l15689
  5864   010674  EE20 F03E          	lfsr	2,62
  5865   010678  503F               	movf	UPDATExSTATION@self^0,w,c
  5866   01067A  26D9               	addwf	fsr2l,f,c
  5867   01067C  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5868   01067E  22DA               	addwfc	fsr2h,f,c
  5869   010680  50DF               	movf	indf2,w,c
  5870   010682  A4D8               	btfss	status,2,c
  5871   010684  D07A               	goto	l15689
  5872   010686  EE20 F017          	lfsr	2,23
  5873   01068A  503F               	movf	UPDATExSTATION@self^0,w,c
  5874   01068C  26D9               	addwf	fsr2l,f,c
  5875   01068E  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5876   010690  22DA               	addwfc	fsr2h,f,c
  5877   010692  0E74               	movlw	116
  5878   010694  18DE               	xorwf	postinc2,w,c
  5879   010696  B4D8               	btfsc	status,2,c
  5880   010698  D070               	goto	l15689
  5881   01069A  EE20 F029          	lfsr	2,41
  5882   01069E  503F               	movf	UPDATExSTATION@self^0,w,c
  5883   0106A0  26D9               	addwf	fsr2l,f,c
  5884   0106A2  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5885   0106A4  22DA               	addwfc	fsr2h,f,c
  5886   0106A6  0E74               	movlw	116
  5887   0106A8  18DE               	xorwf	postinc2,w,c
  5888   0106AA  B4D8               	btfsc	status,2,c
  5889   0106AC  D066               	goto	l15689
  5890   0106AE  EE20 F017          	lfsr	2,23
  5891   0106B2  503F               	movf	UPDATExSTATION@self^0,w,c
  5892   0106B4  26D9               	addwf	fsr2l,f,c
  5893   0106B6  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5894   0106B8  22DA               	addwfc	fsr2h,f,c
  5895   0106BA  0E76               	movlw	118
  5896   0106BC  18DE               	xorwf	postinc2,w,c
  5897   0106BE  B4D8               	btfsc	status,2,c
  5898   0106C0  D05C               	goto	l15689
  5899   0106C2  EE20 F029          	lfsr	2,41
  5900   0106C6  503F               	movf	UPDATExSTATION@self^0,w,c
  5901   0106C8  26D9               	addwf	fsr2l,f,c
  5902   0106CA  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5903   0106CC  22DA               	addwfc	fsr2h,f,c
  5904   0106CE  0E76               	movlw	118
  5905   0106D0  18DE               	xorwf	postinc2,w,c
  5906   0106D2  B4D8               	btfsc	status,2,c
  5907   0106D4  D052               	goto	l15689
  5908   0106D6  EE20 F017          	lfsr	2,23
  5909   0106DA  503F               	movf	UPDATExSTATION@self^0,w,c
  5910   0106DC  26D9               	addwf	fsr2l,f,c
  5911   0106DE  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5912   0106E0  22DA               	addwfc	fsr2h,f,c
  5913   0106E2  0E75               	movlw	117
  5914   0106E4  18DE               	xorwf	postinc2,w,c
  5915   0106E6  B4D8               	btfsc	status,2,c
  5916   0106E8  D048               	goto	l15689
  5917   0106EA  EE20 F029          	lfsr	2,41
  5918   0106EE  503F               	movf	UPDATExSTATION@self^0,w,c
  5919   0106F0  26D9               	addwf	fsr2l,f,c
  5920   0106F2  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5921   0106F4  22DA               	addwfc	fsr2h,f,c
  5922   0106F6  0E75               	movlw	117
  5923   0106F8  18DE               	xorwf	postinc2,w,c
  5924   0106FA  B4D8               	btfsc	status,2,c
  5925   0106FC  D03E               	goto	l15689
  5926                           
  5927                           ;mainstation.c: 279:                         ){;mainstation.c: 280:                     
      +                          self->stnTrack3.stnState = STN_PASSING;
  5928   0106FE  EE20 F03B          	lfsr	2,59
  5929   010702  503F               	movf	UPDATExSTATION@self^0,w,c
  5930   010704  26D9               	addwf	fsr2l,f,c
  5931   010706  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5932   010708  22DA               	addwfc	fsr2h,f,c
  5933   01070A  0E76               	movlw	118
  5934   01070C  6EDF               	movwf	indf2,c
  5935                           
  5936                           ;mainstation.c: 281:                     if(1 == self->getFreightEnterStation->value){
  5937   01070E  EE20 F004          	lfsr	2,4
  5938   010712  503F               	movf	UPDATExSTATION@self^0,w,c
  5939   010714  26D9               	addwf	fsr2l,f,c
  5940   010716  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5941   010718  22DA               	addwfc	fsr2h,f,c
  5942   01071A  EE10 F00B          	lfsr	1,11
  5943   01071E  50DE               	movf	postinc2,w,c
  5944   010720  26E1               	addwf	fsr1l,f,c
  5945   010722  50DD               	movf	postdec2,w,c
  5946   010724  22E2               	addwfc	fsr1h,f,c
  5947   010726  04E6               	decf	postinc1,w,c
  5948   010728  A4D8               	btfss	status,2,c
  5949   01072A  D00D               	goto	l15687
  5950                           
  5951                           ;mainstation.c: 282:                         self->getFreightEnterStation->value = 0;
  5952   01072C  EE20 F004          	lfsr	2,4
  5953   010730  503F               	movf	UPDATExSTATION@self^0,w,c
  5954   010732  26D9               	addwf	fsr2l,f,c
  5955   010734  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5956   010736  22DA               	addwfc	fsr2h,f,c
  5957   010738  EE10 F00B          	lfsr	1,11
  5958   01073C  50DE               	movf	postinc2,w,c
  5959   01073E  26E1               	addwf	fsr1l,f,c
  5960   010740  50DD               	movf	postdec2,w,c
  5961   010742  22E2               	addwfc	fsr1h,f,c
  5962   010744  6AE7               	clrf	indf1,c
  5963   010746                     l15687:
  5964                           
  5965                           ;mainstation.c: 284:                     CREATExTASKxSTATUSxMESSAGE(self->name,
  5966   010746  EE20 F03A          	lfsr	2,58
  5967   01074A  503F               	movf	UPDATExSTATION@self^0,w,c
  5968   01074C  26D9               	addwf	fsr2l,f,c
  5969   01074E  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5970   010750  22DA               	addwfc	fsr2h,f,c
  5971   010752  50DF               	movf	indf2,w,c
  5972   010754  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
  5973   010756  EE20 F03B          	lfsr	2,59
  5974   01075A  503F               	movf	UPDATExSTATION@self^0,w,c
  5975   01075C  26D9               	addwf	fsr2l,f,c
  5976   01075E  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5977   010760  22DA               	addwfc	fsr2h,f,c
  5978   010762  50DF               	movf	indf2,w,c
  5979   010764  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
  5980   010766  0E96               	movlw	150
  5981   010768  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
  5982   01076A  C03F  FFD9         	movff	UPDATExSTATION@self,fsr2l
  5983   01076E  C040  FFDA         	movff	UPDATExSTATION@self+1,fsr2h
  5984   010772  50DF               	movf	indf2,w,c
  5985   010774  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
  5986                           
  5987                           ;mainstation.c: 288:                 }
  5988   010778  D09B               	goto	l15717
  5989   01077A                     l15689:
  5990   01077A  EE20 F00A          	lfsr	2,10
  5991   01077E  503F               	movf	UPDATExSTATION@self^0,w,c
  5992   010780  26D9               	addwf	fsr2l,f,c
  5993   010782  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  5994   010784  22DA               	addwfc	fsr2h,f,c
  5995   010786  EE10 F00B          	lfsr	1,11
  5996   01078A  50DE               	movf	postinc2,w,c
  5997   01078C  26E1               	addwf	fsr1l,f,c
  5998   01078E  50DD               	movf	postdec2,w,c
  5999   010790  22E2               	addwfc	fsr1h,f,c
  6000   010792  04E6               	decf	postinc1,w,c
  6001   010794  A4D8               	btfss	status,2,c
  6002   010796  D08C               	goto	l15717
  6003                           
  6004                           ;mainstation.c: 294:                     if(0 == self->stnTrack3.stnOccupied &&
  6005   010798  EE20 F03E          	lfsr	2,62
  6006   01079C  503F               	movf	UPDATExSTATION@self^0,w,c
  6007   01079E  26D9               	addwf	fsr2l,f,c
  6008   0107A0  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  6009   0107A2  22DA               	addwfc	fsr2h,f,c
  6010   0107A4  50DF               	movf	indf2,w,c
  6011   0107A6  A4D8               	btfss	status,2,c
  6012   0107A8  D04A               	goto	l15705
  6013   0107AA  EE20 F017          	lfsr	2,23
  6014   0107AE  503F               	movf	UPDATExSTATION@self^0,w,c
  6015   0107B0  26D9               	addwf	fsr2l,f,c
  6016   0107B2  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  6017   0107B4  22DA               	addwfc	fsr2h,f,c
  6018   0107B6  0E74               	movlw	116
  6019   0107B8  18DE               	xorwf	postinc2,w,c
  6020   0107BA  B4D8               	btfsc	status,2,c
  6021   0107BC  D040               	goto	l15705
  6022   0107BE  EE20 F029          	lfsr	2,41
  6023   0107C2  503F               	movf	UPDATExSTATION@self^0,w,c
  6024   0107C4  26D9               	addwf	fsr2l,f,c
  6025   0107C6  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  6026   0107C8  22DA               	addwfc	fsr2h,f,c
  6027   0107CA  0E74               	movlw	116
  6028   0107CC  18DE               	xorwf	postinc2,w,c
  6029   0107CE  B4D8               	btfsc	status,2,c
  6030   0107D0  D036               	goto	l15705
  6031   0107D2  EE20 F017          	lfsr	2,23
  6032   0107D6  503F               	movf	UPDATExSTATION@self^0,w,c
  6033   0107D8  26D9               	addwf	fsr2l,f,c
  6034   0107DA  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  6035   0107DC  22DA               	addwfc	fsr2h,f,c
  6036   0107DE  0E76               	movlw	118
  6037   0107E0  18DE               	xorwf	postinc2,w,c
  6038   0107E2  B4D8               	btfsc	status,2,c
  6039   0107E4  D02C               	goto	l15705
  6040   0107E6  EE20 F029          	lfsr	2,41
  6041   0107EA  503F               	movf	UPDATExSTATION@self^0,w,c
  6042   0107EC  26D9               	addwf	fsr2l,f,c
  6043   0107EE  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  6044   0107F0  22DA               	addwfc	fsr2h,f,c
  6045   0107F2  0E76               	movlw	118
  6046   0107F4  18DE               	xorwf	postinc2,w,c
  6047   0107F6  B4D8               	btfsc	status,2,c
  6048   0107F8  D022               	goto	l15705
  6049                           
  6050                           ;mainstation.c: 299:                             ){;mainstation.c: 300:                 
      +                                  self->stnTrack3.stnState = STN_INBOUND;
  6051   0107FA  EE20 F03B          	lfsr	2,59
  6052   0107FE  503F               	movf	UPDATExSTATION@self^0,w,c
  6053   010800  26D9               	addwf	fsr2l,f,c
  6054   010802  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  6055   010804  22DA               	addwfc	fsr2h,f,c
  6056   010806  0E74               	movlw	116
  6057   010808  6EDF               	movwf	indf2,c
  6058                           
  6059                           ;mainstation.c: 301:                         CREATExTASKxSTATUSxMESSAGE(self->name,
  6060   01080A  EE20 F03A          	lfsr	2,58
  6061   01080E  503F               	movf	UPDATExSTATION@self^0,w,c
  6062   010810  26D9               	addwf	fsr2l,f,c
  6063   010812  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  6064   010814  22DA               	addwfc	fsr2h,f,c
  6065   010816  50DF               	movf	indf2,w,c
  6066   010818  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
  6067   01081A  EE20 F03B          	lfsr	2,59
  6068   01081E  503F               	movf	UPDATExSTATION@self^0,w,c
  6069   010820  26D9               	addwf	fsr2l,f,c
  6070   010822  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  6071   010824  22DA               	addwfc	fsr2h,f,c
  6072   010826  50DF               	movf	indf2,w,c
  6073   010828  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
  6074   01082A  0E96               	movlw	150
  6075   01082C  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
  6076   01082E  C03F  FFD9         	movff	UPDATExSTATION@self,fsr2l
  6077   010832  C040  FFDA         	movff	UPDATExSTATION@self+1,fsr2h
  6078   010836  50DF               	movf	indf2,w,c
  6079   010838  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
  6080                           
  6081                           ;mainstation.c: 308:                     }
  6082   01083C  D039               	goto	l15717
  6083   01083E                     l15705:
  6084   01083E  EE20 F02C          	lfsr	2,44
  6085   010842  503F               	movf	UPDATExSTATION@self^0,w,c
  6086   010844  26D9               	addwf	fsr2l,f,c
  6087   010846  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  6088   010848  22DA               	addwfc	fsr2h,f,c
  6089   01084A  50DF               	movf	indf2,w,c
  6090   01084C  A4D8               	btfss	status,2,c
  6091   01084E  D030               	goto	l15717
  6092   010850  EE20 F017          	lfsr	2,23
  6093   010854  503F               	movf	UPDATExSTATION@self^0,w,c
  6094   010856  26D9               	addwf	fsr2l,f,c
  6095   010858  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  6096   01085A  22DA               	addwfc	fsr2h,f,c
  6097   01085C  0E74               	movlw	116
  6098   01085E  18DE               	xorwf	postinc2,w,c
  6099   010860  B4D8               	btfsc	status,2,c
  6100   010862  D026               	goto	l15717
  6101   010864  EE20 F03B          	lfsr	2,59
  6102   010868  503F               	movf	UPDATExSTATION@self^0,w,c
  6103   01086A  26D9               	addwf	fsr2l,f,c
  6104   01086C  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  6105   01086E  22DA               	addwfc	fsr2h,f,c
  6106   010870  0E74               	movlw	116
  6107   010872  18DE               	xorwf	postinc2,w,c
  6108   010874  B4D8               	btfsc	status,2,c
  6109   010876  D01C               	goto	l15717
  6110   010878  EE20 F017          	lfsr	2,23
  6111   01087C  503F               	movf	UPDATExSTATION@self^0,w,c
  6112   01087E  26D9               	addwf	fsr2l,f,c
  6113   010880  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  6114   010882  22DA               	addwfc	fsr2h,f,c
  6115   010884  0E76               	movlw	118
  6116   010886  18DE               	xorwf	postinc2,w,c
  6117   010888  B4D8               	btfsc	status,2,c
  6118   01088A  D012               	goto	l15717
  6119   01088C  EE20 F03B          	lfsr	2,59
  6120   010890  503F               	movf	UPDATExSTATION@self^0,w,c
  6121   010892  26D9               	addwf	fsr2l,f,c
  6122   010894  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  6123   010896  22DA               	addwfc	fsr2h,f,c
  6124   010898  0E76               	movlw	118
  6125   01089A  18DE               	xorwf	postinc2,w,c
  6126   01089C  B4D8               	btfsc	status,2,c
  6127   01089E  D008               	goto	l15717
  6128                           
  6129                           ;mainstation.c: 328:                             ){;mainstation.c: 329:                 
      +                                  self->stnTrack2.stnState = STN_INBOUND;
  6130   0108A0  EE20 F029          	lfsr	2,41
  6131   0108A4  503F               	movf	UPDATExSTATION@self^0,w,c
  6132   0108A6  26D9               	addwf	fsr2l,f,c
  6133   0108A8  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  6134   0108AA  22DA               	addwfc	fsr2h,f,c
  6135   0108AC  0E74               	movlw	116
  6136   0108AE  6EDF               	movwf	indf2,c
  6137   0108B0                     l15717:
  6138                           
  6139                           ;mainstation.c: 334:             MAINxSTATIONxINBOUND(self);
  6140   0108B0  C03F  F02F         	movff	UPDATExSTATION@self,MAINxSTATIONxINBOUND@self
  6141   0108B4  C040  F030         	movff	UPDATExSTATION@self+1,MAINxSTATIONxINBOUND@self+1
  6142   0108B8  EC26  F097         	call	_MAINxSTATIONxINBOUND	;wreg free
  6143                           
  6144                           ;mainstation.c: 336:             MAINxSTATIONxPASSING(self);
  6145   0108BC  C03F  F031         	movff	UPDATExSTATION@self,MAINxSTATIONxPASSING@self
  6146   0108C0  C040  F032         	movff	UPDATExSTATION@self+1,MAINxSTATIONxPASSING@self+1
  6147   0108C4  ECEF  F08D         	call	_MAINxSTATIONxPASSING	;wreg free
  6148                           
  6149                           ;mainstation.c: 338:             MAINxSTATIONxOUTBOUND(self);
  6150   0108C8  C03F  F031         	movff	UPDATExSTATION@self,MAINxSTATIONxOUTBOUND@self
  6151   0108CC  C040  F032         	movff	UPDATExSTATION@self+1,MAINxSTATIONxOUTBOUND@self+1
  6152   0108D0  EC8A  F09D         	call	_MAINxSTATIONxOUTBOUND	;wreg free
  6153                           
  6154                           ;mainstation.c: 339:             break;
  6155   0108D4  0012               	return	
  6156   0108D6                     l15723:
  6157                           
  6158                           ;mainstation.c: 342:             self->AppState = INIT;
  6159   0108D6  EE20 F001          	lfsr	2,1
  6160   0108DA  503F               	movf	UPDATExSTATION@self^0,w,c
  6161   0108DC  26D9               	addwf	fsr2l,f,c
  6162   0108DE  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  6163   0108E0  22DA               	addwfc	fsr2h,f,c
  6164   0108E2  0E69               	movlw	105
  6165   0108E4  6EDF               	movwf	indf2,c
  6166                           
  6167                           ;mainstation.c: 343:             break;
  6168   0108E6  0012               	return	
  6169   0108E8                     l15727:
  6170   0108E8  EE20 F001          	lfsr	2,1
  6171   0108EC  503F               	movf	UPDATExSTATION@self^0,w,c
  6172   0108EE  26D9               	addwf	fsr2l,f,c
  6173   0108F0  5040               	movf	(UPDATExSTATION@self+1)^0,w,c
  6174   0108F2  22DA               	addwfc	fsr2h,f,c
  6175   0108F4  50DF               	movf	indf2,w,c
  6176   0108F6  6E41               	movwf	??_UPDATExSTATION^0,c
  6177   0108F8  6A42               	clrf	(??_UPDATExSTATION+1)^0,c
  6178                           
  6179                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6180                           ; Switch size 1, requested type "simple"
  6181                           ; Number of cases is 1, Range of values is 0 to 0
  6182                           ; switch strategies available:
  6183                           ; Name         Instructions Cycles
  6184                           ; simple_byte            4     3 (average)
  6185                           ;	Chosen strategy is simple_byte
  6186   0108FA  5042               	movf	(??_UPDATExSTATION+1)^0,w,c
  6187   0108FC  0A00               	xorlw	0	; case 0
  6188   0108FE  A4D8               	btfss	status,2,c
  6189   010900  D7EA               	goto	l15723
  6190                           
  6191                           ; Switch size 1, requested type "simple"
  6192                           ; Number of cases is 2, Range of values is 105 to 107
  6193                           ; switch strategies available:
  6194                           ; Name         Instructions Cycles
  6195                           ; simple_byte            7     4 (average)
  6196                           ;	Chosen strategy is simple_byte
  6197   010902  5041               	movf	??_UPDATExSTATION^0,w,c
  6198   010904  0A69               	xorlw	105	; case 105
  6199   010906  B4D8               	btfsc	status,2,c
  6200   010908  EF02  F080         	goto	l15561
  6201   01090C  0A02               	xorlw	2	; case 107
  6202   01090E  B4D8               	btfsc	status,2,c
  6203   010910  D5A2               	goto	l15621
  6204   010912  D7E1               	goto	l15723
  6205   010914                     __end_of_UPDATExSTATION:
  6206                           	callstack 0
  6207                           
  6208 ;; *************** function _MAINxSTATIONxPASSING *****************
  6209 ;; Defined at:
  6210 ;;		line 12 in file "mainStationPassing.c"
  6211 ;; Parameters:    Size  Location     Type
  6212 ;;  self            2   48[COMRAM] PTR struct .
  6213 ;;		 -> bot(76), top(76), 
  6214 ;; Auto vars:     Size  Location     Type
  6215 ;;		None
  6216 ;; Return value:  Size  Location     Type
  6217 ;;                  1    wreg      char 
  6218 ;; Registers used:
  6219 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6220 ;; Tracked objects:
  6221 ;;		On entry : 0/1
  6222 ;;		On exit  : 0/0
  6223 ;;		Unchanged: 0/0
  6224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6225 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6227 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6228 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6229 ;;Total ram usage:       14 bytes
  6230 ;; Hardware stack levels used: 1
  6231 ;; Hardware stack levels required when called: 7
  6232 ;; This function calls:
  6233 ;;		_CREATExTASKxSTATUSxMESSAGE
  6234 ;;		_GETxMILLIS
  6235 ;;		_SETxOCC
  6236 ;;		_SETxSIGNAL
  6237 ;;		_SETxSTATIONxPATHWAY
  6238 ;; This function is called by:
  6239 ;;		_UPDATExSTATION
  6240 ;; This function uses a non-reentrant model
  6241 ;;
  6242                           
  6243                           	psect	text4
  6244   011BDE                     __ptext4:
  6245                           	callstack 0
  6246   011BDE                     _MAINxSTATIONxPASSING:
  6247                           	callstack 22
  6248                           
  6249                           ;mainStationPassing.c: 14:     if(self->stnTrack3.stnState == STN_PASSING){
  6250                           
  6251                           ;incstack = 0
  6252   011BDE  EE20 F03B          	lfsr	2,59
  6253   011BE2  5031               	movf	MAINxSTATIONxPASSING@self^0,w,c
  6254   011BE4  26D9               	addwf	fsr2l,f,c
  6255   011BE6  5032               	movf	(MAINxSTATIONxPASSING@self+1)^0,w,c
  6256   011BE8  22DA               	addwfc	fsr2h,f,c
  6257   011BEA  0E76               	movlw	118
  6258   011BEC  18DE               	xorwf	postinc2,w,c
  6259   011BEE  A4D8               	btfss	status,2,c
  6260   011BF0  D002               	goto	l14921
  6261                           
  6262                           ;mainStationPassing.c: 15:         activeTrack = &self->stnTrack3;
  6263   011BF2  0E3A               	movlw	58
  6264   011BF4  D017               	goto	L6
  6265   011BF6                     l14921:
  6266   011BF6  EE20 F017          	lfsr	2,23
  6267   011BFA  5031               	movf	MAINxSTATIONxPASSING@self^0,w,c
  6268   011BFC  26D9               	addwf	fsr2l,f,c
  6269   011BFE  5032               	movf	(MAINxSTATIONxPASSING@self+1)^0,w,c
  6270   011C00  22DA               	addwfc	fsr2h,f,c
  6271   011C02  0E76               	movlw	118
  6272   011C04  18DE               	xorwf	postinc2,w,c
  6273   011C06  A4D8               	btfss	status,2,c
  6274   011C08  D002               	goto	l14925
  6275                           
  6276                           ;mainStationPassing.c: 18:         activeTrack = &self->stnTrack1;
  6277   011C0A  0E16               	movlw	22
  6278   011C0C  D00B               	goto	L6
  6279   011C0E                     l14925:
  6280   011C0E  EE20 F029          	lfsr	2,41
  6281   011C12  5031               	movf	MAINxSTATIONxPASSING@self^0,w,c
  6282   011C14  26D9               	addwf	fsr2l,f,c
  6283   011C16  5032               	movf	(MAINxSTATIONxPASSING@self+1)^0,w,c
  6284   011C18  22DA               	addwfc	fsr2h,f,c
  6285   011C1A  0E76               	movlw	118
  6286   011C1C  18DE               	xorwf	postinc2,w,c
  6287   011C1E  A4D8               	btfss	status,2,c
  6288   011C20  0012               	return	
  6289                           
  6290                           ;mainStationPassing.c: 21:         activeTrack = &self->stnTrack2;
  6291   011C22  0E28               	movlw	40
  6292   011C24                     L6:
  6293   011C24  2431               	addwf	MAINxSTATIONxPASSING@self^0,w,c
  6294   011C26  6E59               	movwf	_activeTrack^0,c
  6295   011C28  0E00               	movlw	0
  6296   011C2A  2032               	addwfc	(MAINxSTATIONxPASSING@self+1)^0,w,c
  6297   011C2C  6E5A               	movwf	(_activeTrack+1)^0,c
  6298                           
  6299                           ;mainStationPassing.c: 22:     }
  6300   011C2E  D20A               	goto	l14995
  6301   011C30                     l14929:
  6302                           
  6303                           ;mainStationPassing.c: 33:             if(0 == self->getOccBlkOut->value){
  6304   011C30  EE20 F00A          	lfsr	2,10
  6305   011C34  5031               	movf	MAINxSTATIONxPASSING@self^0,w,c
  6306   011C36  26D9               	addwf	fsr2l,f,c
  6307   011C38  5032               	movf	(MAINxSTATIONxPASSING@self+1)^0,w,c
  6308   011C3A  22DA               	addwfc	fsr2h,f,c
  6309   011C3C  EE10 F00B          	lfsr	1,11
  6310   011C40  50DE               	movf	postinc2,w,c
  6311   011C42  26E1               	addwf	fsr1l,f,c
  6312   011C44  50DD               	movf	postdec2,w,c
  6313   011C46  22E2               	addwfc	fsr1h,f,c
  6314   011C48  50E7               	movf	indf1,w,c
  6315   011C4A  A4D8               	btfss	status,2,c
  6316   011C4C  0012               	return	
  6317                           
  6318                           ;mainStationPassing.c: 34:                 SETxSTATIONxPATHWAY(self, activeTrack->trackN
      +                          r, STN_PASSING);
  6319   011C4E  C031  F022         	movff	MAINxSTATIONxPASSING@self,SETxSTATIONxPATHWAY@self
  6320   011C52  C032  F023         	movff	MAINxSTATIONxPASSING@self+1,SETxSTATIONxPATHWAY@self+1
  6321   011C56  EE20 F005          	lfsr	2,5
  6322   011C5A  5059               	movf	_activeTrack^0,w,c
  6323   011C5C  26D9               	addwf	fsr2l,f,c
  6324   011C5E  505A               	movf	(_activeTrack+1)^0,w,c
  6325   011C60  22DA               	addwfc	fsr2h,f,c
  6326   011C62  50DF               	movf	indf2,w,c
  6327   011C64  6E24               	movwf	SETxSTATIONxPATHWAY@path^0,c
  6328   011C66  0E76               	movlw	118
  6329   011C68  6E25               	movwf	SETxSTATIONxPATHWAY@dir^0,c
  6330   011C6A  ECDF  F094         	call	_SETxSTATIONxPATHWAY	;wreg free
  6331                           
  6332                           ;mainStationPassing.c: 35:                 SETxSIGNAL(self, activeTrack->trackNr, SIG_GR
      +                          EEN);
  6333   011C6E  C031  F022         	movff	MAINxSTATIONxPASSING@self,SETxSIGNAL@self
  6334   011C72  C032  F023         	movff	MAINxSTATIONxPASSING@self+1,SETxSIGNAL@self+1
  6335   011C76  EE20 F005          	lfsr	2,5
  6336   011C7A  5059               	movf	_activeTrack^0,w,c
  6337   011C7C  26D9               	addwf	fsr2l,f,c
  6338   011C7E  505A               	movf	(_activeTrack+1)^0,w,c
  6339   011C80  22DA               	addwfc	fsr2h,f,c
  6340   011C82  50DF               	movf	indf2,w,c
  6341   011C84  6E24               	movwf	SETxSIGNAL@path^0,c
  6342   011C86  0E82               	movlw	130
  6343   011C88  6E25               	movwf	SETxSIGNAL@signal^0,c
  6344   011C8A  EC36  F0A1         	call	_SETxSIGNAL	;wreg free
  6345                           
  6346                           ; BSR set to: 1
  6347                           ;mainStationPassing.c: 36:                 activeTrack->tCountTime = GETxMILLIS();
  6348   011C8E  EC50  F0C1         	call	_GETxMILLIS	;wreg free
  6349   011C92  EE20 F006          	lfsr	2,6
  6350   011C96  5059               	movf	_activeTrack^0,w,c
  6351   011C98  26D9               	addwf	fsr2l,f,c
  6352   011C9A  505A               	movf	(_activeTrack+1)^0,w,c
  6353   011C9C  22DA               	addwfc	fsr2h,f,c
  6354   011C9E  C005  FFDE         	movff	?_GETxMILLIS,postinc2
  6355   011CA2  C006  FFDE         	movff	?_GETxMILLIS+1,postinc2
  6356   011CA6  C007  FFDE         	movff	?_GETxMILLIS+2,postinc2
  6357   011CAA  C008  FFDE         	movff	?_GETxMILLIS+3,postinc2
  6358   011CAE  EE20 F00A          	lfsr	2,10
  6359   011CB2  5059               	movf	_activeTrack^0,w,c
  6360   011CB4  26D9               	addwf	fsr2l,f,c
  6361   011CB6  505A               	movf	(_activeTrack+1)^0,w,c
  6362   011CB8  22DA               	addwfc	fsr2h,f,c
  6363   011CBA  0E58               	movlw	88
  6364   011CBC  6EDE               	movwf	postinc2,c
  6365   011CBE  0E1B               	movlw	27
  6366   011CC0  6EDE               	movwf	postinc2,c
  6367   011CC2  0E00               	movlw	0
  6368   011CC4  6EDE               	movwf	postinc2,c
  6369   011CC6  0E00               	movlw	0
  6370   011CC8  6EDD               	movwf	postdec2,c
  6371                           
  6372                           ;mainStationPassing.c: 38:                 activeTrack->stnNextState = SEQ_SET_OCC;
  6373   011CCA  EE20 F003          	lfsr	2,3
  6374   011CCE  5059               	movf	_activeTrack^0,w,c
  6375   011CD0  26D9               	addwf	fsr2l,f,c
  6376   011CD2  505A               	movf	(_activeTrack+1)^0,w,c
  6377   011CD4  22DA               	addwfc	fsr2h,f,c
  6378   011CD6  0E7B               	movlw	123
  6379   011CD8  6EDF               	movwf	indf2,c
  6380                           
  6381                           ;mainStationPassing.c: 39:                 activeTrack->stnSequence = SEQ_WAIT;
  6382   011CDA  EE20 F002          	lfsr	2,2
  6383   011CDE  5059               	movf	_activeTrack^0,w,c
  6384   011CE0  26D9               	addwf	fsr2l,f,c
  6385   011CE2  505A               	movf	(_activeTrack+1)^0,w,c
  6386   011CE4  22DA               	addwfc	fsr2h,f,c
  6387   011CE6  0E7A               	movlw	122
  6388   011CE8  6EDF               	movwf	indf2,c
  6389                           
  6390                           ;mainStationPassing.c: 40:                 CREATExTASKxSTATUSxMESSAGE(self->name,
  6391   011CEA  C059  FFD9         	movff	_activeTrack,fsr2l
  6392   011CEE  C05A  FFDA         	movff	_activeTrack+1,fsr2h
  6393   011CF2  50DF               	movf	indf2,w,c
  6394   011CF4  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
  6395   011CF6  EE20 F001          	lfsr	2,1
  6396   011CFA  5059               	movf	_activeTrack^0,w,c
  6397   011CFC  26D9               	addwf	fsr2l,f,c
  6398   011CFE  505A               	movf	(_activeTrack+1)^0,w,c
  6399   011D00  22DA               	addwfc	fsr2h,f,c
  6400   011D02  50DF               	movf	indf2,w,c
  6401   011D04  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
  6402   011D06  EE20 F002          	lfsr	2,2
  6403   011D0A  5059               	movf	_activeTrack^0,w,c
  6404   011D0C  26D9               	addwf	fsr2l,f,c
  6405   011D0E  505A               	movf	(_activeTrack+1)^0,w,c
  6406   011D10  22DA               	addwfc	fsr2h,f,c
  6407   011D12  50DF               	movf	indf2,w,c
  6408   011D14  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
  6409   011D16  C031  FFD9         	movff	MAINxSTATIONxPASSING@self,fsr2l
  6410   011D1A  C032  FFDA         	movff	MAINxSTATIONxPASSING@self+1,fsr2h
  6411   011D1E  50DF               	movf	indf2,w,c
  6412   011D20  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
  6413   011D24  0012               	return	
  6414   011D26                     l14943:
  6415                           
  6416                           ;mainStationPassing.c: 49:             SETxOCC(activeTrack->setOccStn, 0);
  6417   011D26  EE20 F00E          	lfsr	2,14
  6418   011D2A  5059               	movf	_activeTrack^0,w,c
  6419   011D2C  26D9               	addwf	fsr2l,f,c
  6420   011D2E  505A               	movf	(_activeTrack+1)^0,w,c
  6421   011D30  22DA               	addwfc	fsr2h,f,c
  6422   011D32  CFDE F005          	movff	postinc2,SETxOCC@self
  6423   011D36  CFDD F006          	movff	postdec2,SETxOCC@self+1
  6424   011D3A  0E00               	movlw	0
  6425   011D3C  6E07               	movwf	SETxOCC@value^0,c
  6426   011D3E  ECC0  F0BA         	call	_SETxOCC	;wreg free
  6427                           
  6428                           ;mainStationPassing.c: 50:             SETxOCC(self->setOccBlkIn, 0);
  6429   011D42  EE20 F006          	lfsr	2,6
  6430   011D46  5031               	movf	MAINxSTATIONxPASSING@self^0,w,c
  6431   011D48  26D9               	addwf	fsr2l,f,c
  6432   011D4A  5032               	movf	(MAINxSTATIONxPASSING@self+1)^0,w,c
  6433   011D4C  22DA               	addwfc	fsr2h,f,c
  6434   011D4E  CFDE F005          	movff	postinc2,SETxOCC@self
  6435   011D52  CFDD F006          	movff	postdec2,SETxOCC@self+1
  6436   011D56  0E00               	movlw	0
  6437   011D58  6E07               	movwf	SETxOCC@value^0,c
  6438   011D5A  ECC0  F0BA         	call	_SETxOCC	;wreg free
  6439                           
  6440                           ;mainStationPassing.c: 51:             activeTrack->stnSequence = SEQ_CHK_TRAIN;
  6441   011D5E  EE20 F002          	lfsr	2,2
  6442   011D62  5059               	movf	_activeTrack^0,w,c
  6443   011D64  26D9               	addwf	fsr2l,f,c
  6444   011D66  505A               	movf	(_activeTrack+1)^0,w,c
  6445   011D68  22DA               	addwfc	fsr2h,f,c
  6446   011D6A  0E7C               	movlw	124
  6447   011D6C  6EDF               	movwf	indf2,c
  6448                           
  6449                           ;mainStationPassing.c: 52:             CREATExTASKxSTATUSxMESSAGE(self->name,
  6450   011D6E  C059  FFD9         	movff	_activeTrack,fsr2l
  6451   011D72  C05A  FFDA         	movff	_activeTrack+1,fsr2h
  6452   011D76  50DF               	movf	indf2,w,c
  6453   011D78  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
  6454   011D7A  EE20 F001          	lfsr	2,1
  6455   011D7E  5059               	movf	_activeTrack^0,w,c
  6456   011D80  26D9               	addwf	fsr2l,f,c
  6457   011D82  505A               	movf	(_activeTrack+1)^0,w,c
  6458   011D84  22DA               	addwfc	fsr2h,f,c
  6459   011D86  50DF               	movf	indf2,w,c
  6460   011D88  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
  6461   011D8A  EE20 F002          	lfsr	2,2
  6462   011D8E  5059               	movf	_activeTrack^0,w,c
  6463   011D90  26D9               	addwf	fsr2l,f,c
  6464   011D92  505A               	movf	(_activeTrack+1)^0,w,c
  6465   011D94  22DA               	addwfc	fsr2h,f,c
  6466   011D96  50DF               	movf	indf2,w,c
  6467   011D98  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
  6468   011D9A  C031  FFD9         	movff	MAINxSTATIONxPASSING@self,fsr2l
  6469   011D9E  C032  FFDA         	movff	MAINxSTATIONxPASSING@self+1,fsr2h
  6470   011DA2  50DF               	movf	indf2,w,c
  6471   011DA4  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
  6472                           
  6473                           ;mainStationPassing.c: 56:             break;
  6474   011DA8  0012               	return	
  6475   011DAA                     l14949:
  6476                           
  6477                           ;mainStationPassing.c: 60:             if(activeTrack->getOccStn->value){
  6478   011DAA  EE20 F010          	lfsr	2,16
  6479   011DAE  5059               	movf	_activeTrack^0,w,c
  6480   011DB0  26D9               	addwf	fsr2l,f,c
  6481   011DB2  505A               	movf	(_activeTrack+1)^0,w,c
  6482   011DB4  22DA               	addwfc	fsr2h,f,c
  6483   011DB6  EE10 F00B          	lfsr	1,11
  6484   011DBA  50DE               	movf	postinc2,w,c
  6485   011DBC  26E1               	addwf	fsr1l,f,c
  6486   011DBE  50DD               	movf	postdec2,w,c
  6487   011DC0  22E2               	addwfc	fsr1h,f,c
  6488   011DC2  50E7               	movf	indf1,w,c
  6489   011DC4  B4D8               	btfsc	status,2,c
  6490   011DC6  0012               	return	
  6491                           
  6492                           ;mainStationPassing.c: 61:                 SETxOCC(self->setOccBlkIn, 1);
  6493   011DC8  EE20 F006          	lfsr	2,6
  6494   011DCC  5031               	movf	MAINxSTATIONxPASSING@self^0,w,c
  6495   011DCE  26D9               	addwf	fsr2l,f,c
  6496   011DD0  5032               	movf	(MAINxSTATIONxPASSING@self+1)^0,w,c
  6497   011DD2  22DA               	addwfc	fsr2h,f,c
  6498   011DD4  CFDE F005          	movff	postinc2,SETxOCC@self
  6499   011DD8  CFDD F006          	movff	postdec2,SETxOCC@self+1
  6500   011DDC  0E01               	movlw	1
  6501   011DDE  6E07               	movwf	SETxOCC@value^0,c
  6502   011DE0  ECC0  F0BA         	call	_SETxOCC	;wreg free
  6503                           
  6504                           ;mainStationPassing.c: 62:                 activeTrack->stnSequence = SEQ_CHK_PASSED;
  6505   011DE4  EE20 F002          	lfsr	2,2
  6506   011DE8  5059               	movf	_activeTrack^0,w,c
  6507   011DEA  26D9               	addwf	fsr2l,f,c
  6508   011DEC  505A               	movf	(_activeTrack+1)^0,w,c
  6509   011DEE  22DA               	addwfc	fsr2h,f,c
  6510   011DF0  0E7D               	movlw	125
  6511   011DF2  6EDF               	movwf	indf2,c
  6512                           
  6513                           ;mainStationPassing.c: 63:                 CREATExTASKxSTATUSxMESSAGE(self->name,
  6514   011DF4  C059  FFD9         	movff	_activeTrack,fsr2l
  6515   011DF8  C05A  FFDA         	movff	_activeTrack+1,fsr2h
  6516   011DFC  50DF               	movf	indf2,w,c
  6517   011DFE  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
  6518   011E00  EE20 F001          	lfsr	2,1
  6519   011E04  5059               	movf	_activeTrack^0,w,c
  6520   011E06  26D9               	addwf	fsr2l,f,c
  6521   011E08  505A               	movf	(_activeTrack+1)^0,w,c
  6522   011E0A  22DA               	addwfc	fsr2h,f,c
  6523   011E0C  50DF               	movf	indf2,w,c
  6524   011E0E  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
  6525   011E10  EE20 F002          	lfsr	2,2
  6526   011E14  5059               	movf	_activeTrack^0,w,c
  6527   011E16  26D9               	addwf	fsr2l,f,c
  6528   011E18  505A               	movf	(_activeTrack+1)^0,w,c
  6529   011E1A  22DA               	addwfc	fsr2h,f,c
  6530   011E1C  50DF               	movf	indf2,w,c
  6531   011E1E  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
  6532   011E20  C031  FFD9         	movff	MAINxSTATIONxPASSING@self,fsr2l
  6533   011E24  C032  FFDA         	movff	MAINxSTATIONxPASSING@self+1,fsr2h
  6534   011E28  50DF               	movf	indf2,w,c
  6535   011E2A  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
  6536   011E2E  0012               	return	
  6537   011E30                     l14957:
  6538                           
  6539                           ;mainStationPassing.c: 75:             if(0 == activeTrack->getOccStn->value &&
  6540   011E30  EE20 F010          	lfsr	2,16
  6541   011E34  5059               	movf	_activeTrack^0,w,c
  6542   011E36  26D9               	addwf	fsr2l,f,c
  6543   011E38  505A               	movf	(_activeTrack+1)^0,w,c
  6544   011E3A  22DA               	addwfc	fsr2h,f,c
  6545   011E3C  EE10 F00B          	lfsr	1,11
  6546   011E40  50DE               	movf	postinc2,w,c
  6547   011E42  26E1               	addwf	fsr1l,f,c
  6548   011E44  50DD               	movf	postdec2,w,c
  6549   011E46  22E2               	addwfc	fsr1h,f,c
  6550   011E48  50E7               	movf	indf1,w,c
  6551   011E4A  A4D8               	btfss	status,2,c
  6552   011E4C  0012               	return	
  6553   011E4E  EE20 F00A          	lfsr	2,10
  6554   011E52  5031               	movf	MAINxSTATIONxPASSING@self^0,w,c
  6555   011E54  26D9               	addwf	fsr2l,f,c
  6556   011E56  5032               	movf	(MAINxSTATIONxPASSING@self+1)^0,w,c
  6557   011E58  22DA               	addwfc	fsr2h,f,c
  6558   011E5A  EE10 F00B          	lfsr	1,11
  6559   011E5E  50DE               	movf	postinc2,w,c
  6560   011E60  26E1               	addwf	fsr1l,f,c
  6561   011E62  50DD               	movf	postdec2,w,c
  6562   011E64  22E2               	addwfc	fsr1h,f,c
  6563   011E66  04E6               	decf	postinc1,w,c
  6564   011E68  A4D8               	btfss	status,2,c
  6565   011E6A  0012               	return	
  6566                           
  6567                           ;mainStationPassing.c: 76:                     1 == self->getOccBlkOut->value){;mainStat
      +                          ionPassing.c: 77:                 if(1 == self->getFreightEnterStation->value){
  6568   011E6C  EE20 F004          	lfsr	2,4
  6569   011E70  5031               	movf	MAINxSTATIONxPASSING@self^0,w,c
  6570   011E72  26D9               	addwf	fsr2l,f,c
  6571   011E74  5032               	movf	(MAINxSTATIONxPASSING@self+1)^0,w,c
  6572   011E76  22DA               	addwfc	fsr2h,f,c
  6573   011E78  EE10 F00B          	lfsr	1,11
  6574   011E7C  50DE               	movf	postinc2,w,c
  6575   011E7E  26E1               	addwf	fsr1l,f,c
  6576   011E80  50DD               	movf	postdec2,w,c
  6577   011E82  22E2               	addwfc	fsr1h,f,c
  6578   011E84  04E6               	decf	postinc1,w,c
  6579   011E86  A4D8               	btfss	status,2,c
  6580   011E88  D00D               	goto	l14965
  6581                           
  6582                           ;mainStationPassing.c: 78:                     self->getFreightEnterStation->value = 0;
  6583   011E8A  EE20 F004          	lfsr	2,4
  6584   011E8E  5031               	movf	MAINxSTATIONxPASSING@self^0,w,c
  6585   011E90  26D9               	addwf	fsr2l,f,c
  6586   011E92  5032               	movf	(MAINxSTATIONxPASSING@self+1)^0,w,c
  6587   011E94  22DA               	addwfc	fsr2h,f,c
  6588   011E96  EE10 F00B          	lfsr	1,11
  6589   011E9A  50DE               	movf	postinc2,w,c
  6590   011E9C  26E1               	addwf	fsr1l,f,c
  6591   011E9E  50DD               	movf	postdec2,w,c
  6592   011EA0  22E2               	addwfc	fsr1h,f,c
  6593   011EA2  6AE7               	clrf	indf1,c
  6594   011EA4                     l14965:
  6595                           
  6596                           ;mainStationPassing.c: 80:                 activeTrack->tCountTime = GETxMILLIS();
  6597   011EA4  EC50  F0C1         	call	_GETxMILLIS	;wreg free
  6598   011EA8  EE20 F006          	lfsr	2,6
  6599   011EAC  5059               	movf	_activeTrack^0,w,c
  6600   011EAE  26D9               	addwf	fsr2l,f,c
  6601   011EB0  505A               	movf	(_activeTrack+1)^0,w,c
  6602   011EB2  22DA               	addwfc	fsr2h,f,c
  6603   011EB4  C005  FFDE         	movff	?_GETxMILLIS,postinc2
  6604   011EB8  C006  FFDE         	movff	?_GETxMILLIS+1,postinc2
  6605   011EBC  C007  FFDE         	movff	?_GETxMILLIS+2,postinc2
  6606   011EC0  C008  FFDE         	movff	?_GETxMILLIS+3,postinc2
  6607   011EC4  EE20 F00A          	lfsr	2,10
  6608   011EC8  5059               	movf	_activeTrack^0,w,c
  6609   011ECA  26D9               	addwf	fsr2l,f,c
  6610   011ECC  505A               	movf	(_activeTrack+1)^0,w,c
  6611   011ECE  22DA               	addwfc	fsr2h,f,c
  6612   011ED0  0E10               	movlw	16
  6613   011ED2  6EDE               	movwf	postinc2,c
  6614   011ED4  0E27               	movlw	39
  6615   011ED6  6EDE               	movwf	postinc2,c
  6616   011ED8  0E00               	movlw	0
  6617   011EDA  6EDE               	movwf	postinc2,c
  6618   011EDC  0E00               	movlw	0
  6619   011EDE  6EDD               	movwf	postdec2,c
  6620                           
  6621                           ;mainStationPassing.c: 82:                 activeTrack->stnNextState = SEQ_OUTBOUND_LEFT
      +                          _STATTION;
  6622   011EE0  EE20 F003          	lfsr	2,3
  6623   011EE4  5059               	movf	_activeTrack^0,w,c
  6624   011EE6  26D9               	addwf	fsr2l,f,c
  6625   011EE8  505A               	movf	(_activeTrack+1)^0,w,c
  6626   011EEA  22DA               	addwfc	fsr2h,f,c
  6627   011EEC  0E7E               	movlw	126
  6628   011EEE  6EDF               	movwf	indf2,c
  6629                           
  6630                           ;mainStationPassing.c: 83:                 activeTrack->stnSequence = SEQ_WAIT;
  6631   011EF0  EE20 F002          	lfsr	2,2
  6632   011EF4  5059               	movf	_activeTrack^0,w,c
  6633   011EF6  26D9               	addwf	fsr2l,f,c
  6634   011EF8  505A               	movf	(_activeTrack+1)^0,w,c
  6635   011EFA  22DA               	addwfc	fsr2h,f,c
  6636   011EFC  0E7A               	movlw	122
  6637   011EFE  6EDF               	movwf	indf2,c
  6638                           
  6639                           ;mainStationPassing.c: 84:                 CREATExTASKxSTATUSxMESSAGE(self->name,
  6640   011F00  C059  FFD9         	movff	_activeTrack,fsr2l
  6641   011F04  C05A  FFDA         	movff	_activeTrack+1,fsr2h
  6642   011F08  50DF               	movf	indf2,w,c
  6643   011F0A  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
  6644   011F0C  EE20 F001          	lfsr	2,1
  6645   011F10  5059               	movf	_activeTrack^0,w,c
  6646   011F12  26D9               	addwf	fsr2l,f,c
  6647   011F14  505A               	movf	(_activeTrack+1)^0,w,c
  6648   011F16  22DA               	addwfc	fsr2h,f,c
  6649   011F18  50DF               	movf	indf2,w,c
  6650   011F1A  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
  6651   011F1C  EE20 F002          	lfsr	2,2
  6652   011F20  5059               	movf	_activeTrack^0,w,c
  6653   011F22  26D9               	addwf	fsr2l,f,c
  6654   011F24  505A               	movf	(_activeTrack+1)^0,w,c
  6655   011F26  22DA               	addwfc	fsr2h,f,c
  6656   011F28  50DF               	movf	indf2,w,c
  6657   011F2A  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
  6658   011F2C  C031  FFD9         	movff	MAINxSTATIONxPASSING@self,fsr2l
  6659   011F30  C032  FFDA         	movff	MAINxSTATIONxPASSING@self+1,fsr2h
  6660   011F34  50DF               	movf	indf2,w,c
  6661   011F36  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
  6662   011F3A  0012               	return	
  6663   011F3C                     l14973:
  6664                           
  6665                           ;mainStationPassing.c: 92:             SETxSIGNAL(self, activeTrack->trackNr, SIG_RED);
  6666   011F3C  C031  F022         	movff	MAINxSTATIONxPASSING@self,SETxSIGNAL@self
  6667   011F40  C032  F023         	movff	MAINxSTATIONxPASSING@self+1,SETxSIGNAL@self+1
  6668   011F44  EE20 F005          	lfsr	2,5
  6669   011F48  5059               	movf	_activeTrack^0,w,c
  6670   011F4A  26D9               	addwf	fsr2l,f,c
  6671   011F4C  505A               	movf	(_activeTrack+1)^0,w,c
  6672   011F4E  22DA               	addwfc	fsr2h,f,c
  6673   011F50  50DF               	movf	indf2,w,c
  6674   011F52  6E24               	movwf	SETxSIGNAL@path^0,c
  6675   011F54  0E81               	movlw	129
  6676   011F56  6E25               	movwf	SETxSIGNAL@signal^0,c
  6677   011F58  EC36  F0A1         	call	_SETxSIGNAL	;wreg free
  6678                           
  6679                           ; BSR set to: 1
  6680                           ;mainStationPassing.c: 93:             activeTrack->stnOccupied = 0;
  6681   011F5C  EE20 F004          	lfsr	2,4
  6682   011F60  5059               	movf	_activeTrack^0,w,c
  6683   011F62  26D9               	addwf	fsr2l,f,c
  6684   011F64  505A               	movf	(_activeTrack+1)^0,w,c
  6685   011F66  22DA               	addwfc	fsr2h,f,c
  6686   011F68  6ADF               	clrf	indf2,c
  6687                           
  6688                           ; BSR set to: 1
  6689                           ;mainStationPassing.c: 94:             activeTrack->stnState = STN_IDLE;
  6690   011F6A  EE20 F001          	lfsr	2,1
  6691   011F6E  5059               	movf	_activeTrack^0,w,c
  6692   011F70  26D9               	addwf	fsr2l,f,c
  6693   011F72  505A               	movf	(_activeTrack+1)^0,w,c
  6694   011F74  22DA               	addwfc	fsr2h,f,c
  6695   011F76  0E78               	movlw	120
  6696   011F78  6EDF               	movwf	indf2,c
  6697                           
  6698                           ; BSR set to: 1
  6699                           ;mainStationPassing.c: 95:             activeTrack->stnSequence = SEQ_IDLE;
  6700   011F7A  EE20 F002          	lfsr	2,2
  6701   011F7E  5059               	movf	_activeTrack^0,w,c
  6702   011F80  26D9               	addwf	fsr2l,f,c
  6703   011F82  505A               	movf	(_activeTrack+1)^0,w,c
  6704   011F84  22DA               	addwfc	fsr2h,f,c
  6705   011F86  0E79               	movlw	121
  6706   011F88  6EDF               	movwf	indf2,c
  6707                           
  6708                           ; BSR set to: 1
  6709                           ;mainStationPassing.c: 96:             CREATExTASKxSTATUSxMESSAGE(self->name,
  6710   011F8A  C059  FFD9         	movff	_activeTrack,fsr2l
  6711   011F8E  C05A  FFDA         	movff	_activeTrack+1,fsr2h
  6712   011F92  50DF               	movf	indf2,w,c
  6713   011F94  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
  6714   011F96  EE20 F001          	lfsr	2,1
  6715   011F9A  5059               	movf	_activeTrack^0,w,c
  6716   011F9C  26D9               	addwf	fsr2l,f,c
  6717   011F9E  505A               	movf	(_activeTrack+1)^0,w,c
  6718   011FA0  22DA               	addwfc	fsr2h,f,c
  6719   011FA2  50DF               	movf	indf2,w,c
  6720   011FA4  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
  6721   011FA6  EE20 F002          	lfsr	2,2
  6722   011FAA  5059               	movf	_activeTrack^0,w,c
  6723   011FAC  26D9               	addwf	fsr2l,f,c
  6724   011FAE  505A               	movf	(_activeTrack+1)^0,w,c
  6725   011FB0  22DA               	addwfc	fsr2h,f,c
  6726   011FB2  50DF               	movf	indf2,w,c
  6727   011FB4  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
  6728   011FB6  C031  FFD9         	movff	MAINxSTATIONxPASSING@self,fsr2l
  6729   011FBA  C032  FFDA         	movff	MAINxSTATIONxPASSING@self+1,fsr2h
  6730   011FBE  50DF               	movf	indf2,w,c
  6731   011FC0  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
  6732                           
  6733                           ; BSR set to: 1
  6734                           ;mainStationPassing.c: 100:             activeTrack = 0;
  6735   011FC4  0E00               	movlw	0
  6736   011FC6  6E59               	movwf	_activeTrack^0,c
  6737   011FC8  0E00               	movlw	0
  6738   011FCA  6E5A               	movwf	(_activeTrack+1)^0,c
  6739   011FCC  0012               	return	
  6740   011FCE                     l14989:
  6741                           
  6742                           ;mainStationPassing.c: 106:             if((GETxMILLIS() - activeTrack->tCountTime) > ac
      +                          tiveTrack->tWaitTime){
  6743   011FCE  EE20 F006          	lfsr	2,6
  6744   011FD2  5059               	movf	_activeTrack^0,w,c
  6745   011FD4  26D9               	addwf	fsr2l,f,c
  6746   011FD6  505A               	movf	(_activeTrack+1)^0,w,c
  6747   011FD8  22DA               	addwfc	fsr2h,f,c
  6748   011FDA  CFDE F033          	movff	postinc2,??_MAINxSTATIONxPASSING
  6749   011FDE  CFDE F034          	movff	postinc2,??_MAINxSTATIONxPASSING+1
  6750   011FE2  CFDE F035          	movff	postinc2,??_MAINxSTATIONxPASSING+2
  6751   011FE6  CFDE F036          	movff	postinc2,??_MAINxSTATIONxPASSING+3
  6752   011FEA  EC50  F0C1         	call	_GETxMILLIS	;wreg free
  6753   011FEE  5033               	movf	??_MAINxSTATIONxPASSING^0,w,c
  6754   011FF0  5C05               	subwf	?_GETxMILLIS^0,w,c
  6755   011FF2  6E37               	movwf	(??_MAINxSTATIONxPASSING+4)^0,c
  6756   011FF4  5034               	movf	(??_MAINxSTATIONxPASSING+1)^0,w,c
  6757   011FF6  5806               	subwfb	(?_GETxMILLIS+1)^0,w,c
  6758   011FF8  6E38               	movwf	(??_MAINxSTATIONxPASSING+5)^0,c
  6759   011FFA  5035               	movf	(??_MAINxSTATIONxPASSING+2)^0,w,c
  6760   011FFC  5807               	subwfb	(?_GETxMILLIS+2)^0,w,c
  6761   011FFE  6E39               	movwf	(??_MAINxSTATIONxPASSING+6)^0,c
  6762   012000  5036               	movf	(??_MAINxSTATIONxPASSING+3)^0,w,c
  6763   012002  5808               	subwfb	(?_GETxMILLIS+3)^0,w,c
  6764   012004  6E3A               	movwf	(??_MAINxSTATIONxPASSING+7)^0,c
  6765   012006  EE20 F00A          	lfsr	2,10
  6766   01200A  5059               	movf	_activeTrack^0,w,c
  6767   01200C  26D9               	addwf	fsr2l,f,c
  6768   01200E  505A               	movf	(_activeTrack+1)^0,w,c
  6769   012010  22DA               	addwfc	fsr2h,f,c
  6770   012012  5037               	movf	(??_MAINxSTATIONxPASSING+4)^0,w,c
  6771   012014  5CDE               	subwf	postinc2,w,c
  6772   012016  5038               	movf	(??_MAINxSTATIONxPASSING+5)^0,w,c
  6773   012018  58DE               	subwfb	postinc2,w,c
  6774   01201A  5039               	movf	(??_MAINxSTATIONxPASSING+6)^0,w,c
  6775   01201C  58DE               	subwfb	postinc2,w,c
  6776   01201E  503A               	movf	(??_MAINxSTATIONxPASSING+7)^0,w,c
  6777   012020  58DE               	subwfb	postinc2,w,c
  6778   012022  B0D8               	btfsc	status,0,c
  6779   012024  0012               	return	
  6780                           
  6781                           ;mainStationPassing.c: 107:                 activeTrack->stnSequence = activeTrack->stnN
      +                          extState;
  6782   012026  EE20 F003          	lfsr	2,3
  6783   01202A  5059               	movf	_activeTrack^0,w,c
  6784   01202C  26D9               	addwf	fsr2l,f,c
  6785   01202E  505A               	movf	(_activeTrack+1)^0,w,c
  6786   012030  22DA               	addwfc	fsr2h,f,c
  6787   012032  EE10 F002          	lfsr	1,2
  6788   012036  5059               	movf	_activeTrack^0,w,c
  6789   012038  26E1               	addwf	fsr1l,f,c
  6790   01203A  505A               	movf	(_activeTrack+1)^0,w,c
  6791   01203C  22E2               	addwfc	fsr1h,f,c
  6792   01203E  CFDF FFE7          	movff	indf2,indf1
  6793   012042  0012               	return	
  6794   012044                     l14995:
  6795   012044  EE20 F002          	lfsr	2,2
  6796   012048  5059               	movf	_activeTrack^0,w,c
  6797   01204A  26D9               	addwf	fsr2l,f,c
  6798   01204C  505A               	movf	(_activeTrack+1)^0,w,c
  6799   01204E  22DA               	addwfc	fsr2h,f,c
  6800   012050  50DF               	movf	indf2,w,c
  6801   012052  6E33               	movwf	??_MAINxSTATIONxPASSING^0,c
  6802   012054  6A34               	clrf	(??_MAINxSTATIONxPASSING+1)^0,c
  6803                           
  6804                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6805                           ; Switch size 1, requested type "simple"
  6806                           ; Number of cases is 1, Range of values is 0 to 0
  6807                           ; switch strategies available:
  6808                           ; Name         Instructions Cycles
  6809                           ; simple_byte            4     3 (average)
  6810                           ;	Chosen strategy is simple_byte
  6811   012056  5034               	movf	(??_MAINxSTATIONxPASSING+1)^0,w,c
  6812   012058  0A00               	xorlw	0	; case 0
  6813   01205A  A4D8               	btfss	status,2,c
  6814   01205C  0012               	return	
  6815                           
  6816                           ; Switch size 1, requested type "simple"
  6817                           ; Number of cases is 6, Range of values is 121 to 126
  6818                           ; switch strategies available:
  6819                           ; Name         Instructions Cycles
  6820                           ; simple_byte           19    10 (average)
  6821                           ;	Chosen strategy is simple_byte
  6822   01205E  5033               	movf	??_MAINxSTATIONxPASSING^0,w,c
  6823   012060  0A79               	xorlw	121	; case 121
  6824   012062  B4D8               	btfsc	status,2,c
  6825   012064  D5E5               	goto	l14929
  6826   012066  0A03               	xorlw	3	; case 122
  6827   012068  B4D8               	btfsc	status,2,c
  6828   01206A  D7B1               	goto	l14989
  6829   01206C  0A01               	xorlw	1	; case 123
  6830   01206E  B4D8               	btfsc	status,2,c
  6831   012070  D65A               	goto	l14943
  6832   012072  0A07               	xorlw	7	; case 124
  6833   012074  B4D8               	btfsc	status,2,c
  6834   012076  D699               	goto	l14949
  6835   012078  0A01               	xorlw	1	; case 125
  6836   01207A  B4D8               	btfsc	status,2,c
  6837   01207C  D6D9               	goto	l14957
  6838   01207E  0A03               	xorlw	3	; case 126
  6839   012080  A4D8               	btfss	status,2,c
  6840   012082  0012               	return	
  6841   012084  D75B               	goto	l14973
  6842   012086                     __end_of_MAINxSTATIONxPASSING:
  6843                           	callstack 0
  6844                           
  6845 ;; *************** function _MAINxSTATIONxOUTBOUND *****************
  6846 ;; Defined at:
  6847 ;;		line 12 in file "mainStationOutbound.c"
  6848 ;; Parameters:    Size  Location     Type
  6849 ;;  self            2   48[COMRAM] PTR struct .
  6850 ;;		 -> bot(76), top(76), 
  6851 ;; Auto vars:     Size  Location     Type
  6852 ;;		None
  6853 ;; Return value:  Size  Location     Type
  6854 ;;                  1    wreg      char 
  6855 ;; Registers used:
  6856 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6857 ;; Tracked objects:
  6858 ;;		On entry : 0/1
  6859 ;;		On exit  : 0/0
  6860 ;;		Unchanged: 0/0
  6861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6862 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6864 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6865 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6866 ;;Total ram usage:       14 bytes
  6867 ;; Hardware stack levels used: 1
  6868 ;; Hardware stack levels required when called: 7
  6869 ;; This function calls:
  6870 ;;		_CREATExTASKxSTATUSxMESSAGE
  6871 ;;		_GETxMILLIS
  6872 ;;		_SETxOCC
  6873 ;;		_SETxSIGNAL
  6874 ;;		_SETxSTATIONxPATHWAY
  6875 ;; This function is called by:
  6876 ;;		_UPDATExSTATION
  6877 ;; This function uses a non-reentrant model
  6878 ;;
  6879                           
  6880                           	psect	text5
  6881   013B14                     __ptext5:
  6882                           	callstack 0
  6883   013B14                     _MAINxSTATIONxOUTBOUND:
  6884                           	callstack 22
  6885                           
  6886                           ;mainStationOutbound.c: 14:     if(self->stnTrack3.stnState == STN_OUTBOUND){
  6887                           
  6888                           ;incstack = 0
  6889   013B14  EE20 F03B          	lfsr	2,59
  6890   013B18  5031               	movf	MAINxSTATIONxOUTBOUND@self^0,w,c
  6891   013B1A  26D9               	addwf	fsr2l,f,c
  6892   013B1C  5032               	movf	(MAINxSTATIONxOUTBOUND@self+1)^0,w,c
  6893   013B1E  22DA               	addwfc	fsr2h,f,c
  6894   013B20  0E75               	movlw	117
  6895   013B22  18DE               	xorwf	postinc2,w,c
  6896   013B24  A4D8               	btfss	status,2,c
  6897   013B26  D002               	goto	l15005
  6898                           
  6899                           ;mainStationOutbound.c: 15:         activeTrack = &self->stnTrack3;
  6900   013B28  0E3A               	movlw	58
  6901   013B2A  D017               	goto	L8
  6902   013B2C                     l15005:
  6903   013B2C  EE20 F017          	lfsr	2,23
  6904   013B30  5031               	movf	MAINxSTATIONxOUTBOUND@self^0,w,c
  6905   013B32  26D9               	addwf	fsr2l,f,c
  6906   013B34  5032               	movf	(MAINxSTATIONxOUTBOUND@self+1)^0,w,c
  6907   013B36  22DA               	addwfc	fsr2h,f,c
  6908   013B38  0E75               	movlw	117
  6909   013B3A  18DE               	xorwf	postinc2,w,c
  6910   013B3C  A4D8               	btfss	status,2,c
  6911   013B3E  D002               	goto	l15009
  6912                           
  6913                           ;mainStationOutbound.c: 18:         activeTrack = &self->stnTrack1;
  6914   013B40  0E16               	movlw	22
  6915   013B42  D00B               	goto	L8
  6916   013B44                     l15009:
  6917   013B44  EE20 F029          	lfsr	2,41
  6918   013B48  5031               	movf	MAINxSTATIONxOUTBOUND@self^0,w,c
  6919   013B4A  26D9               	addwf	fsr2l,f,c
  6920   013B4C  5032               	movf	(MAINxSTATIONxOUTBOUND@self+1)^0,w,c
  6921   013B4E  22DA               	addwfc	fsr2h,f,c
  6922   013B50  0E75               	movlw	117
  6923   013B52  18DE               	xorwf	postinc2,w,c
  6924   013B54  A4D8               	btfss	status,2,c
  6925   013B56  0012               	return	
  6926                           
  6927                           ;mainStationOutbound.c: 21:         activeTrack = &self->stnTrack2;
  6928   013B58  0E28               	movlw	40
  6929   013B5A                     L8:
  6930   013B5A  2431               	addwf	MAINxSTATIONxOUTBOUND@self^0,w,c
  6931   013B5C  0100               	movlb	0	; () banked
  6932   013B5E  6FF8               	movwf	_activeTrack@mainStationOutbound$F2630& (0+255),b
  6933   013B60  0E00               	movlw	0
  6934   013B62  2032               	addwfc	(MAINxSTATIONxOUTBOUND@self+1)^0,w,c
  6935   013B64  6FF9               	movwf	(_activeTrack@mainStationOutbound$F2630+1)& (0+255),b
  6936                           
  6937                           ;mainStationOutbound.c: 22:     }
  6938   013B66  D1A4               	goto	l15069
  6939   013B68                     l15013:
  6940                           
  6941                           ; BSR set to: 0
  6942                           ;mainStationOutbound.c: 33:             if(0 == self->getOccBlkOut->value ){
  6943   013B68  EE20 F00A          	lfsr	2,10
  6944   013B6C  5031               	movf	MAINxSTATIONxOUTBOUND@self^0,w,c
  6945   013B6E  26D9               	addwf	fsr2l,f,c
  6946   013B70  5032               	movf	(MAINxSTATIONxOUTBOUND@self+1)^0,w,c
  6947   013B72  22DA               	addwfc	fsr2h,f,c
  6948   013B74  EE10 F00B          	lfsr	1,11
  6949   013B78  50DE               	movf	postinc2,w,c
  6950   013B7A  26E1               	addwf	fsr1l,f,c
  6951   013B7C  50DD               	movf	postdec2,w,c
  6952   013B7E  22E2               	addwfc	fsr1h,f,c
  6953   013B80  50E7               	movf	indf1,w,c
  6954   013B82  A4D8               	btfss	status,2,c
  6955   013B84  0012               	return	
  6956                           
  6957                           ; BSR set to: 0
  6958                           ;mainStationOutbound.c: 34:                 SETxSTATIONxPATHWAY(self, activeTrack->track
      +                          Nr, STN_OUTBOUND);
  6959   013B86  C031  F022         	movff	MAINxSTATIONxOUTBOUND@self,SETxSTATIONxPATHWAY@self
  6960   013B8A  C032  F023         	movff	MAINxSTATIONxOUTBOUND@self+1,SETxSTATIONxPATHWAY@self+1
  6961   013B8E  EE20 F005          	lfsr	2,5
  6962   013B92  51F8               	movf	_activeTrack@mainStationOutbound$F2630& (0+255),w,b
  6963   013B94  26D9               	addwf	fsr2l,f,c
  6964   013B96  51F9               	movf	(_activeTrack@mainStationOutbound$F2630+1)& (0+255),w,b
  6965   013B98  22DA               	addwfc	fsr2h,f,c
  6966   013B9A  50DF               	movf	indf2,w,c
  6967   013B9C  6E24               	movwf	SETxSTATIONxPATHWAY@path^0,c
  6968   013B9E  0E75               	movlw	117
  6969   013BA0  6E25               	movwf	SETxSTATIONxPATHWAY@dir^0,c
  6970   013BA2  ECDF  F094         	call	_SETxSTATIONxPATHWAY	;wreg free
  6971                           
  6972                           ;mainStationOutbound.c: 35:                 SETxSIGNAL(self, activeTrack->trackNr, SIG_G
      +                          REEN);
  6973   013BA6  C031  F022         	movff	MAINxSTATIONxOUTBOUND@self,SETxSIGNAL@self
  6974   013BAA  C032  F023         	movff	MAINxSTATIONxOUTBOUND@self+1,SETxSIGNAL@self+1
  6975   013BAE  0100               	movlb	0	; () banked
  6976   013BB0  EE20 F005          	lfsr	2,5
  6977   013BB4  51F8               	movf	_activeTrack@mainStationOutbound$F2630& (0+255),w,b
  6978   013BB6  26D9               	addwf	fsr2l,f,c
  6979   013BB8  51F9               	movf	(_activeTrack@mainStationOutbound$F2630+1)& (0+255),w,b
  6980   013BBA  22DA               	addwfc	fsr2h,f,c
  6981   013BBC  50DF               	movf	indf2,w,c
  6982   013BBE  6E24               	movwf	SETxSIGNAL@path^0,c
  6983   013BC0  0E82               	movlw	130
  6984   013BC2  6E25               	movwf	SETxSIGNAL@signal^0,c
  6985   013BC4  EC36  F0A1         	call	_SETxSIGNAL	;wreg free
  6986                           
  6987                           ; BSR set to: 1
  6988                           ;mainStationOutbound.c: 36:                 activeTrack->tCountTime = GETxMILLIS();
  6989   013BC8  EC50  F0C1         	call	_GETxMILLIS	;wreg free
  6990   013BCC  0100               	movlb	0	; () banked
  6991   013BCE  EE20 F006          	lfsr	2,6
  6992   013BD2  51F8               	movf	_activeTrack@mainStationOutbound$F2630& (0+255),w,b
  6993   013BD4  26D9               	addwf	fsr2l,f,c
  6994   013BD6  51F9               	movf	(_activeTrack@mainStationOutbound$F2630+1)& (0+255),w,b
  6995   013BD8  22DA               	addwfc	fsr2h,f,c
  6996   013BDA  C005  FFDE         	movff	?_GETxMILLIS,postinc2
  6997   013BDE  C006  FFDE         	movff	?_GETxMILLIS+1,postinc2
  6998   013BE2  C007  FFDE         	movff	?_GETxMILLIS+2,postinc2
  6999   013BE6  C008  FFDE         	movff	?_GETxMILLIS+3,postinc2
  7000                           
  7001                           ; BSR set to: 0
  7002   013BEA  EE20 F00A          	lfsr	2,10
  7003   013BEE  51F8               	movf	_activeTrack@mainStationOutbound$F2630& (0+255),w,b
  7004   013BF0  26D9               	addwf	fsr2l,f,c
  7005   013BF2  51F9               	movf	(_activeTrack@mainStationOutbound$F2630+1)& (0+255),w,b
  7006   013BF4  22DA               	addwfc	fsr2h,f,c
  7007   013BF6  0E58               	movlw	88
  7008   013BF8  6EDE               	movwf	postinc2,c
  7009   013BFA  0E1B               	movlw	27
  7010   013BFC  6EDE               	movwf	postinc2,c
  7011   013BFE  0E00               	movlw	0
  7012   013C00  6EDE               	movwf	postinc2,c
  7013   013C02  0E00               	movlw	0
  7014   013C04  6EDD               	movwf	postdec2,c
  7015                           
  7016                           ; BSR set to: 0
  7017                           ;mainStationOutbound.c: 38:                 activeTrack->stnNextState = SEQ_SET_OCC;
  7018   013C06  EE20 F003          	lfsr	2,3
  7019   013C0A  51F8               	movf	_activeTrack@mainStationOutbound$F2630& (0+255),w,b
  7020   013C0C  26D9               	addwf	fsr2l,f,c
  7021   013C0E  51F9               	movf	(_activeTrack@mainStationOutbound$F2630+1)& (0+255),w,b
  7022   013C10  22DA               	addwfc	fsr2h,f,c
  7023   013C12  0E7B               	movlw	123
  7024   013C14  6EDF               	movwf	indf2,c
  7025                           
  7026                           ; BSR set to: 0
  7027                           ;mainStationOutbound.c: 39:                 activeTrack->stnSequence = SEQ_WAIT;
  7028   013C16  EE20 F002          	lfsr	2,2
  7029   013C1A  51F8               	movf	_activeTrack@mainStationOutbound$F2630& (0+255),w,b
  7030   013C1C  26D9               	addwf	fsr2l,f,c
  7031   013C1E  51F9               	movf	(_activeTrack@mainStationOutbound$F2630+1)& (0+255),w,b
  7032   013C20  22DA               	addwfc	fsr2h,f,c
  7033   013C22  0E7A               	movlw	122
  7034   013C24  6EDF               	movwf	indf2,c
  7035                           
  7036                           ; BSR set to: 0
  7037                           ;mainStationOutbound.c: 40:                 CREATExTASKxSTATUSxMESSAGE(self->name,
  7038   013C26  C0F8  FFD9         	movff	_activeTrack@mainStationOutbound$F2630,fsr2l
  7039   013C2A  C0F9  FFDA         	movff	_activeTrack@mainStationOutbound$F2630+1,fsr2h
  7040   013C2E  50DF               	movf	indf2,w,c
  7041   013C30  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
  7042   013C32  EE20 F001          	lfsr	2,1
  7043   013C36  51F8               	movf	_activeTrack@mainStationOutbound$F2630& (0+255),w,b
  7044   013C38  26D9               	addwf	fsr2l,f,c
  7045   013C3A  51F9               	movf	(_activeTrack@mainStationOutbound$F2630+1)& (0+255),w,b
  7046   013C3C  22DA               	addwfc	fsr2h,f,c
  7047   013C3E  50DF               	movf	indf2,w,c
  7048   013C40  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
  7049   013C42  EE20 F002          	lfsr	2,2
  7050   013C46  51F8               	movf	_activeTrack@mainStationOutbound$F2630& (0+255),w,b
  7051   013C48  26D9               	addwf	fsr2l,f,c
  7052   013C4A  51F9               	movf	(_activeTrack@mainStationOutbound$F2630+1)& (0+255),w,b
  7053   013C4C  22DA               	addwfc	fsr2h,f,c
  7054   013C4E  50DF               	movf	indf2,w,c
  7055   013C50  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
  7056   013C52  C031  FFD9         	movff	MAINxSTATIONxOUTBOUND@self,fsr2l
  7057   013C56  C032  FFDA         	movff	MAINxSTATIONxOUTBOUND@self+1,fsr2h
  7058   013C5A  50DF               	movf	indf2,w,c
  7059   013C5C  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
  7060   013C60  0012               	return	
  7061   013C62                     l15027:
  7062                           
  7063                           ; BSR set to: 0
  7064                           ;mainStationOutbound.c: 49:             SETxOCC(activeTrack->setOccStn, 0);
  7065   013C62  EE20 F00E          	lfsr	2,14
  7066   013C66  51F8               	movf	_activeTrack@mainStationOutbound$F2630& (0+255),w,b
  7067   013C68  26D9               	addwf	fsr2l,f,c
  7068   013C6A  51F9               	movf	(_activeTrack@mainStationOutbound$F2630+1)& (0+255),w,b
  7069   013C6C  22DA               	addwfc	fsr2h,f,c
  7070   013C6E  CFDE F005          	movff	postinc2,SETxOCC@self
  7071   013C72  CFDD F006          	movff	postdec2,SETxOCC@self+1
  7072   013C76  0E00               	movlw	0
  7073   013C78  6E07               	movwf	SETxOCC@value^0,c
  7074   013C7A  ECC0  F0BA         	call	_SETxOCC	;wreg free
  7075                           
  7076                           ;mainStationOutbound.c: 50:             activeTrack->stnSequence = SEQ_CHK_TRAIN;
  7077   013C7E  0100               	movlb	0	; () banked
  7078   013C80  EE20 F002          	lfsr	2,2
  7079   013C84  51F8               	movf	_activeTrack@mainStationOutbound$F2630& (0+255),w,b
  7080   013C86  26D9               	addwf	fsr2l,f,c
  7081   013C88  51F9               	movf	(_activeTrack@mainStationOutbound$F2630+1)& (0+255),w,b
  7082   013C8A  22DA               	addwfc	fsr2h,f,c
  7083   013C8C  0E7C               	movlw	124
  7084   013C8E  6EDF               	movwf	indf2,c
  7085                           
  7086                           ; BSR set to: 0
  7087                           ;mainStationOutbound.c: 51:             CREATExTASKxSTATUSxMESSAGE(self->name,
  7088   013C90  C0F8  FFD9         	movff	_activeTrack@mainStationOutbound$F2630,fsr2l
  7089   013C94  C0F9  FFDA         	movff	_activeTrack@mainStationOutbound$F2630+1,fsr2h
  7090   013C98  50DF               	movf	indf2,w,c
  7091   013C9A  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
  7092   013C9C  EE20 F001          	lfsr	2,1
  7093   013CA0  51F8               	movf	_activeTrack@mainStationOutbound$F2630& (0+255),w,b
  7094   013CA2  26D9               	addwf	fsr2l,f,c
  7095   013CA4  51F9               	movf	(_activeTrack@mainStationOutbound$F2630+1)& (0+255),w,b
  7096   013CA6  22DA               	addwfc	fsr2h,f,c
  7097   013CA8  50DF               	movf	indf2,w,c
  7098   013CAA  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
  7099   013CAC  EE20 F002          	lfsr	2,2
  7100   013CB0  51F8               	movf	_activeTrack@mainStationOutbound$F2630& (0+255),w,b
  7101   013CB2  26D9               	addwf	fsr2l,f,c
  7102   013CB4  51F9               	movf	(_activeTrack@mainStationOutbound$F2630+1)& (0+255),w,b
  7103   013CB6  22DA               	addwfc	fsr2h,f,c
  7104   013CB8  50DF               	movf	indf2,w,c
  7105   013CBA  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
  7106   013CBC  C031  FFD9         	movff	MAINxSTATIONxOUTBOUND@self,fsr2l
  7107   013CC0  C032  FFDA         	movff	MAINxSTATIONxOUTBOUND@self+1,fsr2h
  7108   013CC4  50DF               	movf	indf2,w,c
  7109   013CC6  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
  7110                           
  7111                           ;mainStationOutbound.c: 55:             break;
  7112   013CCA  0012               	return	
  7113   013CCC                     l15033:
  7114                           
  7115                           ; BSR set to: 0
  7116                           ;mainStationOutbound.c: 62:             if(0 == activeTrack->getOccStn->value &&
  7117   013CCC  EE20 F010          	lfsr	2,16
  7118   013CD0  51F8               	movf	_activeTrack@mainStationOutbound$F2630& (0+255),w,b
  7119   013CD2  26D9               	addwf	fsr2l,f,c
  7120   013CD4  51F9               	movf	(_activeTrack@mainStationOutbound$F2630+1)& (0+255),w,b
  7121   013CD6  22DA               	addwfc	fsr2h,f,c
  7122   013CD8  EE10 F00B          	lfsr	1,11
  7123   013CDC  50DE               	movf	postinc2,w,c
  7124   013CDE  26E1               	addwf	fsr1l,f,c
  7125   013CE0  50DD               	movf	postdec2,w,c
  7126   013CE2  22E2               	addwfc	fsr1h,f,c
  7127   013CE4  50E7               	movf	indf1,w,c
  7128   013CE6  A4D8               	btfss	status,2,c
  7129   013CE8  0012               	return	
  7130                           
  7131                           ; BSR set to: 0
  7132   013CEA  EE20 F00A          	lfsr	2,10
  7133   013CEE  5031               	movf	MAINxSTATIONxOUTBOUND@self^0,w,c
  7134   013CF0  26D9               	addwf	fsr2l,f,c
  7135   013CF2  5032               	movf	(MAINxSTATIONxOUTBOUND@self+1)^0,w,c
  7136   013CF4  22DA               	addwfc	fsr2h,f,c
  7137   013CF6  EE10 F00B          	lfsr	1,11
  7138   013CFA  50DE               	movf	postinc2,w,c
  7139   013CFC  26E1               	addwf	fsr1l,f,c
  7140   013CFE  50DD               	movf	postdec2,w,c
  7141   013D00  22E2               	addwfc	fsr1h,f,c
  7142   013D02  04E6               	decf	postinc1,w,c
  7143   013D04  A4D8               	btfss	status,2,c
  7144   013D06  0012               	return	
  7145                           
  7146                           ; BSR set to: 0
  7147                           ;mainStationOutbound.c: 63:                     1 == self->getOccBlkOut->value){;mainSta
      +                          tionOutbound.c: 64:                 activeTrack->tCountTime = GETxMILLIS();
  7148   013D08  EC50  F0C1         	call	_GETxMILLIS	;wreg free
  7149   013D0C  0100               	movlb	0	; () banked
  7150   013D0E  EE20 F006          	lfsr	2,6
  7151   013D12  51F8               	movf	_activeTrack@mainStationOutbound$F2630& (0+255),w,b
  7152   013D14  26D9               	addwf	fsr2l,f,c
  7153   013D16  51F9               	movf	(_activeTrack@mainStationOutbound$F2630+1)& (0+255),w,b
  7154   013D18  22DA               	addwfc	fsr2h,f,c
  7155   013D1A  C005  FFDE         	movff	?_GETxMILLIS,postinc2
  7156   013D1E  C006  FFDE         	movff	?_GETxMILLIS+1,postinc2
  7157   013D22  C007  FFDE         	movff	?_GETxMILLIS+2,postinc2
  7158   013D26  C008  FFDE         	movff	?_GETxMILLIS+3,postinc2
  7159                           
  7160                           ; BSR set to: 0
  7161   013D2A  EE20 F00A          	lfsr	2,10
  7162   013D2E  51F8               	movf	_activeTrack@mainStationOutbound$F2630& (0+255),w,b
  7163   013D30  26D9               	addwf	fsr2l,f,c
  7164   013D32  51F9               	movf	(_activeTrack@mainStationOutbound$F2630+1)& (0+255),w,b
  7165   013D34  22DA               	addwfc	fsr2h,f,c
  7166   013D36  0E10               	movlw	16
  7167   013D38  6EDE               	movwf	postinc2,c
  7168   013D3A  0E27               	movlw	39
  7169   013D3C  6EDE               	movwf	postinc2,c
  7170   013D3E  0E00               	movlw	0
  7171   013D40  6EDE               	movwf	postinc2,c
  7172   013D42  0E00               	movlw	0
  7173   013D44  6EDD               	movwf	postdec2,c
  7174                           
  7175                           ; BSR set to: 0
  7176                           ;mainStationOutbound.c: 66:                 activeTrack->stnNextState = SEQ_OUTBOUND_LEF
      +                          T_STATTION;
  7177   013D46  EE20 F003          	lfsr	2,3
  7178   013D4A  51F8               	movf	_activeTrack@mainStationOutbound$F2630& (0+255),w,b
  7179   013D4C  26D9               	addwf	fsr2l,f,c
  7180   013D4E  51F9               	movf	(_activeTrack@mainStationOutbound$F2630+1)& (0+255),w,b
  7181   013D50  22DA               	addwfc	fsr2h,f,c
  7182   013D52  0E7E               	movlw	126
  7183   013D54  6EDF               	movwf	indf2,c
  7184                           
  7185                           ; BSR set to: 0
  7186                           ;mainStationOutbound.c: 67:                 activeTrack->stnSequence = SEQ_WAIT;
  7187   013D56  EE20 F002          	lfsr	2,2
  7188   013D5A  51F8               	movf	_activeTrack@mainStationOutbound$F2630& (0+255),w,b
  7189   013D5C  26D9               	addwf	fsr2l,f,c
  7190   013D5E  51F9               	movf	(_activeTrack@mainStationOutbound$F2630+1)& (0+255),w,b
  7191   013D60  22DA               	addwfc	fsr2h,f,c
  7192   013D62  0E7A               	movlw	122
  7193   013D64  6EDF               	movwf	indf2,c
  7194                           
  7195                           ; BSR set to: 0
  7196                           ;mainStationOutbound.c: 68:                 CREATExTASKxSTATUSxMESSAGE(self->name,
  7197   013D66  C0F8  FFD9         	movff	_activeTrack@mainStationOutbound$F2630,fsr2l
  7198   013D6A  C0F9  FFDA         	movff	_activeTrack@mainStationOutbound$F2630+1,fsr2h
  7199   013D6E  50DF               	movf	indf2,w,c
  7200   013D70  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
  7201   013D72  EE20 F001          	lfsr	2,1
  7202   013D76  51F8               	movf	_activeTrack@mainStationOutbound$F2630& (0+255),w,b
  7203   013D78  26D9               	addwf	fsr2l,f,c
  7204   013D7A  51F9               	movf	(_activeTrack@mainStationOutbound$F2630+1)& (0+255),w,b
  7205   013D7C  22DA               	addwfc	fsr2h,f,c
  7206   013D7E  50DF               	movf	indf2,w,c
  7207   013D80  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
  7208   013D82  EE20 F002          	lfsr	2,2
  7209   013D86  51F8               	movf	_activeTrack@mainStationOutbound$F2630& (0+255),w,b
  7210   013D88  26D9               	addwf	fsr2l,f,c
  7211   013D8A  51F9               	movf	(_activeTrack@mainStationOutbound$F2630+1)& (0+255),w,b
  7212   013D8C  22DA               	addwfc	fsr2h,f,c
  7213   013D8E  50DF               	movf	indf2,w,c
  7214   013D90  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
  7215   013D92  C031  FFD9         	movff	MAINxSTATIONxOUTBOUND@self,fsr2l
  7216   013D96  C032  FFDA         	movff	MAINxSTATIONxOUTBOUND@self+1,fsr2h
  7217   013D9A  50DF               	movf	indf2,w,c
  7218   013D9C  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
  7219   013DA0  0012               	return	
  7220   013DA2                     l15047:
  7221                           
  7222                           ; BSR set to: 0
  7223                           ;mainStationOutbound.c: 76:             SETxSIGNAL(self, activeTrack->trackNr, SIG_RED);
  7224   013DA2  C031  F022         	movff	MAINxSTATIONxOUTBOUND@self,SETxSIGNAL@self
  7225   013DA6  C032  F023         	movff	MAINxSTATIONxOUTBOUND@self+1,SETxSIGNAL@self+1
  7226   013DAA  EE20 F005          	lfsr	2,5
  7227   013DAE  51F8               	movf	_activeTrack@mainStationOutbound$F2630& (0+255),w,b
  7228   013DB0  26D9               	addwf	fsr2l,f,c
  7229   013DB2  51F9               	movf	(_activeTrack@mainStationOutbound$F2630+1)& (0+255),w,b
  7230   013DB4  22DA               	addwfc	fsr2h,f,c
  7231   013DB6  50DF               	movf	indf2,w,c
  7232   013DB8  6E24               	movwf	SETxSIGNAL@path^0,c
  7233   013DBA  0E81               	movlw	129
  7234   013DBC  6E25               	movwf	SETxSIGNAL@signal^0,c
  7235   013DBE  EC36  F0A1         	call	_SETxSIGNAL	;wreg free
  7236                           
  7237                           ; BSR set to: 1
  7238                           ;mainStationOutbound.c: 77:             activeTrack->stnOccupied = 0;
  7239   013DC2  0100               	movlb	0	; () banked
  7240   013DC4  EE20 F004          	lfsr	2,4
  7241   013DC8  51F8               	movf	_activeTrack@mainStationOutbound$F2630& (0+255),w,b
  7242   013DCA  26D9               	addwf	fsr2l,f,c
  7243   013DCC  51F9               	movf	(_activeTrack@mainStationOutbound$F2630+1)& (0+255),w,b
  7244   013DCE  22DA               	addwfc	fsr2h,f,c
  7245   013DD0  6ADF               	clrf	indf2,c
  7246                           
  7247                           ; BSR set to: 0
  7248                           ;mainStationOutbound.c: 78:             activeTrack->stnState = STN_IDLE;
  7249   013DD2  EE20 F001          	lfsr	2,1
  7250   013DD6  51F8               	movf	_activeTrack@mainStationOutbound$F2630& (0+255),w,b
  7251   013DD8  26D9               	addwf	fsr2l,f,c
  7252   013DDA  51F9               	movf	(_activeTrack@mainStationOutbound$F2630+1)& (0+255),w,b
  7253   013DDC  22DA               	addwfc	fsr2h,f,c
  7254   013DDE  0E78               	movlw	120
  7255   013DE0  6EDF               	movwf	indf2,c
  7256                           
  7257                           ; BSR set to: 0
  7258                           ;mainStationOutbound.c: 79:             activeTrack->stnSequence = SEQ_IDLE;
  7259   013DE2  EE20 F002          	lfsr	2,2
  7260   013DE6  51F8               	movf	_activeTrack@mainStationOutbound$F2630& (0+255),w,b
  7261   013DE8  26D9               	addwf	fsr2l,f,c
  7262   013DEA  51F9               	movf	(_activeTrack@mainStationOutbound$F2630+1)& (0+255),w,b
  7263   013DEC  22DA               	addwfc	fsr2h,f,c
  7264   013DEE  0E79               	movlw	121
  7265   013DF0  6EDF               	movwf	indf2,c
  7266                           
  7267                           ; BSR set to: 0
  7268                           ;mainStationOutbound.c: 80:             CREATExTASKxSTATUSxMESSAGE(self->name,
  7269   013DF2  C0F8  FFD9         	movff	_activeTrack@mainStationOutbound$F2630,fsr2l
  7270   013DF6  C0F9  FFDA         	movff	_activeTrack@mainStationOutbound$F2630+1,fsr2h
  7271   013DFA  50DF               	movf	indf2,w,c
  7272   013DFC  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
  7273   013DFE  EE20 F001          	lfsr	2,1
  7274   013E02  51F8               	movf	_activeTrack@mainStationOutbound$F2630& (0+255),w,b
  7275   013E04  26D9               	addwf	fsr2l,f,c
  7276   013E06  51F9               	movf	(_activeTrack@mainStationOutbound$F2630+1)& (0+255),w,b
  7277   013E08  22DA               	addwfc	fsr2h,f,c
  7278   013E0A  50DF               	movf	indf2,w,c
  7279   013E0C  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
  7280   013E0E  EE20 F002          	lfsr	2,2
  7281   013E12  51F8               	movf	_activeTrack@mainStationOutbound$F2630& (0+255),w,b
  7282   013E14  26D9               	addwf	fsr2l,f,c
  7283   013E16  51F9               	movf	(_activeTrack@mainStationOutbound$F2630+1)& (0+255),w,b
  7284   013E18  22DA               	addwfc	fsr2h,f,c
  7285   013E1A  50DF               	movf	indf2,w,c
  7286   013E1C  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
  7287   013E1E  C031  FFD9         	movff	MAINxSTATIONxOUTBOUND@self,fsr2l
  7288   013E22  C032  FFDA         	movff	MAINxSTATIONxOUTBOUND@self+1,fsr2h
  7289   013E26  50DF               	movf	indf2,w,c
  7290   013E28  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
  7291                           
  7292                           ; BSR set to: 1
  7293                           ;mainStationOutbound.c: 84:             activeTrack = 0;
  7294   013E2C  0E00               	movlw	0
  7295   013E2E  0100               	movlb	0	; () banked
  7296   013E30  6FF8               	movwf	_activeTrack@mainStationOutbound$F2630& (0+255),b
  7297   013E32  0E00               	movlw	0
  7298   013E34  6FF9               	movwf	(_activeTrack@mainStationOutbound$F2630+1)& (0+255),b
  7299   013E36  0012               	return	
  7300   013E38                     l15063:
  7301                           
  7302                           ; BSR set to: 0
  7303                           ;mainStationOutbound.c: 90:             if((GETxMILLIS() - activeTrack->tCountTime) > ac
      +                          tiveTrack->tWaitTime){
  7304   013E38  EE20 F006          	lfsr	2,6
  7305   013E3C  51F8               	movf	_activeTrack@mainStationOutbound$F2630& (0+255),w,b
  7306   013E3E  26D9               	addwf	fsr2l,f,c
  7307   013E40  51F9               	movf	(_activeTrack@mainStationOutbound$F2630+1)& (0+255),w,b
  7308   013E42  22DA               	addwfc	fsr2h,f,c
  7309   013E44  CFDE F033          	movff	postinc2,??_MAINxSTATIONxOUTBOUND
  7310   013E48  CFDE F034          	movff	postinc2,??_MAINxSTATIONxOUTBOUND+1
  7311   013E4C  CFDE F035          	movff	postinc2,??_MAINxSTATIONxOUTBOUND+2
  7312   013E50  CFDE F036          	movff	postinc2,??_MAINxSTATIONxOUTBOUND+3
  7313   013E54  EC50  F0C1         	call	_GETxMILLIS	;wreg free
  7314   013E58  5033               	movf	??_MAINxSTATIONxOUTBOUND^0,w,c
  7315   013E5A  5C05               	subwf	?_GETxMILLIS^0,w,c
  7316   013E5C  6E37               	movwf	(??_MAINxSTATIONxOUTBOUND+4)^0,c
  7317   013E5E  5034               	movf	(??_MAINxSTATIONxOUTBOUND+1)^0,w,c
  7318   013E60  5806               	subwfb	(?_GETxMILLIS+1)^0,w,c
  7319   013E62  6E38               	movwf	(??_MAINxSTATIONxOUTBOUND+5)^0,c
  7320   013E64  5035               	movf	(??_MAINxSTATIONxOUTBOUND+2)^0,w,c
  7321   013E66  5807               	subwfb	(?_GETxMILLIS+2)^0,w,c
  7322   013E68  6E39               	movwf	(??_MAINxSTATIONxOUTBOUND+6)^0,c
  7323   013E6A  5036               	movf	(??_MAINxSTATIONxOUTBOUND+3)^0,w,c
  7324   013E6C  5808               	subwfb	(?_GETxMILLIS+3)^0,w,c
  7325   013E6E  6E3A               	movwf	(??_MAINxSTATIONxOUTBOUND+7)^0,c
  7326   013E70  0100               	movlb	0	; () banked
  7327   013E72  EE20 F00A          	lfsr	2,10
  7328   013E76  51F8               	movf	_activeTrack@mainStationOutbound$F2630& (0+255),w,b
  7329   013E78  26D9               	addwf	fsr2l,f,c
  7330   013E7A  51F9               	movf	(_activeTrack@mainStationOutbound$F2630+1)& (0+255),w,b
  7331   013E7C  22DA               	addwfc	fsr2h,f,c
  7332   013E7E  5037               	movf	(??_MAINxSTATIONxOUTBOUND+4)^0,w,c
  7333   013E80  5CDE               	subwf	postinc2,w,c
  7334   013E82  5038               	movf	(??_MAINxSTATIONxOUTBOUND+5)^0,w,c
  7335   013E84  58DE               	subwfb	postinc2,w,c
  7336   013E86  5039               	movf	(??_MAINxSTATIONxOUTBOUND+6)^0,w,c
  7337   013E88  58DE               	subwfb	postinc2,w,c
  7338   013E8A  503A               	movf	(??_MAINxSTATIONxOUTBOUND+7)^0,w,c
  7339   013E8C  58DE               	subwfb	postinc2,w,c
  7340   013E8E  B0D8               	btfsc	status,0,c
  7341   013E90  0012               	return	
  7342                           
  7343                           ; BSR set to: 0
  7344                           ;mainStationOutbound.c: 91:                 activeTrack->stnSequence = activeTrack->stnN
      +                          extState;
  7345   013E92  EE20 F003          	lfsr	2,3
  7346   013E96  51F8               	movf	_activeTrack@mainStationOutbound$F2630& (0+255),w,b
  7347   013E98  26D9               	addwf	fsr2l,f,c
  7348   013E9A  51F9               	movf	(_activeTrack@mainStationOutbound$F2630+1)& (0+255),w,b
  7349   013E9C  22DA               	addwfc	fsr2h,f,c
  7350   013E9E  EE10 F002          	lfsr	1,2
  7351   013EA2  51F8               	movf	_activeTrack@mainStationOutbound$F2630& (0+255),w,b
  7352   013EA4  26E1               	addwf	fsr1l,f,c
  7353   013EA6  51F9               	movf	(_activeTrack@mainStationOutbound$F2630+1)& (0+255),w,b
  7354   013EA8  22E2               	addwfc	fsr1h,f,c
  7355   013EAA  CFDF FFE7          	movff	indf2,indf1
  7356   013EAE  0012               	return	
  7357   013EB0                     l15069:
  7358                           
  7359                           ; BSR set to: 0
  7360   013EB0  EE20 F002          	lfsr	2,2
  7361   013EB4  51F8               	movf	_activeTrack@mainStationOutbound$F2630& (0+255),w,b
  7362   013EB6  26D9               	addwf	fsr2l,f,c
  7363   013EB8  51F9               	movf	(_activeTrack@mainStationOutbound$F2630+1)& (0+255),w,b
  7364   013EBA  22DA               	addwfc	fsr2h,f,c
  7365   013EBC  50DF               	movf	indf2,w,c
  7366   013EBE  6E33               	movwf	??_MAINxSTATIONxOUTBOUND^0,c
  7367   013EC0  6A34               	clrf	(??_MAINxSTATIONxOUTBOUND+1)^0,c
  7368                           
  7369                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7370                           ; Switch size 1, requested type "simple"
  7371                           ; Number of cases is 1, Range of values is 0 to 0
  7372                           ; switch strategies available:
  7373                           ; Name         Instructions Cycles
  7374                           ; simple_byte            4     3 (average)
  7375                           ;	Chosen strategy is simple_byte
  7376   013EC2  5034               	movf	(??_MAINxSTATIONxOUTBOUND+1)^0,w,c
  7377   013EC4  0A00               	xorlw	0	; case 0
  7378   013EC6  A4D8               	btfss	status,2,c
  7379   013EC8  0012               	return	
  7380                           
  7381                           ; BSR set to: 0
  7382                           ; Switch size 1, requested type "simple"
  7383                           ; Number of cases is 5, Range of values is 121 to 126
  7384                           ; switch strategies available:
  7385                           ; Name         Instructions Cycles
  7386                           ; simple_byte           16     9 (average)
  7387                           ;	Chosen strategy is simple_byte
  7388   013ECA  5033               	movf	??_MAINxSTATIONxOUTBOUND^0,w,c
  7389   013ECC  0A79               	xorlw	121	; case 121
  7390   013ECE  B4D8               	btfsc	status,2,c
  7391   013ED0  D64B               	goto	l15013
  7392   013ED2  0A03               	xorlw	3	; case 122
  7393   013ED4  B4D8               	btfsc	status,2,c
  7394   013ED6  D7B0               	goto	l15063
  7395   013ED8  0A01               	xorlw	1	; case 123
  7396   013EDA  B4D8               	btfsc	status,2,c
  7397   013EDC  D6C2               	goto	l15027
  7398   013EDE  0A07               	xorlw	7	; case 124
  7399   013EE0  B4D8               	btfsc	status,2,c
  7400   013EE2  D6F4               	goto	l15033
  7401   013EE4  0A02               	xorlw	2	; case 126
  7402   013EE6  A4D8               	btfss	status,2,c
  7403   013EE8  0012               	return	
  7404   013EEA  D75B               	goto	l15047
  7405   013EEC                     __end_of_MAINxSTATIONxOUTBOUND:
  7406                           	callstack 0
  7407                           
  7408 ;; *************** function _SETxSIGNAL *****************
  7409 ;; Defined at:
  7410 ;;		line 11 in file "tracksignal.c"
  7411 ;; Parameters:    Size  Location     Type
  7412 ;;  self            2   33[COMRAM] PTR struct .
  7413 ;;		 -> bot(76), top(76), 
  7414 ;;  path            1   35[COMRAM] enum E5014
  7415 ;;  signal          1   36[COMRAM] enum E4977
  7416 ;; Auto vars:     Size  Location     Type
  7417 ;;  pin6            1   47[COMRAM] unsigned char 
  7418 ;;  pin5            1   46[COMRAM] unsigned char 
  7419 ;;  pin4            1   45[COMRAM] unsigned char 
  7420 ;;  pin3            1   44[COMRAM] unsigned char 
  7421 ;;  pin2            1   43[COMRAM] unsigned char 
  7422 ;;  pin1            1   42[COMRAM] unsigned char 
  7423 ;; Return value:  Size  Location     Type
  7424 ;;                  1    wreg      void 
  7425 ;; Registers used:
  7426 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7427 ;; Tracked objects:
  7428 ;;		On entry : 0/1
  7429 ;;		On exit  : 3F/1
  7430 ;;		Unchanged: 0/0
  7431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7432 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7433 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7434 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7435 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7436 ;;Total ram usage:       15 bytes
  7437 ;; Hardware stack levels used: 1
  7438 ;; Hardware stack levels required when called: 6
  7439 ;; This function calls:
  7440 ;;		_CREATExTASKxSTATUSxMESSAGE
  7441 ;; This function is called by:
  7442 ;;		_UPDATExSTATION
  7443 ;;		_MAINxSTATIONxPASSING
  7444 ;;		_MAINxSTATIONxOUTBOUND
  7445 ;; This function uses a non-reentrant model
  7446 ;;
  7447                           
  7448                           	psect	text6
  7449   01426C                     __ptext6:
  7450                           	callstack 0
  7451   01426C                     _SETxSIGNAL:
  7452                           	callstack 23
  7453                           
  7454                           ;tracksignal.c: 11: void SETxSIGNAL(STATION *self, TASK_MESSAGES path, TASK_STATE signal
      +                          );tracksignal.c: 11:             };tracksignal.c: 12: {;tracksignal.c: 12:             e
      +                          lse if(path == TRACK2 || path == TRACK11){;tracksignal.c: 14:                 *self->set
      +                          Signal->port4_ptr |= pin4;
  7455                           
  7456                           ;incstack = 0
  7457   01426C  EE20 F010          	lfsr	2,16
  7458   014270  5022               	movf	SETxSIGNAL@self^0,w,c
  7459   014272  26D9               	addwf	fsr2l,f,c
  7460   014274  5023               	movf	(SETxSIGNAL@self+1)^0,w,c
  7461   014276  22DA               	addwfc	fsr2h,f,c
  7462   014278  EE10 F002          	lfsr	1,2
  7463   01427C  50DE               	movf	postinc2,w,c
  7464   01427E  26E1               	addwf	fsr1l,f,c
  7465   014280  50DD               	movf	postdec2,w,c
  7466   014282  22E2               	addwfc	fsr1h,f,c
  7467   014284  50E7               	movf	indf1,w,c
  7468   014286  6E2B               	movwf	SETxSIGNAL@pin1^0,c
  7469                           
  7470                           ;tracksignal.c: 15:             }
  7471   014288  EE20 F010          	lfsr	2,16
  7472   01428C  5022               	movf	SETxSIGNAL@self^0,w,c
  7473   01428E  26D9               	addwf	fsr2l,f,c
  7474   014290  5023               	movf	(SETxSIGNAL@self+1)^0,w,c
  7475   014292  22DA               	addwfc	fsr2h,f,c
  7476   014294  EE10 F005          	lfsr	1,5
  7477   014298  50DE               	movf	postinc2,w,c
  7478   01429A  26E1               	addwf	fsr1l,f,c
  7479   01429C  50DD               	movf	postdec2,w,c
  7480   01429E  22E2               	addwfc	fsr1h,f,c
  7481   0142A0  50E7               	movf	indf1,w,c
  7482   0142A2  6E2C               	movwf	SETxSIGNAL@pin2^0,c
  7483                           
  7484                           ;tracksignal.c: 16:             else if(path == TRACK3 || path == TRACK12){
  7485   0142A4  EE20 F010          	lfsr	2,16
  7486   0142A8  5022               	movf	SETxSIGNAL@self^0,w,c
  7487   0142AA  26D9               	addwf	fsr2l,f,c
  7488   0142AC  5023               	movf	(SETxSIGNAL@self+1)^0,w,c
  7489   0142AE  22DA               	addwfc	fsr2h,f,c
  7490   0142B0  EE10 F008          	lfsr	1,8
  7491   0142B4  50DE               	movf	postinc2,w,c
  7492   0142B6  26E1               	addwf	fsr1l,f,c
  7493   0142B8  50DD               	movf	postdec2,w,c
  7494   0142BA  22E2               	addwfc	fsr1h,f,c
  7495   0142BC  50E7               	movf	indf1,w,c
  7496   0142BE  6E2D               	movwf	SETxSIGNAL@pin3^0,c
  7497                           
  7498                           ;tracksignal.c: 17:                 *self->setSignal->port5_ptr &= ~pin5;
  7499   0142C0  EE20 F010          	lfsr	2,16
  7500   0142C4  5022               	movf	SETxSIGNAL@self^0,w,c
  7501   0142C6  26D9               	addwf	fsr2l,f,c
  7502   0142C8  5023               	movf	(SETxSIGNAL@self+1)^0,w,c
  7503   0142CA  22DA               	addwfc	fsr2h,f,c
  7504   0142CC  EE10 F00B          	lfsr	1,11
  7505   0142D0  50DE               	movf	postinc2,w,c
  7506   0142D2  26E1               	addwf	fsr1l,f,c
  7507   0142D4  50DD               	movf	postdec2,w,c
  7508   0142D6  22E2               	addwfc	fsr1h,f,c
  7509   0142D8  50E7               	movf	indf1,w,c
  7510   0142DA  6E2E               	movwf	SETxSIGNAL@pin4^0,c
  7511                           
  7512                           ;tracksignal.c: 18:                 *self->setSignal->port6_ptr |= pin6;
  7513   0142DC  EE20 F010          	lfsr	2,16
  7514   0142E0  5022               	movf	SETxSIGNAL@self^0,w,c
  7515   0142E2  26D9               	addwf	fsr2l,f,c
  7516   0142E4  5023               	movf	(SETxSIGNAL@self+1)^0,w,c
  7517   0142E6  22DA               	addwfc	fsr2h,f,c
  7518   0142E8  EE10 F00E          	lfsr	1,14
  7519   0142EC  50DE               	movf	postinc2,w,c
  7520   0142EE  26E1               	addwf	fsr1l,f,c
  7521   0142F0  50DD               	movf	postdec2,w,c
  7522   0142F2  22E2               	addwfc	fsr1h,f,c
  7523   0142F4  50E7               	movf	indf1,w,c
  7524   0142F6  6E2F               	movwf	SETxSIGNAL@pin5^0,c
  7525                           
  7526                           ;tracksignal.c: 19:             }
  7527   0142F8  EE20 F010          	lfsr	2,16
  7528   0142FC  5022               	movf	SETxSIGNAL@self^0,w,c
  7529   0142FE  26D9               	addwf	fsr2l,f,c
  7530   014300  5023               	movf	(SETxSIGNAL@self+1)^0,w,c
  7531   014302  22DA               	addwfc	fsr2h,f,c
  7532   014304  EE10 F011          	lfsr	1,17
  7533   014308  50DE               	movf	postinc2,w,c
  7534   01430A  26E1               	addwf	fsr1l,f,c
  7535   01430C  50DD               	movf	postdec2,w,c
  7536   01430E  22E2               	addwfc	fsr1h,f,c
  7537   014310  50E7               	movf	indf1,w,c
  7538   014312  6E30               	movwf	SETxSIGNAL@pin6^0,c
  7539                           
  7540                           ;tracksignal.c: 21: 
  7541   014314  D136               	goto	l14597
  7542   014316                     l14555:
  7543                           
  7544                           ;tracksignal.c: 23:             if(path == TRACK1|| path == TRACK10){
  7545   014316  0E9F               	movlw	159
  7546   014318  1824               	xorwf	SETxSIGNAL@path^0,w,c
  7547   01431A  B4D8               	btfsc	status,2,c
  7548   01431C  D004               	goto	u13030
  7549   01431E  0EA2               	movlw	162
  7550   014320  1824               	xorwf	SETxSIGNAL@path^0,w,c
  7551   014322  A4D8               	btfss	status,2,c
  7552   014324  D031               	goto	l14563
  7553   014326                     u13030:
  7554                           
  7555                           ;tracksignal.c: 24:                 *self->setSignal->port1_ptr |= pin1;
  7556   014326  502B               	movf	SETxSIGNAL@pin1^0,w,c
  7557   014328  0AFF               	xorlw	255
  7558   01432A  6E26               	movwf	??_SETxSIGNAL^0,c
  7559   01432C  EE20 F010          	lfsr	2,16
  7560   014330  5022               	movf	SETxSIGNAL@self^0,w,c
  7561   014332  26D9               	addwf	fsr2l,f,c
  7562   014334  5023               	movf	(SETxSIGNAL@self+1)^0,w,c
  7563   014336  22DA               	addwfc	fsr2h,f,c
  7564   014338  CFDE F027          	movff	postinc2,??_SETxSIGNAL+1
  7565   01433C  CFDD F028          	movff	postdec2,??_SETxSIGNAL+2
  7566   014340  C027  FFD9         	movff	??_SETxSIGNAL+1,fsr2l
  7567   014344  C028  FFDA         	movff	??_SETxSIGNAL+2,fsr2h
  7568   014348  CFDE F029          	movff	postinc2,??_SETxSIGNAL+3
  7569   01434C  CFDD F02A          	movff	postdec2,??_SETxSIGNAL+4
  7570   014350  C029  FFD9         	movff	??_SETxSIGNAL+3,fsr2l
  7571   014354  C02A  FFDA         	movff	??_SETxSIGNAL+4,fsr2h
  7572   014358  5026               	movf	??_SETxSIGNAL^0,w,c
  7573   01435A  16DF               	andwf	indf2,f,c
  7574                           
  7575                           ;tracksignal.c: 25:                 *self->setSignal->port2_ptr &= ~pin2;
  7576   01435C  EE20 F010          	lfsr	2,16
  7577   014360  5022               	movf	SETxSIGNAL@self^0,w,c
  7578   014362  26D9               	addwf	fsr2l,f,c
  7579   014364  5023               	movf	(SETxSIGNAL@self+1)^0,w,c
  7580   014366  22DA               	addwfc	fsr2h,f,c
  7581   014368  EE10 F003          	lfsr	1,3
  7582   01436C  50DE               	movf	postinc2,w,c
  7583   01436E  26E1               	addwf	fsr1l,f,c
  7584   014370  50DD               	movf	postdec2,w,c
  7585   014372  22E2               	addwfc	fsr1h,f,c
  7586   014374  CFE6 F026          	movff	postinc1,??_SETxSIGNAL
  7587   014378  CFE5 F027          	movff	postdec1,??_SETxSIGNAL+1
  7588   01437C  C026  FFD9         	movff	??_SETxSIGNAL,fsr2l
  7589   014380  C027  FFDA         	movff	??_SETxSIGNAL+1,fsr2h
  7590   014384  502C               	movf	SETxSIGNAL@pin2^0,w,c
  7591   014386  D06D               	goto	L10
  7592   014388                     l14563:
  7593   014388  0EA0               	movlw	160
  7594   01438A  1824               	xorwf	SETxSIGNAL@path^0,w,c
  7595   01438C  B4D8               	btfsc	status,2,c
  7596   01438E  D004               	goto	u13050
  7597   014390  0EA3               	movlw	163
  7598   014392  1824               	xorwf	SETxSIGNAL@path^0,w,c
  7599   014394  A4D8               	btfss	status,2,c
  7600   014396  D02F               	goto	l14569
  7601   014398                     u13050:
  7602                           
  7603                           ;tracksignal.c: 28:                 *self->setSignal->port3_ptr |= pin3;
  7604   014398  502D               	movf	SETxSIGNAL@pin3^0,w,c
  7605   01439A  0AFF               	xorlw	255
  7606   01439C  6E26               	movwf	??_SETxSIGNAL^0,c
  7607   01439E  EE20 F010          	lfsr	2,16
  7608   0143A2  5022               	movf	SETxSIGNAL@self^0,w,c
  7609   0143A4  26D9               	addwf	fsr2l,f,c
  7610   0143A6  5023               	movf	(SETxSIGNAL@self+1)^0,w,c
  7611   0143A8  22DA               	addwfc	fsr2h,f,c
  7612   0143AA  EE10 F006          	lfsr	1,6
  7613   0143AE  50DE               	movf	postinc2,w,c
  7614   0143B0  26E1               	addwf	fsr1l,f,c
  7615   0143B2  50DD               	movf	postdec2,w,c
  7616   0143B4  22E2               	addwfc	fsr1h,f,c
  7617   0143B6  CFE6 F027          	movff	postinc1,??_SETxSIGNAL+1
  7618   0143BA  CFE5 F028          	movff	postdec1,??_SETxSIGNAL+2
  7619   0143BE  C027  FFD9         	movff	??_SETxSIGNAL+1,fsr2l
  7620   0143C2  C028  FFDA         	movff	??_SETxSIGNAL+2,fsr2h
  7621   0143C6  5026               	movf	??_SETxSIGNAL^0,w,c
  7622   0143C8  16DF               	andwf	indf2,f,c
  7623                           
  7624                           ;tracksignal.c: 29:                 *self->setSignal->port4_ptr &= ~pin4;
  7625   0143CA  EE20 F010          	lfsr	2,16
  7626   0143CE  5022               	movf	SETxSIGNAL@self^0,w,c
  7627   0143D0  26D9               	addwf	fsr2l,f,c
  7628   0143D2  5023               	movf	(SETxSIGNAL@self+1)^0,w,c
  7629   0143D4  22DA               	addwfc	fsr2h,f,c
  7630   0143D6  EE10 F009          	lfsr	1,9
  7631   0143DA  50DE               	movf	postinc2,w,c
  7632   0143DC  26E1               	addwf	fsr1l,f,c
  7633   0143DE  50DD               	movf	postdec2,w,c
  7634   0143E0  22E2               	addwfc	fsr1h,f,c
  7635   0143E2  CFE6 F026          	movff	postinc1,??_SETxSIGNAL
  7636   0143E6  CFE5 F027          	movff	postdec1,??_SETxSIGNAL+1
  7637   0143EA  C026  FFD9         	movff	??_SETxSIGNAL,fsr2l
  7638   0143EE  C027  FFDA         	movff	??_SETxSIGNAL+1,fsr2h
  7639   0143F2  502E               	movf	SETxSIGNAL@pin4^0,w,c
  7640   0143F4  D036               	goto	L10
  7641   0143F6                     l14569:
  7642   0143F6  0EA1               	movlw	161
  7643   0143F8  1824               	xorwf	SETxSIGNAL@path^0,w,c
  7644   0143FA  B4D8               	btfsc	status,2,c
  7645   0143FC  D004               	goto	u13070
  7646   0143FE  0EA4               	movlw	164
  7647   014400  1824               	xorwf	SETxSIGNAL@path^0,w,c
  7648   014402  A4D8               	btfss	status,2,c
  7649   014404  D0CC               	goto	l14599
  7650   014406                     u13070:
  7651                           
  7652                           ;tracksignal.c: 32:                 *self->setSignal->port5_ptr |= pin5;
  7653   014406  502F               	movf	SETxSIGNAL@pin5^0,w,c
  7654   014408  0AFF               	xorlw	255
  7655   01440A  6E26               	movwf	??_SETxSIGNAL^0,c
  7656   01440C  EE20 F010          	lfsr	2,16
  7657   014410  5022               	movf	SETxSIGNAL@self^0,w,c
  7658   014412  26D9               	addwf	fsr2l,f,c
  7659   014414  5023               	movf	(SETxSIGNAL@self+1)^0,w,c
  7660   014416  22DA               	addwfc	fsr2h,f,c
  7661   014418  EE10 F00C          	lfsr	1,12
  7662   01441C  50DE               	movf	postinc2,w,c
  7663   01441E  26E1               	addwf	fsr1l,f,c
  7664   014420  50DD               	movf	postdec2,w,c
  7665   014422  22E2               	addwfc	fsr1h,f,c
  7666   014424  CFE6 F027          	movff	postinc1,??_SETxSIGNAL+1
  7667   014428  CFE5 F028          	movff	postdec1,??_SETxSIGNAL+2
  7668   01442C  C027  FFD9         	movff	??_SETxSIGNAL+1,fsr2l
  7669   014430  C028  FFDA         	movff	??_SETxSIGNAL+2,fsr2h
  7670   014434  5026               	movf	??_SETxSIGNAL^0,w,c
  7671   014436  16DF               	andwf	indf2,f,c
  7672                           
  7673                           ;tracksignal.c: 33:                 *self->setSignal->port6_ptr &= ~pin6;
  7674   014438  EE20 F010          	lfsr	2,16
  7675   01443C  5022               	movf	SETxSIGNAL@self^0,w,c
  7676   01443E  26D9               	addwf	fsr2l,f,c
  7677   014440  5023               	movf	(SETxSIGNAL@self+1)^0,w,c
  7678   014442  22DA               	addwfc	fsr2h,f,c
  7679   014444  EE10 F00F          	lfsr	1,15
  7680   014448  50DE               	movf	postinc2,w,c
  7681   01444A  26E1               	addwf	fsr1l,f,c
  7682   01444C  50DD               	movf	postdec2,w,c
  7683   01444E  22E2               	addwfc	fsr1h,f,c
  7684   014450  CFE6 F026          	movff	postinc1,??_SETxSIGNAL
  7685   014454  CFE5 F027          	movff	postdec1,??_SETxSIGNAL+1
  7686   014458  C026  FFD9         	movff	??_SETxSIGNAL,fsr2l
  7687   01445C  C027  FFDA         	movff	??_SETxSIGNAL+1,fsr2h
  7688   014460  5030               	movf	SETxSIGNAL@pin6^0,w,c
  7689   014462                     L10:
  7690   014462  12DF               	iorwf	indf2,f,c
  7691                           
  7692                           ;tracksignal.c: 35:             break;
  7693   014464  D09C               	goto	l14599
  7694   014466                     l14575:
  7695                           
  7696                           ;tracksignal.c: 38:     }
  7697   014466  0E9F               	movlw	159
  7698   014468  1824               	xorwf	SETxSIGNAL@path^0,w,c
  7699   01446A  B4D8               	btfsc	status,2,c
  7700   01446C  D004               	goto	u13090
  7701   01446E  0EA2               	movlw	162
  7702   014470  1824               	xorwf	SETxSIGNAL@path^0,w,c
  7703   014472  A4D8               	btfss	status,2,c
  7704   014474  D024               	goto	l14583
  7705   014476                     u13090:
  7706                           
  7707                           ;tracksignal.c: 39: 
  7708   014476  EE20 F010          	lfsr	2,16
  7709   01447A  5022               	movf	SETxSIGNAL@self^0,w,c
  7710   01447C  26D9               	addwf	fsr2l,f,c
  7711   01447E  5023               	movf	(SETxSIGNAL@self+1)^0,w,c
  7712   014480  22DA               	addwfc	fsr2h,f,c
  7713   014482  CFDE F026          	movff	postinc2,??_SETxSIGNAL
  7714   014486  CFDD F027          	movff	postdec2,??_SETxSIGNAL+1
  7715   01448A  C026  FFD9         	movff	??_SETxSIGNAL,fsr2l
  7716   01448E  C027  FFDA         	movff	??_SETxSIGNAL+1,fsr2h
  7717   014492  CFDE F028          	movff	postinc2,??_SETxSIGNAL+2
  7718   014496  CFDD F029          	movff	postdec2,??_SETxSIGNAL+3
  7719   01449A  C028  FFD9         	movff	??_SETxSIGNAL+2,fsr2l
  7720   01449E  C029  FFDA         	movff	??_SETxSIGNAL+3,fsr2h
  7721   0144A2  502B               	movf	SETxSIGNAL@pin1^0,w,c
  7722   0144A4  12DF               	iorwf	indf2,f,c
  7723                           
  7724                           ;tracksignal.c: 40:     CREATExTASKxSTATUSxMESSAGE(self->name,
  7725   0144A6  502C               	movf	SETxSIGNAL@pin2^0,w,c
  7726   0144A8  0AFF               	xorlw	255
  7727   0144AA  6E26               	movwf	??_SETxSIGNAL^0,c
  7728   0144AC  EE20 F010          	lfsr	2,16
  7729   0144B0  5022               	movf	SETxSIGNAL@self^0,w,c
  7730   0144B2  26D9               	addwf	fsr2l,f,c
  7731   0144B4  5023               	movf	(SETxSIGNAL@self+1)^0,w,c
  7732   0144B6  22DA               	addwfc	fsr2h,f,c
  7733   0144B8  EE10 F003          	lfsr	1,3
  7734   0144BC  D053               	goto	L12
  7735   0144BE                     l14583:
  7736   0144BE  0EA0               	movlw	160
  7737   0144C0  1824               	xorwf	SETxSIGNAL@path^0,w,c
  7738   0144C2  B4D8               	btfsc	status,2,c
  7739   0144C4  D004               	goto	u13110
  7740   0144C6  0EA3               	movlw	163
  7741   0144C8  1824               	xorwf	SETxSIGNAL@path^0,w,c
  7742   0144CA  A4D8               	btfss	status,2,c
  7743   0144CC  D022               	goto	l14589
  7744   0144CE                     u13110:
  7745                           
  7746                           ;tracksignal.c: 43:             path);
  7747   0144CE  EE20 F010          	lfsr	2,16
  7748   0144D2  5022               	movf	SETxSIGNAL@self^0,w,c
  7749   0144D4  26D9               	addwf	fsr2l,f,c
  7750   0144D6  5023               	movf	(SETxSIGNAL@self+1)^0,w,c
  7751   0144D8  22DA               	addwfc	fsr2h,f,c
  7752   0144DA  EE10 F006          	lfsr	1,6
  7753   0144DE  50DE               	movf	postinc2,w,c
  7754   0144E0  26E1               	addwf	fsr1l,f,c
  7755   0144E2  50DD               	movf	postdec2,w,c
  7756   0144E4  22E2               	addwfc	fsr1h,f,c
  7757   0144E6  CFE6 F026          	movff	postinc1,??_SETxSIGNAL
  7758   0144EA  CFE5 F027          	movff	postdec1,??_SETxSIGNAL+1
  7759   0144EE  C026  FFD9         	movff	??_SETxSIGNAL,fsr2l
  7760   0144F2  C027  FFDA         	movff	??_SETxSIGNAL+1,fsr2h
  7761   0144F6  502D               	movf	SETxSIGNAL@pin3^0,w,c
  7762   0144F8  12DF               	iorwf	indf2,f,c
  7763                           
  7764                           ;tracksignal.c: 44: 
  7765   0144FA  502E               	movf	SETxSIGNAL@pin4^0,w,c
  7766   0144FC  0AFF               	xorlw	255
  7767   0144FE  6E26               	movwf	??_SETxSIGNAL^0,c
  7768   014500  EE20 F010          	lfsr	2,16
  7769   014504  5022               	movf	SETxSIGNAL@self^0,w,c
  7770   014506  26D9               	addwf	fsr2l,f,c
  7771   014508  5023               	movf	(SETxSIGNAL@self+1)^0,w,c
  7772   01450A  22DA               	addwfc	fsr2h,f,c
  7773   01450C  EE10 F009          	lfsr	1,9
  7774   014510  D029               	goto	L12
  7775   014512                     l14589:
  7776   014512  0EA1               	movlw	161
  7777   014514  1824               	xorwf	SETxSIGNAL@path^0,w,c
  7778   014516  B4D8               	btfsc	status,2,c
  7779   014518  D004               	goto	u13130
  7780   01451A  0EA4               	movlw	164
  7781   01451C  1824               	xorwf	SETxSIGNAL@path^0,w,c
  7782   01451E  A4D8               	btfss	status,2,c
  7783   014520  D03E               	goto	l14599
  7784   014522                     u13130:
  7785   014522  EE20 F010          	lfsr	2,16
  7786   014526  5022               	movf	SETxSIGNAL@self^0,w,c
  7787   014528  26D9               	addwf	fsr2l,f,c
  7788   01452A  5023               	movf	(SETxSIGNAL@self+1)^0,w,c
  7789   01452C  22DA               	addwfc	fsr2h,f,c
  7790   01452E  EE10 F00C          	lfsr	1,12
  7791   014532  50DE               	movf	postinc2,w,c
  7792   014534  26E1               	addwf	fsr1l,f,c
  7793   014536  50DD               	movf	postdec2,w,c
  7794   014538  22E2               	addwfc	fsr1h,f,c
  7795   01453A  CFE6 F026          	movff	postinc1,??_SETxSIGNAL
  7796   01453E  CFE5 F027          	movff	postdec1,??_SETxSIGNAL+1
  7797   014542  C026  FFD9         	movff	??_SETxSIGNAL,fsr2l
  7798   014546  C027  FFDA         	movff	??_SETxSIGNAL+1,fsr2h
  7799   01454A  502F               	movf	SETxSIGNAL@pin5^0,w,c
  7800   01454C  12DF               	iorwf	indf2,f,c
  7801   01454E  5030               	movf	SETxSIGNAL@pin6^0,w,c
  7802   014550  0AFF               	xorlw	255
  7803   014552  6E26               	movwf	??_SETxSIGNAL^0,c
  7804   014554  EE20 F010          	lfsr	2,16
  7805   014558  5022               	movf	SETxSIGNAL@self^0,w,c
  7806   01455A  26D9               	addwf	fsr2l,f,c
  7807   01455C  5023               	movf	(SETxSIGNAL@self+1)^0,w,c
  7808   01455E  22DA               	addwfc	fsr2h,f,c
  7809   014560  EE10 F00F          	lfsr	1,15
  7810   014564                     L12:
  7811   014564  50DE               	movf	postinc2,w,c
  7812   014566  26E1               	addwf	fsr1l,f,c
  7813   014568  50DD               	movf	postdec2,w,c
  7814   01456A  22E2               	addwfc	fsr1h,f,c
  7815   01456C  CFE6 F027          	movff	postinc1,??_SETxSIGNAL+1
  7816   014570  CFE5 F028          	movff	postdec1,??_SETxSIGNAL+2
  7817   014574  C027  FFD9         	movff	??_SETxSIGNAL+1,fsr2l
  7818   014578  C028  FFDA         	movff	??_SETxSIGNAL+2,fsr2h
  7819   01457C  5026               	movf	??_SETxSIGNAL^0,w,c
  7820   01457E  16DF               	andwf	indf2,f,c
  7821   014580  D00E               	goto	l14599
  7822   014582                     l14597:
  7823   014582  5025               	movf	SETxSIGNAL@signal^0,w,c
  7824   014584  6E26               	movwf	??_SETxSIGNAL^0,c
  7825   014586  6A27               	clrf	(??_SETxSIGNAL+1)^0,c
  7826                           
  7827                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7828                           ; Switch size 1, requested type "simple"
  7829                           ; Number of cases is 1, Range of values is 0 to 0
  7830                           ; switch strategies available:
  7831                           ; Name         Instructions Cycles
  7832                           ; simple_byte            4     3 (average)
  7833                           ;	Chosen strategy is simple_byte
  7834   014588  5027               	movf	(??_SETxSIGNAL+1)^0,w,c
  7835   01458A  0A00               	xorlw	0	; case 0
  7836   01458C  A4D8               	btfss	status,2,c
  7837   01458E  D007               	goto	l14599
  7838                           
  7839                           ; Switch size 1, requested type "simple"
  7840                           ; Number of cases is 2, Range of values is 129 to 130
  7841                           ; switch strategies available:
  7842                           ; Name         Instructions Cycles
  7843                           ; simple_byte            7     4 (average)
  7844                           ;	Chosen strategy is simple_byte
  7845   014590  5026               	movf	??_SETxSIGNAL^0,w,c
  7846   014592  0A81               	xorlw	129	; case 129
  7847   014594  B4D8               	btfsc	status,2,c
  7848   014596  D6BF               	goto	l14555
  7849   014598  0A03               	xorlw	3	; case 130
  7850   01459A  B4D8               	btfsc	status,2,c
  7851   01459C  D764               	goto	l14575
  7852   01459E                     l14599:
  7853   01459E  0E86               	movlw	134
  7854   0145A0  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
  7855   0145A2  C025  F013         	movff	SETxSIGNAL@signal,CREATExTASKxSTATUSxMESSAGE@task_state
  7856   0145A6  C024  F014         	movff	SETxSIGNAL@path,CREATExTASKxSTATUSxMESSAGE@task_messages
  7857   0145AA  C022  FFD9         	movff	SETxSIGNAL@self,fsr2l
  7858   0145AE  C023  FFDA         	movff	SETxSIGNAL@self+1,fsr2h
  7859   0145B2  50DF               	movf	indf2,w,c
  7860   0145B4  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
  7861                           
  7862                           ; BSR set to: 1
  7863   0145B8  0012               	return		;funcret
  7864   0145BA                     __end_of_SETxSIGNAL:
  7865                           	callstack 0
  7866                           
  7867 ;; *************** function _MAINxSTATIONxINBOUND *****************
  7868 ;; Defined at:
  7869 ;;		line 12 in file "mainStationInbound.c"
  7870 ;; Parameters:    Size  Location     Type
  7871 ;;  self            2   46[COMRAM] PTR struct .
  7872 ;;		 -> bot(76), top(76), 
  7873 ;; Auto vars:     Size  Location     Type
  7874 ;;		None
  7875 ;; Return value:  Size  Location     Type
  7876 ;;                  1    wreg      char 
  7877 ;; Registers used:
  7878 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7879 ;; Tracked objects:
  7880 ;;		On entry : 0/1
  7881 ;;		On exit  : 0/0
  7882 ;;		Unchanged: 0/0
  7883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7884 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7886 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7887 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7888 ;;Total ram usage:       14 bytes
  7889 ;; Hardware stack levels used: 1
  7890 ;; Hardware stack levels required when called: 7
  7891 ;; This function calls:
  7892 ;;		_CREATExTASKxSTATUSxMESSAGE
  7893 ;;		_GETxMILLIS
  7894 ;;		_GETxRANDOMxNUMBER
  7895 ;;		_SETxOCC
  7896 ;;		_SETxSTATIONxPATHWAY
  7897 ;;		___lldiv
  7898 ;; This function is called by:
  7899 ;;		_UPDATExSTATION
  7900 ;; This function uses a non-reentrant model
  7901 ;;
  7902                           
  7903                           	psect	text7
  7904   012E4C                     __ptext7:
  7905                           	callstack 0
  7906   012E4C                     _MAINxSTATIONxINBOUND:
  7907                           	callstack 22
  7908                           
  7909                           ;mainStationInbound.c: 14:     if(self->stnTrack1.stnState == STN_INBOUND){
  7910                           
  7911                           ; BSR set to: 1
  7912                           ;incstack = 0
  7913   012E4C  EE20 F017          	lfsr	2,23
  7914   012E50  502F               	movf	MAINxSTATIONxINBOUND@self^0,w,c
  7915   012E52  26D9               	addwf	fsr2l,f,c
  7916   012E54  5030               	movf	(MAINxSTATIONxINBOUND@self+1)^0,w,c
  7917   012E56  22DA               	addwfc	fsr2h,f,c
  7918   012E58  0E74               	movlw	116
  7919   012E5A  18DE               	xorwf	postinc2,w,c
  7920   012E5C  A4D8               	btfss	status,2,c
  7921   012E5E  D002               	goto	l14839
  7922                           
  7923                           ;mainStationInbound.c: 15:         activeTrack = &self->stnTrack1;
  7924   012E60  0E16               	movlw	22
  7925   012E62  D017               	goto	L14
  7926   012E64                     l14839:
  7927   012E64  EE20 F029          	lfsr	2,41
  7928   012E68  502F               	movf	MAINxSTATIONxINBOUND@self^0,w,c
  7929   012E6A  26D9               	addwf	fsr2l,f,c
  7930   012E6C  5030               	movf	(MAINxSTATIONxINBOUND@self+1)^0,w,c
  7931   012E6E  22DA               	addwfc	fsr2h,f,c
  7932   012E70  0E74               	movlw	116
  7933   012E72  18DE               	xorwf	postinc2,w,c
  7934   012E74  A4D8               	btfss	status,2,c
  7935   012E76  D002               	goto	l14843
  7936                           
  7937                           ;mainStationInbound.c: 18:         activeTrack = &self->stnTrack2;
  7938   012E78  0E28               	movlw	40
  7939   012E7A  D00B               	goto	L14
  7940   012E7C                     l14843:
  7941   012E7C  EE20 F03B          	lfsr	2,59
  7942   012E80  502F               	movf	MAINxSTATIONxINBOUND@self^0,w,c
  7943   012E82  26D9               	addwf	fsr2l,f,c
  7944   012E84  5030               	movf	(MAINxSTATIONxINBOUND@self+1)^0,w,c
  7945   012E86  22DA               	addwfc	fsr2h,f,c
  7946   012E88  0E74               	movlw	116
  7947   012E8A  18DE               	xorwf	postinc2,w,c
  7948   012E8C  A4D8               	btfss	status,2,c
  7949   012E8E  0012               	return	
  7950                           
  7951                           ;mainStationInbound.c: 21:         activeTrack = &self->stnTrack3;
  7952   012E90  0E3A               	movlw	58
  7953   012E92                     L14:
  7954   012E92  242F               	addwf	MAINxSTATIONxINBOUND@self^0,w,c
  7955   012E94  0100               	movlb	0	; () banked
  7956   012E96  6FFA               	movwf	_activeTrack@mainStationInbound$F2313& (0+255),b
  7957   012E98  0E00               	movlw	0
  7958   012E9A  2030               	addwfc	(MAINxSTATIONxINBOUND@self+1)^0,w,c
  7959   012E9C  6FFB               	movwf	(_activeTrack@mainStationInbound$F2313+1)& (0+255),b
  7960                           
  7961                           ;mainStationInbound.c: 22:     }
  7962   012E9E  D1FB               	goto	l14909
  7963   012EA0                     l14847:
  7964                           
  7965                           ; BSR set to: 0
  7966                           ;mainStationInbound.c: 33:             SETxSTATIONxPATHWAY(self, activeTrack->trackNr, S
      +                          TN_INBOUND);
  7967   012EA0  C02F  F022         	movff	MAINxSTATIONxINBOUND@self,SETxSTATIONxPATHWAY@self
  7968   012EA4  C030  F023         	movff	MAINxSTATIONxINBOUND@self+1,SETxSTATIONxPATHWAY@self+1
  7969   012EA8  EE20 F005          	lfsr	2,5
  7970   012EAC  51FA               	movf	_activeTrack@mainStationInbound$F2313& (0+255),w,b
  7971   012EAE  26D9               	addwf	fsr2l,f,c
  7972   012EB0  51FB               	movf	(_activeTrack@mainStationInbound$F2313+1)& (0+255),w,b
  7973   012EB2  22DA               	addwfc	fsr2h,f,c
  7974   012EB4  50DF               	movf	indf2,w,c
  7975   012EB6  6E24               	movwf	SETxSTATIONxPATHWAY@path^0,c
  7976   012EB8  0E74               	movlw	116
  7977   012EBA  6E25               	movwf	SETxSTATIONxPATHWAY@dir^0,c
  7978   012EBC  ECDF  F094         	call	_SETxSTATIONxPATHWAY	;wreg free
  7979                           
  7980                           ; BSR set to: 1
  7981                           ;mainStationInbound.c: 34:             activeTrack->tCountTime = GETxMILLIS();
  7982   012EC0  EC50  F0C1         	call	_GETxMILLIS	;wreg free
  7983   012EC4  0100               	movlb	0	; () banked
  7984   012EC6  EE20 F006          	lfsr	2,6
  7985   012ECA  51FA               	movf	_activeTrack@mainStationInbound$F2313& (0+255),w,b
  7986   012ECC  26D9               	addwf	fsr2l,f,c
  7987   012ECE  51FB               	movf	(_activeTrack@mainStationInbound$F2313+1)& (0+255),w,b
  7988   012ED0  22DA               	addwfc	fsr2h,f,c
  7989   012ED2  C005  FFDE         	movff	?_GETxMILLIS,postinc2
  7990   012ED6  C006  FFDE         	movff	?_GETxMILLIS+1,postinc2
  7991   012EDA  C007  FFDE         	movff	?_GETxMILLIS+2,postinc2
  7992   012EDE  C008  FFDE         	movff	?_GETxMILLIS+3,postinc2
  7993                           
  7994                           ; BSR set to: 0
  7995   012EE2  EE20 F00A          	lfsr	2,10
  7996   012EE6  51FA               	movf	_activeTrack@mainStationInbound$F2313& (0+255),w,b
  7997   012EE8  26D9               	addwf	fsr2l,f,c
  7998   012EEA  51FB               	movf	(_activeTrack@mainStationInbound$F2313+1)& (0+255),w,b
  7999   012EEC  22DA               	addwfc	fsr2h,f,c
  8000   012EEE  0E58               	movlw	88
  8001   012EF0  6EDE               	movwf	postinc2,c
  8002   012EF2  0E1B               	movlw	27
  8003   012EF4  6EDE               	movwf	postinc2,c
  8004   012EF6  0E00               	movlw	0
  8005   012EF8  6EDE               	movwf	postinc2,c
  8006   012EFA  0E00               	movlw	0
  8007   012EFC  6EDD               	movwf	postdec2,c
  8008                           
  8009                           ; BSR set to: 0
  8010                           ;mainStationInbound.c: 36:             activeTrack->stnNextState = SEQ_SET_OCC;
  8011   012EFE  EE20 F003          	lfsr	2,3
  8012   012F02  51FA               	movf	_activeTrack@mainStationInbound$F2313& (0+255),w,b
  8013   012F04  26D9               	addwf	fsr2l,f,c
  8014   012F06  51FB               	movf	(_activeTrack@mainStationInbound$F2313+1)& (0+255),w,b
  8015   012F08  22DA               	addwfc	fsr2h,f,c
  8016   012F0A  0E7B               	movlw	123
  8017   012F0C  6EDF               	movwf	indf2,c
  8018                           
  8019                           ; BSR set to: 0
  8020                           ;mainStationInbound.c: 37:             activeTrack->stnSequence = SEQ_WAIT;
  8021   012F0E  EE20 F002          	lfsr	2,2
  8022   012F12  51FA               	movf	_activeTrack@mainStationInbound$F2313& (0+255),w,b
  8023   012F14  26D9               	addwf	fsr2l,f,c
  8024   012F16  51FB               	movf	(_activeTrack@mainStationInbound$F2313+1)& (0+255),w,b
  8025   012F18  22DA               	addwfc	fsr2h,f,c
  8026   012F1A  0E7A               	movlw	122
  8027   012F1C  6EDF               	movwf	indf2,c
  8028                           
  8029                           ; BSR set to: 0
  8030                           ;mainStationInbound.c: 38:             CREATExTASKxSTATUSxMESSAGE(self->name,
  8031   012F1E  C0FA  FFD9         	movff	_activeTrack@mainStationInbound$F2313,fsr2l
  8032   012F22  C0FB  FFDA         	movff	_activeTrack@mainStationInbound$F2313+1,fsr2h
  8033   012F26  50DF               	movf	indf2,w,c
  8034   012F28  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
  8035   012F2A  EE20 F001          	lfsr	2,1
  8036   012F2E  51FA               	movf	_activeTrack@mainStationInbound$F2313& (0+255),w,b
  8037   012F30  26D9               	addwf	fsr2l,f,c
  8038   012F32  51FB               	movf	(_activeTrack@mainStationInbound$F2313+1)& (0+255),w,b
  8039   012F34  22DA               	addwfc	fsr2h,f,c
  8040   012F36  50DF               	movf	indf2,w,c
  8041   012F38  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
  8042   012F3A  EE20 F002          	lfsr	2,2
  8043   012F3E  51FA               	movf	_activeTrack@mainStationInbound$F2313& (0+255),w,b
  8044   012F40  26D9               	addwf	fsr2l,f,c
  8045   012F42  51FB               	movf	(_activeTrack@mainStationInbound$F2313+1)& (0+255),w,b
  8046   012F44  22DA               	addwfc	fsr2h,f,c
  8047   012F46  50DF               	movf	indf2,w,c
  8048   012F48  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
  8049   012F4A  C02F  FFD9         	movff	MAINxSTATIONxINBOUND@self,fsr2l
  8050   012F4E  C030  FFDA         	movff	MAINxSTATIONxINBOUND@self+1,fsr2h
  8051   012F52  50DF               	movf	indf2,w,c
  8052   012F54  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
  8053                           
  8054                           ;mainStationInbound.c: 42:             break;
  8055   012F58  0012               	return	
  8056   012F5A                     l14859:
  8057                           
  8058                           ; BSR set to: 0
  8059                           ;mainStationInbound.c: 46:             SETxOCC(activeTrack->setOccStn, 0);
  8060   012F5A  EE20 F00E          	lfsr	2,14
  8061   012F5E  51FA               	movf	_activeTrack@mainStationInbound$F2313& (0+255),w,b
  8062   012F60  26D9               	addwf	fsr2l,f,c
  8063   012F62  51FB               	movf	(_activeTrack@mainStationInbound$F2313+1)& (0+255),w,b
  8064   012F64  22DA               	addwfc	fsr2h,f,c
  8065   012F66  CFDE F005          	movff	postinc2,SETxOCC@self
  8066   012F6A  CFDD F006          	movff	postdec2,SETxOCC@self+1
  8067   012F6E  0E00               	movlw	0
  8068   012F70  6E07               	movwf	SETxOCC@value^0,c
  8069   012F72  ECC0  F0BA         	call	_SETxOCC	;wreg free
  8070                           
  8071                           ;mainStationInbound.c: 47:             SETxOCC(self->setOccBlkIn, 0);
  8072   012F76  EE20 F006          	lfsr	2,6
  8073   012F7A  502F               	movf	MAINxSTATIONxINBOUND@self^0,w,c
  8074   012F7C  26D9               	addwf	fsr2l,f,c
  8075   012F7E  5030               	movf	(MAINxSTATIONxINBOUND@self+1)^0,w,c
  8076   012F80  22DA               	addwfc	fsr2h,f,c
  8077   012F82  CFDE F005          	movff	postinc2,SETxOCC@self
  8078   012F86  CFDD F006          	movff	postdec2,SETxOCC@self+1
  8079   012F8A  0E00               	movlw	0
  8080   012F8C  6E07               	movwf	SETxOCC@value^0,c
  8081   012F8E  ECC0  F0BA         	call	_SETxOCC	;wreg free
  8082                           
  8083                           ;mainStationInbound.c: 48:             activeTrack->stnSequence = SEQ_CHK_TRAIN;
  8084   012F92  0100               	movlb	0	; () banked
  8085   012F94  EE20 F002          	lfsr	2,2
  8086   012F98  51FA               	movf	_activeTrack@mainStationInbound$F2313& (0+255),w,b
  8087   012F9A  26D9               	addwf	fsr2l,f,c
  8088   012F9C  51FB               	movf	(_activeTrack@mainStationInbound$F2313+1)& (0+255),w,b
  8089   012F9E  22DA               	addwfc	fsr2h,f,c
  8090   012FA0  0E7C               	movlw	124
  8091   012FA2  6EDF               	movwf	indf2,c
  8092                           
  8093                           ; BSR set to: 0
  8094                           ;mainStationInbound.c: 49:             CREATExTASKxSTATUSxMESSAGE(self->name,
  8095   012FA4  C0FA  FFD9         	movff	_activeTrack@mainStationInbound$F2313,fsr2l
  8096   012FA8  C0FB  FFDA         	movff	_activeTrack@mainStationInbound$F2313+1,fsr2h
  8097   012FAC  50DF               	movf	indf2,w,c
  8098   012FAE  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
  8099   012FB0  EE20 F001          	lfsr	2,1
  8100   012FB4  51FA               	movf	_activeTrack@mainStationInbound$F2313& (0+255),w,b
  8101   012FB6  26D9               	addwf	fsr2l,f,c
  8102   012FB8  51FB               	movf	(_activeTrack@mainStationInbound$F2313+1)& (0+255),w,b
  8103   012FBA  22DA               	addwfc	fsr2h,f,c
  8104   012FBC  50DF               	movf	indf2,w,c
  8105   012FBE  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
  8106   012FC0  EE20 F002          	lfsr	2,2
  8107   012FC4  51FA               	movf	_activeTrack@mainStationInbound$F2313& (0+255),w,b
  8108   012FC6  26D9               	addwf	fsr2l,f,c
  8109   012FC8  51FB               	movf	(_activeTrack@mainStationInbound$F2313+1)& (0+255),w,b
  8110   012FCA  22DA               	addwfc	fsr2h,f,c
  8111   012FCC  50DF               	movf	indf2,w,c
  8112   012FCE  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
  8113   012FD0  C02F  FFD9         	movff	MAINxSTATIONxINBOUND@self,fsr2l
  8114   012FD4  C030  FFDA         	movff	MAINxSTATIONxINBOUND@self+1,fsr2h
  8115   012FD8  50DF               	movf	indf2,w,c
  8116   012FDA  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
  8117                           
  8118                           ;mainStationInbound.c: 53:             break;
  8119   012FDE  0012               	return	
  8120   012FE0                     l14865:
  8121                           
  8122                           ; BSR set to: 0
  8123                           ;mainStationInbound.c: 57:             if(activeTrack->getOccStn->value){
  8124   012FE0  EE20 F010          	lfsr	2,16
  8125   012FE4  51FA               	movf	_activeTrack@mainStationInbound$F2313& (0+255),w,b
  8126   012FE6  26D9               	addwf	fsr2l,f,c
  8127   012FE8  51FB               	movf	(_activeTrack@mainStationInbound$F2313+1)& (0+255),w,b
  8128   012FEA  22DA               	addwfc	fsr2h,f,c
  8129   012FEC  EE10 F00B          	lfsr	1,11
  8130   012FF0  50DE               	movf	postinc2,w,c
  8131   012FF2  26E1               	addwf	fsr1l,f,c
  8132   012FF4  50DD               	movf	postdec2,w,c
  8133   012FF6  22E2               	addwfc	fsr1h,f,c
  8134   012FF8  50E7               	movf	indf1,w,c
  8135   012FFA  B4D8               	btfsc	status,2,c
  8136   012FFC  0012               	return	
  8137                           
  8138                           ; BSR set to: 0
  8139                           ;mainStationInbound.c: 58:                 SETxOCC(activeTrack->setOccStn, 1);
  8140   012FFE  EE20 F00E          	lfsr	2,14
  8141   013002  51FA               	movf	_activeTrack@mainStationInbound$F2313& (0+255),w,b
  8142   013004  26D9               	addwf	fsr2l,f,c
  8143   013006  51FB               	movf	(_activeTrack@mainStationInbound$F2313+1)& (0+255),w,b
  8144   013008  22DA               	addwfc	fsr2h,f,c
  8145   01300A  CFDE F005          	movff	postinc2,SETxOCC@self
  8146   01300E  CFDD F006          	movff	postdec2,SETxOCC@self+1
  8147   013012  0E01               	movlw	1
  8148   013014  6E07               	movwf	SETxOCC@value^0,c
  8149   013016  ECC0  F0BA         	call	_SETxOCC	;wreg free
  8150                           
  8151                           ;mainStationInbound.c: 59:                 SETxOCC(self->setOccBlkIn, 1);
  8152   01301A  EE20 F006          	lfsr	2,6
  8153   01301E  502F               	movf	MAINxSTATIONxINBOUND@self^0,w,c
  8154   013020  26D9               	addwf	fsr2l,f,c
  8155   013022  5030               	movf	(MAINxSTATIONxINBOUND@self+1)^0,w,c
  8156   013024  22DA               	addwfc	fsr2h,f,c
  8157   013026  CFDE F005          	movff	postinc2,SETxOCC@self
  8158   01302A  CFDD F006          	movff	postdec2,SETxOCC@self+1
  8159   01302E  0E01               	movlw	1
  8160   013030  6E07               	movwf	SETxOCC@value^0,c
  8161   013032  ECC0  F0BA         	call	_SETxOCC	;wreg free
  8162                           
  8163                           ;mainStationInbound.c: 60:                 activeTrack->stnOccupied = 1;
  8164   013036  0100               	movlb	0	; () banked
  8165   013038  EE20 F004          	lfsr	2,4
  8166   01303C  51FA               	movf	_activeTrack@mainStationInbound$F2313& (0+255),w,b
  8167   01303E  26D9               	addwf	fsr2l,f,c
  8168   013040  51FB               	movf	(_activeTrack@mainStationInbound$F2313+1)& (0+255),w,b
  8169   013042  22DA               	addwfc	fsr2h,f,c
  8170   013044  0E01               	movlw	1
  8171   013046  6EDF               	movwf	indf2,c
  8172                           
  8173                           ; BSR set to: 0
  8174                           ;mainStationInbound.c: 61:                 activeTrack->stnSequence = SEQ_IDLE;
  8175   013048  EE20 F002          	lfsr	2,2
  8176   01304C  51FA               	movf	_activeTrack@mainStationInbound$F2313& (0+255),w,b
  8177   01304E  26D9               	addwf	fsr2l,f,c
  8178   013050  51FB               	movf	(_activeTrack@mainStationInbound$F2313+1)& (0+255),w,b
  8179   013052  22DA               	addwfc	fsr2h,f,c
  8180   013054  0E79               	movlw	121
  8181   013056  6EDF               	movwf	indf2,c
  8182                           
  8183                           ; BSR set to: 0
  8184                           ;mainStationInbound.c: 62:                 activeTrack->stnState = STN_WAIT;
  8185   013058  EE20 F001          	lfsr	2,1
  8186   01305C  51FA               	movf	_activeTrack@mainStationInbound$F2313& (0+255),w,b
  8187   01305E  26D9               	addwf	fsr2l,f,c
  8188   013060  51FB               	movf	(_activeTrack@mainStationInbound$F2313+1)& (0+255),w,b
  8189   013062  22DA               	addwfc	fsr2h,f,c
  8190   013064  0E77               	movlw	119
  8191   013066  6EDF               	movwf	indf2,c
  8192                           
  8193                           ; BSR set to: 0
  8194                           ;mainStationInbound.c: 63:                 activeTrack->tCountTime = GETxMILLIS();
  8195   013068  EC50  F0C1         	call	_GETxMILLIS	;wreg free
  8196   01306C  0100               	movlb	0	; () banked
  8197   01306E  EE20 F006          	lfsr	2,6
  8198   013072  51FA               	movf	_activeTrack@mainStationInbound$F2313& (0+255),w,b
  8199   013074  26D9               	addwf	fsr2l,f,c
  8200   013076  51FB               	movf	(_activeTrack@mainStationInbound$F2313+1)& (0+255),w,b
  8201   013078  22DA               	addwfc	fsr2h,f,c
  8202   01307A  C005  FFDE         	movff	?_GETxMILLIS,postinc2
  8203   01307E  C006  FFDE         	movff	?_GETxMILLIS+1,postinc2
  8204   013082  C007  FFDE         	movff	?_GETxMILLIS+2,postinc2
  8205   013086  C008  FFDE         	movff	?_GETxMILLIS+3,postinc2
  8206                           
  8207                           ; BSR set to: 0
  8208                           ;mainStationInbound.c: 64:                 CREATExTASKxSTATUSxMESSAGE(self->name,
  8209   01308A  C0FA  FFD9         	movff	_activeTrack@mainStationInbound$F2313,fsr2l
  8210   01308E  C0FB  FFDA         	movff	_activeTrack@mainStationInbound$F2313+1,fsr2h
  8211   013092  50DF               	movf	indf2,w,c
  8212   013094  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
  8213   013096  EE20 F001          	lfsr	2,1
  8214   01309A  51FA               	movf	_activeTrack@mainStationInbound$F2313& (0+255),w,b
  8215   01309C  26D9               	addwf	fsr2l,f,c
  8216   01309E  51FB               	movf	(_activeTrack@mainStationInbound$F2313+1)& (0+255),w,b
  8217   0130A0  22DA               	addwfc	fsr2h,f,c
  8218   0130A2  50DF               	movf	indf2,w,c
  8219   0130A4  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
  8220   0130A6  EE20 F002          	lfsr	2,2
  8221   0130AA  51FA               	movf	_activeTrack@mainStationInbound$F2313& (0+255),w,b
  8222   0130AC  26D9               	addwf	fsr2l,f,c
  8223   0130AE  51FB               	movf	(_activeTrack@mainStationInbound$F2313+1)& (0+255),w,b
  8224   0130B0  22DA               	addwfc	fsr2h,f,c
  8225   0130B2  50DF               	movf	indf2,w,c
  8226   0130B4  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
  8227   0130B6  C02F  FFD9         	movff	MAINxSTATIONxINBOUND@self,fsr2l
  8228   0130BA  C030  FFDA         	movff	MAINxSTATIONxINBOUND@self+1,fsr2h
  8229   0130BE  50DF               	movf	indf2,w,c
  8230   0130C0  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
  8231                           
  8232                           ; BSR set to: 1
  8233                           ;mainStationInbound.c: 73:                 if(activeTrack->trackNr != 3 || activeTrack->
      +                          trackNr != 12){
  8234   0130C4  0100               	movlb	0	; () banked
  8235   0130C6  EE20 F005          	lfsr	2,5
  8236   0130CA  51FA               	movf	_activeTrack@mainStationInbound$F2313& (0+255),w,b
  8237   0130CC  26D9               	addwf	fsr2l,f,c
  8238   0130CE  51FB               	movf	(_activeTrack@mainStationInbound$F2313+1)& (0+255),w,b
  8239   0130D0  22DA               	addwfc	fsr2h,f,c
  8240   0130D2  0E03               	movlw	3
  8241   0130D4  18DE               	xorwf	postinc2,w,c
  8242   0130D6  A4D8               	btfss	status,2,c
  8243   0130D8  D00A               	goto	u13370
  8244                           
  8245                           ; BSR set to: 0
  8246   0130DA  EE20 F005          	lfsr	2,5
  8247   0130DE  51FA               	movf	_activeTrack@mainStationInbound$F2313& (0+255),w,b
  8248   0130E0  26D9               	addwf	fsr2l,f,c
  8249   0130E2  51FB               	movf	(_activeTrack@mainStationInbound$F2313+1)& (0+255),w,b
  8250   0130E4  22DA               	addwfc	fsr2h,f,c
  8251   0130E6  0E0C               	movlw	12
  8252   0130E8  18DE               	xorwf	postinc2,w,c
  8253   0130EA  B4D8               	btfsc	status,2,c
  8254   0130EC  D012               	goto	l14889
  8255   0130EE                     u13370:
  8256                           
  8257                           ; BSR set to: 0
  8258                           ;mainStationInbound.c: 74:                     if(self->getFreightEnterStation->value){
  8259   0130EE  EE20 F004          	lfsr	2,4
  8260   0130F2  502F               	movf	MAINxSTATIONxINBOUND@self^0,w,c
  8261   0130F4  26D9               	addwf	fsr2l,f,c
  8262   0130F6  5030               	movf	(MAINxSTATIONxINBOUND@self+1)^0,w,c
  8263   0130F8  22DA               	addwfc	fsr2h,f,c
  8264   0130FA  EE10 F00B          	lfsr	1,11
  8265   0130FE  50DE               	movf	postinc2,w,c
  8266   013100  26E1               	addwf	fsr1l,f,c
  8267   013102  50DD               	movf	postdec2,w,c
  8268   013104  22E2               	addwfc	fsr1h,f,c
  8269   013106  50E7               	movf	indf1,w,c
  8270   013108  A4D8               	btfss	status,2,c
  8271   01310A  D012               	goto	u13390
  8272                           
  8273                           ; BSR set to: 0
  8274                           
  8275                           ;mainStationInbound.c: 76:                     }
  8276                           
  8277                           ; BSR set to: 0
  8278   01310C  EC10  F0C1         	call	_GETxRANDOMxNUMBER	;wreg free
  8279   013110  D020               	goto	L15
  8280   013112                     l14889:
  8281                           
  8282                           ; BSR set to: 0
  8283                           ;mainStationInbound.c: 83:                     if(self->getFreightEnterStation->value){
  8284   013112  EE20 F004          	lfsr	2,4
  8285   013116  502F               	movf	MAINxSTATIONxINBOUND@self^0,w,c
  8286   013118  26D9               	addwf	fsr2l,f,c
  8287   01311A  5030               	movf	(MAINxSTATIONxINBOUND@self+1)^0,w,c
  8288   01311C  22DA               	addwfc	fsr2h,f,c
  8289   01311E  EE10 F00B          	lfsr	1,11
  8290   013122  50DE               	movf	postinc2,w,c
  8291   013124  26E1               	addwf	fsr1l,f,c
  8292   013126  50DD               	movf	postdec2,w,c
  8293   013128  22E2               	addwfc	fsr1h,f,c
  8294   01312A  50E7               	movf	indf1,w,c
  8295   01312C  B4D8               	btfsc	status,2,c
  8296   01312E  D00F               	goto	l14893
  8297   013130                     u13390:
  8298                           
  8299                           ; BSR set to: 0
  8300   013130  EE20 F00A          	lfsr	2,10
  8301   013134  51FA               	movf	_activeTrack@mainStationInbound$F2313& (0+255),w,b
  8302   013136  26D9               	addwf	fsr2l,f,c
  8303   013138  51FB               	movf	(_activeTrack@mainStationInbound$F2313+1)& (0+255),w,b
  8304   01313A  22DA               	addwfc	fsr2h,f,c
  8305   01313C  0E88               	movlw	136
  8306   01313E  6EDE               	movwf	postinc2,c
  8307   013140  0E13               	movlw	19
  8308   013142  6EDE               	movwf	postinc2,c
  8309   013144  0E00               	movlw	0
  8310   013146  6EDE               	movwf	postinc2,c
  8311   013148  0E00               	movlw	0
  8312   01314A  6EDD               	movwf	postdec2,c
  8313                           
  8314                           ;mainStationInbound.c: 85:                     }
  8315   01314C  D02C               	goto	l14895
  8316   01314E                     l14893:
  8317                           
  8318                           ; BSR set to: 0
  8319   01314E  EC10  F0C1         	call	_GETxRANDOMxNUMBER	;wreg free
  8320   013152                     L15:
  8321   013152  90D8               	bcf	status,0,c
  8322   013154  3617               	rlcf	?_GETxRANDOMxNUMBER^0,f,c
  8323   013156  3618               	rlcf	(?_GETxRANDOMxNUMBER+1)^0,f,c
  8324   013158  90D8               	bcf	status,0,c
  8325   01315A  3617               	rlcf	?_GETxRANDOMxNUMBER^0,f,c
  8326   01315C  3618               	rlcf	(?_GETxRANDOMxNUMBER+1)^0,f,c
  8327   01315E  90D8               	bcf	status,0,c
  8328   013160  3617               	rlcf	?_GETxRANDOMxNUMBER^0,f,c
  8329   013162  3618               	rlcf	(?_GETxRANDOMxNUMBER+1)^0,f,c
  8330   013164  5017               	movf	?_GETxRANDOMxNUMBER^0,w,c
  8331   013166  6E31               	movwf	??_MAINxSTATIONxINBOUND^0,c
  8332   013168  5018               	movf	(?_GETxRANDOMxNUMBER+1)^0,w,c
  8333   01316A  6E32               	movwf	(??_MAINxSTATIONxINBOUND+1)^0,c
  8334   01316C  6A33               	clrf	(??_MAINxSTATIONxINBOUND+2)^0,c
  8335   01316E  6A34               	clrf	(??_MAINxSTATIONxINBOUND+3)^0,c
  8336   013170  0EA0               	movlw	160
  8337   013172  2431               	addwf	??_MAINxSTATIONxINBOUND^0,w,c
  8338   013174  6E35               	movwf	(??_MAINxSTATIONxINBOUND+4)^0,c
  8339   013176  0E86               	movlw	134
  8340   013178  2032               	addwfc	(??_MAINxSTATIONxINBOUND+1)^0,w,c
  8341   01317A  6E36               	movwf	(??_MAINxSTATIONxINBOUND+5)^0,c
  8342   01317C  0E01               	movlw	1
  8343   01317E  2033               	addwfc	(??_MAINxSTATIONxINBOUND+2)^0,w,c
  8344   013180  6E37               	movwf	(??_MAINxSTATIONxINBOUND+6)^0,c
  8345   013182  0E00               	movlw	0
  8346   013184  2034               	addwfc	(??_MAINxSTATIONxINBOUND+3)^0,w,c
  8347   013186  6E38               	movwf	(??_MAINxSTATIONxINBOUND+7)^0,c
  8348   013188  0100               	movlb	0	; () banked
  8349   01318A  EE20 F00A          	lfsr	2,10
  8350   01318E  51FA               	movf	_activeTrack@mainStationInbound$F2313& (0+255),w,b
  8351   013190  26D9               	addwf	fsr2l,f,c
  8352   013192  51FB               	movf	(_activeTrack@mainStationInbound$F2313+1)& (0+255),w,b
  8353   013194  22DA               	addwfc	fsr2h,f,c
  8354   013196  C035  FFDE         	movff	??_MAINxSTATIONxINBOUND+4,postinc2
  8355   01319A  C036  FFDE         	movff	??_MAINxSTATIONxINBOUND+5,postinc2
  8356   01319E  C037  FFDE         	movff	??_MAINxSTATIONxINBOUND+6,postinc2
  8357   0131A2  C038  FFDE         	movff	??_MAINxSTATIONxINBOUND+7,postinc2
  8358   0131A6                     l14895:
  8359                           
  8360                           ; BSR set to: 0
  8361                           ;mainStationInbound.c: 92:                 CREATExTASKxSTATUSxMESSAGE(self->name,
  8362   0131A6  C0FA  FFD9         	movff	_activeTrack@mainStationInbound$F2313,fsr2l
  8363   0131AA  C0FB  FFDA         	movff	_activeTrack@mainStationInbound$F2313+1,fsr2h
  8364   0131AE  50DF               	movf	indf2,w,c
  8365   0131B0  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
  8366   0131B2  0E84               	movlw	132
  8367   0131B4  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
  8368   0131B6  EE20 F00A          	lfsr	2,10
  8369   0131BA  51FA               	movf	_activeTrack@mainStationInbound$F2313& (0+255),w,b
  8370   0131BC  26D9               	addwf	fsr2l,f,c
  8371   0131BE  51FB               	movf	(_activeTrack@mainStationInbound$F2313+1)& (0+255),w,b
  8372   0131C0  22DA               	addwfc	fsr2h,f,c
  8373   0131C2  CFDE F005          	movff	postinc2,___lldiv@dividend
  8374   0131C6  CFDE F006          	movff	postinc2,___lldiv@dividend+1
  8375   0131CA  CFDE F007          	movff	postinc2,___lldiv@dividend+2
  8376   0131CE  CFDE F008          	movff	postinc2,___lldiv@dividend+3
  8377   0131D2  0EE8               	movlw	232
  8378   0131D4  6E09               	movwf	___lldiv@divisor^0,c
  8379   0131D6  0E03               	movlw	3
  8380   0131D8  6E0A               	movwf	(___lldiv@divisor+1)^0,c
  8381   0131DA  0E00               	movlw	0
  8382   0131DC  6E0B               	movwf	(___lldiv@divisor+2)^0,c
  8383   0131DE  0E00               	movlw	0
  8384   0131E0  6E0C               	movwf	(___lldiv@divisor+3)^0,c
  8385   0131E2  ECBA  F0B8         	call	___lldiv	;wreg free
  8386   0131E6  5005               	movf	?___lldiv^0,w,c
  8387   0131E8  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
  8388   0131EA  C02F  FFD9         	movff	MAINxSTATIONxINBOUND@self,fsr2l
  8389   0131EE  C030  FFDA         	movff	MAINxSTATIONxINBOUND@self+1,fsr2h
  8390   0131F2  50DF               	movf	indf2,w,c
  8391   0131F4  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
  8392                           
  8393                           ; BSR set to: 1
  8394                           ;mainStationInbound.c: 97:                 self->getFreightEnterStation->value = 0;
  8395   0131F8  EE20 F004          	lfsr	2,4
  8396   0131FC  502F               	movf	MAINxSTATIONxINBOUND@self^0,w,c
  8397   0131FE  26D9               	addwf	fsr2l,f,c
  8398   013200  5030               	movf	(MAINxSTATIONxINBOUND@self+1)^0,w,c
  8399   013202  22DA               	addwfc	fsr2h,f,c
  8400   013204  EE10 F00B          	lfsr	1,11
  8401   013208  50DE               	movf	postinc2,w,c
  8402   01320A  26E1               	addwf	fsr1l,f,c
  8403   01320C  50DD               	movf	postdec2,w,c
  8404   01320E  22E2               	addwfc	fsr1h,f,c
  8405   013210  6AE7               	clrf	indf1,c
  8406                           
  8407                           ; BSR set to: 1
  8408                           ;mainStationInbound.c: 98:                 activeTrack = 0;
  8409   013212  0E00               	movlw	0
  8410   013214  0100               	movlb	0	; () banked
  8411   013216  6FFA               	movwf	_activeTrack@mainStationInbound$F2313& (0+255),b
  8412   013218  0E00               	movlw	0
  8413   01321A  6FFB               	movwf	(_activeTrack@mainStationInbound$F2313+1)& (0+255),b
  8414   01321C  0012               	return	
  8415   01321E                     l14903:
  8416                           
  8417                           ; BSR set to: 0
  8418                           ;mainStationInbound.c: 105:             if((GETxMILLIS() - activeTrack->tCountTime) > ac
      +                          tiveTrack->tWaitTime){
  8419   01321E  EE20 F006          	lfsr	2,6
  8420   013222  51FA               	movf	_activeTrack@mainStationInbound$F2313& (0+255),w,b
  8421   013224  26D9               	addwf	fsr2l,f,c
  8422   013226  51FB               	movf	(_activeTrack@mainStationInbound$F2313+1)& (0+255),w,b
  8423   013228  22DA               	addwfc	fsr2h,f,c
  8424   01322A  CFDE F031          	movff	postinc2,??_MAINxSTATIONxINBOUND
  8425   01322E  CFDE F032          	movff	postinc2,??_MAINxSTATIONxINBOUND+1
  8426   013232  CFDE F033          	movff	postinc2,??_MAINxSTATIONxINBOUND+2
  8427   013236  CFDE F034          	movff	postinc2,??_MAINxSTATIONxINBOUND+3
  8428   01323A  EC50  F0C1         	call	_GETxMILLIS	;wreg free
  8429   01323E  5031               	movf	??_MAINxSTATIONxINBOUND^0,w,c
  8430   013240  5C05               	subwf	?_GETxMILLIS^0,w,c
  8431   013242  6E35               	movwf	(??_MAINxSTATIONxINBOUND+4)^0,c
  8432   013244  5032               	movf	(??_MAINxSTATIONxINBOUND+1)^0,w,c
  8433   013246  5806               	subwfb	(?_GETxMILLIS+1)^0,w,c
  8434   013248  6E36               	movwf	(??_MAINxSTATIONxINBOUND+5)^0,c
  8435   01324A  5033               	movf	(??_MAINxSTATIONxINBOUND+2)^0,w,c
  8436   01324C  5807               	subwfb	(?_GETxMILLIS+2)^0,w,c
  8437   01324E  6E37               	movwf	(??_MAINxSTATIONxINBOUND+6)^0,c
  8438   013250  5034               	movf	(??_MAINxSTATIONxINBOUND+3)^0,w,c
  8439   013252  5808               	subwfb	(?_GETxMILLIS+3)^0,w,c
  8440   013254  6E38               	movwf	(??_MAINxSTATIONxINBOUND+7)^0,c
  8441   013256  0100               	movlb	0	; () banked
  8442   013258  EE20 F00A          	lfsr	2,10
  8443   01325C  51FA               	movf	_activeTrack@mainStationInbound$F2313& (0+255),w,b
  8444   01325E  26D9               	addwf	fsr2l,f,c
  8445   013260  51FB               	movf	(_activeTrack@mainStationInbound$F2313+1)& (0+255),w,b
  8446   013262  22DA               	addwfc	fsr2h,f,c
  8447   013264  5035               	movf	(??_MAINxSTATIONxINBOUND+4)^0,w,c
  8448   013266  5CDE               	subwf	postinc2,w,c
  8449   013268  5036               	movf	(??_MAINxSTATIONxINBOUND+5)^0,w,c
  8450   01326A  58DE               	subwfb	postinc2,w,c
  8451   01326C  5037               	movf	(??_MAINxSTATIONxINBOUND+6)^0,w,c
  8452   01326E  58DE               	subwfb	postinc2,w,c
  8453   013270  5038               	movf	(??_MAINxSTATIONxINBOUND+7)^0,w,c
  8454   013272  58DE               	subwfb	postinc2,w,c
  8455   013274  B0D8               	btfsc	status,0,c
  8456   013276  0012               	return	
  8457                           
  8458                           ; BSR set to: 0
  8459                           ;mainStationInbound.c: 106:                 activeTrack->stnSequence = activeTrack->stnN
      +                          extState;
  8460   013278  EE20 F003          	lfsr	2,3
  8461   01327C  51FA               	movf	_activeTrack@mainStationInbound$F2313& (0+255),w,b
  8462   01327E  26D9               	addwf	fsr2l,f,c
  8463   013280  51FB               	movf	(_activeTrack@mainStationInbound$F2313+1)& (0+255),w,b
  8464   013282  22DA               	addwfc	fsr2h,f,c
  8465   013284  EE10 F002          	lfsr	1,2
  8466   013288  51FA               	movf	_activeTrack@mainStationInbound$F2313& (0+255),w,b
  8467   01328A  26E1               	addwf	fsr1l,f,c
  8468   01328C  51FB               	movf	(_activeTrack@mainStationInbound$F2313+1)& (0+255),w,b
  8469   01328E  22E2               	addwfc	fsr1h,f,c
  8470   013290  CFDF FFE7          	movff	indf2,indf1
  8471   013294  0012               	return	
  8472   013296                     l14909:
  8473                           
  8474                           ; BSR set to: 0
  8475   013296  EE20 F002          	lfsr	2,2
  8476   01329A  51FA               	movf	_activeTrack@mainStationInbound$F2313& (0+255),w,b
  8477   01329C  26D9               	addwf	fsr2l,f,c
  8478   01329E  51FB               	movf	(_activeTrack@mainStationInbound$F2313+1)& (0+255),w,b
  8479   0132A0  22DA               	addwfc	fsr2h,f,c
  8480   0132A2  50DF               	movf	indf2,w,c
  8481   0132A4  6E31               	movwf	??_MAINxSTATIONxINBOUND^0,c
  8482   0132A6  6A32               	clrf	(??_MAINxSTATIONxINBOUND+1)^0,c
  8483                           
  8484                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8485                           ; Switch size 1, requested type "simple"
  8486                           ; Number of cases is 1, Range of values is 0 to 0
  8487                           ; switch strategies available:
  8488                           ; Name         Instructions Cycles
  8489                           ; simple_byte            4     3 (average)
  8490                           ;	Chosen strategy is simple_byte
  8491   0132A8  5032               	movf	(??_MAINxSTATIONxINBOUND+1)^0,w,c
  8492   0132AA  0A00               	xorlw	0	; case 0
  8493   0132AC  A4D8               	btfss	status,2,c
  8494   0132AE  0012               	return	
  8495                           
  8496                           ; BSR set to: 0
  8497                           ; Switch size 1, requested type "simple"
  8498                           ; Number of cases is 4, Range of values is 121 to 124
  8499                           ; switch strategies available:
  8500                           ; Name         Instructions Cycles
  8501                           ; simple_byte           13     7 (average)
  8502                           ;	Chosen strategy is simple_byte
  8503   0132B0  5031               	movf	??_MAINxSTATIONxINBOUND^0,w,c
  8504   0132B2  0A79               	xorlw	121	; case 121
  8505   0132B4  B4D8               	btfsc	status,2,c
  8506   0132B6  D5F4               	goto	l14847
  8507   0132B8  0A03               	xorlw	3	; case 122
  8508   0132BA  B4D8               	btfsc	status,2,c
  8509   0132BC  D7B0               	goto	l14903
  8510   0132BE  0A01               	xorlw	1	; case 123
  8511   0132C0  B4D8               	btfsc	status,2,c
  8512   0132C2  D64B               	goto	l14859
  8513   0132C4  0A07               	xorlw	7	; case 124
  8514   0132C6  A4D8               	btfss	status,2,c
  8515   0132C8  0012               	return	
  8516   0132CA  D68A               	goto	l14865
  8517   0132CC                     __end_of_MAINxSTATIONxINBOUND:
  8518                           	callstack 0
  8519                           
  8520 ;; *************** function _SETxSTATIONxPATHWAY *****************
  8521 ;; Defined at:
  8522 ;;		line 30 in file "pathway.c"
  8523 ;; Parameters:    Size  Location     Type
  8524 ;;  self            2   33[COMRAM] PTR struct .
  8525 ;;		 -> bot(76), top(76), 
  8526 ;;  path            1   35[COMRAM] enum E5060
  8527 ;;  dir             1   36[COMRAM] enum E5023
  8528 ;; Auto vars:     Size  Location     Type
  8529 ;;  pin4            1   45[COMRAM] unsigned char 
  8530 ;;  pin3            1   44[COMRAM] unsigned char 
  8531 ;;  pin2            1   43[COMRAM] unsigned char 
  8532 ;;  pin1            1   42[COMRAM] unsigned char 
  8533 ;; Return value:  Size  Location     Type
  8534 ;;                  1    wreg      void 
  8535 ;; Registers used:
  8536 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8537 ;; Tracked objects:
  8538 ;;		On entry : 0/1
  8539 ;;		On exit  : 3F/1
  8540 ;;		Unchanged: 0/0
  8541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8542 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8543 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8544 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8545 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8546 ;;Total ram usage:       13 bytes
  8547 ;; Hardware stack levels used: 1
  8548 ;; Hardware stack levels required when called: 6
  8549 ;; This function calls:
  8550 ;;		_CREATExTASKxSTATUSxMESSAGE
  8551 ;; This function is called by:
  8552 ;;		_MAINxSTATIONxPASSING
  8553 ;;		_MAINxSTATIONxINBOUND
  8554 ;;		_MAINxSTATIONxOUTBOUND
  8555 ;; This function uses a non-reentrant model
  8556 ;;
  8557                           
  8558                           	psect	text8
  8559   0129BE                     __ptext8:
  8560                           	callstack 0
  8561   0129BE                     _SETxSTATIONxPATHWAY:
  8562                           	callstack 22
  8563                           
  8564                           ;pathway.c: 30: void SETxSTATIONxPATHWAY(STATION *self, TASK_MESSAGES path, TASK_STATE d
      +                          ir);pathway.c: 30:             if(path == TRACK3 || path == TRACK11 || path == TRACK12){
      +                          ;pathway.c: 31: {;pathway.c: 31:                 *self->setPath->port4_ptr &= ~pin4;;pat
      +                          hway.c: 34:                 *self->setPath->port4_ptr |= pin4;
  8565                           
  8566                           ;incstack = 0
  8567   0129BE  EE20 F00C          	lfsr	2,12
  8568   0129C2  5022               	movf	SETxSTATIONxPATHWAY@self^0,w,c
  8569   0129C4  26D9               	addwf	fsr2l,f,c
  8570   0129C6  5023               	movf	(SETxSTATIONxPATHWAY@self+1)^0,w,c
  8571   0129C8  22DA               	addwfc	fsr2h,f,c
  8572   0129CA  EE10 F002          	lfsr	1,2
  8573   0129CE  50DE               	movf	postinc2,w,c
  8574   0129D0  26E1               	addwf	fsr1l,f,c
  8575   0129D2  50DD               	movf	postdec2,w,c
  8576   0129D4  22E2               	addwfc	fsr1h,f,c
  8577   0129D6  50E7               	movf	indf1,w,c
  8578   0129D8  6E2B               	movwf	SETxSTATIONxPATHWAY@pin1^0,c
  8579                           
  8580                           ;pathway.c: 35:             }
  8581   0129DA  EE20 F00C          	lfsr	2,12
  8582   0129DE  5022               	movf	SETxSTATIONxPATHWAY@self^0,w,c
  8583   0129E0  26D9               	addwf	fsr2l,f,c
  8584   0129E2  5023               	movf	(SETxSTATIONxPATHWAY@self+1)^0,w,c
  8585   0129E4  22DA               	addwfc	fsr2h,f,c
  8586   0129E6  EE10 F005          	lfsr	1,5
  8587   0129EA  50DE               	movf	postinc2,w,c
  8588   0129EC  26E1               	addwf	fsr1l,f,c
  8589   0129EE  50DD               	movf	postdec2,w,c
  8590   0129F0  22E2               	addwfc	fsr1h,f,c
  8591   0129F2  50E7               	movf	indf1,w,c
  8592   0129F4  6E2C               	movwf	SETxSTATIONxPATHWAY@pin2^0,c
  8593                           
  8594                           ;pathway.c: 36:             break;
  8595   0129F6  EE20 F00C          	lfsr	2,12
  8596   0129FA  5022               	movf	SETxSTATIONxPATHWAY@self^0,w,c
  8597   0129FC  26D9               	addwf	fsr2l,f,c
  8598   0129FE  5023               	movf	(SETxSTATIONxPATHWAY@self+1)^0,w,c
  8599   012A00  22DA               	addwfc	fsr2h,f,c
  8600   012A02  EE10 F008          	lfsr	1,8
  8601   012A06  50DE               	movf	postinc2,w,c
  8602   012A08  26E1               	addwf	fsr1l,f,c
  8603   012A0A  50DD               	movf	postdec2,w,c
  8604   012A0C  22E2               	addwfc	fsr1h,f,c
  8605   012A0E  50E7               	movf	indf1,w,c
  8606   012A10  6E2D               	movwf	SETxSTATIONxPATHWAY@pin3^0,c
  8607                           
  8608                           ;pathway.c: 37: 
  8609   012A12  EE20 F00C          	lfsr	2,12
  8610   012A16  5022               	movf	SETxSTATIONxPATHWAY@self^0,w,c
  8611   012A18  26D9               	addwf	fsr2l,f,c
  8612   012A1A  5023               	movf	(SETxSTATIONxPATHWAY@self+1)^0,w,c
  8613   012A1C  22DA               	addwfc	fsr2h,f,c
  8614   012A1E  EE10 F00B          	lfsr	1,11
  8615   012A22  50DE               	movf	postinc2,w,c
  8616   012A24  26E1               	addwf	fsr1l,f,c
  8617   012A26  50DD               	movf	postdec2,w,c
  8618   012A28  22E2               	addwfc	fsr1h,f,c
  8619   012A2A  50E7               	movf	indf1,w,c
  8620   012A2C  6E2E               	movwf	SETxSTATIONxPATHWAY@pin4^0,c
  8621                           
  8622                           ;pathway.c: 39:             if(path == TRACK1 || path == TRACK10 || path == TRACK11){
  8623   012A2E  D1EF               	goto	l14519
  8624   012A30                     l14405:
  8625                           
  8626                           ;pathway.c: 41:             }
  8627   012A30  0E9F               	movlw	159
  8628   012A32  1824               	xorwf	SETxSTATIONxPATHWAY@path^0,w,c
  8629   012A34  B4D8               	btfsc	status,2,c
  8630   012A36  D008               	goto	u12590
  8631   012A38  0EA2               	movlw	162
  8632   012A3A  1824               	xorwf	SETxSTATIONxPATHWAY@path^0,w,c
  8633   012A3C  B4D8               	btfsc	status,2,c
  8634   012A3E  D004               	goto	u12590
  8635   012A40  0EA3               	movlw	163
  8636   012A42  1824               	xorwf	SETxSTATIONxPATHWAY@path^0,w,c
  8637   012A44  A4D8               	btfss	status,2,c
  8638   012A46  D019               	goto	l14413
  8639   012A48                     u12590:
  8640                           
  8641                           ;pathway.c: 42:             else if(path == TRACK2 || path == TRACK3 || path == TRACK12)
      +                          {
  8642   012A48  EE20 F00C          	lfsr	2,12
  8643   012A4C  5022               	movf	SETxSTATIONxPATHWAY@self^0,w,c
  8644   012A4E  26D9               	addwf	fsr2l,f,c
  8645   012A50  5023               	movf	(SETxSTATIONxPATHWAY@self+1)^0,w,c
  8646   012A52  22DA               	addwfc	fsr2h,f,c
  8647   012A54  CFDE F026          	movff	postinc2,??_SETxSTATIONxPATHWAY
  8648   012A58  CFDD F027          	movff	postdec2,??_SETxSTATIONxPATHWAY+1
  8649   012A5C  C026  FFD9         	movff	??_SETxSTATIONxPATHWAY,fsr2l
  8650   012A60  C027  FFDA         	movff	??_SETxSTATIONxPATHWAY+1,fsr2h
  8651   012A64  CFDE F028          	movff	postinc2,??_SETxSTATIONxPATHWAY+2
  8652   012A68  CFDD F029          	movff	postdec2,??_SETxSTATIONxPATHWAY+3
  8653   012A6C  C028  FFD9         	movff	??_SETxSTATIONxPATHWAY+2,fsr2l
  8654   012A70  C029  FFDA         	movff	??_SETxSTATIONxPATHWAY+3,fsr2h
  8655   012A74  502B               	movf	SETxSTATIONxPATHWAY@pin1^0,w,c
  8656   012A76  12DF               	iorwf	indf2,f,c
  8657                           
  8658                           ;pathway.c: 43:                 *self->setPath->port1_ptr &= ~pin1;
  8659   012A78  D027               	goto	l14421
  8660   012A7A                     l14413:
  8661   012A7A  0EA0               	movlw	160
  8662   012A7C  1824               	xorwf	SETxSTATIONxPATHWAY@path^0,w,c
  8663   012A7E  B4D8               	btfsc	status,2,c
  8664   012A80  D008               	goto	u12620
  8665   012A82  0EA1               	movlw	161
  8666   012A84  1824               	xorwf	SETxSTATIONxPATHWAY@path^0,w,c
  8667   012A86  B4D8               	btfsc	status,2,c
  8668   012A88  D004               	goto	u12620
  8669   012A8A  0EA4               	movlw	164
  8670   012A8C  1824               	xorwf	SETxSTATIONxPATHWAY@path^0,w,c
  8671   012A8E  A4D8               	btfss	status,2,c
  8672   012A90  D01B               	goto	l14421
  8673   012A92                     u12620:
  8674                           
  8675                           ;pathway.c: 45: 
  8676   012A92  502B               	movf	SETxSTATIONxPATHWAY@pin1^0,w,c
  8677   012A94  0AFF               	xorlw	255
  8678   012A96  6E26               	movwf	??_SETxSTATIONxPATHWAY^0,c
  8679   012A98  EE20 F00C          	lfsr	2,12
  8680   012A9C  5022               	movf	SETxSTATIONxPATHWAY@self^0,w,c
  8681   012A9E  26D9               	addwf	fsr2l,f,c
  8682   012AA0  5023               	movf	(SETxSTATIONxPATHWAY@self+1)^0,w,c
  8683   012AA2  22DA               	addwfc	fsr2h,f,c
  8684   012AA4  CFDE F027          	movff	postinc2,??_SETxSTATIONxPATHWAY+1
  8685   012AA8  CFDD F028          	movff	postdec2,??_SETxSTATIONxPATHWAY+2
  8686   012AAC  C027  FFD9         	movff	??_SETxSTATIONxPATHWAY+1,fsr2l
  8687   012AB0  C028  FFDA         	movff	??_SETxSTATIONxPATHWAY+2,fsr2h
  8688   012AB4  CFDE F029          	movff	postinc2,??_SETxSTATIONxPATHWAY+3
  8689   012AB8  CFDD F02A          	movff	postdec2,??_SETxSTATIONxPATHWAY+4
  8690   012ABC  C029  FFD9         	movff	??_SETxSTATIONxPATHWAY+3,fsr2l
  8691   012AC0  C02A  FFDA         	movff	??_SETxSTATIONxPATHWAY+4,fsr2h
  8692   012AC4  5026               	movf	??_SETxSTATIONxPATHWAY^0,w,c
  8693   012AC6  16DF               	andwf	indf2,f,c
  8694   012AC8                     l14421:
  8695                           
  8696                           ;pathway.c: 48:             }
  8697   012AC8  0EA0               	movlw	160
  8698   012ACA  1824               	xorwf	SETxSTATIONxPATHWAY@path^0,w,c
  8699   012ACC  B4D8               	btfsc	status,2,c
  8700   012ACE  D004               	goto	u12640
  8701   012AD0  0EA2               	movlw	162
  8702   012AD2  1824               	xorwf	SETxSTATIONxPATHWAY@path^0,w,c
  8703   012AD4  A4D8               	btfss	status,2,c
  8704   012AD6  D016               	goto	l14427
  8705   012AD8                     u12640:
  8706                           
  8707                           ;pathway.c: 49:             else if(path == TRACK3 || path == TRACK11){
  8708   012AD8  EE20 F00C          	lfsr	2,12
  8709   012ADC  5022               	movf	SETxSTATIONxPATHWAY@self^0,w,c
  8710   012ADE  26D9               	addwf	fsr2l,f,c
  8711   012AE0  5023               	movf	(SETxSTATIONxPATHWAY@self+1)^0,w,c
  8712   012AE2  22DA               	addwfc	fsr2h,f,c
  8713   012AE4  EE10 F003          	lfsr	1,3
  8714   012AE8  50DE               	movf	postinc2,w,c
  8715   012AEA  26E1               	addwf	fsr1l,f,c
  8716   012AEC  50DD               	movf	postdec2,w,c
  8717   012AEE  22E2               	addwfc	fsr1h,f,c
  8718   012AF0  CFE6 F026          	movff	postinc1,??_SETxSTATIONxPATHWAY
  8719   012AF4  CFE5 F027          	movff	postdec1,??_SETxSTATIONxPATHWAY+1
  8720   012AF8  C026  FFD9         	movff	??_SETxSTATIONxPATHWAY,fsr2l
  8721   012AFC  C027  FFDA         	movff	??_SETxSTATIONxPATHWAY+1,fsr2h
  8722   012B00  502C               	movf	SETxSTATIONxPATHWAY@pin2^0,w,c
  8723   012B02  D07D               	goto	L16
  8724   012B04                     l14427:
  8725   012B04  0EA1               	movlw	161
  8726   012B06  1824               	xorwf	SETxSTATIONxPATHWAY@path^0,w,c
  8727   012B08  B4D8               	btfsc	status,2,c
  8728   012B0A  D004               	goto	u12660
  8729   012B0C  0EA3               	movlw	163
  8730   012B0E  1824               	xorwf	SETxSTATIONxPATHWAY@path^0,w,c
  8731   012B10  A4D8               	btfss	status,2,c
  8732   012B12  D18E               	goto	l14521
  8733   012B14                     u12660:
  8734                           
  8735                           ;pathway.c: 52: 
  8736   012B14  502C               	movf	SETxSTATIONxPATHWAY@pin2^0,w,c
  8737   012B16  0AFF               	xorlw	255
  8738   012B18  6E26               	movwf	??_SETxSTATIONxPATHWAY^0,c
  8739   012B1A  EE20 F00C          	lfsr	2,12
  8740   012B1E  5022               	movf	SETxSTATIONxPATHWAY@self^0,w,c
  8741   012B20  26D9               	addwf	fsr2l,f,c
  8742   012B22  5023               	movf	(SETxSTATIONxPATHWAY@self+1)^0,w,c
  8743   012B24  22DA               	addwfc	fsr2h,f,c
  8744   012B26  EE10 F003          	lfsr	1,3
  8745   012B2A  D04D               	goto	L17
  8746   012B2C                     l14433:
  8747                           
  8748                           ;pathway.c: 57:                 *self->setPath->port3_ptr &= ~pin3;
  8749   012B2C  0E9F               	movlw	159
  8750   012B2E  1824               	xorwf	SETxSTATIONxPATHWAY@path^0,w,c
  8751   012B30  B4D8               	btfsc	status,2,c
  8752   012B32  D004               	goto	u12680
  8753   012B34  0EA3               	movlw	163
  8754   012B36  1824               	xorwf	SETxSTATIONxPATHWAY@path^0,w,c
  8755   012B38  A4D8               	btfss	status,2,c
  8756   012B3A  D017               	goto	l14439
  8757   012B3C                     u12680:
  8758                           
  8759                           ;pathway.c: 58:             }
  8760   012B3C  EE20 F00C          	lfsr	2,12
  8761   012B40  5022               	movf	SETxSTATIONxPATHWAY@self^0,w,c
  8762   012B42  26D9               	addwf	fsr2l,f,c
  8763   012B44  5023               	movf	(SETxSTATIONxPATHWAY@self+1)^0,w,c
  8764   012B46  22DA               	addwfc	fsr2h,f,c
  8765   012B48  EE10 F006          	lfsr	1,6
  8766   012B4C  50DE               	movf	postinc2,w,c
  8767   012B4E  26E1               	addwf	fsr1l,f,c
  8768   012B50  50DD               	movf	postdec2,w,c
  8769   012B52  22E2               	addwfc	fsr1h,f,c
  8770   012B54  CFE6 F026          	movff	postinc1,??_SETxSTATIONxPATHWAY
  8771   012B58  CFE5 F027          	movff	postdec1,??_SETxSTATIONxPATHWAY+1
  8772   012B5C  C026  FFD9         	movff	??_SETxSTATIONxPATHWAY,fsr2l
  8773   012B60  C027  FFDA         	movff	??_SETxSTATIONxPATHWAY+1,fsr2h
  8774   012B64  502D               	movf	SETxSTATIONxPATHWAY@pin3^0,w,c
  8775   012B66  12DF               	iorwf	indf2,f,c
  8776                           
  8777                           ;pathway.c: 59: 
  8778   012B68  D021               	goto	l14445
  8779   012B6A                     l14439:
  8780   012B6A  0EA0               	movlw	160
  8781   012B6C  1824               	xorwf	SETxSTATIONxPATHWAY@path^0,w,c
  8782   012B6E  B4D8               	btfsc	status,2,c
  8783   012B70  D004               	goto	u12700
  8784   012B72  0EA4               	movlw	164
  8785   012B74  1824               	xorwf	SETxSTATIONxPATHWAY@path^0,w,c
  8786   012B76  A4D8               	btfss	status,2,c
  8787   012B78  D019               	goto	l14445
  8788   012B7A                     u12700:
  8789                           
  8790                           ;pathway.c: 61:                 *self->setPath->port4_ptr |= pin4;
  8791   012B7A  502D               	movf	SETxSTATIONxPATHWAY@pin3^0,w,c
  8792   012B7C  0AFF               	xorlw	255
  8793   012B7E  6E26               	movwf	??_SETxSTATIONxPATHWAY^0,c
  8794   012B80  EE20 F00C          	lfsr	2,12
  8795   012B84  5022               	movf	SETxSTATIONxPATHWAY@self^0,w,c
  8796   012B86  26D9               	addwf	fsr2l,f,c
  8797   012B88  5023               	movf	(SETxSTATIONxPATHWAY@self+1)^0,w,c
  8798   012B8A  22DA               	addwfc	fsr2h,f,c
  8799   012B8C  EE10 F006          	lfsr	1,6
  8800   012B90  50DE               	movf	postinc2,w,c
  8801   012B92  26E1               	addwf	fsr1l,f,c
  8802   012B94  50DD               	movf	postdec2,w,c
  8803   012B96  22E2               	addwfc	fsr1h,f,c
  8804   012B98  CFE6 F027          	movff	postinc1,??_SETxSTATIONxPATHWAY+1
  8805   012B9C  CFE5 F028          	movff	postdec1,??_SETxSTATIONxPATHWAY+2
  8806   012BA0  C027  FFD9         	movff	??_SETxSTATIONxPATHWAY+1,fsr2l
  8807   012BA4  C028  FFDA         	movff	??_SETxSTATIONxPATHWAY+2,fsr2h
  8808   012BA8  5026               	movf	??_SETxSTATIONxPATHWAY^0,w,c
  8809   012BAA  16DF               	andwf	indf2,f,c
  8810   012BAC                     l14445:
  8811                           
  8812                           ;pathway.c: 64:                 *self->setPath->port4_ptr &= ~pin4;
  8813   012BAC  0EA1               	movlw	161
  8814   012BAE  1824               	xorwf	SETxSTATIONxPATHWAY@path^0,w,c
  8815   012BB0  B4D8               	btfsc	status,2,c
  8816   012BB2  D121               	goto	u12960
  8817   012BB4  0EA3               	movlw	163
  8818   012BB6  1824               	xorwf	SETxSTATIONxPATHWAY@path^0,w,c
  8819   012BB8  B4D8               	btfsc	status,2,c
  8820   012BBA  D11D               	goto	u12960
  8821   012BBC  0EA4               	movlw	164
  8822   012BBE  1824               	xorwf	SETxSTATIONxPATHWAY@path^0,w,c
  8823   012BC0  A4D8               	btfss	status,2,c
  8824   012BC2  D010               	goto	l14453
  8825   012BC4  D118               	goto	u12960
  8826   012BC6                     L17:
  8827   012BC6  50DE               	movf	postinc2,w,c
  8828   012BC8  26E1               	addwf	fsr1l,f,c
  8829   012BCA  50DD               	movf	postdec2,w,c
  8830   012BCC  22E2               	addwfc	fsr1h,f,c
  8831   012BCE  CFE6 F027          	movff	postinc1,??_SETxSTATIONxPATHWAY+1
  8832   012BD2  CFE5 F028          	movff	postdec1,??_SETxSTATIONxPATHWAY+2
  8833   012BD6  C027  FFD9         	movff	??_SETxSTATIONxPATHWAY+1,fsr2l
  8834   012BDA  C028  FFDA         	movff	??_SETxSTATIONxPATHWAY+2,fsr2h
  8835   012BDE  5026               	movf	??_SETxSTATIONxPATHWAY^0,w,c
  8836   012BE0  16DF               	andwf	indf2,f,c
  8837                           
  8838                           ;pathway.c: 66:             break;
  8839   012BE2  D126               	goto	l14521
  8840   012BE4                     l14453:
  8841   012BE4  0E9F               	movlw	159
  8842   012BE6  1824               	xorwf	SETxSTATIONxPATHWAY@path^0,w,c
  8843   012BE8  B4D8               	btfsc	status,2,c
  8844   012BEA  D0E3               	goto	u12930
  8845   012BEC  0EA0               	movlw	160
  8846   012BEE  1824               	xorwf	SETxSTATIONxPATHWAY@path^0,w,c
  8847   012BF0  B4D8               	btfsc	status,2,c
  8848   012BF2  D0DF               	goto	u12930
  8849   012BF4  0EA2               	movlw	162
  8850   012BF6  1824               	xorwf	SETxSTATIONxPATHWAY@path^0,w,c
  8851   012BF8  A4D8               	btfss	status,2,c
  8852   012BFA  D11A               	goto	l14521
  8853   012BFC  D0DA               	goto	u12930
  8854   012BFE                     L16:
  8855   012BFE  12DF               	iorwf	indf2,f,c
  8856   012C00  D117               	goto	l14521
  8857   012C02                     l14461:
  8858                           
  8859                           ;pathway.c: 73:             dir,
  8860   012C02  0E9F               	movlw	159
  8861   012C04  1824               	xorwf	SETxSTATIONxPATHWAY@path^0,w,c
  8862   012C06  B4D8               	btfsc	status,2,c
  8863   012C08  D008               	goto	u12790
  8864   012C0A  0EA2               	movlw	162
  8865   012C0C  1824               	xorwf	SETxSTATIONxPATHWAY@path^0,w,c
  8866   012C0E  B4D8               	btfsc	status,2,c
  8867   012C10  D004               	goto	u12790
  8868   012C12  0EA3               	movlw	163
  8869   012C14  1824               	xorwf	SETxSTATIONxPATHWAY@path^0,w,c
  8870   012C16  A4D8               	btfss	status,2,c
  8871   012C18  D019               	goto	l14469
  8872   012C1A                     u12790:
  8873                           
  8874                           ;pathway.c: 74:             path);
  8875   012C1A  EE20 F00C          	lfsr	2,12
  8876   012C1E  5022               	movf	SETxSTATIONxPATHWAY@self^0,w,c
  8877   012C20  26D9               	addwf	fsr2l,f,c
  8878   012C22  5023               	movf	(SETxSTATIONxPATHWAY@self+1)^0,w,c
  8879   012C24  22DA               	addwfc	fsr2h,f,c
  8880   012C26  CFDE F026          	movff	postinc2,??_SETxSTATIONxPATHWAY
  8881   012C2A  CFDD F027          	movff	postdec2,??_SETxSTATIONxPATHWAY+1
  8882   012C2E  C026  FFD9         	movff	??_SETxSTATIONxPATHWAY,fsr2l
  8883   012C32  C027  FFDA         	movff	??_SETxSTATIONxPATHWAY+1,fsr2h
  8884   012C36  CFDE F028          	movff	postinc2,??_SETxSTATIONxPATHWAY+2
  8885   012C3A  CFDD F029          	movff	postdec2,??_SETxSTATIONxPATHWAY+3
  8886   012C3E  C028  FFD9         	movff	??_SETxSTATIONxPATHWAY+2,fsr2l
  8887   012C42  C029  FFDA         	movff	??_SETxSTATIONxPATHWAY+3,fsr2h
  8888   012C46  502B               	movf	SETxSTATIONxPATHWAY@pin1^0,w,c
  8889   012C48  12DF               	iorwf	indf2,f,c
  8890                           
  8891                           ;pathway.c: 75: 
  8892   012C4A  D027               	goto	l14477
  8893   012C4C                     l14469:
  8894   012C4C  0EA0               	movlw	160
  8895   012C4E  1824               	xorwf	SETxSTATIONxPATHWAY@path^0,w,c
  8896   012C50  B4D8               	btfsc	status,2,c
  8897   012C52  D008               	goto	u12820
  8898   012C54  0EA1               	movlw	161
  8899   012C56  1824               	xorwf	SETxSTATIONxPATHWAY@path^0,w,c
  8900   012C58  B4D8               	btfsc	status,2,c
  8901   012C5A  D004               	goto	u12820
  8902   012C5C  0EA4               	movlw	164
  8903   012C5E  1824               	xorwf	SETxSTATIONxPATHWAY@path^0,w,c
  8904   012C60  A4D8               	btfss	status,2,c
  8905   012C62  D01B               	goto	l14477
  8906   012C64                     u12820:
  8907   012C64  502B               	movf	SETxSTATIONxPATHWAY@pin1^0,w,c
  8908   012C66  0AFF               	xorlw	255
  8909   012C68  6E26               	movwf	??_SETxSTATIONxPATHWAY^0,c
  8910   012C6A  EE20 F00C          	lfsr	2,12
  8911   012C6E  5022               	movf	SETxSTATIONxPATHWAY@self^0,w,c
  8912   012C70  26D9               	addwf	fsr2l,f,c
  8913   012C72  5023               	movf	(SETxSTATIONxPATHWAY@self+1)^0,w,c
  8914   012C74  22DA               	addwfc	fsr2h,f,c
  8915   012C76  CFDE F027          	movff	postinc2,??_SETxSTATIONxPATHWAY+1
  8916   012C7A  CFDD F028          	movff	postdec2,??_SETxSTATIONxPATHWAY+2
  8917   012C7E  C027  FFD9         	movff	??_SETxSTATIONxPATHWAY+1,fsr2l
  8918   012C82  C028  FFDA         	movff	??_SETxSTATIONxPATHWAY+2,fsr2h
  8919   012C86  CFDE F029          	movff	postinc2,??_SETxSTATIONxPATHWAY+3
  8920   012C8A  CFDD F02A          	movff	postdec2,??_SETxSTATIONxPATHWAY+4
  8921   012C8E  C029  FFD9         	movff	??_SETxSTATIONxPATHWAY+3,fsr2l
  8922   012C92  C02A  FFDA         	movff	??_SETxSTATIONxPATHWAY+4,fsr2h
  8923   012C96  5026               	movf	??_SETxSTATIONxPATHWAY^0,w,c
  8924   012C98  16DF               	andwf	indf2,f,c
  8925   012C9A                     l14477:
  8926   012C9A  0EA0               	movlw	160
  8927   012C9C  1824               	xorwf	SETxSTATIONxPATHWAY@path^0,w,c
  8928   012C9E  B4D8               	btfsc	status,2,c
  8929   012CA0  D004               	goto	u12840
  8930   012CA2  0EA2               	movlw	162
  8931   012CA4  1824               	xorwf	SETxSTATIONxPATHWAY@path^0,w,c
  8932   012CA6  A4D8               	btfss	status,2,c
  8933   012CA8  D017               	goto	l14483
  8934   012CAA                     u12840:
  8935   012CAA  EE20 F00C          	lfsr	2,12
  8936   012CAE  5022               	movf	SETxSTATIONxPATHWAY@self^0,w,c
  8937   012CB0  26D9               	addwf	fsr2l,f,c
  8938   012CB2  5023               	movf	(SETxSTATIONxPATHWAY@self+1)^0,w,c
  8939   012CB4  22DA               	addwfc	fsr2h,f,c
  8940   012CB6  EE10 F003          	lfsr	1,3
  8941   012CBA  50DE               	movf	postinc2,w,c
  8942   012CBC  26E1               	addwf	fsr1l,f,c
  8943   012CBE  50DD               	movf	postdec2,w,c
  8944   012CC0  22E2               	addwfc	fsr1h,f,c
  8945   012CC2  CFE6 F026          	movff	postinc1,??_SETxSTATIONxPATHWAY
  8946   012CC6  CFE5 F027          	movff	postdec1,??_SETxSTATIONxPATHWAY+1
  8947   012CCA  C026  FFD9         	movff	??_SETxSTATIONxPATHWAY,fsr2l
  8948   012CCE  C027  FFDA         	movff	??_SETxSTATIONxPATHWAY+1,fsr2h
  8949   012CD2  502C               	movf	SETxSTATIONxPATHWAY@pin2^0,w,c
  8950   012CD4  12DF               	iorwf	indf2,f,c
  8951   012CD6  D021               	goto	l14489
  8952   012CD8                     l14483:
  8953   012CD8  0EA1               	movlw	161
  8954   012CDA  1824               	xorwf	SETxSTATIONxPATHWAY@path^0,w,c
  8955   012CDC  B4D8               	btfsc	status,2,c
  8956   012CDE  D004               	goto	u12860
  8957   012CE0  0EA3               	movlw	163
  8958   012CE2  1824               	xorwf	SETxSTATIONxPATHWAY@path^0,w,c
  8959   012CE4  A4D8               	btfss	status,2,c
  8960   012CE6  D019               	goto	l14489
  8961   012CE8                     u12860:
  8962   012CE8  502C               	movf	SETxSTATIONxPATHWAY@pin2^0,w,c
  8963   012CEA  0AFF               	xorlw	255
  8964   012CEC  6E26               	movwf	??_SETxSTATIONxPATHWAY^0,c
  8965   012CEE  EE20 F00C          	lfsr	2,12
  8966   012CF2  5022               	movf	SETxSTATIONxPATHWAY@self^0,w,c
  8967   012CF4  26D9               	addwf	fsr2l,f,c
  8968   012CF6  5023               	movf	(SETxSTATIONxPATHWAY@self+1)^0,w,c
  8969   012CF8  22DA               	addwfc	fsr2h,f,c
  8970   012CFA  EE10 F003          	lfsr	1,3
  8971   012CFE  50DE               	movf	postinc2,w,c
  8972   012D00  26E1               	addwf	fsr1l,f,c
  8973   012D02  50DD               	movf	postdec2,w,c
  8974   012D04  22E2               	addwfc	fsr1h,f,c
  8975   012D06  CFE6 F027          	movff	postinc1,??_SETxSTATIONxPATHWAY+1
  8976   012D0A  CFE5 F028          	movff	postdec1,??_SETxSTATIONxPATHWAY+2
  8977   012D0E  C027  FFD9         	movff	??_SETxSTATIONxPATHWAY+1,fsr2l
  8978   012D12  C028  FFDA         	movff	??_SETxSTATIONxPATHWAY+2,fsr2h
  8979   012D16  5026               	movf	??_SETxSTATIONxPATHWAY^0,w,c
  8980   012D18  16DF               	andwf	indf2,f,c
  8981   012D1A                     l14489:
  8982   012D1A  0E9F               	movlw	159
  8983   012D1C  1824               	xorwf	SETxSTATIONxPATHWAY@path^0,w,c
  8984   012D1E  B4D8               	btfsc	status,2,c
  8985   012D20  D004               	goto	u12880
  8986   012D22  0EA3               	movlw	163
  8987   012D24  1824               	xorwf	SETxSTATIONxPATHWAY@path^0,w,c
  8988   012D26  A4D8               	btfss	status,2,c
  8989   012D28  D017               	goto	l14495
  8990   012D2A                     u12880:
  8991   012D2A  EE20 F00C          	lfsr	2,12
  8992   012D2E  5022               	movf	SETxSTATIONxPATHWAY@self^0,w,c
  8993   012D30  26D9               	addwf	fsr2l,f,c
  8994   012D32  5023               	movf	(SETxSTATIONxPATHWAY@self+1)^0,w,c
  8995   012D34  22DA               	addwfc	fsr2h,f,c
  8996   012D36  EE10 F006          	lfsr	1,6
  8997   012D3A  50DE               	movf	postinc2,w,c
  8998   012D3C  26E1               	addwf	fsr1l,f,c
  8999   012D3E  50DD               	movf	postdec2,w,c
  9000   012D40  22E2               	addwfc	fsr1h,f,c
  9001   012D42  CFE6 F026          	movff	postinc1,??_SETxSTATIONxPATHWAY
  9002   012D46  CFE5 F027          	movff	postdec1,??_SETxSTATIONxPATHWAY+1
  9003   012D4A  C026  FFD9         	movff	??_SETxSTATIONxPATHWAY,fsr2l
  9004   012D4E  C027  FFDA         	movff	??_SETxSTATIONxPATHWAY+1,fsr2h
  9005   012D52  502D               	movf	SETxSTATIONxPATHWAY@pin3^0,w,c
  9006   012D54  12DF               	iorwf	indf2,f,c
  9007   012D56  D021               	goto	l14501
  9008   012D58                     l14495:
  9009   012D58  0EA0               	movlw	160
  9010   012D5A  1824               	xorwf	SETxSTATIONxPATHWAY@path^0,w,c
  9011   012D5C  B4D8               	btfsc	status,2,c
  9012   012D5E  D004               	goto	u12900
  9013   012D60  0EA4               	movlw	164
  9014   012D62  1824               	xorwf	SETxSTATIONxPATHWAY@path^0,w,c
  9015   012D64  A4D8               	btfss	status,2,c
  9016   012D66  D019               	goto	l14501
  9017   012D68                     u12900:
  9018   012D68  502D               	movf	SETxSTATIONxPATHWAY@pin3^0,w,c
  9019   012D6A  0AFF               	xorlw	255
  9020   012D6C  6E26               	movwf	??_SETxSTATIONxPATHWAY^0,c
  9021   012D6E  EE20 F00C          	lfsr	2,12
  9022   012D72  5022               	movf	SETxSTATIONxPATHWAY@self^0,w,c
  9023   012D74  26D9               	addwf	fsr2l,f,c
  9024   012D76  5023               	movf	(SETxSTATIONxPATHWAY@self+1)^0,w,c
  9025   012D78  22DA               	addwfc	fsr2h,f,c
  9026   012D7A  EE10 F006          	lfsr	1,6
  9027   012D7E  50DE               	movf	postinc2,w,c
  9028   012D80  26E1               	addwf	fsr1l,f,c
  9029   012D82  50DD               	movf	postdec2,w,c
  9030   012D84  22E2               	addwfc	fsr1h,f,c
  9031   012D86  CFE6 F027          	movff	postinc1,??_SETxSTATIONxPATHWAY+1
  9032   012D8A  CFE5 F028          	movff	postdec1,??_SETxSTATIONxPATHWAY+2
  9033   012D8E  C027  FFD9         	movff	??_SETxSTATIONxPATHWAY+1,fsr2l
  9034   012D92  C028  FFDA         	movff	??_SETxSTATIONxPATHWAY+2,fsr2h
  9035   012D96  5026               	movf	??_SETxSTATIONxPATHWAY^0,w,c
  9036   012D98  16DF               	andwf	indf2,f,c
  9037   012D9A                     l14501:
  9038   012D9A  0E9F               	movlw	159
  9039   012D9C  1824               	xorwf	SETxSTATIONxPATHWAY@path^0,w,c
  9040   012D9E  B4D8               	btfsc	status,2,c
  9041   012DA0  D008               	goto	u12930
  9042   012DA2  0EA0               	movlw	160
  9043   012DA4  1824               	xorwf	SETxSTATIONxPATHWAY@path^0,w,c
  9044   012DA6  B4D8               	btfsc	status,2,c
  9045   012DA8  D004               	goto	u12930
  9046   012DAA  0EA2               	movlw	162
  9047   012DAC  1824               	xorwf	SETxSTATIONxPATHWAY@path^0,w,c
  9048   012DAE  A4D8               	btfss	status,2,c
  9049   012DB0  D016               	goto	l14509
  9050   012DB2                     u12930:
  9051   012DB2  EE20 F00C          	lfsr	2,12
  9052   012DB6  5022               	movf	SETxSTATIONxPATHWAY@self^0,w,c
  9053   012DB8  26D9               	addwf	fsr2l,f,c
  9054   012DBA  5023               	movf	(SETxSTATIONxPATHWAY@self+1)^0,w,c
  9055   012DBC  22DA               	addwfc	fsr2h,f,c
  9056   012DBE  EE10 F009          	lfsr	1,9
  9057   012DC2  50DE               	movf	postinc2,w,c
  9058   012DC4  26E1               	addwf	fsr1l,f,c
  9059   012DC6  50DD               	movf	postdec2,w,c
  9060   012DC8  22E2               	addwfc	fsr1h,f,c
  9061   012DCA  CFE6 F026          	movff	postinc1,??_SETxSTATIONxPATHWAY
  9062   012DCE  CFE5 F027          	movff	postdec1,??_SETxSTATIONxPATHWAY+1
  9063   012DD2  C026  FFD9         	movff	??_SETxSTATIONxPATHWAY,fsr2l
  9064   012DD6  C027  FFDA         	movff	??_SETxSTATIONxPATHWAY+1,fsr2h
  9065   012DDA  502E               	movf	SETxSTATIONxPATHWAY@pin4^0,w,c
  9066   012DDC  D710               	goto	L16
  9067   012DDE                     l14509:
  9068   012DDE  0EA1               	movlw	161
  9069   012DE0  1824               	xorwf	SETxSTATIONxPATHWAY@path^0,w,c
  9070   012DE2  B4D8               	btfsc	status,2,c
  9071   012DE4  D008               	goto	u12960
  9072   012DE6  0EA3               	movlw	163
  9073   012DE8  1824               	xorwf	SETxSTATIONxPATHWAY@path^0,w,c
  9074   012DEA  B4D8               	btfsc	status,2,c
  9075   012DEC  D004               	goto	u12960
  9076   012DEE  0EA4               	movlw	164
  9077   012DF0  1824               	xorwf	SETxSTATIONxPATHWAY@path^0,w,c
  9078   012DF2  A4D8               	btfss	status,2,c
  9079   012DF4  D01D               	goto	l14521
  9080   012DF6                     u12960:
  9081   012DF6  502E               	movf	SETxSTATIONxPATHWAY@pin4^0,w,c
  9082   012DF8  0AFF               	xorlw	255
  9083   012DFA  6E26               	movwf	??_SETxSTATIONxPATHWAY^0,c
  9084   012DFC  EE20 F00C          	lfsr	2,12
  9085   012E00  5022               	movf	SETxSTATIONxPATHWAY@self^0,w,c
  9086   012E02  26D9               	addwf	fsr2l,f,c
  9087   012E04  5023               	movf	(SETxSTATIONxPATHWAY@self+1)^0,w,c
  9088   012E06  22DA               	addwfc	fsr2h,f,c
  9089   012E08  EE10 F009          	lfsr	1,9
  9090   012E0C  D6DC               	goto	L17
  9091   012E0E                     l14519:
  9092   012E0E  5025               	movf	SETxSTATIONxPATHWAY@dir^0,w,c
  9093   012E10  6E26               	movwf	??_SETxSTATIONxPATHWAY^0,c
  9094   012E12  6A27               	clrf	(??_SETxSTATIONxPATHWAY+1)^0,c
  9095                           
  9096                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9097                           ; Switch size 1, requested type "simple"
  9098                           ; Number of cases is 1, Range of values is 0 to 0
  9099                           ; switch strategies available:
  9100                           ; Name         Instructions Cycles
  9101                           ; simple_byte            4     3 (average)
  9102                           ;	Chosen strategy is simple_byte
  9103   012E14  5027               	movf	(??_SETxSTATIONxPATHWAY+1)^0,w,c
  9104   012E16  0A00               	xorlw	0	; case 0
  9105   012E18  A4D8               	btfss	status,2,c
  9106   012E1A  D00A               	goto	l14521
  9107                           
  9108                           ; Switch size 1, requested type "simple"
  9109                           ; Number of cases is 3, Range of values is 116 to 118
  9110                           ; switch strategies available:
  9111                           ; Name         Instructions Cycles
  9112                           ; simple_byte           10     6 (average)
  9113                           ;	Chosen strategy is simple_byte
  9114   012E1C  5026               	movf	??_SETxSTATIONxPATHWAY^0,w,c
  9115   012E1E  0A74               	xorlw	116	; case 116
  9116   012E20  B4D8               	btfsc	status,2,c
  9117   012E22  D606               	goto	l14405
  9118   012E24  0A01               	xorlw	1	; case 117
  9119   012E26  B4D8               	btfsc	status,2,c
  9120   012E28  D681               	goto	l14433
  9121   012E2A  0A03               	xorlw	3	; case 118
  9122   012E2C  B4D8               	btfsc	status,2,c
  9123   012E2E  D6E9               	goto	l14461
  9124   012E30                     l14521:
  9125   012E30  0E85               	movlw	133
  9126   012E32  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
  9127   012E34  C025  F013         	movff	SETxSTATIONxPATHWAY@dir,CREATExTASKxSTATUSxMESSAGE@task_state
  9128   012E38  C024  F014         	movff	SETxSTATIONxPATHWAY@path,CREATExTASKxSTATUSxMESSAGE@task_messages
  9129   012E3C  C022  FFD9         	movff	SETxSTATIONxPATHWAY@self,fsr2l
  9130   012E40  C023  FFDA         	movff	SETxSTATIONxPATHWAY@self+1,fsr2h
  9131   012E44  50DF               	movf	indf2,w,c
  9132   012E46  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
  9133                           
  9134                           ; BSR set to: 1
  9135   012E4A  0012               	return		;funcret
  9136   012E4C                     __end_of_SETxSTATIONxPATHWAY:
  9137                           	callstack 0
  9138                           
  9139 ;; *************** function _UPDATExMOUNTAINxTRAINxWAIT *****************
  9140 ;; Defined at:
  9141 ;;		line 311 in file "mountaintrack.c"
  9142 ;; Parameters:    Size  Location     Type
  9143 ;;  self            2   33[COMRAM] PTR struct .
  9144 ;;		 -> waldberg(54), waldsee(54), 
  9145 ;; Auto vars:     Size  Location     Type
  9146 ;;  millis          4   47[COMRAM] unsigned long 
  9147 ;; Return value:  Size  Location     Type
  9148 ;;                  1    wreg      void 
  9149 ;; Registers used:
  9150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9151 ;; Tracked objects:
  9152 ;;		On entry : 0/1
  9153 ;;		On exit  : 0/0
  9154 ;;		Unchanged: 0/0
  9155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9156 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9157 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9158 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9159 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9160 ;;Total ram usage:       18 bytes
  9161 ;; Hardware stack levels used: 1
  9162 ;; Hardware stack levels required when called: 7
  9163 ;; This function calls:
  9164 ;;		_CREATExTASKxSTATUSxMESSAGE
  9165 ;;		_GETxMILLIS
  9166 ;;		_GETxRANDOMxNUMBER
  9167 ;;		___lldiv
  9168 ;; This function is called by:
  9169 ;;		_main
  9170 ;; This function uses a non-reentrant model
  9171 ;;
  9172                           
  9173                           	psect	text9
  9174   0145BA                     __ptext9:
  9175                           	callstack 0
  9176   0145BA                     _UPDATExMOUNTAINxTRAINxWAIT:
  9177                           	callstack 23
  9178                           
  9179                           ;mountaintrack.c: 311: void UPDATExMOUNTAINxTRAINxWAIT(MNTSTATION *self);mountaintrack.c
      +                          : 312: {;mountaintrack.c: 314:     uint32_t millis = GETxMILLIS();
  9180                           
  9181                           ; BSR set to: 1
  9182                           ;incstack = 0
  9183   0145BA  EC50  F0C1         	call	_GETxMILLIS	;wreg free
  9184   0145BE  C005  F030         	movff	?_GETxMILLIS,UPDATExMOUNTAINxTRAINxWAIT@millis
  9185   0145C2  C006  F031         	movff	?_GETxMILLIS+1,UPDATExMOUNTAINxTRAINxWAIT@millis+1
  9186   0145C6  C007  F032         	movff	?_GETxMILLIS+2,UPDATExMOUNTAINxTRAINxWAIT@millis+2
  9187   0145CA  C008  F033         	movff	?_GETxMILLIS+3,UPDATExMOUNTAINxTRAINxWAIT@millis+3
  9188                           
  9189                           ;mountaintrack.c: 316:     if(STN_WAIT == self->stnTrack1.stnState){
  9190   0145CE  EE20 F00F          	lfsr	2,15
  9191   0145D2  5022               	movf	UPDATExMOUNTAINxTRAINxWAIT@self^0,w,c
  9192   0145D4  26D9               	addwf	fsr2l,f,c
  9193   0145D6  5023               	movf	(UPDATExMOUNTAINxTRAINxWAIT@self+1)^0,w,c
  9194   0145D8  22DA               	addwfc	fsr2h,f,c
  9195   0145DA  0E77               	movlw	119
  9196   0145DC  18DE               	xorwf	postinc2,w,c
  9197   0145DE  A4D8               	btfss	status,2,c
  9198   0145E0  D0B3               	goto	l16059
  9199                           
  9200                           ;mountaintrack.c: 317:         if((millis - self->stnTrack1.tCountTime) > self->stnTrack
      +                          1.tWaitTime){
  9201   0145E2  EE20 F016          	lfsr	2,22
  9202   0145E6  5022               	movf	UPDATExMOUNTAINxTRAINxWAIT@self^0,w,c
  9203   0145E8  26D9               	addwf	fsr2l,f,c
  9204   0145EA  5023               	movf	(UPDATExMOUNTAINxTRAINxWAIT@self+1)^0,w,c
  9205   0145EC  22DA               	addwfc	fsr2h,f,c
  9206   0145EE  CFDE F024          	movff	postinc2,??_UPDATExMOUNTAINxTRAINxWAIT
  9207   0145F2  CFDE F025          	movff	postinc2,??_UPDATExMOUNTAINxTRAINxWAIT+1
  9208   0145F6  CFDE F026          	movff	postinc2,??_UPDATExMOUNTAINxTRAINxWAIT+2
  9209   0145FA  CFDE F027          	movff	postinc2,??_UPDATExMOUNTAINxTRAINxWAIT+3
  9210   0145FE  5024               	movf	??_UPDATExMOUNTAINxTRAINxWAIT^0,w,c
  9211   014600  5C30               	subwf	UPDATExMOUNTAINxTRAINxWAIT@millis^0,w,c
  9212   014602  6E28               	movwf	(??_UPDATExMOUNTAINxTRAINxWAIT+4)^0,c
  9213   014604  5025               	movf	(??_UPDATExMOUNTAINxTRAINxWAIT+1)^0,w,c
  9214   014606  5831               	subwfb	(UPDATExMOUNTAINxTRAINxWAIT@millis+1)^0,w,c
  9215   014608  6E29               	movwf	(??_UPDATExMOUNTAINxTRAINxWAIT+5)^0,c
  9216   01460A  5026               	movf	(??_UPDATExMOUNTAINxTRAINxWAIT+2)^0,w,c
  9217   01460C  5832               	subwfb	(UPDATExMOUNTAINxTRAINxWAIT@millis+2)^0,w,c
  9218   01460E  6E2A               	movwf	(??_UPDATExMOUNTAINxTRAINxWAIT+6)^0,c
  9219   014610  5027               	movf	(??_UPDATExMOUNTAINxTRAINxWAIT+3)^0,w,c
  9220   014612  5833               	subwfb	(UPDATExMOUNTAINxTRAINxWAIT@millis+3)^0,w,c
  9221   014614  6E2B               	movwf	(??_UPDATExMOUNTAINxTRAINxWAIT+7)^0,c
  9222   014616  EE20 F01A          	lfsr	2,26
  9223   01461A  5022               	movf	UPDATExMOUNTAINxTRAINxWAIT@self^0,w,c
  9224   01461C  26D9               	addwf	fsr2l,f,c
  9225   01461E  5023               	movf	(UPDATExMOUNTAINxTRAINxWAIT@self+1)^0,w,c
  9226   014620  22DA               	addwfc	fsr2h,f,c
  9227   014622  5028               	movf	(??_UPDATExMOUNTAINxTRAINxWAIT+4)^0,w,c
  9228   014624  5CDE               	subwf	postinc2,w,c
  9229   014626  5029               	movf	(??_UPDATExMOUNTAINxTRAINxWAIT+5)^0,w,c
  9230   014628  58DE               	subwfb	postinc2,w,c
  9231   01462A  502A               	movf	(??_UPDATExMOUNTAINxTRAINxWAIT+6)^0,w,c
  9232   01462C  58DE               	subwfb	postinc2,w,c
  9233   01462E  502B               	movf	(??_UPDATExMOUNTAINxTRAINxWAIT+7)^0,w,c
  9234   014630  58DE               	subwfb	postinc2,w,c
  9235   014632  B0D8               	btfsc	status,0,c
  9236   014634  D089               	goto	l16059
  9237                           
  9238                           ;mountaintrack.c: 318:             if(STN_OUTBOUND != self->stnTrack2.stnState){
  9239   014636  EE20 F01F          	lfsr	2,31
  9240   01463A  5022               	movf	UPDATExMOUNTAINxTRAINxWAIT@self^0,w,c
  9241   01463C  26D9               	addwf	fsr2l,f,c
  9242   01463E  5023               	movf	(UPDATExMOUNTAINxTRAINxWAIT@self+1)^0,w,c
  9243   014640  22DA               	addwfc	fsr2h,f,c
  9244   014642  0E75               	movlw	117
  9245   014644  18DE               	xorwf	postinc2,w,c
  9246   014646  B4D8               	btfsc	status,2,c
  9247   014648  D022               	goto	l16051
  9248                           
  9249                           ;mountaintrack.c: 319:                 self->stnTrack1.stnState = STN_OUTBOUND;
  9250   01464A  EE20 F00F          	lfsr	2,15
  9251   01464E  5022               	movf	UPDATExMOUNTAINxTRAINxWAIT@self^0,w,c
  9252   014650  26D9               	addwf	fsr2l,f,c
  9253   014652  5023               	movf	(UPDATExMOUNTAINxTRAINxWAIT@self+1)^0,w,c
  9254   014654  22DA               	addwfc	fsr2h,f,c
  9255   014656  0E75               	movlw	117
  9256   014658  6EDF               	movwf	indf2,c
  9257                           
  9258                           ;mountaintrack.c: 320:                 CREATExTASKxSTATUSxMESSAGE(self->name,
  9259   01465A  EE20 F00E          	lfsr	2,14
  9260   01465E  5022               	movf	UPDATExMOUNTAINxTRAINxWAIT@self^0,w,c
  9261   014660  26D9               	addwf	fsr2l,f,c
  9262   014662  5023               	movf	(UPDATExMOUNTAINxTRAINxWAIT@self+1)^0,w,c
  9263   014664  22DA               	addwfc	fsr2h,f,c
  9264   014666  50DF               	movf	indf2,w,c
  9265   014668  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
  9266   01466A  EE20 F00F          	lfsr	2,15
  9267   01466E  5022               	movf	UPDATExMOUNTAINxTRAINxWAIT@self^0,w,c
  9268   014670  26D9               	addwf	fsr2l,f,c
  9269   014672  5023               	movf	(UPDATExMOUNTAINxTRAINxWAIT@self+1)^0,w,c
  9270   014674  22DA               	addwfc	fsr2h,f,c
  9271   014676  50DF               	movf	indf2,w,c
  9272   014678  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
  9273   01467A  0E96               	movlw	150
  9274   01467C  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
  9275   01467E  C022  FFD9         	movff	UPDATExMOUNTAINxTRAINxWAIT@self,fsr2l
  9276   014682  C023  FFDA         	movff	UPDATExMOUNTAINxTRAINxWAIT@self+1,fsr2h
  9277   014686  50DF               	movf	indf2,w,c
  9278   014688  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
  9279                           
  9280                           ;mountaintrack.c: 324:             }
  9281   01468C  D05D               	goto	l16059
  9282   01468E                     l16051:
  9283                           
  9284                           ;mountaintrack.c: 326:                 self->stnTrack1.tCountTime = millis;
  9285   01468E  EE20 F016          	lfsr	2,22
  9286   014692  5022               	movf	UPDATExMOUNTAINxTRAINxWAIT@self^0,w,c
  9287   014694  26D9               	addwf	fsr2l,f,c
  9288   014696  5023               	movf	(UPDATExMOUNTAINxTRAINxWAIT@self+1)^0,w,c
  9289   014698  22DA               	addwfc	fsr2h,f,c
  9290   01469A  C030  FFDE         	movff	UPDATExMOUNTAINxTRAINxWAIT@millis,postinc2
  9291   01469E  C031  FFDE         	movff	UPDATExMOUNTAINxTRAINxWAIT@millis+1,postinc2
  9292   0146A2  C032  FFDE         	movff	UPDATExMOUNTAINxTRAINxWAIT@millis+2,postinc2
  9293   0146A6  C033  FFDE         	movff	UPDATExMOUNTAINxTRAINxWAIT@millis+3,postinc2
  9294   0146AA  EC10  F0C1         	call	_GETxRANDOMxNUMBER	;wreg free
  9295   0146AE  90D8               	bcf	status,0,c
  9296   0146B0  3617               	rlcf	?_GETxRANDOMxNUMBER^0,f,c
  9297   0146B2  3618               	rlcf	(?_GETxRANDOMxNUMBER+1)^0,f,c
  9298   0146B4  90D8               	bcf	status,0,c
  9299   0146B6  3617               	rlcf	?_GETxRANDOMxNUMBER^0,f,c
  9300   0146B8  3618               	rlcf	(?_GETxRANDOMxNUMBER+1)^0,f,c
  9301   0146BA  5017               	movf	?_GETxRANDOMxNUMBER^0,w,c
  9302   0146BC  6E24               	movwf	??_UPDATExMOUNTAINxTRAINxWAIT^0,c
  9303   0146BE  5018               	movf	(?_GETxRANDOMxNUMBER+1)^0,w,c
  9304   0146C0  6E25               	movwf	(??_UPDATExMOUNTAINxTRAINxWAIT+1)^0,c
  9305   0146C2  6A26               	clrf	(??_UPDATExMOUNTAINxTRAINxWAIT+2)^0,c
  9306   0146C4  6A27               	clrf	(??_UPDATExMOUNTAINxTRAINxWAIT+3)^0,c
  9307   0146C6  EE20 F01A          	lfsr	2,26
  9308   0146CA  5022               	movf	UPDATExMOUNTAINxTRAINxWAIT@self^0,w,c
  9309   0146CC  26D9               	addwf	fsr2l,f,c
  9310   0146CE  5023               	movf	(UPDATExMOUNTAINxTRAINxWAIT@self+1)^0,w,c
  9311   0146D0  22DA               	addwfc	fsr2h,f,c
  9312   0146D2  C024  FFDE         	movff	??_UPDATExMOUNTAINxTRAINxWAIT,postinc2
  9313   0146D6  C025  FFDE         	movff	??_UPDATExMOUNTAINxTRAINxWAIT+1,postinc2
  9314   0146DA  C026  FFDE         	movff	??_UPDATExMOUNTAINxTRAINxWAIT+2,postinc2
  9315   0146DE  C027  FFDE         	movff	??_UPDATExMOUNTAINxTRAINxWAIT+3,postinc2
  9316                           
  9317                           ; BSR set to: 1
  9318                           ;mountaintrack.c: 328:                 self->stnTrack1.stnState = STN_WAIT;
  9319   0146E2  EE20 F00F          	lfsr	2,15
  9320   0146E6  5022               	movf	UPDATExMOUNTAINxTRAINxWAIT@self^0,w,c
  9321   0146E8  26D9               	addwf	fsr2l,f,c
  9322   0146EA  5023               	movf	(UPDATExMOUNTAINxTRAINxWAIT@self+1)^0,w,c
  9323   0146EC  22DA               	addwfc	fsr2h,f,c
  9324   0146EE  0E77               	movlw	119
  9325   0146F0  6EDF               	movwf	indf2,c
  9326                           
  9327                           ; BSR set to: 1
  9328                           ;mountaintrack.c: 329:                 CREATExTASKxSTATUSxMESSAGE(self->name,
  9329   0146F2  EE20 F00E          	lfsr	2,14
  9330   0146F6  5022               	movf	UPDATExMOUNTAINxTRAINxWAIT@self^0,w,c
  9331   0146F8  26D9               	addwf	fsr2l,f,c
  9332   0146FA  5023               	movf	(UPDATExMOUNTAINxTRAINxWAIT@self+1)^0,w,c
  9333   0146FC  22DA               	addwfc	fsr2h,f,c
  9334   0146FE  50DF               	movf	indf2,w,c
  9335   014700  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
  9336   014702  0E84               	movlw	132
  9337   014704  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
  9338   014706  EE20 F01A          	lfsr	2,26
  9339   01470A  5022               	movf	UPDATExMOUNTAINxTRAINxWAIT@self^0,w,c
  9340   01470C  26D9               	addwf	fsr2l,f,c
  9341   01470E  5023               	movf	(UPDATExMOUNTAINxTRAINxWAIT@self+1)^0,w,c
  9342   014710  22DA               	addwfc	fsr2h,f,c
  9343   014712  CFDE F005          	movff	postinc2,___lldiv@dividend
  9344   014716  CFDE F006          	movff	postinc2,___lldiv@dividend+1
  9345   01471A  CFDE F007          	movff	postinc2,___lldiv@dividend+2
  9346   01471E  CFDE F008          	movff	postinc2,___lldiv@dividend+3
  9347   014722  0EE8               	movlw	232
  9348   014724  6E09               	movwf	___lldiv@divisor^0,c
  9349   014726  0E03               	movlw	3
  9350   014728  6E0A               	movwf	(___lldiv@divisor+1)^0,c
  9351   01472A  0E00               	movlw	0
  9352   01472C  6E0B               	movwf	(___lldiv@divisor+2)^0,c
  9353   01472E  0E00               	movlw	0
  9354   014730  6E0C               	movwf	(___lldiv@divisor+3)^0,c
  9355   014732  ECBA  F0B8         	call	___lldiv	;wreg free
  9356   014736  5005               	movf	?___lldiv^0,w,c
  9357   014738  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
  9358   01473A  C022  FFD9         	movff	UPDATExMOUNTAINxTRAINxWAIT@self,fsr2l
  9359   01473E  C023  FFDA         	movff	UPDATExMOUNTAINxTRAINxWAIT@self+1,fsr2h
  9360   014742  50DF               	movf	indf2,w,c
  9361   014744  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
  9362   014748                     l16059:
  9363                           
  9364                           ;mountaintrack.c: 337:     if(STN_WAIT == self->stnTrack2.stnState){
  9365   014748  EE20 F01F          	lfsr	2,31
  9366   01474C  5022               	movf	UPDATExMOUNTAINxTRAINxWAIT@self^0,w,c
  9367   01474E  26D9               	addwf	fsr2l,f,c
  9368   014750  5023               	movf	(UPDATExMOUNTAINxTRAINxWAIT@self+1)^0,w,c
  9369   014752  22DA               	addwfc	fsr2h,f,c
  9370   014754  0E77               	movlw	119
  9371   014756  18DE               	xorwf	postinc2,w,c
  9372   014758  A4D8               	btfss	status,2,c
  9373   01475A  0012               	return	
  9374                           
  9375                           ;mountaintrack.c: 338:         if((millis - self->stnTrack2.tCountTime) > self->stnTrack
      +                          2.tWaitTime){
  9376   01475C  EE20 F026          	lfsr	2,38
  9377   014760  5022               	movf	UPDATExMOUNTAINxTRAINxWAIT@self^0,w,c
  9378   014762  26D9               	addwf	fsr2l,f,c
  9379   014764  5023               	movf	(UPDATExMOUNTAINxTRAINxWAIT@self+1)^0,w,c
  9380   014766  22DA               	addwfc	fsr2h,f,c
  9381   014768  CFDE F024          	movff	postinc2,??_UPDATExMOUNTAINxTRAINxWAIT
  9382   01476C  CFDE F025          	movff	postinc2,??_UPDATExMOUNTAINxTRAINxWAIT+1
  9383   014770  CFDE F026          	movff	postinc2,??_UPDATExMOUNTAINxTRAINxWAIT+2
  9384   014774  CFDE F027          	movff	postinc2,??_UPDATExMOUNTAINxTRAINxWAIT+3
  9385   014778  5024               	movf	??_UPDATExMOUNTAINxTRAINxWAIT^0,w,c
  9386   01477A  5C30               	subwf	UPDATExMOUNTAINxTRAINxWAIT@millis^0,w,c
  9387   01477C  6E28               	movwf	(??_UPDATExMOUNTAINxTRAINxWAIT+4)^0,c
  9388   01477E  5025               	movf	(??_UPDATExMOUNTAINxTRAINxWAIT+1)^0,w,c
  9389   014780  5831               	subwfb	(UPDATExMOUNTAINxTRAINxWAIT@millis+1)^0,w,c
  9390   014782  6E29               	movwf	(??_UPDATExMOUNTAINxTRAINxWAIT+5)^0,c
  9391   014784  5026               	movf	(??_UPDATExMOUNTAINxTRAINxWAIT+2)^0,w,c
  9392   014786  5832               	subwfb	(UPDATExMOUNTAINxTRAINxWAIT@millis+2)^0,w,c
  9393   014788  6E2A               	movwf	(??_UPDATExMOUNTAINxTRAINxWAIT+6)^0,c
  9394   01478A  5027               	movf	(??_UPDATExMOUNTAINxTRAINxWAIT+3)^0,w,c
  9395   01478C  5833               	subwfb	(UPDATExMOUNTAINxTRAINxWAIT@millis+3)^0,w,c
  9396   01478E  6E2B               	movwf	(??_UPDATExMOUNTAINxTRAINxWAIT+7)^0,c
  9397   014790  EE20 F02A          	lfsr	2,42
  9398   014794  5022               	movf	UPDATExMOUNTAINxTRAINxWAIT@self^0,w,c
  9399   014796  26D9               	addwf	fsr2l,f,c
  9400   014798  5023               	movf	(UPDATExMOUNTAINxTRAINxWAIT@self+1)^0,w,c
  9401   01479A  22DA               	addwfc	fsr2h,f,c
  9402   01479C  5028               	movf	(??_UPDATExMOUNTAINxTRAINxWAIT+4)^0,w,c
  9403   01479E  5CDE               	subwf	postinc2,w,c
  9404   0147A0  5029               	movf	(??_UPDATExMOUNTAINxTRAINxWAIT+5)^0,w,c
  9405   0147A2  58DE               	subwfb	postinc2,w,c
  9406   0147A4  502A               	movf	(??_UPDATExMOUNTAINxTRAINxWAIT+6)^0,w,c
  9407   0147A6  58DE               	subwfb	postinc2,w,c
  9408   0147A8  502B               	movf	(??_UPDATExMOUNTAINxTRAINxWAIT+7)^0,w,c
  9409   0147AA  58DE               	subwfb	postinc2,w,c
  9410   0147AC  B0D8               	btfsc	status,0,c
  9411   0147AE  0012               	return	
  9412                           
  9413                           ;mountaintrack.c: 339:             if(STN_OUTBOUND != self->stnTrack1.stnState){
  9414   0147B0  EE20 F00F          	lfsr	2,15
  9415   0147B4  5022               	movf	UPDATExMOUNTAINxTRAINxWAIT@self^0,w,c
  9416   0147B6  26D9               	addwf	fsr2l,f,c
  9417   0147B8  5023               	movf	(UPDATExMOUNTAINxTRAINxWAIT@self+1)^0,w,c
  9418   0147BA  22DA               	addwfc	fsr2h,f,c
  9419   0147BC  0E75               	movlw	117
  9420   0147BE  18DE               	xorwf	postinc2,w,c
  9421   0147C0  B4D8               	btfsc	status,2,c
  9422   0147C2  D022               	goto	l16069
  9423                           
  9424                           ;mountaintrack.c: 340:                 self->stnTrack2.stnState = STN_OUTBOUND;
  9425   0147C4  EE20 F01F          	lfsr	2,31
  9426   0147C8  5022               	movf	UPDATExMOUNTAINxTRAINxWAIT@self^0,w,c
  9427   0147CA  26D9               	addwf	fsr2l,f,c
  9428   0147CC  5023               	movf	(UPDATExMOUNTAINxTRAINxWAIT@self+1)^0,w,c
  9429   0147CE  22DA               	addwfc	fsr2h,f,c
  9430   0147D0  0E75               	movlw	117
  9431   0147D2  6EDF               	movwf	indf2,c
  9432                           
  9433                           ;mountaintrack.c: 341:                 CREATExTASKxSTATUSxMESSAGE(self->name,
  9434   0147D4  EE20 F01E          	lfsr	2,30
  9435   0147D8  5022               	movf	UPDATExMOUNTAINxTRAINxWAIT@self^0,w,c
  9436   0147DA  26D9               	addwf	fsr2l,f,c
  9437   0147DC  5023               	movf	(UPDATExMOUNTAINxTRAINxWAIT@self+1)^0,w,c
  9438   0147DE  22DA               	addwfc	fsr2h,f,c
  9439   0147E0  50DF               	movf	indf2,w,c
  9440   0147E2  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
  9441   0147E4  EE20 F01F          	lfsr	2,31
  9442   0147E8  5022               	movf	UPDATExMOUNTAINxTRAINxWAIT@self^0,w,c
  9443   0147EA  26D9               	addwf	fsr2l,f,c
  9444   0147EC  5023               	movf	(UPDATExMOUNTAINxTRAINxWAIT@self+1)^0,w,c
  9445   0147EE  22DA               	addwfc	fsr2h,f,c
  9446   0147F0  50DF               	movf	indf2,w,c
  9447   0147F2  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
  9448   0147F4  0E96               	movlw	150
  9449   0147F6  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
  9450   0147F8  C022  FFD9         	movff	UPDATExMOUNTAINxTRAINxWAIT@self,fsr2l
  9451   0147FC  C023  FFDA         	movff	UPDATExMOUNTAINxTRAINxWAIT@self+1,fsr2h
  9452   014800  50DF               	movf	indf2,w,c
  9453   014802  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
  9454                           
  9455                           ;mountaintrack.c: 345:             }
  9456   014806  0012               	return	
  9457   014808                     l16069:
  9458                           
  9459                           ;mountaintrack.c: 347:                 self->stnTrack2.tCountTime = millis;
  9460   014808  EE20 F026          	lfsr	2,38
  9461   01480C  5022               	movf	UPDATExMOUNTAINxTRAINxWAIT@self^0,w,c
  9462   01480E  26D9               	addwf	fsr2l,f,c
  9463   014810  5023               	movf	(UPDATExMOUNTAINxTRAINxWAIT@self+1)^0,w,c
  9464   014812  22DA               	addwfc	fsr2h,f,c
  9465   014814  C030  FFDE         	movff	UPDATExMOUNTAINxTRAINxWAIT@millis,postinc2
  9466   014818  C031  FFDE         	movff	UPDATExMOUNTAINxTRAINxWAIT@millis+1,postinc2
  9467   01481C  C032  FFDE         	movff	UPDATExMOUNTAINxTRAINxWAIT@millis+2,postinc2
  9468   014820  C033  FFDE         	movff	UPDATExMOUNTAINxTRAINxWAIT@millis+3,postinc2
  9469   014824  EC10  F0C1         	call	_GETxRANDOMxNUMBER	;wreg free
  9470   014828  90D8               	bcf	status,0,c
  9471   01482A  3617               	rlcf	?_GETxRANDOMxNUMBER^0,f,c
  9472   01482C  3618               	rlcf	(?_GETxRANDOMxNUMBER+1)^0,f,c
  9473   01482E  90D8               	bcf	status,0,c
  9474   014830  3617               	rlcf	?_GETxRANDOMxNUMBER^0,f,c
  9475   014832  3618               	rlcf	(?_GETxRANDOMxNUMBER+1)^0,f,c
  9476   014834  5017               	movf	?_GETxRANDOMxNUMBER^0,w,c
  9477   014836  6E24               	movwf	??_UPDATExMOUNTAINxTRAINxWAIT^0,c
  9478   014838  5018               	movf	(?_GETxRANDOMxNUMBER+1)^0,w,c
  9479   01483A  6E25               	movwf	(??_UPDATExMOUNTAINxTRAINxWAIT+1)^0,c
  9480   01483C  6A26               	clrf	(??_UPDATExMOUNTAINxTRAINxWAIT+2)^0,c
  9481   01483E  6A27               	clrf	(??_UPDATExMOUNTAINxTRAINxWAIT+3)^0,c
  9482   014840  EE20 F02A          	lfsr	2,42
  9483   014844  5022               	movf	UPDATExMOUNTAINxTRAINxWAIT@self^0,w,c
  9484   014846  26D9               	addwf	fsr2l,f,c
  9485   014848  5023               	movf	(UPDATExMOUNTAINxTRAINxWAIT@self+1)^0,w,c
  9486   01484A  22DA               	addwfc	fsr2h,f,c
  9487   01484C  C024  FFDE         	movff	??_UPDATExMOUNTAINxTRAINxWAIT,postinc2
  9488   014850  C025  FFDE         	movff	??_UPDATExMOUNTAINxTRAINxWAIT+1,postinc2
  9489   014854  C026  FFDE         	movff	??_UPDATExMOUNTAINxTRAINxWAIT+2,postinc2
  9490   014858  C027  FFDE         	movff	??_UPDATExMOUNTAINxTRAINxWAIT+3,postinc2
  9491                           
  9492                           ; BSR set to: 1
  9493                           ;mountaintrack.c: 349:                 self->stnTrack2.stnState = STN_WAIT;
  9494   01485C  EE20 F01F          	lfsr	2,31
  9495   014860  5022               	movf	UPDATExMOUNTAINxTRAINxWAIT@self^0,w,c
  9496   014862  26D9               	addwf	fsr2l,f,c
  9497   014864  5023               	movf	(UPDATExMOUNTAINxTRAINxWAIT@self+1)^0,w,c
  9498   014866  22DA               	addwfc	fsr2h,f,c
  9499   014868  0E77               	movlw	119
  9500   01486A  6EDF               	movwf	indf2,c
  9501                           
  9502                           ; BSR set to: 1
  9503                           ;mountaintrack.c: 350:                 CREATExTASKxSTATUSxMESSAGE(self->name,
  9504   01486C  EE20 F01E          	lfsr	2,30
  9505   014870  5022               	movf	UPDATExMOUNTAINxTRAINxWAIT@self^0,w,c
  9506   014872  26D9               	addwf	fsr2l,f,c
  9507   014874  5023               	movf	(UPDATExMOUNTAINxTRAINxWAIT@self+1)^0,w,c
  9508   014876  22DA               	addwfc	fsr2h,f,c
  9509   014878  50DF               	movf	indf2,w,c
  9510   01487A  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
  9511   01487C  0E84               	movlw	132
  9512   01487E  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
  9513   014880  EE20 F02A          	lfsr	2,42
  9514   014884  5022               	movf	UPDATExMOUNTAINxTRAINxWAIT@self^0,w,c
  9515   014886  26D9               	addwf	fsr2l,f,c
  9516   014888  5023               	movf	(UPDATExMOUNTAINxTRAINxWAIT@self+1)^0,w,c
  9517   01488A  22DA               	addwfc	fsr2h,f,c
  9518   01488C  CFDE F005          	movff	postinc2,___lldiv@dividend
  9519   014890  CFDE F006          	movff	postinc2,___lldiv@dividend+1
  9520   014894  CFDE F007          	movff	postinc2,___lldiv@dividend+2
  9521   014898  CFDE F008          	movff	postinc2,___lldiv@dividend+3
  9522   01489C  0EE8               	movlw	232
  9523   01489E  6E09               	movwf	___lldiv@divisor^0,c
  9524   0148A0  0E03               	movlw	3
  9525   0148A2  6E0A               	movwf	(___lldiv@divisor+1)^0,c
  9526   0148A4  0E00               	movlw	0
  9527   0148A6  6E0B               	movwf	(___lldiv@divisor+2)^0,c
  9528   0148A8  0E00               	movlw	0
  9529   0148AA  6E0C               	movwf	(___lldiv@divisor+3)^0,c
  9530   0148AC  ECBA  F0B8         	call	___lldiv	;wreg free
  9531   0148B0  5005               	movf	?___lldiv^0,w,c
  9532   0148B2  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
  9533   0148B4  C022  FFD9         	movff	UPDATExMOUNTAINxTRAINxWAIT@self,fsr2l
  9534   0148B8  C023  FFDA         	movff	UPDATExMOUNTAINxTRAINxWAIT@self+1,fsr2h
  9535   0148BC  50DF               	movf	indf2,w,c
  9536   0148BE  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
  9537   0148C2  0012               	return		;funcret
  9538   0148C4                     __end_of_UPDATExMOUNTAINxTRAINxWAIT:
  9539                           	callstack 0
  9540                           
  9541 ;; *************** function _UPDATExMOUNTAINxSTATION *****************
  9542 ;; Defined at:
  9543 ;;		line 68 in file "mountaintrack.c"
  9544 ;; Parameters:    Size  Location     Type
  9545 ;;  self            2   56[COMRAM] PTR struct .
  9546 ;;		 -> waldberg(54), waldsee(54), 
  9547 ;; Auto vars:     Size  Location     Type
  9548 ;;		None
  9549 ;; Return value:  Size  Location     Type
  9550 ;;                  1    wreg      void 
  9551 ;; Registers used:
  9552 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9553 ;; Tracked objects:
  9554 ;;		On entry : 0/1
  9555 ;;		On exit  : 0/0
  9556 ;;		Unchanged: 0/0
  9557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9558 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9560 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9561 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9562 ;;Total ram usage:       14 bytes
  9563 ;; Hardware stack levels used: 1
  9564 ;; Hardware stack levels required when called: 8
  9565 ;; This function calls:
  9566 ;;		_CREATExTASKxSTATUSxMESSAGE
  9567 ;;		_GETxMILLIS
  9568 ;;		_GETxRANDOMxNUMBER
  9569 ;;		_MOUNTAINxSTATIONxINBOUND
  9570 ;;		_MOUNTAINxSTATIONxOUTBOUND
  9571 ;;		_SETxMNTSTATIONxPATHWAY
  9572 ;;		_SETxOCC
  9573 ;;		___lldiv
  9574 ;; This function is called by:
  9575 ;;		_main
  9576 ;; This function uses a non-reentrant model
  9577 ;;
  9578                           
  9579                           	psect	text10
  9580   010914                     __ptext10:
  9581                           	callstack 0
  9582   010914                     _UPDATExMOUNTAINxSTATION:
  9583                           	callstack 22
  9584                           
  9585                           ;mountaintrack.c: 68: void UPDATExMOUNTAINxSTATION(MNTSTATION *self);mountaintrack.c: 69
      +                          : {;mountaintrack.c: 70:     switch(self->AppState)
  9586                           
  9587                           ;incstack = 0
  9588   010914  D385               	goto	l16031
  9589   010916                     l15877:
  9590                           
  9591                           ;mountaintrack.c: 76:             self->stnTrack1.getTrainEnterStnTrack->value = 0;
  9592   010916  EE20 F012          	lfsr	2,18
  9593   01091A  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
  9594   01091C  26D9               	addwf	fsr2l,f,c
  9595   01091E  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
  9596   010920  22DA               	addwfc	fsr2h,f,c
  9597   010922  EE10 F00B          	lfsr	1,11
  9598   010926  50DE               	movf	postinc2,w,c
  9599   010928  26E1               	addwf	fsr1l,f,c
  9600   01092A  50DD               	movf	postdec2,w,c
  9601   01092C  22E2               	addwfc	fsr1h,f,c
  9602   01092E  6AE7               	clrf	indf1,c
  9603                           
  9604                           ;mountaintrack.c: 77:             self->stnTrack2.getTrainEnterStnTrack->value = 0;
  9605   010930  EE20 F022          	lfsr	2,34
  9606   010934  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
  9607   010936  26D9               	addwf	fsr2l,f,c
  9608   010938  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
  9609   01093A  22DA               	addwfc	fsr2h,f,c
  9610   01093C  EE10 F00B          	lfsr	1,11
  9611   010940  50DE               	movf	postinc2,w,c
  9612   010942  26E1               	addwf	fsr1l,f,c
  9613   010944  50DD               	movf	postdec2,w,c
  9614   010946  22E2               	addwfc	fsr1h,f,c
  9615   010948  6AE7               	clrf	indf1,c
  9616                           
  9617                           ;mountaintrack.c: 78:             self->getTrainEnterSiebwaldeStn->value = 0;
  9618   01094A  EE20 F006          	lfsr	2,6
  9619   01094E  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
  9620   010950  26D9               	addwf	fsr2l,f,c
  9621   010952  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
  9622   010954  22DA               	addwfc	fsr2h,f,c
  9623   010956  EE10 F00B          	lfsr	1,11
  9624   01095A  50DE               	movf	postinc2,w,c
  9625   01095C  26E1               	addwf	fsr1l,f,c
  9626   01095E  50DD               	movf	postdec2,w,c
  9627   010960  22E2               	addwfc	fsr1h,f,c
  9628   010962  6AE7               	clrf	indf1,c
  9629                           
  9630                           ;mountaintrack.c: 84:             SETxOCC(self->setOccAmpOut, 1);
  9631   010964  EE20 F008          	lfsr	2,8
  9632   010968  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
  9633   01096A  26D9               	addwf	fsr2l,f,c
  9634   01096C  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
  9635   01096E  22DA               	addwfc	fsr2h,f,c
  9636   010970  CFDE F005          	movff	postinc2,SETxOCC@self
  9637   010974  CFDD F006          	movff	postdec2,SETxOCC@self+1
  9638   010978  0E01               	movlw	1
  9639   01097A  6E07               	movwf	SETxOCC@value^0,c
  9640   01097C  ECC0  F0BA         	call	_SETxOCC	;wreg free
  9641                           
  9642                           ;mountaintrack.c: 92:             if(self->getOccAmpOut->value){
  9643   010980  EE20 F00A          	lfsr	2,10
  9644   010984  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
  9645   010986  26D9               	addwf	fsr2l,f,c
  9646   010988  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
  9647   01098A  22DA               	addwfc	fsr2h,f,c
  9648   01098C  EE10 F00B          	lfsr	1,11
  9649   010990  50DE               	movf	postinc2,w,c
  9650   010992  26E1               	addwf	fsr1l,f,c
  9651   010994  50DD               	movf	postdec2,w,c
  9652   010996  22E2               	addwfc	fsr1h,f,c
  9653   010998  50E7               	movf	indf1,w,c
  9654   01099A  B4D8               	btfsc	status,2,c
  9655   01099C  D018               	goto	l15885
  9656                           
  9657                           ;mountaintrack.c: 94:                 self->stnTrack2.stnOccupied = 1;
  9658   01099E  EE20 F024          	lfsr	2,36
  9659   0109A2  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
  9660   0109A4  26D9               	addwf	fsr2l,f,c
  9661   0109A6  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
  9662   0109A8  22DA               	addwfc	fsr2h,f,c
  9663   0109AA  0E01               	movlw	1
  9664   0109AC  6EDF               	movwf	indf2,c
  9665                           
  9666                           ;mountaintrack.c: 95:                 self->stnTrack2.stnState = STN_WAIT;
  9667   0109AE  EE20 F01F          	lfsr	2,31
  9668   0109B2  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
  9669   0109B4  26D9               	addwf	fsr2l,f,c
  9670   0109B6  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
  9671   0109B8  22DA               	addwfc	fsr2h,f,c
  9672   0109BA  0E77               	movlw	119
  9673   0109BC  6EDF               	movwf	indf2,c
  9674                           
  9675                           ;mountaintrack.c: 96:                 self->AppState = STN_TO_SIEBWALDE;
  9676   0109BE  EE20 F001          	lfsr	2,1
  9677   0109C2  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
  9678   0109C4  26D9               	addwf	fsr2l,f,c
  9679   0109C6  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
  9680   0109C8  22DA               	addwfc	fsr2h,f,c
  9681   0109CA  0E6E               	movlw	110
  9682   0109CC  D04A               	goto	L18
  9683   0109CE                     l15885:
  9684                           
  9685                           ;mountaintrack.c: 99:                 self->stnTrack2.stnState = STN_IDLE;
  9686   0109CE  EE20 F01F          	lfsr	2,31
  9687   0109D2  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
  9688   0109D4  26D9               	addwf	fsr2l,f,c
  9689   0109D6  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
  9690   0109D8  22DA               	addwfc	fsr2h,f,c
  9691   0109DA  0E78               	movlw	120
  9692   0109DC  6EDF               	movwf	indf2,c
  9693                           
  9694                           ;mountaintrack.c: 100:                 self->stnTrack2.stnOccupied = 0;
  9695   0109DE  EE20 F024          	lfsr	2,36
  9696   0109E2  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
  9697   0109E4  26D9               	addwf	fsr2l,f,c
  9698   0109E6  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
  9699   0109E8  22DA               	addwfc	fsr2h,f,c
  9700   0109EA  6ADF               	clrf	indf2,c
  9701                           
  9702                           ;mountaintrack.c: 105:                 SETxMNTSTATIONxPATHWAY(self, self->stnTrack1.trac
      +                          kNr);
  9703   0109EC  C039  F022         	movff	UPDATExMOUNTAINxSTATION@self,SETxMNTSTATIONxPATHWAY@self
  9704   0109F0  C03A  F023         	movff	UPDATExMOUNTAINxSTATION@self+1,SETxMNTSTATIONxPATHWAY@self+1
  9705   0109F4  EE20 F015          	lfsr	2,21
  9706   0109F8  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
  9707   0109FA  26D9               	addwf	fsr2l,f,c
  9708   0109FC  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
  9709   0109FE  22DA               	addwfc	fsr2h,f,c
  9710   010A00  50DF               	movf	indf2,w,c
  9711   010A02  6E24               	movwf	SETxMNTSTATIONxPATHWAY@path^0,c
  9712   010A04  EC20  F0B4         	call	_SETxMNTSTATIONxPATHWAY	;wreg free
  9713                           
  9714                           ; BSR set to: 1
  9715                           ;mountaintrack.c: 107:                 self->tCountTime = GETxMILLIS();
  9716   010A08  EC50  F0C1         	call	_GETxMILLIS	;wreg free
  9717   010A0C  EE20 F02E          	lfsr	2,46
  9718   010A10  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
  9719   010A12  26D9               	addwf	fsr2l,f,c
  9720   010A14  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
  9721   010A16  22DA               	addwfc	fsr2h,f,c
  9722   010A18  C005  FFDE         	movff	?_GETxMILLIS,postinc2
  9723   010A1C  C006  FFDE         	movff	?_GETxMILLIS+1,postinc2
  9724   010A20  C007  FFDE         	movff	?_GETxMILLIS+2,postinc2
  9725   010A24  C008  FFDE         	movff	?_GETxMILLIS+3,postinc2
  9726   010A28  EE20 F032          	lfsr	2,50
  9727   010A2C  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
  9728   010A2E  26D9               	addwf	fsr2l,f,c
  9729   010A30  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
  9730   010A32  22DA               	addwfc	fsr2h,f,c
  9731   010A34  0E58               	movlw	88
  9732   010A36  6EDE               	movwf	postinc2,c
  9733   010A38  0E1B               	movlw	27
  9734   010A3A  6EDE               	movwf	postinc2,c
  9735   010A3C  0E00               	movlw	0
  9736   010A3E  6EDE               	movwf	postinc2,c
  9737   010A40  0E00               	movlw	0
  9738   010A42  6EDD               	movwf	postdec2,c
  9739                           
  9740                           ;mountaintrack.c: 109:                 self->AppNextState = INIT2;
  9741   010A44  EE20 F002          	lfsr	2,2
  9742   010A48  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
  9743   010A4A  26D9               	addwf	fsr2l,f,c
  9744   010A4C  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
  9745   010A4E  22DA               	addwfc	fsr2h,f,c
  9746   010A50  0E6A               	movlw	106
  9747   010A52  6EDF               	movwf	indf2,c
  9748                           
  9749                           ;mountaintrack.c: 110:                 self->AppState = WAIT;
  9750   010A54  EE20 F001          	lfsr	2,1
  9751   010A58  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
  9752   010A5A  26D9               	addwf	fsr2l,f,c
  9753   010A5C  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
  9754   010A5E  22DA               	addwfc	fsr2h,f,c
  9755   010A60  0E6C               	movlw	108
  9756   010A62                     L18:
  9757   010A62  6EDF               	movwf	indf2,c
  9758                           
  9759                           ;mountaintrack.c: 112:             CREATExTASKxSTATUSxMESSAGE(self->name,
  9760   010A64  EE20 F01E          	lfsr	2,30
  9761   010A68  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
  9762   010A6A  26D9               	addwf	fsr2l,f,c
  9763   010A6C  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
  9764   010A6E  22DA               	addwfc	fsr2h,f,c
  9765   010A70  50DF               	movf	indf2,w,c
  9766   010A72  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
  9767   010A74  EE20 F01F          	lfsr	2,31
  9768   010A78  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
  9769   010A7A  26D9               	addwf	fsr2l,f,c
  9770   010A7C  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
  9771   010A7E  22DA               	addwfc	fsr2h,f,c
  9772   010A80  50DF               	movf	indf2,w,c
  9773   010A82  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
  9774   010A84  0E96               	movlw	150
  9775   010A86  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
  9776   010A88  C039  FFD9         	movff	UPDATExMOUNTAINxSTATION@self,fsr2l
  9777   010A8C  C03A  FFDA         	movff	UPDATExMOUNTAINxSTATION@self+1,fsr2h
  9778   010A90  50DF               	movf	indf2,w,c
  9779   010A92  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
  9780                           
  9781                           ;mountaintrack.c: 117:             break;
  9782   010A96  0012               	return	
  9783   010A98                     l15899:
  9784                           
  9785                           ;mountaintrack.c: 121:             if(self->getOccAmpOut->value){
  9786   010A98  EE20 F00A          	lfsr	2,10
  9787   010A9C  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
  9788   010A9E  26D9               	addwf	fsr2l,f,c
  9789   010AA0  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
  9790   010AA2  22DA               	addwfc	fsr2h,f,c
  9791   010AA4  EE10 F00B          	lfsr	1,11
  9792   010AA8  50DE               	movf	postinc2,w,c
  9793   010AAA  26E1               	addwf	fsr1l,f,c
  9794   010AAC  50DD               	movf	postdec2,w,c
  9795   010AAE  22E2               	addwfc	fsr1h,f,c
  9796   010AB0  50E7               	movf	indf1,w,c
  9797   010AB2  B4D8               	btfsc	status,2,c
  9798   010AB4  D011               	goto	l15903
  9799                           
  9800                           ;mountaintrack.c: 123:                 self->stnTrack1.stnOccupied = 1;
  9801   010AB6  EE20 F014          	lfsr	2,20
  9802   010ABA  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
  9803   010ABC  26D9               	addwf	fsr2l,f,c
  9804   010ABE  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
  9805   010AC0  22DA               	addwfc	fsr2h,f,c
  9806   010AC2  0E01               	movlw	1
  9807   010AC4  6EDF               	movwf	indf2,c
  9808                           
  9809                           ;mountaintrack.c: 124:                 self->stnTrack1.stnState = STN_WAIT;
  9810   010AC6  EE20 F00F          	lfsr	2,15
  9811   010ACA  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
  9812   010ACC  26D9               	addwf	fsr2l,f,c
  9813   010ACE  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
  9814   010AD0  22DA               	addwfc	fsr2h,f,c
  9815   010AD2  0E77               	movlw	119
  9816   010AD4  6EDF               	movwf	indf2,c
  9817                           
  9818                           ;mountaintrack.c: 125:             }
  9819   010AD6  D00F               	goto	l15905
  9820   010AD8                     l15903:
  9821                           
  9822                           ;mountaintrack.c: 127:                 self->stnTrack1.stnState = STN_IDLE;
  9823   010AD8  EE20 F00F          	lfsr	2,15
  9824   010ADC  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
  9825   010ADE  26D9               	addwf	fsr2l,f,c
  9826   010AE0  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
  9827   010AE2  22DA               	addwfc	fsr2h,f,c
  9828   010AE4  0E78               	movlw	120
  9829   010AE6  6EDF               	movwf	indf2,c
  9830                           
  9831                           ;mountaintrack.c: 128:                 self->stnTrack1.stnOccupied = 0;
  9832   010AE8  EE20 F014          	lfsr	2,20
  9833   010AEC  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
  9834   010AEE  26D9               	addwf	fsr2l,f,c
  9835   010AF0  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
  9836   010AF2  22DA               	addwfc	fsr2h,f,c
  9837   010AF4  6ADF               	clrf	indf2,c
  9838   010AF6                     l15905:
  9839                           
  9840                           ;mountaintrack.c: 130:             CREATExTASKxSTATUSxMESSAGE(self->name,
  9841   010AF6  EE20 F01E          	lfsr	2,30
  9842   010AFA  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
  9843   010AFC  26D9               	addwf	fsr2l,f,c
  9844   010AFE  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
  9845   010B00  22DA               	addwfc	fsr2h,f,c
  9846   010B02  50DF               	movf	indf2,w,c
  9847   010B04  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
  9848   010B06  EE20 F01F          	lfsr	2,31
  9849   010B0A  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
  9850   010B0C  26D9               	addwf	fsr2l,f,c
  9851   010B0E  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
  9852   010B10  22DA               	addwfc	fsr2h,f,c
  9853   010B12  50DF               	movf	indf2,w,c
  9854   010B14  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
  9855   010B16  0E96               	movlw	150
  9856   010B18  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
  9857   010B1A  C039  FFD9         	movff	UPDATExMOUNTAINxSTATION@self,fsr2l
  9858   010B1E  C03A  FFDA         	movff	UPDATExMOUNTAINxSTATION@self+1,fsr2h
  9859   010B22  50DF               	movf	indf2,w,c
  9860   010B24  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
  9861                           
  9862                           ; BSR set to: 1
  9863                           ;mountaintrack.c: 135:             if(self->stnTrack2.stnOccupied){
  9864   010B28  EE20 F024          	lfsr	2,36
  9865   010B2C  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
  9866   010B2E  26D9               	addwf	fsr2l,f,c
  9867   010B30  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
  9868   010B32  22DA               	addwfc	fsr2h,f,c
  9869   010B34  50DF               	movf	indf2,w,c
  9870   010B36  A4D8               	btfss	status,2,c
  9871   010B38  D009               	goto	u14510
  9872                           
  9873                           ; BSR set to: 1
  9874                           
  9875                           ;mountaintrack.c: 137:             }
  9876                           
  9877                           ; BSR set to: 1
  9878                           ;mountaintrack.c: 136:                 self->AppState = STN_TO_SIEBWALDE;
  9879   010B3A  EE20 F014          	lfsr	2,20
  9880   010B3E  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
  9881   010B40  26D9               	addwf	fsr2l,f,c
  9882   010B42  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
  9883   010B44  22DA               	addwfc	fsr2h,f,c
  9884   010B46  50DF               	movf	indf2,w,c
  9885   010B48  B4D8               	btfsc	status,2,c
  9886   010B4A  D008               	goto	l15915
  9887   010B4C                     u14510:
  9888                           
  9889                           ; BSR set to: 1
  9890                           ;mountaintrack.c: 139:                 self->AppState = STN_TO_SIEBWALDE;
  9891   010B4C  EE20 F001          	lfsr	2,1
  9892   010B50  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
  9893   010B52  26D9               	addwf	fsr2l,f,c
  9894   010B54  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
  9895   010B56  22DA               	addwfc	fsr2h,f,c
  9896   010B58  0E6E               	movlw	110
  9897   010B5A  D007               	goto	L19
  9898   010B5C                     l15915:
  9899                           
  9900                           ; BSR set to: 1
  9901                           ;mountaintrack.c: 142:                 self->AppState = SIEBWALDE_SWITCHT4T5;
  9902   010B5C  EE20 F001          	lfsr	2,1
  9903   010B60  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
  9904   010B62  26D9               	addwf	fsr2l,f,c
  9905   010B64  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
  9906   010B66  22DA               	addwfc	fsr2h,f,c
  9907   010B68  0E72               	movlw	114
  9908   010B6A                     L19:
  9909   010B6A  6EDF               	movwf	indf2,c
  9910                           
  9911                           ; BSR set to: 1
  9912                           ;mountaintrack.c: 144:             CREATExTASKxSTATUSxMESSAGE(self->name,
  9913   010B6C  0E96               	movlw	150
  9914   010B6E  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
  9915   010B70  EE20 F001          	lfsr	2,1
  9916   010B74  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
  9917   010B76  26D9               	addwf	fsr2l,f,c
  9918   010B78  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
  9919   010B7A  22DA               	addwfc	fsr2h,f,c
  9920   010B7C  50DF               	movf	indf2,w,c
  9921   010B7E  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
  9922   010B80  0E96               	movlw	150
  9923   010B82  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
  9924   010B84  C039  FFD9         	movff	UPDATExMOUNTAINxSTATION@self,fsr2l
  9925   010B88  C03A  FFDA         	movff	UPDATExMOUNTAINxSTATION@self+1,fsr2h
  9926   010B8C  50DF               	movf	indf2,w,c
  9927   010B8E  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
  9928                           
  9929                           ;mountaintrack.c: 149:             break;
  9930   010B92  0012               	return	
  9931   010B94                     l15919:
  9932                           
  9933                           ;mountaintrack.c: 156:             self->Return = (TASK_STATE)MOUNTAINxSTATIONxOUTBOUND(
      +                          self);
  9934   010B94  C039  F02B         	movff	UPDATExMOUNTAINxSTATION@self,MOUNTAINxSTATIONxOUTBOUND@self
  9935   010B98  C03A  F02C         	movff	UPDATExMOUNTAINxSTATION@self+1,MOUNTAINxSTATIONxOUTBOUND@self+1
  9936   010B9C  EC76  F09F         	call	_MOUNTAINxSTATIONxOUTBOUND	;wreg free
  9937   010BA0  6E3B               	movwf	??_UPDATExMOUNTAINxSTATION^0,c
  9938   010BA2  EE20 F005          	lfsr	2,5
  9939   010BA6  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
  9940   010BA8  26D9               	addwf	fsr2l,f,c
  9941   010BAA  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
  9942   010BAC  22DA               	addwfc	fsr2h,f,c
  9943   010BAE  C03B  FFDF         	movff	??_UPDATExMOUNTAINxSTATION,indf2
  9944                           
  9945                           ;mountaintrack.c: 157:             if(done == self->Return || nop == self->Return){
  9946   010BB2  EE20 F005          	lfsr	2,5
  9947   010BB6  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
  9948   010BB8  26D9               	addwf	fsr2l,f,c
  9949   010BBA  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
  9950   010BBC  22DA               	addwfc	fsr2h,f,c
  9951   010BBE  0E66               	movlw	102
  9952   010BC0  18DE               	xorwf	postinc2,w,c
  9953   010BC2  B4D8               	btfsc	status,2,c
  9954   010BC4  D00A               	goto	u14530
  9955   010BC6  EE20 F005          	lfsr	2,5
  9956   010BCA  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
  9957   010BCC  26D9               	addwf	fsr2l,f,c
  9958   010BCE  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
  9959   010BD0  22DA               	addwfc	fsr2h,f,c
  9960   010BD2  0E68               	movlw	104
  9961   010BD4  18DE               	xorwf	postinc2,w,c
  9962   010BD6  A4D8               	btfss	status,2,c
  9963   010BD8  0012               	return	
  9964   010BDA                     u14530:
  9965                           
  9966                           ;mountaintrack.c: 162:                 self->AppNextState = SIEBWALDE_SWITCHT4T5;
  9967   010BDA  EE20 F002          	lfsr	2,2
  9968   010BDE  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
  9969   010BE0  26D9               	addwf	fsr2l,f,c
  9970   010BE2  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
  9971   010BE4  22DA               	addwfc	fsr2h,f,c
  9972   010BE6  0E72               	movlw	114
  9973   010BE8  6EDF               	movwf	indf2,c
  9974                           
  9975                           ;mountaintrack.c: 163:                 self->LastState = STN_OUTBOUND;
  9976   010BEA  EE20 F004          	lfsr	2,4
  9977   010BEE  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
  9978   010BF0  26D9               	addwf	fsr2l,f,c
  9979   010BF2  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
  9980   010BF4  22DA               	addwfc	fsr2h,f,c
  9981   010BF6  0E75               	movlw	117
  9982   010BF8  6EDF               	movwf	indf2,c
  9983                           
  9984                           ;mountaintrack.c: 168:                 self->AppState = WAIT;
  9985   010BFA  EE20 F001          	lfsr	2,1
  9986   010BFE  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
  9987   010C00  26D9               	addwf	fsr2l,f,c
  9988   010C02  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
  9989   010C04  22DA               	addwfc	fsr2h,f,c
  9990   010C06  0E6C               	movlw	108
  9991   010C08  6EDF               	movwf	indf2,c
  9992                           
  9993                           ;mountaintrack.c: 169:                 self->tCountTime = GETxMILLIS();
  9994   010C0A  EC50  F0C1         	call	_GETxMILLIS	;wreg free
  9995   010C0E  EE20 F02E          	lfsr	2,46
  9996   010C12  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
  9997   010C14  26D9               	addwf	fsr2l,f,c
  9998   010C16  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
  9999   010C18  22DA               	addwfc	fsr2h,f,c
 10000   010C1A  C005  FFDE         	movff	?_GETxMILLIS,postinc2
 10001   010C1E  C006  FFDE         	movff	?_GETxMILLIS+1,postinc2
 10002   010C22  C007  FFDE         	movff	?_GETxMILLIS+2,postinc2
 10003   010C26  C008  FFDE         	movff	?_GETxMILLIS+3,postinc2
 10004   010C2A  EC10  F0C1         	call	_GETxRANDOMxNUMBER	;wreg free
 10005   010C2E  90D8               	bcf	status,0,c
 10006   010C30  3617               	rlcf	?_GETxRANDOMxNUMBER^0,f,c
 10007   010C32  3618               	rlcf	(?_GETxRANDOMxNUMBER+1)^0,f,c
 10008   010C34  90D8               	bcf	status,0,c
 10009   010C36  3617               	rlcf	?_GETxRANDOMxNUMBER^0,f,c
 10010   010C38  3618               	rlcf	(?_GETxRANDOMxNUMBER+1)^0,f,c
 10011   010C3A  5017               	movf	?_GETxRANDOMxNUMBER^0,w,c
 10012   010C3C  6E3B               	movwf	??_UPDATExMOUNTAINxSTATION^0,c
 10013   010C3E  5018               	movf	(?_GETxRANDOMxNUMBER+1)^0,w,c
 10014   010C40  6E3C               	movwf	(??_UPDATExMOUNTAINxSTATION+1)^0,c
 10015   010C42  6A3D               	clrf	(??_UPDATExMOUNTAINxSTATION+2)^0,c
 10016   010C44  6A3E               	clrf	(??_UPDATExMOUNTAINxSTATION+3)^0,c
 10017   010C46  0E50               	movlw	80
 10018   010C48  243B               	addwf	??_UPDATExMOUNTAINxSTATION^0,w,c
 10019   010C4A  6E3F               	movwf	(??_UPDATExMOUNTAINxSTATION+4)^0,c
 10020   010C4C  0EC3               	movlw	195
 10021   010C4E  203C               	addwfc	(??_UPDATExMOUNTAINxSTATION+1)^0,w,c
 10022   010C50  6E40               	movwf	(??_UPDATExMOUNTAINxSTATION+5)^0,c
 10023   010C52  0E00               	movlw	0
 10024   010C54  203D               	addwfc	(??_UPDATExMOUNTAINxSTATION+2)^0,w,c
 10025   010C56  6E41               	movwf	(??_UPDATExMOUNTAINxSTATION+6)^0,c
 10026   010C58  0E00               	movlw	0
 10027   010C5A  203E               	addwfc	(??_UPDATExMOUNTAINxSTATION+3)^0,w,c
 10028   010C5C  6E42               	movwf	(??_UPDATExMOUNTAINxSTATION+7)^0,c
 10029   010C5E  EE20 F032          	lfsr	2,50
 10030   010C62  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
 10031   010C64  26D9               	addwf	fsr2l,f,c
 10032   010C66  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
 10033   010C68  22DA               	addwfc	fsr2h,f,c
 10034   010C6A  C03F  FFDE         	movff	??_UPDATExMOUNTAINxSTATION+4,postinc2
 10035   010C6E  C040  FFDE         	movff	??_UPDATExMOUNTAINxSTATION+5,postinc2
 10036   010C72  C041  FFDE         	movff	??_UPDATExMOUNTAINxSTATION+6,postinc2
 10037   010C76  C042  FFDE         	movff	??_UPDATExMOUNTAINxSTATION+7,postinc2
 10038                           
 10039                           ; BSR set to: 1
 10040                           ;mountaintrack.c: 171:                 CREATExTASKxSTATUSxMESSAGE(self->name,
 10041   010C7A  EE20 F002          	lfsr	2,2
 10042   010C7E  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
 10043   010C80  26D9               	addwf	fsr2l,f,c
 10044   010C82  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
 10045   010C84  22DA               	addwfc	fsr2h,f,c
 10046   010C86  50DF               	movf	indf2,w,c
 10047   010C88  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
 10048   010C8A  0E84               	movlw	132
 10049   010C8C  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
 10050   010C8E  EE20 F032          	lfsr	2,50
 10051   010C92  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
 10052   010C94  26D9               	addwf	fsr2l,f,c
 10053   010C96  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
 10054   010C98  22DA               	addwfc	fsr2h,f,c
 10055   010C9A  CFDE F005          	movff	postinc2,___lldiv@dividend
 10056   010C9E  CFDE F006          	movff	postinc2,___lldiv@dividend+1
 10057   010CA2  CFDE F007          	movff	postinc2,___lldiv@dividend+2
 10058   010CA6  CFDE F008          	movff	postinc2,___lldiv@dividend+3
 10059   010CAA  0EE8               	movlw	232
 10060   010CAC  6E09               	movwf	___lldiv@divisor^0,c
 10061   010CAE  0E03               	movlw	3
 10062   010CB0  6E0A               	movwf	(___lldiv@divisor+1)^0,c
 10063   010CB2  0E00               	movlw	0
 10064   010CB4  6E0B               	movwf	(___lldiv@divisor+2)^0,c
 10065   010CB6  0E00               	movlw	0
 10066   010CB8  6E0C               	movwf	(___lldiv@divisor+3)^0,c
 10067   010CBA  ECBA  F0B8         	call	___lldiv	;wreg free
 10068   010CBE  5005               	movf	?___lldiv^0,w,c
 10069   010CC0  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
 10070   010CC2  C039  FFD9         	movff	UPDATExMOUNTAINxSTATION@self,fsr2l
 10071   010CC6  C03A  FFDA         	movff	UPDATExMOUNTAINxSTATION@self+1,fsr2h
 10072   010CCA  50DF               	movf	indf2,w,c
 10073   010CCC  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
 10074                           
 10075                           ; BSR set to: 1
 10076                           ;mountaintrack.c: 180:                 if(WALDSEE == self->name && done == self->Return)
      +                          {
 10077   010CD0  C039  FFD9         	movff	UPDATExMOUNTAINxSTATION@self,fsr2l
 10078   010CD4  C03A  FFDA         	movff	UPDATExMOUNTAINxSTATION@self+1,fsr2h
 10079   010CD8  0E1E               	movlw	30
 10080   010CDA  18DE               	xorwf	postinc2,w,c
 10081   010CDC  A4D8               	btfss	status,2,c
 10082   010CDE  D017               	goto	l15945
 10083                           
 10084                           ; BSR set to: 1
 10085   010CE0  EE20 F005          	lfsr	2,5
 10086   010CE4  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
 10087   010CE6  26D9               	addwf	fsr2l,f,c
 10088   010CE8  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
 10089   010CEA  22DA               	addwfc	fsr2h,f,c
 10090   010CEC  0E66               	movlw	102
 10091   010CEE  18DE               	xorwf	postinc2,w,c
 10092   010CF0  A4D8               	btfss	status,2,c
 10093   010CF2  D00D               	goto	l15945
 10094                           
 10095                           ; BSR set to: 1
 10096                           ;mountaintrack.c: 181:                     if(0 == waldberg.stnTrack1.stnOccupied){
 10097   010CF4  0102               	movlb	2	; () banked
 10098   010CF6  513B               	movf	(_waldberg+20)& (0+255),w,b
 10099   010CF8  A4D8               	btfss	status,2,c
 10100   010CFA  D003               	goto	l15941
 10101                           
 10102                           ; BSR set to: 2
 10103                           ;mountaintrack.c: 182:                         waldberg.stnTrack1.stnState = STN_INBOUND
      +                          ;
 10104   010CFC  0E74               	movlw	116
 10105   010CFE  6F36               	movwf	(_waldberg+15)& (0+255),b
 10106                           
 10107                           ;mountaintrack.c: 183:                     }
 10108   010D00  D024               	goto	l15957
 10109   010D02                     l15941:
 10110                           
 10111                           ; BSR set to: 2
 10112   010D02  514B               	movf	(_waldberg+36)& (0+255),w,b
 10113   010D04  A4D8               	btfss	status,2,c
 10114   010D06  D021               	goto	l15957
 10115                           
 10116                           ; BSR set to: 2
 10117                           ;mountaintrack.c: 185:                         waldberg.stnTrack2.stnState = STN_INBOUND
      +                          ;
 10118   010D08  0E74               	movlw	116
 10119   010D0A  6F46               	movwf	(_waldberg+31)& (0+255),b
 10120   010D0C  D01E               	goto	l15957
 10121   010D0E                     l15945:
 10122                           
 10123                           ; BSR set to: 1
 10124   010D0E  C039  FFD9         	movff	UPDATExMOUNTAINxSTATION@self,fsr2l
 10125   010D12  C03A  FFDA         	movff	UPDATExMOUNTAINxSTATION@self+1,fsr2h
 10126   010D16  0E32               	movlw	50
 10127   010D18  18DE               	xorwf	postinc2,w,c
 10128   010D1A  A4D8               	btfss	status,2,c
 10129   010D1C  D016               	goto	l15957
 10130                           
 10131                           ; BSR set to: 1
 10132   010D1E  EE20 F005          	lfsr	2,5
 10133   010D22  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
 10134   010D24  26D9               	addwf	fsr2l,f,c
 10135   010D26  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
 10136   010D28  22DA               	addwfc	fsr2h,f,c
 10137   010D2A  0E66               	movlw	102
 10138   010D2C  18DE               	xorwf	postinc2,w,c
 10139   010D2E  A4D8               	btfss	status,2,c
 10140   010D30  D00C               	goto	l15957
 10141                           
 10142                           ; BSR set to: 1
 10143                           ;mountaintrack.c: 189:                     if(0 == waldsee.stnTrack2.stnOccupied){
 10144   010D32  0102               	movlb	2	; () banked
 10145   010D34  5181               	movf	(_waldsee+36)& (0+255),w,b
 10146   010D36  A4D8               	btfss	status,2,c
 10147   010D38  D003               	goto	l15953
 10148                           
 10149                           ; BSR set to: 2
 10150                           ;mountaintrack.c: 190:                         waldsee.stnTrack2.stnState = STN_INBOUND;
 10151   010D3A  0E74               	movlw	116
 10152   010D3C  6F7C               	movwf	(_waldsee+31)& (0+255),b
 10153                           
 10154                           ;mountaintrack.c: 191:                     }
 10155   010D3E  D005               	goto	l15957
 10156   010D40                     l15953:
 10157                           
 10158                           ; BSR set to: 2
 10159   010D40  5171               	movf	(_waldsee+20)& (0+255),w,b
 10160   010D42  A4D8               	btfss	status,2,c
 10161   010D44  D002               	goto	l15957
 10162                           
 10163                           ; BSR set to: 2
 10164                           ;mountaintrack.c: 193:                         waldsee.stnTrack1.stnState = STN_INBOUND;
 10165   010D46  0E74               	movlw	116
 10166   010D48  6F6C               	movwf	(_waldsee+15)& (0+255),b
 10167   010D4A                     l15957:
 10168                           
 10169                           ;mountaintrack.c: 197:                 if(STN_INBOUND == self->stnTrack1.stnState){
 10170   010D4A  EE20 F00F          	lfsr	2,15
 10171   010D4E  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
 10172   010D50  26D9               	addwf	fsr2l,f,c
 10173   010D52  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
 10174   010D54  22DA               	addwfc	fsr2h,f,c
 10175   010D56  0E74               	movlw	116
 10176   010D58  18DE               	xorwf	postinc2,w,c
 10177   010D5A  A4D8               	btfss	status,2,c
 10178   010D5C  D01A               	goto	l15961
 10179                           
 10180                           ;mountaintrack.c: 198:                     CREATExTASKxSTATUSxMESSAGE(self->name,
 10181   010D5E  EE20 F00E          	lfsr	2,14
 10182   010D62  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
 10183   010D64  26D9               	addwf	fsr2l,f,c
 10184   010D66  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
 10185   010D68  22DA               	addwfc	fsr2h,f,c
 10186   010D6A  50DF               	movf	indf2,w,c
 10187   010D6C  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
 10188   010D6E  EE20 F00F          	lfsr	2,15
 10189   010D72  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
 10190   010D74  26D9               	addwf	fsr2l,f,c
 10191   010D76  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
 10192   010D78  22DA               	addwfc	fsr2h,f,c
 10193   010D7A  50DF               	movf	indf2,w,c
 10194   010D7C  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
 10195   010D7E  0E96               	movlw	150
 10196   010D80  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
 10197   010D82  C039  FFD9         	movff	UPDATExMOUNTAINxSTATION@self,fsr2l
 10198   010D86  C03A  FFDA         	movff	UPDATExMOUNTAINxSTATION@self+1,fsr2h
 10199   010D8A  50DF               	movf	indf2,w,c
 10200   010D8C  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
 10201                           
 10202                           ;mountaintrack.c: 202:                 }
 10203   010D90  0012               	return	
 10204   010D92                     l15961:
 10205   010D92  EE20 F01F          	lfsr	2,31
 10206   010D96  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
 10207   010D98  26D9               	addwf	fsr2l,f,c
 10208   010D9A  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
 10209   010D9C  22DA               	addwfc	fsr2h,f,c
 10210   010D9E  0E74               	movlw	116
 10211   010DA0  18DE               	xorwf	postinc2,w,c
 10212   010DA2  A4D8               	btfss	status,2,c
 10213   010DA4  0012               	return	
 10214                           
 10215                           ;mountaintrack.c: 204:                     CREATExTASKxSTATUSxMESSAGE(self->name,
 10216   010DA6  EE20 F01E          	lfsr	2,30
 10217   010DAA  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
 10218   010DAC  26D9               	addwf	fsr2l,f,c
 10219   010DAE  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
 10220   010DB0  22DA               	addwfc	fsr2h,f,c
 10221   010DB2  50DF               	movf	indf2,w,c
 10222   010DB4  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
 10223   010DB6  EE20 F01F          	lfsr	2,31
 10224   010DBA  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
 10225   010DBC  26D9               	addwf	fsr2l,f,c
 10226   010DBE  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
 10227   010DC0  22DA               	addwfc	fsr2h,f,c
 10228   010DC2  50DF               	movf	indf2,w,c
 10229   010DC4  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
 10230   010DC6  0E96               	movlw	150
 10231   010DC8  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
 10232   010DCA  C039  FFD9         	movff	UPDATExMOUNTAINxSTATION@self,fsr2l
 10233   010DCE  C03A  FFDA         	movff	UPDATExMOUNTAINxSTATION@self+1,fsr2h
 10234   010DD2  50DF               	movf	indf2,w,c
 10235   010DD4  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
 10236                           
 10237                           ;mountaintrack.c: 210:             break;
 10238                           
 10239                           ;mountaintrack.c: 209:             }
 10240   010DD8  0012               	return	
 10241   010DDA                     l15965:
 10242                           
 10243                           ;mountaintrack.c: 215:             if(MOUNTAINxSTATIONxINBOUND(self) == done){
 10244   010DDA  C039  F02B         	movff	UPDATExMOUNTAINxSTATION@self,MOUNTAINxSTATIONxINBOUND@self
 10245   010DDE  C03A  F02C         	movff	UPDATExMOUNTAINxSTATION@self+1,MOUNTAINxSTATIONxINBOUND@self+1
 10246   010DE2  EC43  F090         	call	_MOUNTAINxSTATIONxINBOUND	;wreg free
 10247   010DE6  0A66               	xorlw	102
 10248   010DE8  A4D8               	btfss	status,2,c
 10249   010DEA  0012               	return	
 10250                           
 10251                           ;mountaintrack.c: 216:                 self->AppState = SIEBWALDE_SWITCHT4T5;
 10252   010DEC  EE20 F001          	lfsr	2,1
 10253   010DF0  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
 10254   010DF2  26D9               	addwf	fsr2l,f,c
 10255   010DF4  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
 10256   010DF6  22DA               	addwfc	fsr2h,f,c
 10257   010DF8  0E72               	movlw	114
 10258   010DFA  6EDF               	movwf	indf2,c
 10259                           
 10260                           ;mountaintrack.c: 217:                 self->LastState = STN_INBOUND;
 10261   010DFC  EE20 F004          	lfsr	2,4
 10262   010E00  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
 10263   010E02  26D9               	addwf	fsr2l,f,c
 10264   010E04  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
 10265   010E06  22DA               	addwfc	fsr2h,f,c
 10266   010E08  0E74               	movlw	116
 10267   010E0A  6EDF               	movwf	indf2,c
 10268                           
 10269                           ;mountaintrack.c: 218:                 CREATExTASKxSTATUSxMESSAGE(self->name,
 10270   010E0C  EE20 F001          	lfsr	2,1
 10271   010E10  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
 10272   010E12  26D9               	addwf	fsr2l,f,c
 10273   010E14  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
 10274   010E16  22DA               	addwfc	fsr2h,f,c
 10275   010E18  50DF               	movf	indf2,w,c
 10276   010E1A  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
 10277   010E1C  0E96               	movlw	150
 10278   010E1E  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
 10279   010E20  0E96               	movlw	150
 10280   010E22  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
 10281   010E24  C039  FFD9         	movff	UPDATExMOUNTAINxSTATION@self,fsr2l
 10282   010E28  C03A  FFDA         	movff	UPDATExMOUNTAINxSTATION@self+1,fsr2h
 10283   010E2C  50DF               	movf	indf2,w,c
 10284   010E2E  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
 10285   010E32  0012               	return	
 10286   010E34                     l15971:
 10287                           
 10288                           ;mountaintrack.c: 231:             if((waldsee.AppState == SIEBWALDE_SWITCHT4T5 ||
 10289   010E34  0E72               	movlw	114
 10290   010E36  0102               	movlb	2	; () banked
 10291   010E38  195E               	xorwf	(_waldsee+1)& (0+255),w,b
 10292   010E3A  B4D8               	btfsc	status,2,c
 10293   010E3C  D004               	goto	u14660
 10294                           
 10295                           ; BSR set to: 2
 10296   010E3E  0E6C               	movlw	108
 10297   010E40  195E               	xorwf	(_waldsee+1)& (0+255),w,b
 10298   010E42  A4D8               	btfss	status,2,c
 10299   010E44  0012               	return	
 10300   010E46                     u14660:
 10301                           
 10302                           ; BSR set to: 2
 10303   010E46  0E72               	movlw	114
 10304   010E48  1928               	xorwf	(_waldberg+1)& (0+255),w,b
 10305   010E4A  B4D8               	btfsc	status,2,c
 10306   010E4C  D004               	goto	u14680
 10307                           
 10308                           ; BSR set to: 2
 10309   010E4E  0E6C               	movlw	108
 10310   010E50  1928               	xorwf	(_waldberg+1)& (0+255),w,b
 10311   010E52  A4D8               	btfss	status,2,c
 10312   010E54  0012               	return	
 10313   010E56                     u14680:
 10314                           
 10315                           ; BSR set to: 2
 10316   010E56  5161               	movf	(_waldsee+4)& (0+255),w,b
 10317   010E58  192B               	xorwf	(_waldberg+4)& (0+255),w,b
 10318   010E5A  B4D8               	btfsc	status,2,c
 10319   010E5C  D008               	goto	u14710
 10320                           
 10321                           ; BSR set to: 2
 10322   010E5E  0E78               	movlw	120
 10323   010E60  192B               	xorwf	(_waldberg+4)& (0+255),w,b
 10324   010E62  B4D8               	btfsc	status,2,c
 10325   010E64  D004               	goto	u14710
 10326                           
 10327                           ; BSR set to: 2
 10328   010E66  0E78               	movlw	120
 10329   010E68  1961               	xorwf	(_waldsee+4)& (0+255),w,b
 10330   010E6A  A4D8               	btfss	status,2,c
 10331   010E6C  0012               	return	
 10332   010E6E                     u14710:
 10333                           
 10334                           ; BSR set to: 2
 10335                           ;mountaintrack.c: 237:                 waldsee.LastState == STN_IDLE)){;mountaintrack.c:
      +                           240:                 SETxOCC(setT4ToAmpT6, invert);
 10336   010E6E  C159  F005         	movff	_setT4ToAmpT6,SETxOCC@self
 10337   010E72  C15A  F006         	movff	_setT4ToAmpT6+1,SETxOCC@self+1
 10338   010E76  C1FE  F007         	movff	_invert,SETxOCC@value
 10339   010E7A  ECC0  F0BA         	call	_SETxOCC	;wreg free
 10340                           
 10341                           ;mountaintrack.c: 241:                 SETxOCC(setT5ToAmpT3, invert);
 10342   010E7E  C157  F005         	movff	_setT5ToAmpT3,SETxOCC@self
 10343   010E82  C158  F006         	movff	_setT5ToAmpT3+1,SETxOCC@self+1
 10344   010E86  C1FE  F007         	movff	_invert,SETxOCC@value
 10345   010E8A  ECC0  F0BA         	call	_SETxOCC	;wreg free
 10346                           
 10347                           ;mountaintrack.c: 243:                 CREATExTASKxSTATUSxMESSAGE(self->name,
 10348   010E8E  0E96               	movlw	150
 10349   010E90  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
 10350   010E92  0E83               	movlw	131
 10351   010E94  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
 10352   010E96  0E96               	movlw	150
 10353   010E98  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
 10354   010E9A  C039  FFD9         	movff	UPDATExMOUNTAINxSTATION@self,fsr2l
 10355   010E9E  C03A  FFDA         	movff	UPDATExMOUNTAINxSTATION@self+1,fsr2h
 10356   010EA2  50DF               	movf	indf2,w,c
 10357   010EA4  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
 10358                           
 10359                           ; BSR set to: 1
 10360                           ;mountaintrack.c: 248:                 invert = !invert;
 10361   010EA8  51FE               	movf	_invert& (0+255),w,b
 10362   010EAA  A4D8               	btfss	status,2,c
 10363   010EAC  D002               	goto	u14720
 10364   010EAE  0E01               	movlw	1
 10365   010EB0  D001               	goto	u14730
 10366   010EB2                     u14720:
 10367   010EB2  0E00               	movlw	0
 10368   010EB4                     u14730:
 10369   010EB4  6FFE               	movwf	_invert& (0+255),b
 10370                           
 10371                           ; BSR set to: 1
 10372                           ;mountaintrack.c: 251:                 if(SIEBWALDE_SWITCHT4T5 == self->AppState){
 10373   010EB6  EE20 F001          	lfsr	2,1
 10374   010EBA  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
 10375   010EBC  26D9               	addwf	fsr2l,f,c
 10376   010EBE  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
 10377   010EC0  22DA               	addwfc	fsr2h,f,c
 10378   010EC2  0E72               	movlw	114
 10379   010EC4  18DE               	xorwf	postinc2,w,c
 10380   010EC6  A4D8               	btfss	status,2,c
 10381   010EC8  D003               	goto	l15995
 10382                           
 10383                           ; BSR set to: 1
 10384                           ;mountaintrack.c: 252:                     self->AppState = SIEWALDE_SET_NEXT;
 10385   010ECA  EE20 F001          	lfsr	2,1
 10386   010ECE  D002               	goto	L20
 10387   010ED0                     l15995:
 10388                           
 10389                           ; BSR set to: 1
 10390                           ;mountaintrack.c: 255:                     self->AppNextState = SIEWALDE_SET_NEXT;
 10391   010ED0  EE20 F002          	lfsr	2,2
 10392   010ED4                     L20:
 10393   010ED4  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
 10394   010ED6  26D9               	addwf	fsr2l,f,c
 10395   010ED8  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
 10396   010EDA  22DA               	addwfc	fsr2h,f,c
 10397   010EDC  0E73               	movlw	115
 10398   010EDE  6EDF               	movwf	indf2,c
 10399                           
 10400                           ; BSR set to: 1
 10401                           ;mountaintrack.c: 259:                 if(self->name == WALDSEE){
 10402                           
 10403                           ;mountaintrack.c: 256:                 }
 10404   010EE0  C039  FFD9         	movff	UPDATExMOUNTAINxSTATION@self,fsr2l
 10405   010EE4  C03A  FFDA         	movff	UPDATExMOUNTAINxSTATION@self+1,fsr2h
 10406   010EE8  0E1E               	movlw	30
 10407   010EEA  18DE               	xorwf	postinc2,w,c
 10408   010EEC  A4D8               	btfss	status,2,c
 10409   010EEE  D00F               	goto	l16005
 10410                           
 10411                           ; BSR set to: 1
 10412                           ;mountaintrack.c: 260:                     if(waldberg.AppState == SIEBWALDE_SWITCHT4T5)
      +                          {
 10413   010EF0  0E72               	movlw	114
 10414   010EF2  0102               	movlb	2	; () banked
 10415   010EF4  1928               	xorwf	(_waldberg+1)& (0+255),w,b
 10416   010EF6  A4D8               	btfss	status,2,c
 10417   010EF8  D003               	goto	l16001
 10418                           
 10419                           ; BSR set to: 2
 10420                           ;mountaintrack.c: 261:                         waldberg.AppState = SIEWALDE_SET_NEXT;
 10421   010EFA  0E73               	movlw	115
 10422   010EFC  6F28               	movwf	(_waldberg+1)& (0+255),b
 10423                           
 10424                           ;mountaintrack.c: 262:                     }
 10425   010EFE  0012               	return	
 10426   010F00                     l16001:
 10427                           
 10428                           ; BSR set to: 2
 10429   010F00  0E6C               	movlw	108
 10430   010F02  1928               	xorwf	(_waldberg+1)& (0+255),w,b
 10431   010F04  A4D8               	btfss	status,2,c
 10432   010F06  0012               	return	
 10433                           
 10434                           ; BSR set to: 2
 10435                           ;mountaintrack.c: 264:                         waldberg.AppNextState = SIEWALDE_SET_NEXT
      +                          ;
 10436   010F08  0E73               	movlw	115
 10437   010F0A  6F29               	movwf	(_waldberg+2)& (0+255),b
 10438   010F0C  0012               	return	
 10439   010F0E                     l16005:
 10440                           
 10441                           ; BSR set to: 1
 10442   010F0E  C039  FFD9         	movff	UPDATExMOUNTAINxSTATION@self,fsr2l
 10443   010F12  C03A  FFDA         	movff	UPDATExMOUNTAINxSTATION@self+1,fsr2h
 10444   010F16  0E32               	movlw	50
 10445   010F18  18DE               	xorwf	postinc2,w,c
 10446   010F1A  A4D8               	btfss	status,2,c
 10447   010F1C  0012               	return	
 10448                           
 10449                           ; BSR set to: 1
 10450                           ;mountaintrack.c: 268:                     if(waldsee.AppState == SIEBWALDE_SWITCHT4T5){
 10451   010F1E  0E72               	movlw	114
 10452   010F20  0102               	movlb	2	; () banked
 10453   010F22  195E               	xorwf	(_waldsee+1)& (0+255),w,b
 10454   010F24  A4D8               	btfss	status,2,c
 10455   010F26  D003               	goto	l16011
 10456                           
 10457                           ; BSR set to: 2
 10458                           ;mountaintrack.c: 269:                         waldsee.AppState = SIEWALDE_SET_NEXT;
 10459   010F28  0E73               	movlw	115
 10460   010F2A  6F5E               	movwf	(_waldsee+1)& (0+255),b
 10461                           
 10462                           ;mountaintrack.c: 270:                     }
 10463   010F2C  0012               	return	
 10464   010F2E                     l16011:
 10465                           
 10466                           ; BSR set to: 2
 10467   010F2E  0E6C               	movlw	108
 10468   010F30  195E               	xorwf	(_waldsee+1)& (0+255),w,b
 10469   010F32  A4D8               	btfss	status,2,c
 10470   010F34  0012               	return	
 10471                           
 10472                           ; BSR set to: 2
 10473                           ;mountaintrack.c: 272:                         waldsee.AppNextState = SIEWALDE_SET_NEXT;
 10474   010F36  0E73               	movlw	115
 10475   010F38  6F5F               	movwf	(_waldsee+2)& (0+255),b
 10476   010F3A  0012               	return	
 10477   010F3C                     l16015:
 10478                           
 10479                           ;mountaintrack.c: 280:             if(STN_INBOUND == self->LastState){
 10480   010F3C  EE20 F004          	lfsr	2,4
 10481   010F40  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
 10482   010F42  26D9               	addwf	fsr2l,f,c
 10483   010F44  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
 10484   010F46  22DA               	addwfc	fsr2h,f,c
 10485   010F48  0E74               	movlw	116
 10486   010F4A  18DE               	xorwf	postinc2,w,c
 10487   010F4C  A4D8               	btfss	status,2,c
 10488   010F4E  D008               	goto	l16019
 10489                           
 10490                           ;mountaintrack.c: 281:                 self->AppState = STN_TO_SIEBWALDE;
 10491   010F50  EE20 F001          	lfsr	2,1
 10492   010F54  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
 10493   010F56  26D9               	addwf	fsr2l,f,c
 10494   010F58  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
 10495   010F5A  22DA               	addwfc	fsr2h,f,c
 10496   010F5C  0E6E               	movlw	110
 10497   010F5E  D007               	goto	L21
 10498   010F60                     l16019:
 10499                           
 10500                           ;mountaintrack.c: 284:                 self->AppState = SIEBWALDE_TO_STN;
 10501   010F60  EE20 F001          	lfsr	2,1
 10502   010F64  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
 10503   010F66  26D9               	addwf	fsr2l,f,c
 10504   010F68  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
 10505   010F6A  22DA               	addwfc	fsr2h,f,c
 10506   010F6C  0E6F               	movlw	111
 10507   010F6E                     L21:
 10508   010F6E  6EDF               	movwf	indf2,c
 10509                           
 10510                           ;mountaintrack.c: 287:             CREATExTASKxSTATUSxMESSAGE(self->name,
 10511   010F70  0E96               	movlw	150
 10512   010F72  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
 10513   010F74  EE20 F001          	lfsr	2,1
 10514   010F78  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
 10515   010F7A  26D9               	addwf	fsr2l,f,c
 10516   010F7C  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
 10517   010F7E  22DA               	addwfc	fsr2h,f,c
 10518   010F80  50DF               	movf	indf2,w,c
 10519   010F82  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
 10520   010F84  0E96               	movlw	150
 10521   010F86  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
 10522   010F88  C039  FFD9         	movff	UPDATExMOUNTAINxSTATION@self,fsr2l
 10523   010F8C  C03A  FFDA         	movff	UPDATExMOUNTAINxSTATION@self+1,fsr2h
 10524   010F90  50DF               	movf	indf2,w,c
 10525   010F92  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
 10526                           
 10527                           ;mountaintrack.c: 291:             break;
 10528   010F96  0012               	return	
 10529   010F98                     l16023:
 10530                           
 10531                           ;mountaintrack.c: 295:             if((GETxMILLIS() - self->tCountTime) > self->tWaitTim
      +                          e){
 10532   010F98  EE20 F02E          	lfsr	2,46
 10533   010F9C  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
 10534   010F9E  26D9               	addwf	fsr2l,f,c
 10535   010FA0  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
 10536   010FA2  22DA               	addwfc	fsr2h,f,c
 10537   010FA4  CFDE F03B          	movff	postinc2,??_UPDATExMOUNTAINxSTATION
 10538   010FA8  CFDE F03C          	movff	postinc2,??_UPDATExMOUNTAINxSTATION+1
 10539   010FAC  CFDE F03D          	movff	postinc2,??_UPDATExMOUNTAINxSTATION+2
 10540   010FB0  CFDE F03E          	movff	postinc2,??_UPDATExMOUNTAINxSTATION+3
 10541   010FB4  EC50  F0C1         	call	_GETxMILLIS	;wreg free
 10542   010FB8  503B               	movf	??_UPDATExMOUNTAINxSTATION^0,w,c
 10543   010FBA  5C05               	subwf	?_GETxMILLIS^0,w,c
 10544   010FBC  6E3F               	movwf	(??_UPDATExMOUNTAINxSTATION+4)^0,c
 10545   010FBE  503C               	movf	(??_UPDATExMOUNTAINxSTATION+1)^0,w,c
 10546   010FC0  5806               	subwfb	(?_GETxMILLIS+1)^0,w,c
 10547   010FC2  6E40               	movwf	(??_UPDATExMOUNTAINxSTATION+5)^0,c
 10548   010FC4  503D               	movf	(??_UPDATExMOUNTAINxSTATION+2)^0,w,c
 10549   010FC6  5807               	subwfb	(?_GETxMILLIS+2)^0,w,c
 10550   010FC8  6E41               	movwf	(??_UPDATExMOUNTAINxSTATION+6)^0,c
 10551   010FCA  503E               	movf	(??_UPDATExMOUNTAINxSTATION+3)^0,w,c
 10552   010FCC  5808               	subwfb	(?_GETxMILLIS+3)^0,w,c
 10553   010FCE  6E42               	movwf	(??_UPDATExMOUNTAINxSTATION+7)^0,c
 10554   010FD0  EE20 F032          	lfsr	2,50
 10555   010FD4  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
 10556   010FD6  26D9               	addwf	fsr2l,f,c
 10557   010FD8  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
 10558   010FDA  22DA               	addwfc	fsr2h,f,c
 10559   010FDC  503F               	movf	(??_UPDATExMOUNTAINxSTATION+4)^0,w,c
 10560   010FDE  5CDE               	subwf	postinc2,w,c
 10561   010FE0  5040               	movf	(??_UPDATExMOUNTAINxSTATION+5)^0,w,c
 10562   010FE2  58DE               	subwfb	postinc2,w,c
 10563   010FE4  5041               	movf	(??_UPDATExMOUNTAINxSTATION+6)^0,w,c
 10564   010FE6  58DE               	subwfb	postinc2,w,c
 10565   010FE8  5042               	movf	(??_UPDATExMOUNTAINxSTATION+7)^0,w,c
 10566   010FEA  58DE               	subwfb	postinc2,w,c
 10567   010FEC  B0D8               	btfsc	status,0,c
 10568   010FEE  0012               	return	
 10569                           
 10570                           ;mountaintrack.c: 296:                 self->AppState = self->AppNextState;
 10571   010FF0  EE20 F002          	lfsr	2,2
 10572   010FF4  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
 10573   010FF6  26D9               	addwf	fsr2l,f,c
 10574   010FF8  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
 10575   010FFA  22DA               	addwfc	fsr2h,f,c
 10576   010FFC  EE10 F001          	lfsr	1,1
 10577   011000  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
 10578   011002  26E1               	addwf	fsr1l,f,c
 10579   011004  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
 10580   011006  22E2               	addwfc	fsr1h,f,c
 10581   011008  CFDF FFE7          	movff	indf2,indf1
 10582   01100C  0012               	return	
 10583   01100E                     l16027:
 10584   01100E  EE20 F001          	lfsr	2,1
 10585   011012  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
 10586   011014  26D9               	addwf	fsr2l,f,c
 10587   011016  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
 10588   011018  22DA               	addwfc	fsr2h,f,c
 10589   01101A  0E69               	movlw	105
 10590   01101C  6EDF               	movwf	indf2,c
 10591                           
 10592                           ;mountaintrack.c: 301:             break;
 10593   01101E  0012               	return	
 10594   011020                     l16031:
 10595   011020  EE20 F001          	lfsr	2,1
 10596   011024  5039               	movf	UPDATExMOUNTAINxSTATION@self^0,w,c
 10597   011026  26D9               	addwf	fsr2l,f,c
 10598   011028  503A               	movf	(UPDATExMOUNTAINxSTATION@self+1)^0,w,c
 10599   01102A  22DA               	addwfc	fsr2h,f,c
 10600   01102C  50DF               	movf	indf2,w,c
 10601   01102E  6E3B               	movwf	??_UPDATExMOUNTAINxSTATION^0,c
 10602   011030  6A3C               	clrf	(??_UPDATExMOUNTAINxSTATION+1)^0,c
 10603                           
 10604                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10605                           ; Switch size 1, requested type "simple"
 10606                           ; Number of cases is 1, Range of values is 0 to 0
 10607                           ; switch strategies available:
 10608                           ; Name         Instructions Cycles
 10609                           ; simple_byte            4     3 (average)
 10610                           ;	Chosen strategy is simple_byte
 10611   011032  503C               	movf	(??_UPDATExMOUNTAINxSTATION+1)^0,w,c
 10612   011034  0A00               	xorlw	0	; case 0
 10613   011036  A4D8               	btfss	status,2,c
 10614   011038  D7EA               	goto	l16027
 10615                           
 10616                           ; Switch size 1, requested type "simple"
 10617                           ; Number of cases is 7, Range of values is 105 to 115
 10618                           ; switch strategies available:
 10619                           ; Name         Instructions Cycles
 10620                           ; simple_byte           22    12 (average)
 10621                           ;	Chosen strategy is simple_byte
 10622   01103A  503B               	movf	??_UPDATExMOUNTAINxSTATION^0,w,c
 10623   01103C  0A69               	xorlw	105	; case 105
 10624   01103E  B4D8               	btfsc	status,2,c
 10625   011040  D46A               	goto	l15877
 10626   011042  0A03               	xorlw	3	; case 106
 10627   011044  B4D8               	btfsc	status,2,c
 10628   011046  D528               	goto	l15899
 10629   011048  0A06               	xorlw	6	; case 108
 10630   01104A  B4D8               	btfsc	status,2,c
 10631   01104C  D7A5               	goto	l16023
 10632   01104E  0A02               	xorlw	2	; case 110
 10633   011050  B4D8               	btfsc	status,2,c
 10634   011052  D5A0               	goto	l15919
 10635   011054  0A01               	xorlw	1	; case 111
 10636   011056  B4D8               	btfsc	status,2,c
 10637   011058  D6C0               	goto	l15965
 10638   01105A  0A1D               	xorlw	29	; case 114
 10639   01105C  B4D8               	btfsc	status,2,c
 10640   01105E  D6EA               	goto	l15971
 10641   011060  0A01               	xorlw	1	; case 115
 10642   011062  B4D8               	btfsc	status,2,c
 10643   011064  D76B               	goto	l16015
 10644   011066  D7D3               	goto	l16027
 10645   011068                     __end_of_UPDATExMOUNTAINxSTATION:
 10646                           	callstack 0
 10647                           
 10648 ;; *************** function _MOUNTAINxSTATIONxOUTBOUND *****************
 10649 ;; Defined at:
 10650 ;;		line 11 in file "mountainStationOutbound.c"
 10651 ;; Parameters:    Size  Location     Type
 10652 ;;  self            2   42[COMRAM] PTR struct .
 10653 ;;		 -> waldberg(54), waldsee(54), 
 10654 ;; Auto vars:     Size  Location     Type
 10655 ;;		None
 10656 ;; Return value:  Size  Location     Type
 10657 ;;                  1    wreg      char 
 10658 ;; Registers used:
 10659 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10660 ;; Tracked objects:
 10661 ;;		On entry : 0/1
 10662 ;;		On exit  : 0/0
 10663 ;;		Unchanged: 0/0
 10664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10665 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10667 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10668 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10669 ;;Total ram usage:       14 bytes
 10670 ;; Hardware stack levels used: 1
 10671 ;; Hardware stack levels required when called: 7
 10672 ;; This function calls:
 10673 ;;		_CREATExTASKxSTATUSxMESSAGE
 10674 ;;		_GETxMILLIS
 10675 ;;		_SETxMNTSTATIONxPATHWAY
 10676 ;;		_SETxOCC
 10677 ;; This function is called by:
 10678 ;;		_UPDATExMOUNTAINxSTATION
 10679 ;; This function uses a non-reentrant model
 10680 ;;
 10681                           
 10682                           	psect	text11
 10683   013EEC                     __ptext11:
 10684                           	callstack 0
 10685   013EEC                     _MOUNTAINxSTATIONxOUTBOUND:
 10686                           	callstack 22
 10687                           
 10688                           ;mountainStationOutbound.c: 13:     if(self->stnTrack1.stnState == STN_OUTBOUND){
 10689                           
 10690                           ;incstack = 0
 10691   013EEC  EE20 F00F          	lfsr	2,15
 10692   013EF0  502B               	movf	MOUNTAINxSTATIONxOUTBOUND@self^0,w,c
 10693   013EF2  26D9               	addwf	fsr2l,f,c
 10694   013EF4  502C               	movf	(MOUNTAINxSTATIONxOUTBOUND@self+1)^0,w,c
 10695   013EF6  22DA               	addwfc	fsr2h,f,c
 10696   013EF8  0E75               	movlw	117
 10697   013EFA  18DE               	xorwf	postinc2,w,c
 10698   013EFC  A4D8               	btfss	status,2,c
 10699   013EFE  D002               	goto	l15081
 10700                           
 10701                           ;mountainStationOutbound.c: 14:         activeTrack = &self->stnTrack1;
 10702   013F00  0E0E               	movlw	14
 10703   013F02  D00B               	goto	L22
 10704   013F04                     l15081:
 10705   013F04  EE20 F01F          	lfsr	2,31
 10706   013F08  502B               	movf	MOUNTAINxSTATIONxOUTBOUND@self^0,w,c
 10707   013F0A  26D9               	addwf	fsr2l,f,c
 10708   013F0C  502C               	movf	(MOUNTAINxSTATIONxOUTBOUND@self+1)^0,w,c
 10709   013F0E  22DA               	addwfc	fsr2h,f,c
 10710   013F10  0E75               	movlw	117
 10711   013F12  18DE               	xorwf	postinc2,w,c
 10712   013F14  A4D8               	btfss	status,2,c
 10713   013F16  D008               	goto	l15085
 10714                           
 10715                           ;mountainStationOutbound.c: 17:         activeTrack = &self->stnTrack2;
 10716   013F18  0E1E               	movlw	30
 10717   013F1A                     L22:
 10718   013F1A  242B               	addwf	MOUNTAINxSTATIONxOUTBOUND@self^0,w,c
 10719   013F1C  0100               	movlb	0	; () banked
 10720   013F1E  6FF6               	movwf	_activeTrack@mountainStationOutbound$F3951& (0+255),b
 10721   013F20  0E00               	movlw	0
 10722   013F22  202C               	addwfc	(MOUNTAINxSTATIONxOUTBOUND@self+1)^0,w,c
 10723   013F24  6FF7               	movwf	(_activeTrack@mountainStationOutbound$F3951+1)& (0+255),b
 10724                           
 10725                           ;mountainStationOutbound.c: 18:     }
 10726   013F26  D184               	goto	l15149
 10727   013F28                     l15085:
 10728   013F28  EE20 F014          	lfsr	2,20
 10729   013F2C  502B               	movf	MOUNTAINxSTATIONxOUTBOUND@self^0,w,c
 10730   013F2E  26D9               	addwf	fsr2l,f,c
 10731   013F30  502C               	movf	(MOUNTAINxSTATIONxOUTBOUND@self+1)^0,w,c
 10732   013F32  22DA               	addwfc	fsr2h,f,c
 10733   013F34  50DF               	movf	indf2,w,c
 10734   013F36  A4D8               	btfss	status,2,c
 10735   013F38  D00B               	goto	l15095
 10736   013F3A  EE20 F024          	lfsr	2,36
 10737   013F3E  502B               	movf	MOUNTAINxSTATIONxOUTBOUND@self^0,w,c
 10738   013F40  26D9               	addwf	fsr2l,f,c
 10739   013F42  502C               	movf	(MOUNTAINxSTATIONxOUTBOUND@self+1)^0,w,c
 10740   013F44  22DA               	addwfc	fsr2h,f,c
 10741   013F46  50DF               	movf	indf2,w,c
 10742   013F48  A4D8               	btfss	status,2,c
 10743   013F4A  D002               	goto	l15095
 10744                           
 10745                           ;mountainStationOutbound.c: 22:             0 == self->stnTrack2.stnOccupied){;mountainS
      +                          tationOutbound.c: 23:         return(nop);
 10746   013F4C  0E68               	movlw	104
 10747   013F4E  0012               	return	
 10748   013F50                     l15095:
 10749                           
 10750                           ;mountainStationOutbound.c: 27:         return(busy);
 10751   013F50  0E64               	movlw	100
 10752   013F52  0012               	return	
 10753   013F54                     l15099:
 10754                           
 10755                           ; BSR set to: 0
 10756                           ;mountainStationOutbound.c: 36:                 SETxMNTSTATIONxPATHWAY(self, activeTrack
      +                          ->trackNr);
 10757   013F54  C02B  F022         	movff	MOUNTAINxSTATIONxOUTBOUND@self,SETxMNTSTATIONxPATHWAY@self
 10758   013F58  C02C  F023         	movff	MOUNTAINxSTATIONxOUTBOUND@self+1,SETxMNTSTATIONxPATHWAY@self+1
 10759   013F5C  EE20 F007          	lfsr	2,7
 10760   013F60  51F6               	movf	_activeTrack@mountainStationOutbound$F3951& (0+255),w,b
 10761   013F62  26D9               	addwf	fsr2l,f,c
 10762   013F64  51F7               	movf	(_activeTrack@mountainStationOutbound$F3951+1)& (0+255),w,b
 10763   013F66  22DA               	addwfc	fsr2h,f,c
 10764   013F68  50DF               	movf	indf2,w,c
 10765   013F6A  6E24               	movwf	SETxMNTSTATIONxPATHWAY@path^0,c
 10766   013F6C  EC20  F0B4         	call	_SETxMNTSTATIONxPATHWAY	;wreg free
 10767                           
 10768                           ; BSR set to: 1
 10769                           ;mountainStationOutbound.c: 37:                 activeTrack->tCountTime = GETxMILLIS();
 10770   013F70  EC50  F0C1         	call	_GETxMILLIS	;wreg free
 10771   013F74  0100               	movlb	0	; () banked
 10772   013F76  EE20 F008          	lfsr	2,8
 10773   013F7A  51F6               	movf	_activeTrack@mountainStationOutbound$F3951& (0+255),w,b
 10774   013F7C  26D9               	addwf	fsr2l,f,c
 10775   013F7E  51F7               	movf	(_activeTrack@mountainStationOutbound$F3951+1)& (0+255),w,b
 10776   013F80  22DA               	addwfc	fsr2h,f,c
 10777   013F82  C005  FFDE         	movff	?_GETxMILLIS,postinc2
 10778   013F86  C006  FFDE         	movff	?_GETxMILLIS+1,postinc2
 10779   013F8A  C007  FFDE         	movff	?_GETxMILLIS+2,postinc2
 10780   013F8E  C008  FFDE         	movff	?_GETxMILLIS+3,postinc2
 10781                           
 10782                           ; BSR set to: 0
 10783   013F92  EE20 F00C          	lfsr	2,12
 10784   013F96  51F6               	movf	_activeTrack@mountainStationOutbound$F3951& (0+255),w,b
 10785   013F98  26D9               	addwf	fsr2l,f,c
 10786   013F9A  51F7               	movf	(_activeTrack@mountainStationOutbound$F3951+1)& (0+255),w,b
 10787   013F9C  22DA               	addwfc	fsr2h,f,c
 10788   013F9E  0E58               	movlw	88
 10789   013FA0  6EDE               	movwf	postinc2,c
 10790   013FA2  0E1B               	movlw	27
 10791   013FA4  6EDE               	movwf	postinc2,c
 10792   013FA6  0E00               	movlw	0
 10793   013FA8  6EDE               	movwf	postinc2,c
 10794   013FAA  0E00               	movlw	0
 10795   013FAC  6EDD               	movwf	postdec2,c
 10796                           
 10797                           ; BSR set to: 0
 10798                           ;mountainStationOutbound.c: 39:                 activeTrack->stnNextState = SEQ_SET_OCC;
 10799   013FAE  EE20 F003          	lfsr	2,3
 10800   013FB2  51F6               	movf	_activeTrack@mountainStationOutbound$F3951& (0+255),w,b
 10801   013FB4  26D9               	addwf	fsr2l,f,c
 10802   013FB6  51F7               	movf	(_activeTrack@mountainStationOutbound$F3951+1)& (0+255),w,b
 10803   013FB8  22DA               	addwfc	fsr2h,f,c
 10804   013FBA  0E7B               	movlw	123
 10805   013FBC  6EDF               	movwf	indf2,c
 10806                           
 10807                           ; BSR set to: 0
 10808                           ;mountainStationOutbound.c: 40:                 activeTrack->stnSequence = SEQ_WAIT;
 10809   013FBE  EE20 F002          	lfsr	2,2
 10810   013FC2  51F6               	movf	_activeTrack@mountainStationOutbound$F3951& (0+255),w,b
 10811   013FC4  26D9               	addwf	fsr2l,f,c
 10812   013FC6  51F7               	movf	(_activeTrack@mountainStationOutbound$F3951+1)& (0+255),w,b
 10813   013FC8  22DA               	addwfc	fsr2h,f,c
 10814   013FCA  0E7A               	movlw	122
 10815   013FCC  6EDF               	movwf	indf2,c
 10816                           
 10817                           ; BSR set to: 0
 10818                           ;mountainStationOutbound.c: 41:                 CREATExTASKxSTATUSxMESSAGE(self->name,
 10819   013FCE  C0F6  FFD9         	movff	_activeTrack@mountainStationOutbound$F3951,fsr2l
 10820   013FD2  C0F7  FFDA         	movff	_activeTrack@mountainStationOutbound$F3951+1,fsr2h
 10821   013FD6  50DF               	movf	indf2,w,c
 10822   013FD8  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
 10823   013FDA  EE20 F001          	lfsr	2,1
 10824   013FDE  51F6               	movf	_activeTrack@mountainStationOutbound$F3951& (0+255),w,b
 10825   013FE0  26D9               	addwf	fsr2l,f,c
 10826   013FE2  51F7               	movf	(_activeTrack@mountainStationOutbound$F3951+1)& (0+255),w,b
 10827   013FE4  22DA               	addwfc	fsr2h,f,c
 10828   013FE6  50DF               	movf	indf2,w,c
 10829   013FE8  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
 10830   013FEA  EE20 F002          	lfsr	2,2
 10831   013FEE  51F6               	movf	_activeTrack@mountainStationOutbound$F3951& (0+255),w,b
 10832   013FF0  26D9               	addwf	fsr2l,f,c
 10833   013FF2  51F7               	movf	(_activeTrack@mountainStationOutbound$F3951+1)& (0+255),w,b
 10834   013FF4  22DA               	addwfc	fsr2h,f,c
 10835   013FF6  50DF               	movf	indf2,w,c
 10836   013FF8  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
 10837   013FFA  C02B  FFD9         	movff	MOUNTAINxSTATIONxOUTBOUND@self,fsr2l
 10838   013FFE  C02C  FFDA         	movff	MOUNTAINxSTATIONxOUTBOUND@self+1,fsr2h
 10839   014002  50DF               	movf	indf2,w,c
 10840   014004  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
 10841                           
 10842                           ;mountainStationOutbound.c: 45:             break;
 10843   014008  D7A3               	goto	l15095
 10844   01400A                     l15111:
 10845                           
 10846                           ; BSR set to: 0
 10847                           ;mountainStationOutbound.c: 49:             SETxOCC(self->setOccAmpOut, 0);
 10848   01400A  EE20 F008          	lfsr	2,8
 10849   01400E  502B               	movf	MOUNTAINxSTATIONxOUTBOUND@self^0,w,c
 10850   014010  26D9               	addwf	fsr2l,f,c
 10851   014012  502C               	movf	(MOUNTAINxSTATIONxOUTBOUND@self+1)^0,w,c
 10852   014014  22DA               	addwfc	fsr2h,f,c
 10853   014016  CFDE F005          	movff	postinc2,SETxOCC@self
 10854   01401A  CFDD F006          	movff	postdec2,SETxOCC@self+1
 10855   01401E  0E00               	movlw	0
 10856   014020  6E07               	movwf	SETxOCC@value^0,c
 10857   014022  ECC0  F0BA         	call	_SETxOCC	;wreg free
 10858                           
 10859                           ;mountainStationOutbound.c: 50:             activeTrack->stnSequence = SEQ_CHK_TRAIN;
 10860   014026  0100               	movlb	0	; () banked
 10861   014028  EE20 F002          	lfsr	2,2
 10862   01402C  51F6               	movf	_activeTrack@mountainStationOutbound$F3951& (0+255),w,b
 10863   01402E  26D9               	addwf	fsr2l,f,c
 10864   014030  51F7               	movf	(_activeTrack@mountainStationOutbound$F3951+1)& (0+255),w,b
 10865   014032  22DA               	addwfc	fsr2h,f,c
 10866   014034  0E7C               	movlw	124
 10867   014036  6EDF               	movwf	indf2,c
 10868                           
 10869                           ; BSR set to: 0
 10870                           ;mountainStationOutbound.c: 51:             CREATExTASKxSTATUSxMESSAGE(self->name,
 10871   014038  C0F6  FFD9         	movff	_activeTrack@mountainStationOutbound$F3951,fsr2l
 10872   01403C  C0F7  FFDA         	movff	_activeTrack@mountainStationOutbound$F3951+1,fsr2h
 10873   014040  50DF               	movf	indf2,w,c
 10874   014042  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
 10875   014044  EE20 F001          	lfsr	2,1
 10876   014048  51F6               	movf	_activeTrack@mountainStationOutbound$F3951& (0+255),w,b
 10877   01404A  26D9               	addwf	fsr2l,f,c
 10878   01404C  51F7               	movf	(_activeTrack@mountainStationOutbound$F3951+1)& (0+255),w,b
 10879   01404E  22DA               	addwfc	fsr2h,f,c
 10880   014050  50DF               	movf	indf2,w,c
 10881   014052  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
 10882   014054  EE20 F002          	lfsr	2,2
 10883   014058  51F6               	movf	_activeTrack@mountainStationOutbound$F3951& (0+255),w,b
 10884   01405A  26D9               	addwf	fsr2l,f,c
 10885   01405C  51F7               	movf	(_activeTrack@mountainStationOutbound$F3951+1)& (0+255),w,b
 10886   01405E  22DA               	addwfc	fsr2h,f,c
 10887   014060  50DF               	movf	indf2,w,c
 10888   014062  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
 10889   014064  C02B  FFD9         	movff	MOUNTAINxSTATIONxOUTBOUND@self,fsr2l
 10890   014068  C02C  FFDA         	movff	MOUNTAINxSTATIONxOUTBOUND@self+1,fsr2h
 10891   01406C  50DF               	movf	indf2,w,c
 10892   01406E  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
 10893                           
 10894                           ;mountainStationOutbound.c: 55:             break;
 10895   014072  D76E               	goto	l15095
 10896   014074                     l15117:
 10897                           
 10898                           ; BSR set to: 0
 10899                           ;mountainStationOutbound.c: 62:             if(1 == self->getTrainEnterSiebwaldeStn->val
      +                          ue ){
 10900   014074  EE20 F006          	lfsr	2,6
 10901   014078  502B               	movf	MOUNTAINxSTATIONxOUTBOUND@self^0,w,c
 10902   01407A  26D9               	addwf	fsr2l,f,c
 10903   01407C  502C               	movf	(MOUNTAINxSTATIONxOUTBOUND@self+1)^0,w,c
 10904   01407E  22DA               	addwfc	fsr2h,f,c
 10905   014080  EE10 F00B          	lfsr	1,11
 10906   014084  50DE               	movf	postinc2,w,c
 10907   014086  26E1               	addwf	fsr1l,f,c
 10908   014088  50DD               	movf	postdec2,w,c
 10909   01408A  22E2               	addwfc	fsr1h,f,c
 10910   01408C  04E6               	decf	postinc1,w,c
 10911   01408E  A4D8               	btfss	status,2,c
 10912   014090  D75F               	goto	l15095
 10913                           
 10914                           ; BSR set to: 0
 10915                           ;mountainStationOutbound.c: 63:                 SETxOCC(self->setOccAmpOut, 1);
 10916   014092  EE20 F008          	lfsr	2,8
 10917   014096  502B               	movf	MOUNTAINxSTATIONxOUTBOUND@self^0,w,c
 10918   014098  26D9               	addwf	fsr2l,f,c
 10919   01409A  502C               	movf	(MOUNTAINxSTATIONxOUTBOUND@self+1)^0,w,c
 10920   01409C  22DA               	addwfc	fsr2h,f,c
 10921   01409E  CFDE F005          	movff	postinc2,SETxOCC@self
 10922   0140A2  CFDD F006          	movff	postdec2,SETxOCC@self+1
 10923   0140A6  0E01               	movlw	1
 10924   0140A8  6E07               	movwf	SETxOCC@value^0,c
 10925   0140AA  ECC0  F0BA         	call	_SETxOCC	;wreg free
 10926                           
 10927                           ;mountainStationOutbound.c: 65:                 activeTrack->getTrainEnterStnTrack->valu
      +                          e = 0;
 10928   0140AE  0100               	movlb	0	; () banked
 10929   0140B0  EE20 F004          	lfsr	2,4
 10930   0140B4  51F6               	movf	_activeTrack@mountainStationOutbound$F3951& (0+255),w,b
 10931   0140B6  26D9               	addwf	fsr2l,f,c
 10932   0140B8  51F7               	movf	(_activeTrack@mountainStationOutbound$F3951+1)& (0+255),w,b
 10933   0140BA  22DA               	addwfc	fsr2h,f,c
 10934   0140BC  EE10 F00B          	lfsr	1,11
 10935   0140C0  50DE               	movf	postinc2,w,c
 10936   0140C2  26E1               	addwf	fsr1l,f,c
 10937   0140C4  50DD               	movf	postdec2,w,c
 10938   0140C6  22E2               	addwfc	fsr1h,f,c
 10939   0140C8  6AE7               	clrf	indf1,c
 10940                           
 10941                           ; BSR set to: 0
 10942                           ;mountainStationOutbound.c: 66:                 self->getTrainEnterSiebwaldeStn->value =
      +                           0;
 10943   0140CA  EE20 F006          	lfsr	2,6
 10944   0140CE  502B               	movf	MOUNTAINxSTATIONxOUTBOUND@self^0,w,c
 10945   0140D0  26D9               	addwf	fsr2l,f,c
 10946   0140D2  502C               	movf	(MOUNTAINxSTATIONxOUTBOUND@self+1)^0,w,c
 10947   0140D4  22DA               	addwfc	fsr2h,f,c
 10948   0140D6  EE10 F00B          	lfsr	1,11
 10949   0140DA  50DE               	movf	postinc2,w,c
 10950   0140DC  26E1               	addwf	fsr1l,f,c
 10951   0140DE  50DD               	movf	postdec2,w,c
 10952   0140E0  22E2               	addwfc	fsr1h,f,c
 10953   0140E2  6AE7               	clrf	indf1,c
 10954                           
 10955                           ; BSR set to: 0
 10956                           ;mountainStationOutbound.c: 68:                 activeTrack->stnNextState = SEQ_OUTBOUND
      +                          _BRAKE_TIME;
 10957   0140E4  EE20 F003          	lfsr	2,3
 10958   0140E8  51F6               	movf	_activeTrack@mountainStationOutbound$F3951& (0+255),w,b
 10959   0140EA  26D9               	addwf	fsr2l,f,c
 10960   0140EC  51F7               	movf	(_activeTrack@mountainStationOutbound$F3951+1)& (0+255),w,b
 10961   0140EE  22DA               	addwfc	fsr2h,f,c
 10962   0140F0  0E80               	movlw	128
 10963   0140F2  6EDF               	movwf	indf2,c
 10964                           
 10965                           ; BSR set to: 0
 10966                           ;mountainStationOutbound.c: 69:                 activeTrack->stnSequence = SEQ_WAIT;
 10967   0140F4  EE20 F002          	lfsr	2,2
 10968   0140F8  51F6               	movf	_activeTrack@mountainStationOutbound$F3951& (0+255),w,b
 10969   0140FA  26D9               	addwf	fsr2l,f,c
 10970   0140FC  51F7               	movf	(_activeTrack@mountainStationOutbound$F3951+1)& (0+255),w,b
 10971   0140FE  22DA               	addwfc	fsr2h,f,c
 10972   014100  0E7A               	movlw	122
 10973   014102  6EDF               	movwf	indf2,c
 10974                           
 10975                           ;mountainStationOutbound.c: 70:                 activeTrack->tCountTime = GETxMILLIS();
 10976   014104  EC50  F0C1         	call	_GETxMILLIS	;wreg free
 10977   014108  0100               	movlb	0	; () banked
 10978   01410A  EE20 F008          	lfsr	2,8
 10979   01410E  51F6               	movf	_activeTrack@mountainStationOutbound$F3951& (0+255),w,b
 10980   014110  26D9               	addwf	fsr2l,f,c
 10981   014112  51F7               	movf	(_activeTrack@mountainStationOutbound$F3951+1)& (0+255),w,b
 10982   014114  22DA               	addwfc	fsr2h,f,c
 10983   014116  C005  FFDE         	movff	?_GETxMILLIS,postinc2
 10984   01411A  C006  FFDE         	movff	?_GETxMILLIS+1,postinc2
 10985   01411E  C007  FFDE         	movff	?_GETxMILLIS+2,postinc2
 10986   014122  C008  FFDE         	movff	?_GETxMILLIS+3,postinc2
 10987                           
 10988                           ; BSR set to: 0
 10989   014126  EE20 F00C          	lfsr	2,12
 10990   01412A  51F6               	movf	_activeTrack@mountainStationOutbound$F3951& (0+255),w,b
 10991   01412C  26D9               	addwf	fsr2l,f,c
 10992   01412E  51F7               	movf	(_activeTrack@mountainStationOutbound$F3951+1)& (0+255),w,b
 10993   014130  22DA               	addwfc	fsr2h,f,c
 10994   014132  0E10               	movlw	16
 10995   014134  6EDE               	movwf	postinc2,c
 10996   014136  0E27               	movlw	39
 10997   014138  6EDE               	movwf	postinc2,c
 10998   01413A  0E00               	movlw	0
 10999   01413C  6EDE               	movwf	postinc2,c
 11000   01413E  0E00               	movlw	0
 11001   014140  6EDD               	movwf	postdec2,c
 11002                           
 11003                           ; BSR set to: 0
 11004                           ;mountainStationOutbound.c: 73:                 CREATExTASKxSTATUSxMESSAGE(self->name,
 11005   014142  C0F6  FFD9         	movff	_activeTrack@mountainStationOutbound$F3951,fsr2l
 11006   014146  C0F7  FFDA         	movff	_activeTrack@mountainStationOutbound$F3951+1,fsr2h
 11007   01414A  50DF               	movf	indf2,w,c
 11008   01414C  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
 11009   01414E  EE20 F001          	lfsr	2,1
 11010   014152  51F6               	movf	_activeTrack@mountainStationOutbound$F3951& (0+255),w,b
 11011   014154  26D9               	addwf	fsr2l,f,c
 11012   014156  51F7               	movf	(_activeTrack@mountainStationOutbound$F3951+1)& (0+255),w,b
 11013   014158  22DA               	addwfc	fsr2h,f,c
 11014   01415A  50DF               	movf	indf2,w,c
 11015   01415C  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
 11016   01415E  EE20 F002          	lfsr	2,2
 11017   014162  51F6               	movf	_activeTrack@mountainStationOutbound$F3951& (0+255),w,b
 11018   014164  26D9               	addwf	fsr2l,f,c
 11019   014166  51F7               	movf	(_activeTrack@mountainStationOutbound$F3951+1)& (0+255),w,b
 11020   014168  22DA               	addwfc	fsr2h,f,c
 11021   01416A  50DF               	movf	indf2,w,c
 11022   01416C  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
 11023   01416E  C02B  FFD9         	movff	MOUNTAINxSTATIONxOUTBOUND@self,fsr2l
 11024   014172  C02C  FFDA         	movff	MOUNTAINxSTATIONxOUTBOUND@self+1,fsr2h
 11025   014176  50DF               	movf	indf2,w,c
 11026   014178  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
 11027   01417C  D6E9               	goto	l15095
 11028   01417E                     l15133:
 11029                           
 11030                           ; BSR set to: 0
 11031                           ;mountainStationOutbound.c: 81:             activeTrack->stnState = STN_IDLE;
 11032   01417E  EE20 F001          	lfsr	2,1
 11033   014182  51F6               	movf	_activeTrack@mountainStationOutbound$F3951& (0+255),w,b
 11034   014184  26D9               	addwf	fsr2l,f,c
 11035   014186  51F7               	movf	(_activeTrack@mountainStationOutbound$F3951+1)& (0+255),w,b
 11036   014188  22DA               	addwfc	fsr2h,f,c
 11037   01418A  0E78               	movlw	120
 11038   01418C  6EDF               	movwf	indf2,c
 11039                           
 11040                           ;mountainStationOutbound.c: 82:             activeTrack->stnSequence = SEQ_IDLE;
 11041   01418E  EE20 F002          	lfsr	2,2
 11042   014192  51F6               	movf	_activeTrack@mountainStationOutbound$F3951& (0+255),w,b
 11043   014194  26D9               	addwf	fsr2l,f,c
 11044   014196  51F7               	movf	(_activeTrack@mountainStationOutbound$F3951+1)& (0+255),w,b
 11045   014198  22DA               	addwfc	fsr2h,f,c
 11046   01419A  0E79               	movlw	121
 11047   01419C  6EDF               	movwf	indf2,c
 11048                           
 11049                           ;mountainStationOutbound.c: 84:             activeTrack->stnOccupied = 0;
 11050   01419E  EE20 F006          	lfsr	2,6
 11051   0141A2  51F6               	movf	_activeTrack@mountainStationOutbound$F3951& (0+255),w,b
 11052   0141A4  26D9               	addwf	fsr2l,f,c
 11053   0141A6  51F7               	movf	(_activeTrack@mountainStationOutbound$F3951+1)& (0+255),w,b
 11054   0141A8  22DA               	addwfc	fsr2h,f,c
 11055   0141AA  6ADF               	clrf	indf2,c
 11056                           
 11057                           ; BSR set to: 0
 11058                           ;mountainStationOutbound.c: 85:             activeTrack = 0;
 11059   0141AC  0E00               	movlw	0
 11060   0141AE  6FF6               	movwf	_activeTrack@mountainStationOutbound$F3951& (0+255),b
 11061   0141B0  0E00               	movlw	0
 11062   0141B2  6FF7               	movwf	(_activeTrack@mountainStationOutbound$F3951+1)& (0+255),b
 11063                           
 11064                           ; BSR set to: 0
 11065                           ;mountainStationOutbound.c: 86:             return(done);
 11066   0141B4  0E66               	movlw	102
 11067   0141B6  0012               	return	
 11068   0141B8                     l15143:
 11069                           
 11070                           ; BSR set to: 0
 11071                           ;mountainStationOutbound.c: 91:             if((GETxMILLIS() - activeTrack->tCountTime) 
      +                          > activeTrack->tWaitTime){
 11072   0141B8  EE20 F008          	lfsr	2,8
 11073   0141BC  51F6               	movf	_activeTrack@mountainStationOutbound$F3951& (0+255),w,b
 11074   0141BE  26D9               	addwf	fsr2l,f,c
 11075   0141C0  51F7               	movf	(_activeTrack@mountainStationOutbound$F3951+1)& (0+255),w,b
 11076   0141C2  22DA               	addwfc	fsr2h,f,c
 11077   0141C4  CFDE F02D          	movff	postinc2,??_MOUNTAINxSTATIONxOUTBOUND
 11078   0141C8  CFDE F02E          	movff	postinc2,??_MOUNTAINxSTATIONxOUTBOUND+1
 11079   0141CC  CFDE F02F          	movff	postinc2,??_MOUNTAINxSTATIONxOUTBOUND+2
 11080   0141D0  CFDE F030          	movff	postinc2,??_MOUNTAINxSTATIONxOUTBOUND+3
 11081   0141D4  EC50  F0C1         	call	_GETxMILLIS	;wreg free
 11082   0141D8  502D               	movf	??_MOUNTAINxSTATIONxOUTBOUND^0,w,c
 11083   0141DA  5C05               	subwf	?_GETxMILLIS^0,w,c
 11084   0141DC  6E31               	movwf	(??_MOUNTAINxSTATIONxOUTBOUND+4)^0,c
 11085   0141DE  502E               	movf	(??_MOUNTAINxSTATIONxOUTBOUND+1)^0,w,c
 11086   0141E0  5806               	subwfb	(?_GETxMILLIS+1)^0,w,c
 11087   0141E2  6E32               	movwf	(??_MOUNTAINxSTATIONxOUTBOUND+5)^0,c
 11088   0141E4  502F               	movf	(??_MOUNTAINxSTATIONxOUTBOUND+2)^0,w,c
 11089   0141E6  5807               	subwfb	(?_GETxMILLIS+2)^0,w,c
 11090   0141E8  6E33               	movwf	(??_MOUNTAINxSTATIONxOUTBOUND+6)^0,c
 11091   0141EA  5030               	movf	(??_MOUNTAINxSTATIONxOUTBOUND+3)^0,w,c
 11092   0141EC  5808               	subwfb	(?_GETxMILLIS+3)^0,w,c
 11093   0141EE  6E34               	movwf	(??_MOUNTAINxSTATIONxOUTBOUND+7)^0,c
 11094   0141F0  0100               	movlb	0	; () banked
 11095   0141F2  EE20 F00C          	lfsr	2,12
 11096   0141F6  51F6               	movf	_activeTrack@mountainStationOutbound$F3951& (0+255),w,b
 11097   0141F8  26D9               	addwf	fsr2l,f,c
 11098   0141FA  51F7               	movf	(_activeTrack@mountainStationOutbound$F3951+1)& (0+255),w,b
 11099   0141FC  22DA               	addwfc	fsr2h,f,c
 11100   0141FE  5031               	movf	(??_MOUNTAINxSTATIONxOUTBOUND+4)^0,w,c
 11101   014200  5CDE               	subwf	postinc2,w,c
 11102   014202  5032               	movf	(??_MOUNTAINxSTATIONxOUTBOUND+5)^0,w,c
 11103   014204  58DE               	subwfb	postinc2,w,c
 11104   014206  5033               	movf	(??_MOUNTAINxSTATIONxOUTBOUND+6)^0,w,c
 11105   014208  58DE               	subwfb	postinc2,w,c
 11106   01420A  5034               	movf	(??_MOUNTAINxSTATIONxOUTBOUND+7)^0,w,c
 11107   01420C  58DE               	subwfb	postinc2,w,c
 11108   01420E  B0D8               	btfsc	status,0,c
 11109   014210  D69F               	goto	l15095
 11110                           
 11111                           ; BSR set to: 0
 11112                           ;mountainStationOutbound.c: 92:                 activeTrack->stnSequence = activeTrack->
      +                          stnNextState;
 11113   014212  EE20 F003          	lfsr	2,3
 11114   014216  51F6               	movf	_activeTrack@mountainStationOutbound$F3951& (0+255),w,b
 11115   014218  26D9               	addwf	fsr2l,f,c
 11116   01421A  51F7               	movf	(_activeTrack@mountainStationOutbound$F3951+1)& (0+255),w,b
 11117   01421C  22DA               	addwfc	fsr2h,f,c
 11118   01421E  EE10 F002          	lfsr	1,2
 11119   014222  51F6               	movf	_activeTrack@mountainStationOutbound$F3951& (0+255),w,b
 11120   014224  26E1               	addwf	fsr1l,f,c
 11121   014226  51F7               	movf	(_activeTrack@mountainStationOutbound$F3951+1)& (0+255),w,b
 11122   014228  22E2               	addwfc	fsr1h,f,c
 11123   01422A  CFDF FFE7          	movff	indf2,indf1
 11124   01422E  D690               	goto	l15095
 11125   014230                     l15149:
 11126                           
 11127                           ; BSR set to: 0
 11128   014230  EE20 F002          	lfsr	2,2
 11129   014234  51F6               	movf	_activeTrack@mountainStationOutbound$F3951& (0+255),w,b
 11130   014236  26D9               	addwf	fsr2l,f,c
 11131   014238  51F7               	movf	(_activeTrack@mountainStationOutbound$F3951+1)& (0+255),w,b
 11132   01423A  22DA               	addwfc	fsr2h,f,c
 11133   01423C  50DF               	movf	indf2,w,c
 11134   01423E  6E2D               	movwf	??_MOUNTAINxSTATIONxOUTBOUND^0,c
 11135   014240  6A2E               	clrf	(??_MOUNTAINxSTATIONxOUTBOUND+1)^0,c
 11136                           
 11137                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11138                           ; Switch size 1, requested type "simple"
 11139                           ; Number of cases is 1, Range of values is 0 to 0
 11140                           ; switch strategies available:
 11141                           ; Name         Instructions Cycles
 11142                           ; simple_byte            4     3 (average)
 11143                           ;	Chosen strategy is simple_byte
 11144   014242  502E               	movf	(??_MOUNTAINxSTATIONxOUTBOUND+1)^0,w,c
 11145   014244  0A00               	xorlw	0	; case 0
 11146   014246  A4D8               	btfss	status,2,c
 11147   014248  D683               	goto	l15095
 11148                           
 11149                           ; BSR set to: 0
 11150                           ; Switch size 1, requested type "simple"
 11151                           ; Number of cases is 5, Range of values is 121 to 128
 11152                           ; switch strategies available:
 11153                           ; Name         Instructions Cycles
 11154                           ; simple_byte           16     9 (average)
 11155                           ;	Chosen strategy is simple_byte
 11156   01424A  502D               	movf	??_MOUNTAINxSTATIONxOUTBOUND^0,w,c
 11157   01424C  0A79               	xorlw	121	; case 121
 11158   01424E  B4D8               	btfsc	status,2,c
 11159   014250  D681               	goto	l15099
 11160   014252  0A03               	xorlw	3	; case 122
 11161   014254  B4D8               	btfsc	status,2,c
 11162   014256  D7B0               	goto	l15143
 11163   014258  0A01               	xorlw	1	; case 123
 11164   01425A  B4D8               	btfsc	status,2,c
 11165   01425C  D6D6               	goto	l15111
 11166   01425E  0A07               	xorlw	7	; case 124
 11167   014260  B4D8               	btfsc	status,2,c
 11168   014262  D708               	goto	l15117
 11169   014264  0AFC               	xorlw	252	; case 128
 11170   014266  B4D8               	btfsc	status,2,c
 11171   014268  D78A               	goto	l15133
 11172   01426A  D672               	goto	l15095
 11173   01426C                     __end_of_MOUNTAINxSTATIONxOUTBOUND:
 11174                           	callstack 0
 11175                           
 11176 ;; *************** function _MOUNTAINxSTATIONxINBOUND *****************
 11177 ;; Defined at:
 11178 ;;		line 12 in file "mountainStationInbound.c"
 11179 ;; Parameters:    Size  Location     Type
 11180 ;;  self            2   42[COMRAM] PTR struct .
 11181 ;;		 -> waldberg(54), waldsee(54), 
 11182 ;; Auto vars:     Size  Location     Type
 11183 ;;		None
 11184 ;; Return value:  Size  Location     Type
 11185 ;;                  1    wreg      char 
 11186 ;; Registers used:
 11187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11188 ;; Tracked objects:
 11189 ;;		On entry : 0/1
 11190 ;;		On exit  : 0/0
 11191 ;;		Unchanged: 0/0
 11192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11193 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11195 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11196 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11197 ;;Total ram usage:       14 bytes
 11198 ;; Hardware stack levels used: 1
 11199 ;; Hardware stack levels required when called: 7
 11200 ;; This function calls:
 11201 ;;		_CREATExTASKxSTATUSxMESSAGE
 11202 ;;		_GETxMILLIS
 11203 ;;		_GETxRANDOMxNUMBER
 11204 ;;		_SETxMNTSTATIONxPATHWAY
 11205 ;;		_SETxOCC
 11206 ;;		___lldiv
 11207 ;; This function is called by:
 11208 ;;		_UPDATExMOUNTAINxSTATION
 11209 ;; This function uses a non-reentrant model
 11210 ;;
 11211                           
 11212                           	psect	text12
 11213   012086                     __ptext12:
 11214                           	callstack 0
 11215   012086                     _MOUNTAINxSTATIONxINBOUND:
 11216                           	callstack 22
 11217                           
 11218                           ;mountainStationInbound.c: 14:     if(self->stnTrack1.stnState == STN_INBOUND){
 11219                           
 11220                           ;incstack = 0
 11221   012086  EE20 F00F          	lfsr	2,15
 11222   01208A  502B               	movf	MOUNTAINxSTATIONxINBOUND@self^0,w,c
 11223   01208C  26D9               	addwf	fsr2l,f,c
 11224   01208E  502C               	movf	(MOUNTAINxSTATIONxINBOUND@self+1)^0,w,c
 11225   012090  22DA               	addwfc	fsr2h,f,c
 11226   012092  0E74               	movlw	116
 11227   012094  18DE               	xorwf	postinc2,w,c
 11228   012096  A4D8               	btfss	status,2,c
 11229   012098  D002               	goto	l15165
 11230                           
 11231                           ;mountainStationInbound.c: 15:         activeTrack = &self->stnTrack1;
 11232   01209A  0E0E               	movlw	14
 11233   01209C  D00B               	goto	L23
 11234   01209E                     l15165:
 11235   01209E  EE20 F01F          	lfsr	2,31
 11236   0120A2  502B               	movf	MOUNTAINxSTATIONxINBOUND@self^0,w,c
 11237   0120A4  26D9               	addwf	fsr2l,f,c
 11238   0120A6  502C               	movf	(MOUNTAINxSTATIONxINBOUND@self+1)^0,w,c
 11239   0120A8  22DA               	addwfc	fsr2h,f,c
 11240   0120AA  0E74               	movlw	116
 11241   0120AC  18DE               	xorwf	postinc2,w,c
 11242   0120AE  A4D8               	btfss	status,2,c
 11243   0120B0  D007               	goto	l15169
 11244                           
 11245                           ;mountainStationInbound.c: 18:         activeTrack = &self->stnTrack2;
 11246   0120B2  0E1E               	movlw	30
 11247   0120B4                     L23:
 11248   0120B4  242B               	addwf	MOUNTAINxSTATIONxINBOUND@self^0,w,c
 11249   0120B6  6E57               	movwf	_activeTrack@mountainStationInbound$F3654^0,c
 11250   0120B8  0E00               	movlw	0
 11251   0120BA  202C               	addwfc	(MOUNTAINxSTATIONxINBOUND@self+1)^0,w,c
 11252   0120BC  6E58               	movwf	(_activeTrack@mountainStationInbound$F3654+1)^0,c
 11253                           
 11254                           ;mountainStationInbound.c: 19:     }
 11255   0120BE  D217               	goto	l15247
 11256   0120C0                     l15169:
 11257                           
 11258                           ;mountainStationInbound.c: 22:             STN_IDLE == self->stnTrack2.stnState){;mounta
      +                          inStationInbound.c: 23:         return(done);
 11259   0120C0  0E66               	movlw	102
 11260   0120C2  0012               	return	
 11261   0120C4                     l15183:
 11262                           
 11263                           ;mountainStationInbound.c: 35:             SETxMNTSTATIONxPATHWAY(self, activeTrack->tra
      +                          ckNr);
 11264   0120C4  C02B  F022         	movff	MOUNTAINxSTATIONxINBOUND@self,SETxMNTSTATIONxPATHWAY@self
 11265   0120C8  C02C  F023         	movff	MOUNTAINxSTATIONxINBOUND@self+1,SETxMNTSTATIONxPATHWAY@self+1
 11266   0120CC  EE20 F007          	lfsr	2,7
 11267   0120D0  5057               	movf	_activeTrack@mountainStationInbound$F3654^0,w,c
 11268   0120D2  26D9               	addwf	fsr2l,f,c
 11269   0120D4  5058               	movf	(_activeTrack@mountainStationInbound$F3654+1)^0,w,c
 11270   0120D6  22DA               	addwfc	fsr2h,f,c
 11271   0120D8  50DF               	movf	indf2,w,c
 11272   0120DA  6E24               	movwf	SETxMNTSTATIONxPATHWAY@path^0,c
 11273   0120DC  EC20  F0B4         	call	_SETxMNTSTATIONxPATHWAY	;wreg free
 11274                           
 11275                           ; BSR set to: 1
 11276                           ;mountainStationInbound.c: 36:             activeTrack->tCountTime = GETxMILLIS();
 11277   0120E0  EC50  F0C1         	call	_GETxMILLIS	;wreg free
 11278   0120E4  EE20 F008          	lfsr	2,8
 11279   0120E8  5057               	movf	_activeTrack@mountainStationInbound$F3654^0,w,c
 11280   0120EA  26D9               	addwf	fsr2l,f,c
 11281   0120EC  5058               	movf	(_activeTrack@mountainStationInbound$F3654+1)^0,w,c
 11282   0120EE  22DA               	addwfc	fsr2h,f,c
 11283   0120F0  C005  FFDE         	movff	?_GETxMILLIS,postinc2
 11284   0120F4  C006  FFDE         	movff	?_GETxMILLIS+1,postinc2
 11285   0120F8  C007  FFDE         	movff	?_GETxMILLIS+2,postinc2
 11286   0120FC  C008  FFDE         	movff	?_GETxMILLIS+3,postinc2
 11287   012100  EE20 F00C          	lfsr	2,12
 11288   012104  5057               	movf	_activeTrack@mountainStationInbound$F3654^0,w,c
 11289   012106  26D9               	addwf	fsr2l,f,c
 11290   012108  5058               	movf	(_activeTrack@mountainStationInbound$F3654+1)^0,w,c
 11291   01210A  22DA               	addwfc	fsr2h,f,c
 11292   01210C  0E58               	movlw	88
 11293   01210E  6EDE               	movwf	postinc2,c
 11294   012110  0E1B               	movlw	27
 11295   012112  6EDE               	movwf	postinc2,c
 11296   012114  0E00               	movlw	0
 11297   012116  6EDE               	movwf	postinc2,c
 11298   012118  0E00               	movlw	0
 11299   01211A  6EDD               	movwf	postdec2,c
 11300                           
 11301                           ;mountainStationInbound.c: 38:             activeTrack->stnNextState = SEQ_SET_OCC;
 11302   01211C  EE20 F003          	lfsr	2,3
 11303   012120  5057               	movf	_activeTrack@mountainStationInbound$F3654^0,w,c
 11304   012122  26D9               	addwf	fsr2l,f,c
 11305   012124  5058               	movf	(_activeTrack@mountainStationInbound$F3654+1)^0,w,c
 11306   012126  22DA               	addwfc	fsr2h,f,c
 11307   012128  0E7B               	movlw	123
 11308   01212A  6EDF               	movwf	indf2,c
 11309                           
 11310                           ;mountainStationInbound.c: 39:             activeTrack->stnSequence = SEQ_WAIT;
 11311   01212C  EE20 F002          	lfsr	2,2
 11312   012130  5057               	movf	_activeTrack@mountainStationInbound$F3654^0,w,c
 11313   012132  26D9               	addwf	fsr2l,f,c
 11314   012134  5058               	movf	(_activeTrack@mountainStationInbound$F3654+1)^0,w,c
 11315   012136  22DA               	addwfc	fsr2h,f,c
 11316   012138  0E7A               	movlw	122
 11317   01213A  6EDF               	movwf	indf2,c
 11318                           
 11319                           ;mountainStationInbound.c: 40:             CREATExTASKxSTATUSxMESSAGE(self->name,
 11320   01213C  C057  FFD9         	movff	_activeTrack@mountainStationInbound$F3654,fsr2l
 11321   012140  C058  FFDA         	movff	_activeTrack@mountainStationInbound$F3654+1,fsr2h
 11322   012144  50DF               	movf	indf2,w,c
 11323   012146  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
 11324   012148  EE20 F001          	lfsr	2,1
 11325   01214C  5057               	movf	_activeTrack@mountainStationInbound$F3654^0,w,c
 11326   01214E  26D9               	addwf	fsr2l,f,c
 11327   012150  5058               	movf	(_activeTrack@mountainStationInbound$F3654+1)^0,w,c
 11328   012152  22DA               	addwfc	fsr2h,f,c
 11329   012154  50DF               	movf	indf2,w,c
 11330   012156  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
 11331   012158  EE20 F002          	lfsr	2,2
 11332   01215C  5057               	movf	_activeTrack@mountainStationInbound$F3654^0,w,c
 11333   01215E  26D9               	addwf	fsr2l,f,c
 11334   012160  5058               	movf	(_activeTrack@mountainStationInbound$F3654+1)^0,w,c
 11335   012162  22DA               	addwfc	fsr2h,f,c
 11336   012164  50DF               	movf	indf2,w,c
 11337   012166  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
 11338   012168  C02B  FFD9         	movff	MOUNTAINxSTATIONxINBOUND@self,fsr2l
 11339   01216C  C02C  FFDA         	movff	MOUNTAINxSTATIONxINBOUND@self+1,fsr2h
 11340   012170  50DF               	movf	indf2,w,c
 11341   012172  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
 11342                           
 11343                           ;mountainStationInbound.c: 44:             break;
 11344   012176  D1D8               	goto	l15249
 11345   012178                     l15195:
 11346                           
 11347                           ;mountainStationInbound.c: 48:             SETxOCC(self->setOccAmpOut, 0);
 11348   012178  EE20 F008          	lfsr	2,8
 11349   01217C  502B               	movf	MOUNTAINxSTATIONxINBOUND@self^0,w,c
 11350   01217E  26D9               	addwf	fsr2l,f,c
 11351   012180  502C               	movf	(MOUNTAINxSTATIONxINBOUND@self+1)^0,w,c
 11352   012182  22DA               	addwfc	fsr2h,f,c
 11353   012184  CFDE F005          	movff	postinc2,SETxOCC@self
 11354   012188  CFDD F006          	movff	postdec2,SETxOCC@self+1
 11355   01218C  0E00               	movlw	0
 11356   01218E  6E07               	movwf	SETxOCC@value^0,c
 11357   012190  ECC0  F0BA         	call	_SETxOCC	;wreg free
 11358                           
 11359                           ;mountainStationInbound.c: 49:             activeTrack->stnSequence = SEQ_CHK_TRAIN;
 11360   012194  EE20 F002          	lfsr	2,2
 11361   012198  5057               	movf	_activeTrack@mountainStationInbound$F3654^0,w,c
 11362   01219A  26D9               	addwf	fsr2l,f,c
 11363   01219C  5058               	movf	(_activeTrack@mountainStationInbound$F3654+1)^0,w,c
 11364   01219E  22DA               	addwfc	fsr2h,f,c
 11365   0121A0  0E7C               	movlw	124
 11366   0121A2  6EDF               	movwf	indf2,c
 11367                           
 11368                           ;mountainStationInbound.c: 50:             CREATExTASKxSTATUSxMESSAGE(self->name,
 11369   0121A4  C057  FFD9         	movff	_activeTrack@mountainStationInbound$F3654,fsr2l
 11370   0121A8  C058  FFDA         	movff	_activeTrack@mountainStationInbound$F3654+1,fsr2h
 11371   0121AC  50DF               	movf	indf2,w,c
 11372   0121AE  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
 11373   0121B0  EE20 F001          	lfsr	2,1
 11374   0121B4  5057               	movf	_activeTrack@mountainStationInbound$F3654^0,w,c
 11375   0121B6  26D9               	addwf	fsr2l,f,c
 11376   0121B8  5058               	movf	(_activeTrack@mountainStationInbound$F3654+1)^0,w,c
 11377   0121BA  22DA               	addwfc	fsr2h,f,c
 11378   0121BC  50DF               	movf	indf2,w,c
 11379   0121BE  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
 11380   0121C0  EE20 F002          	lfsr	2,2
 11381   0121C4  5057               	movf	_activeTrack@mountainStationInbound$F3654^0,w,c
 11382   0121C6  26D9               	addwf	fsr2l,f,c
 11383   0121C8  5058               	movf	(_activeTrack@mountainStationInbound$F3654+1)^0,w,c
 11384   0121CA  22DA               	addwfc	fsr2h,f,c
 11385   0121CC  50DF               	movf	indf2,w,c
 11386   0121CE  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
 11387   0121D0  C02B  FFD9         	movff	MOUNTAINxSTATIONxINBOUND@self,fsr2l
 11388   0121D4  C02C  FFDA         	movff	MOUNTAINxSTATIONxINBOUND@self+1,fsr2h
 11389   0121D8  50DF               	movf	indf2,w,c
 11390   0121DA  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
 11391                           
 11392                           ;mountainStationInbound.c: 54:             break;
 11393   0121DE  D1A4               	goto	l15249
 11394   0121E0                     l15201:
 11395                           
 11396                           ;mountainStationInbound.c: 58:             if(activeTrack->getTrainEnterStnTrack->value)
      +                          {
 11397   0121E0  EE20 F004          	lfsr	2,4
 11398   0121E4  5057               	movf	_activeTrack@mountainStationInbound$F3654^0,w,c
 11399   0121E6  26D9               	addwf	fsr2l,f,c
 11400   0121E8  5058               	movf	(_activeTrack@mountainStationInbound$F3654+1)^0,w,c
 11401   0121EA  22DA               	addwfc	fsr2h,f,c
 11402   0121EC  EE10 F00B          	lfsr	1,11
 11403   0121F0  50DE               	movf	postinc2,w,c
 11404   0121F2  26E1               	addwf	fsr1l,f,c
 11405   0121F4  50DD               	movf	postdec2,w,c
 11406   0121F6  22E2               	addwfc	fsr1h,f,c
 11407   0121F8  50E7               	movf	indf1,w,c
 11408   0121FA  B4D8               	btfsc	status,2,c
 11409   0121FC  D195               	goto	l15249
 11410                           
 11411                           ;mountainStationInbound.c: 59:                 SETxOCC(self->setOccAmpOut, 1);
 11412   0121FE  EE20 F008          	lfsr	2,8
 11413   012202  502B               	movf	MOUNTAINxSTATIONxINBOUND@self^0,w,c
 11414   012204  26D9               	addwf	fsr2l,f,c
 11415   012206  502C               	movf	(MOUNTAINxSTATIONxINBOUND@self+1)^0,w,c
 11416   012208  22DA               	addwfc	fsr2h,f,c
 11417   01220A  CFDE F005          	movff	postinc2,SETxOCC@self
 11418   01220E  CFDD F006          	movff	postdec2,SETxOCC@self+1
 11419   012212  0E01               	movlw	1
 11420   012214  6E07               	movwf	SETxOCC@value^0,c
 11421   012216  ECC0  F0BA         	call	_SETxOCC	;wreg free
 11422                           
 11423                           ;mountainStationInbound.c: 60:                 activeTrack->stnOccupied = 1;
 11424   01221A  EE20 F006          	lfsr	2,6
 11425   01221E  5057               	movf	_activeTrack@mountainStationInbound$F3654^0,w,c
 11426   012220  26D9               	addwf	fsr2l,f,c
 11427   012222  5058               	movf	(_activeTrack@mountainStationInbound$F3654+1)^0,w,c
 11428   012224  22DA               	addwfc	fsr2h,f,c
 11429   012226  0E01               	movlw	1
 11430   012228  6EDF               	movwf	indf2,c
 11431                           
 11432                           ;mountainStationInbound.c: 61:                 activeTrack->stnNextState = SEQ_INBOUND_B
      +                          RAKE_TIME;
 11433   01222A  EE20 F003          	lfsr	2,3
 11434   01222E  5057               	movf	_activeTrack@mountainStationInbound$F3654^0,w,c
 11435   012230  26D9               	addwf	fsr2l,f,c
 11436   012232  5058               	movf	(_activeTrack@mountainStationInbound$F3654+1)^0,w,c
 11437   012234  22DA               	addwfc	fsr2h,f,c
 11438   012236  0E7F               	movlw	127
 11439   012238  6EDF               	movwf	indf2,c
 11440                           
 11441                           ;mountainStationInbound.c: 62:                 activeTrack->stnSequence = SEQ_WAIT;
 11442   01223A  EE20 F002          	lfsr	2,2
 11443   01223E  5057               	movf	_activeTrack@mountainStationInbound$F3654^0,w,c
 11444   012240  26D9               	addwf	fsr2l,f,c
 11445   012242  5058               	movf	(_activeTrack@mountainStationInbound$F3654+1)^0,w,c
 11446   012244  22DA               	addwfc	fsr2h,f,c
 11447   012246  0E7A               	movlw	122
 11448   012248  6EDF               	movwf	indf2,c
 11449                           
 11450                           ;mountainStationInbound.c: 63:                 activeTrack->tCountTime = GETxMILLIS();
 11451   01224A  EC50  F0C1         	call	_GETxMILLIS	;wreg free
 11452   01224E  EE20 F008          	lfsr	2,8
 11453   012252  5057               	movf	_activeTrack@mountainStationInbound$F3654^0,w,c
 11454   012254  26D9               	addwf	fsr2l,f,c
 11455   012256  5058               	movf	(_activeTrack@mountainStationInbound$F3654+1)^0,w,c
 11456   012258  22DA               	addwfc	fsr2h,f,c
 11457   01225A  C005  FFDE         	movff	?_GETxMILLIS,postinc2
 11458   01225E  C006  FFDE         	movff	?_GETxMILLIS+1,postinc2
 11459   012262  C007  FFDE         	movff	?_GETxMILLIS+2,postinc2
 11460   012266  C008  FFDE         	movff	?_GETxMILLIS+3,postinc2
 11461   01226A  EE20 F00C          	lfsr	2,12
 11462   01226E  5057               	movf	_activeTrack@mountainStationInbound$F3654^0,w,c
 11463   012270  26D9               	addwf	fsr2l,f,c
 11464   012272  5058               	movf	(_activeTrack@mountainStationInbound$F3654+1)^0,w,c
 11465   012274  22DA               	addwfc	fsr2h,f,c
 11466   012276  0E10               	movlw	16
 11467   012278  6EDE               	movwf	postinc2,c
 11468   01227A  0E27               	movlw	39
 11469   01227C  6EDE               	movwf	postinc2,c
 11470   01227E  0E00               	movlw	0
 11471   012280  6EDE               	movwf	postinc2,c
 11472   012282  0E00               	movlw	0
 11473   012284  6EDD               	movwf	postdec2,c
 11474                           
 11475                           ;mountainStationInbound.c: 65:                 CREATExTASKxSTATUSxMESSAGE(self->name,
 11476   012286  C057  FFD9         	movff	_activeTrack@mountainStationInbound$F3654,fsr2l
 11477   01228A  C058  FFDA         	movff	_activeTrack@mountainStationInbound$F3654+1,fsr2h
 11478   01228E  50DF               	movf	indf2,w,c
 11479   012290  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
 11480   012292  EE20 F001          	lfsr	2,1
 11481   012296  5057               	movf	_activeTrack@mountainStationInbound$F3654^0,w,c
 11482   012298  26D9               	addwf	fsr2l,f,c
 11483   01229A  5058               	movf	(_activeTrack@mountainStationInbound$F3654+1)^0,w,c
 11484   01229C  22DA               	addwfc	fsr2h,f,c
 11485   01229E  50DF               	movf	indf2,w,c
 11486   0122A0  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
 11487   0122A2  EE20 F002          	lfsr	2,2
 11488   0122A6  5057               	movf	_activeTrack@mountainStationInbound$F3654^0,w,c
 11489   0122A8  26D9               	addwf	fsr2l,f,c
 11490   0122AA  5058               	movf	(_activeTrack@mountainStationInbound$F3654+1)^0,w,c
 11491   0122AC  22DA               	addwfc	fsr2h,f,c
 11492   0122AE  50DF               	movf	indf2,w,c
 11493   0122B0  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
 11494   0122B2  C02B  FFD9         	movff	MOUNTAINxSTATIONxINBOUND@self,fsr2l
 11495   0122B6  C02C  FFDA         	movff	MOUNTAINxSTATIONxINBOUND@self+1,fsr2h
 11496   0122BA  50DF               	movf	indf2,w,c
 11497   0122BC  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
 11498   0122C0  D133               	goto	l15249
 11499   0122C2                     l15215:
 11500                           
 11501                           ;mountainStationInbound.c: 73:             activeTrack->stnSequence = SEQ_IDLE;
 11502   0122C2  EE20 F002          	lfsr	2,2
 11503   0122C6  5057               	movf	_activeTrack@mountainStationInbound$F3654^0,w,c
 11504   0122C8  26D9               	addwf	fsr2l,f,c
 11505   0122CA  5058               	movf	(_activeTrack@mountainStationInbound$F3654+1)^0,w,c
 11506   0122CC  22DA               	addwfc	fsr2h,f,c
 11507   0122CE  0E79               	movlw	121
 11508   0122D0  6EDF               	movwf	indf2,c
 11509                           
 11510                           ;mountainStationInbound.c: 74:             activeTrack->stnState = STN_WAIT;
 11511   0122D2  EE20 F001          	lfsr	2,1
 11512   0122D6  5057               	movf	_activeTrack@mountainStationInbound$F3654^0,w,c
 11513   0122D8  26D9               	addwf	fsr2l,f,c
 11514   0122DA  5058               	movf	(_activeTrack@mountainStationInbound$F3654+1)^0,w,c
 11515   0122DC  22DA               	addwfc	fsr2h,f,c
 11516   0122DE  0E77               	movlw	119
 11517   0122E0  6EDF               	movwf	indf2,c
 11518                           
 11519                           ;mountainStationInbound.c: 75:             activeTrack->tCountTime = GETxMILLIS();
 11520   0122E2  EC50  F0C1         	call	_GETxMILLIS	;wreg free
 11521   0122E6  EE20 F008          	lfsr	2,8
 11522   0122EA  5057               	movf	_activeTrack@mountainStationInbound$F3654^0,w,c
 11523   0122EC  26D9               	addwf	fsr2l,f,c
 11524   0122EE  5058               	movf	(_activeTrack@mountainStationInbound$F3654+1)^0,w,c
 11525   0122F0  22DA               	addwfc	fsr2h,f,c
 11526   0122F2  C005  FFDE         	movff	?_GETxMILLIS,postinc2
 11527   0122F6  C006  FFDE         	movff	?_GETxMILLIS+1,postinc2
 11528   0122FA  C007  FFDE         	movff	?_GETxMILLIS+2,postinc2
 11529   0122FE  C008  FFDE         	movff	?_GETxMILLIS+3,postinc2
 11530   012302  EC10  F0C1         	call	_GETxRANDOMxNUMBER	;wreg free
 11531   012306  90D8               	bcf	status,0,c
 11532   012308  3617               	rlcf	?_GETxRANDOMxNUMBER^0,f,c
 11533   01230A  3618               	rlcf	(?_GETxRANDOMxNUMBER+1)^0,f,c
 11534   01230C  90D8               	bcf	status,0,c
 11535   01230E  3617               	rlcf	?_GETxRANDOMxNUMBER^0,f,c
 11536   012310  3618               	rlcf	(?_GETxRANDOMxNUMBER+1)^0,f,c
 11537   012312  90D8               	bcf	status,0,c
 11538   012314  3617               	rlcf	?_GETxRANDOMxNUMBER^0,f,c
 11539   012316  3618               	rlcf	(?_GETxRANDOMxNUMBER+1)^0,f,c
 11540   012318  5017               	movf	?_GETxRANDOMxNUMBER^0,w,c
 11541   01231A  6E2D               	movwf	??_MOUNTAINxSTATIONxINBOUND^0,c
 11542   01231C  5018               	movf	(?_GETxRANDOMxNUMBER+1)^0,w,c
 11543   01231E  6E2E               	movwf	(??_MOUNTAINxSTATIONxINBOUND+1)^0,c
 11544   012320  6A2F               	clrf	(??_MOUNTAINxSTATIONxINBOUND+2)^0,c
 11545   012322  6A30               	clrf	(??_MOUNTAINxSTATIONxINBOUND+3)^0,c
 11546   012324  0EA0               	movlw	160
 11547   012326  242D               	addwf	??_MOUNTAINxSTATIONxINBOUND^0,w,c
 11548   012328  6E31               	movwf	(??_MOUNTAINxSTATIONxINBOUND+4)^0,c
 11549   01232A  0E86               	movlw	134
 11550   01232C  202E               	addwfc	(??_MOUNTAINxSTATIONxINBOUND+1)^0,w,c
 11551   01232E  6E32               	movwf	(??_MOUNTAINxSTATIONxINBOUND+5)^0,c
 11552   012330  0E01               	movlw	1
 11553   012332  202F               	addwfc	(??_MOUNTAINxSTATIONxINBOUND+2)^0,w,c
 11554   012334  6E33               	movwf	(??_MOUNTAINxSTATIONxINBOUND+6)^0,c
 11555   012336  0E00               	movlw	0
 11556   012338  2030               	addwfc	(??_MOUNTAINxSTATIONxINBOUND+3)^0,w,c
 11557   01233A  6E34               	movwf	(??_MOUNTAINxSTATIONxINBOUND+7)^0,c
 11558   01233C  EE20 F00C          	lfsr	2,12
 11559   012340  5057               	movf	_activeTrack@mountainStationInbound$F3654^0,w,c
 11560   012342  26D9               	addwf	fsr2l,f,c
 11561   012344  5058               	movf	(_activeTrack@mountainStationInbound$F3654+1)^0,w,c
 11562   012346  22DA               	addwfc	fsr2h,f,c
 11563   012348  C031  FFDE         	movff	??_MOUNTAINxSTATIONxINBOUND+4,postinc2
 11564   01234C  C032  FFDE         	movff	??_MOUNTAINxSTATIONxINBOUND+5,postinc2
 11565   012350  C033  FFDE         	movff	??_MOUNTAINxSTATIONxINBOUND+6,postinc2
 11566   012354  C034  FFDE         	movff	??_MOUNTAINxSTATIONxINBOUND+7,postinc2
 11567                           
 11568                           ; BSR set to: 1
 11569                           ;mountainStationInbound.c: 77:             activeTrack->getTrainEnterStnTrack->value = 0
      +                          ;
 11570   012358  EE20 F004          	lfsr	2,4
 11571   01235C  5057               	movf	_activeTrack@mountainStationInbound$F3654^0,w,c
 11572   01235E  26D9               	addwf	fsr2l,f,c
 11573   012360  5058               	movf	(_activeTrack@mountainStationInbound$F3654+1)^0,w,c
 11574   012362  22DA               	addwfc	fsr2h,f,c
 11575   012364  EE10 F00B          	lfsr	1,11
 11576   012368  50DE               	movf	postinc2,w,c
 11577   01236A  26E1               	addwf	fsr1l,f,c
 11578   01236C  50DD               	movf	postdec2,w,c
 11579   01236E  22E2               	addwfc	fsr1h,f,c
 11580   012370  6AE7               	clrf	indf1,c
 11581                           
 11582                           ; BSR set to: 1
 11583                           ;mountainStationInbound.c: 78:             self->getTrainEnterSiebwaldeStn->value = 0;
 11584   012372  EE20 F006          	lfsr	2,6
 11585   012376  502B               	movf	MOUNTAINxSTATIONxINBOUND@self^0,w,c
 11586   012378  26D9               	addwf	fsr2l,f,c
 11587   01237A  502C               	movf	(MOUNTAINxSTATIONxINBOUND@self+1)^0,w,c
 11588   01237C  22DA               	addwfc	fsr2h,f,c
 11589   01237E  EE10 F00B          	lfsr	1,11
 11590   012382  50DE               	movf	postinc2,w,c
 11591   012384  26E1               	addwf	fsr1l,f,c
 11592   012386  50DD               	movf	postdec2,w,c
 11593   012388  22E2               	addwfc	fsr1h,f,c
 11594   01238A  6AE7               	clrf	indf1,c
 11595                           
 11596                           ; BSR set to: 1
 11597                           ;mountainStationInbound.c: 79:             self->LastInboundStn = activeTrack->trackNr;
 11598   01238C  EE20 F007          	lfsr	2,7
 11599   012390  5057               	movf	_activeTrack@mountainStationInbound$F3654^0,w,c
 11600   012392  26D9               	addwf	fsr2l,f,c
 11601   012394  5058               	movf	(_activeTrack@mountainStationInbound$F3654+1)^0,w,c
 11602   012396  22DA               	addwfc	fsr2h,f,c
 11603   012398  EE10 F003          	lfsr	1,3
 11604   01239C  502B               	movf	MOUNTAINxSTATIONxINBOUND@self^0,w,c
 11605   01239E  26E1               	addwf	fsr1l,f,c
 11606   0123A0  502C               	movf	(MOUNTAINxSTATIONxINBOUND@self+1)^0,w,c
 11607   0123A2  22E2               	addwfc	fsr1h,f,c
 11608   0123A4  CFDF FFE7          	movff	indf2,indf1
 11609                           
 11610                           ; BSR set to: 1
 11611                           ;mountainStationInbound.c: 80:             CREATExTASKxSTATUSxMESSAGE(self->name,
 11612   0123A8  C057  FFD9         	movff	_activeTrack@mountainStationInbound$F3654,fsr2l
 11613   0123AC  C058  FFDA         	movff	_activeTrack@mountainStationInbound$F3654+1,fsr2h
 11614   0123B0  50DF               	movf	indf2,w,c
 11615   0123B2  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
 11616   0123B4  EE20 F001          	lfsr	2,1
 11617   0123B8  5057               	movf	_activeTrack@mountainStationInbound$F3654^0,w,c
 11618   0123BA  26D9               	addwf	fsr2l,f,c
 11619   0123BC  5058               	movf	(_activeTrack@mountainStationInbound$F3654+1)^0,w,c
 11620   0123BE  22DA               	addwfc	fsr2h,f,c
 11621   0123C0  50DF               	movf	indf2,w,c
 11622   0123C2  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
 11623   0123C4  EE20 F002          	lfsr	2,2
 11624   0123C8  5057               	movf	_activeTrack@mountainStationInbound$F3654^0,w,c
 11625   0123CA  26D9               	addwf	fsr2l,f,c
 11626   0123CC  5058               	movf	(_activeTrack@mountainStationInbound$F3654+1)^0,w,c
 11627   0123CE  22DA               	addwfc	fsr2h,f,c
 11628   0123D0  50DF               	movf	indf2,w,c
 11629   0123D2  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
 11630   0123D4  C02B  FFD9         	movff	MOUNTAINxSTATIONxINBOUND@self,fsr2l
 11631   0123D8  C02C  FFDA         	movff	MOUNTAINxSTATIONxINBOUND@self+1,fsr2h
 11632   0123DC  50DF               	movf	indf2,w,c
 11633   0123DE  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
 11634                           
 11635                           ; BSR set to: 1
 11636                           ;mountainStationInbound.c: 84:             CREATExTASKxSTATUSxMESSAGE(self->name,
 11637   0123E2  C057  FFD9         	movff	_activeTrack@mountainStationInbound$F3654,fsr2l
 11638   0123E6  C058  FFDA         	movff	_activeTrack@mountainStationInbound$F3654+1,fsr2h
 11639   0123EA  50DF               	movf	indf2,w,c
 11640   0123EC  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
 11641   0123EE  0E84               	movlw	132
 11642   0123F0  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
 11643   0123F2  EE20 F00C          	lfsr	2,12
 11644   0123F6  5057               	movf	_activeTrack@mountainStationInbound$F3654^0,w,c
 11645   0123F8  26D9               	addwf	fsr2l,f,c
 11646   0123FA  5058               	movf	(_activeTrack@mountainStationInbound$F3654+1)^0,w,c
 11647   0123FC  22DA               	addwfc	fsr2h,f,c
 11648   0123FE  CFDE F005          	movff	postinc2,___lldiv@dividend
 11649   012402  CFDE F006          	movff	postinc2,___lldiv@dividend+1
 11650   012406  CFDE F007          	movff	postinc2,___lldiv@dividend+2
 11651   01240A  CFDE F008          	movff	postinc2,___lldiv@dividend+3
 11652   01240E  0EE8               	movlw	232
 11653   012410  6E09               	movwf	___lldiv@divisor^0,c
 11654   012412  0E03               	movlw	3
 11655   012414  6E0A               	movwf	(___lldiv@divisor+1)^0,c
 11656   012416  0E00               	movlw	0
 11657   012418  6E0B               	movwf	(___lldiv@divisor+2)^0,c
 11658   01241A  0E00               	movlw	0
 11659   01241C  6E0C               	movwf	(___lldiv@divisor+3)^0,c
 11660   01241E  ECBA  F0B8         	call	___lldiv	;wreg free
 11661   012422  5005               	movf	?___lldiv^0,w,c
 11662   012424  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
 11663   012426  C02B  FFD9         	movff	MOUNTAINxSTATIONxINBOUND@self,fsr2l
 11664   01242A  C02C  FFDA         	movff	MOUNTAINxSTATIONxINBOUND@self+1,fsr2h
 11665   01242E  50DF               	movf	indf2,w,c
 11666   012430  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
 11667                           
 11668                           ; BSR set to: 1
 11669                           ;mountainStationInbound.c: 89:             activeTrack = 0;
 11670   012434  0E00               	movlw	0
 11671   012436  6E57               	movwf	_activeTrack@mountainStationInbound$F3654^0,c
 11672   012438  0E00               	movlw	0
 11673   01243A  6E58               	movwf	(_activeTrack@mountainStationInbound$F3654+1)^0,c
 11674   01243C  D641               	goto	l15169
 11675   01243E                     l15239:
 11676                           
 11677                           ;mountainStationInbound.c: 95:             if((GETxMILLIS() - activeTrack->tCountTime) >
      +                           activeTrack->tWaitTime){
 11678   01243E  EE20 F008          	lfsr	2,8
 11679   012442  5057               	movf	_activeTrack@mountainStationInbound$F3654^0,w,c
 11680   012444  26D9               	addwf	fsr2l,f,c
 11681   012446  5058               	movf	(_activeTrack@mountainStationInbound$F3654+1)^0,w,c
 11682   012448  22DA               	addwfc	fsr2h,f,c
 11683   01244A  CFDE F02D          	movff	postinc2,??_MOUNTAINxSTATIONxINBOUND
 11684   01244E  CFDE F02E          	movff	postinc2,??_MOUNTAINxSTATIONxINBOUND+1
 11685   012452  CFDE F02F          	movff	postinc2,??_MOUNTAINxSTATIONxINBOUND+2
 11686   012456  CFDE F030          	movff	postinc2,??_MOUNTAINxSTATIONxINBOUND+3
 11687   01245A  EC50  F0C1         	call	_GETxMILLIS	;wreg free
 11688   01245E  502D               	movf	??_MOUNTAINxSTATIONxINBOUND^0,w,c
 11689   012460  5C05               	subwf	?_GETxMILLIS^0,w,c
 11690   012462  6E31               	movwf	(??_MOUNTAINxSTATIONxINBOUND+4)^0,c
 11691   012464  502E               	movf	(??_MOUNTAINxSTATIONxINBOUND+1)^0,w,c
 11692   012466  5806               	subwfb	(?_GETxMILLIS+1)^0,w,c
 11693   012468  6E32               	movwf	(??_MOUNTAINxSTATIONxINBOUND+5)^0,c
 11694   01246A  502F               	movf	(??_MOUNTAINxSTATIONxINBOUND+2)^0,w,c
 11695   01246C  5807               	subwfb	(?_GETxMILLIS+2)^0,w,c
 11696   01246E  6E33               	movwf	(??_MOUNTAINxSTATIONxINBOUND+6)^0,c
 11697   012470  5030               	movf	(??_MOUNTAINxSTATIONxINBOUND+3)^0,w,c
 11698   012472  5808               	subwfb	(?_GETxMILLIS+3)^0,w,c
 11699   012474  6E34               	movwf	(??_MOUNTAINxSTATIONxINBOUND+7)^0,c
 11700   012476  EE20 F00C          	lfsr	2,12
 11701   01247A  5057               	movf	_activeTrack@mountainStationInbound$F3654^0,w,c
 11702   01247C  26D9               	addwf	fsr2l,f,c
 11703   01247E  5058               	movf	(_activeTrack@mountainStationInbound$F3654+1)^0,w,c
 11704   012480  22DA               	addwfc	fsr2h,f,c
 11705   012482  5031               	movf	(??_MOUNTAINxSTATIONxINBOUND+4)^0,w,c
 11706   012484  5CDE               	subwf	postinc2,w,c
 11707   012486  5032               	movf	(??_MOUNTAINxSTATIONxINBOUND+5)^0,w,c
 11708   012488  58DE               	subwfb	postinc2,w,c
 11709   01248A  5033               	movf	(??_MOUNTAINxSTATIONxINBOUND+6)^0,w,c
 11710   01248C  58DE               	subwfb	postinc2,w,c
 11711   01248E  5034               	movf	(??_MOUNTAINxSTATIONxINBOUND+7)^0,w,c
 11712   012490  58DE               	subwfb	postinc2,w,c
 11713   012492  B0D8               	btfsc	status,0,c
 11714   012494  D049               	goto	l15249
 11715                           
 11716                           ;mountainStationInbound.c: 96:                 activeTrack->stnSequence = activeTrack->s
      +                          tnNextState;
 11717   012496  EE20 F003          	lfsr	2,3
 11718   01249A  5057               	movf	_activeTrack@mountainStationInbound$F3654^0,w,c
 11719   01249C  26D9               	addwf	fsr2l,f,c
 11720   01249E  5058               	movf	(_activeTrack@mountainStationInbound$F3654+1)^0,w,c
 11721   0124A0  22DA               	addwfc	fsr2h,f,c
 11722   0124A2  EE10 F002          	lfsr	1,2
 11723   0124A6  5057               	movf	_activeTrack@mountainStationInbound$F3654^0,w,c
 11724   0124A8  26E1               	addwf	fsr1l,f,c
 11725   0124AA  5058               	movf	(_activeTrack@mountainStationInbound$F3654+1)^0,w,c
 11726   0124AC  22E2               	addwfc	fsr1h,f,c
 11727   0124AE  CFDF FFE7          	movff	indf2,indf1
 11728                           
 11729                           ;mountainStationInbound.c: 97:                 CREATExTASKxSTATUSxMESSAGE(self->name,
 11730   0124B2  C057  FFD9         	movff	_activeTrack@mountainStationInbound$F3654,fsr2l
 11731   0124B6  C058  FFDA         	movff	_activeTrack@mountainStationInbound$F3654+1,fsr2h
 11732   0124BA  50DF               	movf	indf2,w,c
 11733   0124BC  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
 11734   0124BE  EE20 F001          	lfsr	2,1
 11735   0124C2  5057               	movf	_activeTrack@mountainStationInbound$F3654^0,w,c
 11736   0124C4  26D9               	addwf	fsr2l,f,c
 11737   0124C6  5058               	movf	(_activeTrack@mountainStationInbound$F3654+1)^0,w,c
 11738   0124C8  22DA               	addwfc	fsr2h,f,c
 11739   0124CA  50DF               	movf	indf2,w,c
 11740   0124CC  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
 11741   0124CE  EE20 F002          	lfsr	2,2
 11742   0124D2  5057               	movf	_activeTrack@mountainStationInbound$F3654^0,w,c
 11743   0124D4  26D9               	addwf	fsr2l,f,c
 11744   0124D6  5058               	movf	(_activeTrack@mountainStationInbound$F3654+1)^0,w,c
 11745   0124D8  22DA               	addwfc	fsr2h,f,c
 11746   0124DA  50DF               	movf	indf2,w,c
 11747   0124DC  6E14               	movwf	CREATExTASKxSTATUSxMESSAGE@task_messages^0,c
 11748   0124DE  C02B  FFD9         	movff	MOUNTAINxSTATIONxINBOUND@self,fsr2l
 11749   0124E2  C02C  FFDA         	movff	MOUNTAINxSTATIONxINBOUND@self+1,fsr2h
 11750   0124E6  50DF               	movf	indf2,w,c
 11751   0124E8  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
 11752   0124EC  D01D               	goto	l15249
 11753   0124EE                     l15247:
 11754   0124EE  EE20 F002          	lfsr	2,2
 11755   0124F2  5057               	movf	_activeTrack@mountainStationInbound$F3654^0,w,c
 11756   0124F4  26D9               	addwf	fsr2l,f,c
 11757   0124F6  5058               	movf	(_activeTrack@mountainStationInbound$F3654+1)^0,w,c
 11758   0124F8  22DA               	addwfc	fsr2h,f,c
 11759   0124FA  50DF               	movf	indf2,w,c
 11760   0124FC  6E2D               	movwf	??_MOUNTAINxSTATIONxINBOUND^0,c
 11761   0124FE  6A2E               	clrf	(??_MOUNTAINxSTATIONxINBOUND+1)^0,c
 11762                           
 11763                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11764                           ; Switch size 1, requested type "simple"
 11765                           ; Number of cases is 1, Range of values is 0 to 0
 11766                           ; switch strategies available:
 11767                           ; Name         Instructions Cycles
 11768                           ; simple_byte            4     3 (average)
 11769                           ;	Chosen strategy is simple_byte
 11770   012500  502E               	movf	(??_MOUNTAINxSTATIONxINBOUND+1)^0,w,c
 11771   012502  0A00               	xorlw	0	; case 0
 11772   012504  A4D8               	btfss	status,2,c
 11773   012506  D010               	goto	l15249
 11774                           
 11775                           ; Switch size 1, requested type "simple"
 11776                           ; Number of cases is 5, Range of values is 121 to 127
 11777                           ; switch strategies available:
 11778                           ; Name         Instructions Cycles
 11779                           ; simple_byte           16     9 (average)
 11780                           ;	Chosen strategy is simple_byte
 11781   012508  502D               	movf	??_MOUNTAINxSTATIONxINBOUND^0,w,c
 11782   01250A  0A79               	xorlw	121	; case 121
 11783   01250C  B4D8               	btfsc	status,2,c
 11784   01250E  D5DA               	goto	l15183
 11785   012510  0A03               	xorlw	3	; case 122
 11786   012512  B4D8               	btfsc	status,2,c
 11787   012514  D794               	goto	l15239
 11788   012516  0A01               	xorlw	1	; case 123
 11789   012518  B4D8               	btfsc	status,2,c
 11790   01251A  D62E               	goto	l15195
 11791   01251C  0A07               	xorlw	7	; case 124
 11792   01251E  B4D8               	btfsc	status,2,c
 11793   012520  D65F               	goto	l15201
 11794   012522  0A03               	xorlw	3	; case 127
 11795   012524  B4D8               	btfsc	status,2,c
 11796   012526  D6CD               	goto	l15215
 11797   012528                     l15249:
 11798                           
 11799                           ;mountainStationInbound.c: 107:     return(busy);
 11800   012528  0E64               	movlw	100
 11801   01252A  0012               	return		;funcret
 11802   01252C                     __end_of_MOUNTAINxSTATIONxINBOUND:
 11803                           	callstack 0
 11804                           
 11805 ;; *************** function _SETxOCC *****************
 11806 ;; Defined at:
 11807 ;;		line 7 in file "setocc.c"
 11808 ;; Parameters:    Size  Location     Type
 11809 ;;  self            2    4[COMRAM] PTR struct .
 11810 ;;		 -> LATB(1), NULL(0), LATC(1), REL_T5(3), 
 11811 ;;		 -> REL_T4(3), OCC_TO_T3(3), OCC_TO_T6(3), OCC_TO_STN_12(3), 
 11812 ;;		 -> OCC_TO_STN_11(3), OCC_TO_STN_10(3), OCC_TO_STN_3(3), OCC_TO_STN_2(3), 
 11813 ;;		 -> OCC_TO_STN_1(3), LATJ(1), OCC_TO_9B(3), OCC_TO_21B(3), 
 11814 ;;		 -> PORTE(1), OCC_FR_T3(14), OCC_FR_T6(14), PORTG(1), 
 11815 ;;		 -> HALL_BLK_T8(14), HALL_BLK_T7(14), PORTH(1), HALL_BLK_T2(14), 
 11816 ;;		 -> HALL_BLK_T1(14), PORTF(1), 
 11817 ;;  value           1    6[COMRAM] _Bool 
 11818 ;; Auto vars:     Size  Location     Type
 11819 ;;		None
 11820 ;; Return value:  Size  Location     Type
 11821 ;;                  1    wreg      void 
 11822 ;; Registers used:
 11823 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11824 ;; Tracked objects:
 11825 ;;		On entry : 0/1
 11826 ;;		On exit  : 0/0
 11827 ;;		Unchanged: 0/0
 11828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11829 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11831 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11832 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11833 ;;Total ram usage:        6 bytes
 11834 ;; Hardware stack levels used: 1
 11835 ;; Hardware stack levels required when called: 4
 11836 ;; This function calls:
 11837 ;;		Nothing
 11838 ;; This function is called by:
 11839 ;;		_UPDATExSTATION
 11840 ;;		_MAINxSTATIONxPASSING
 11841 ;;		_MAINxSTATIONxINBOUND
 11842 ;;		_MAINxSTATIONxOUTBOUND
 11843 ;;		_UPDATExMOUNTAINxSTATION
 11844 ;;		_MOUNTAINxSTATIONxINBOUND
 11845 ;;		_MOUNTAINxSTATIONxOUTBOUND
 11846 ;; This function uses a non-reentrant model
 11847 ;;
 11848                           
 11849                           	psect	text13
 11850   017580                     __ptext13:
 11851                           	callstack 0
 11852   017580                     _SETxOCC:
 11853                           	callstack 25
 11854                           
 11855                           ;setocc.c: 7: void SETxOCC(OCC *self, _Bool value);setocc.c: 8: {;setocc.c: 9:     if(va
      +                          lue)
 11856                           
 11857                           ;incstack = 0
 11858   017580  5007               	movf	SETxOCC@value^0,w,c
 11859   017582  B4D8               	btfsc	status,2,c
 11860   017584  D017               	goto	l14551
 11861                           
 11862                           ;setocc.c: 10:     {;setocc.c: 12:         *self->portx_ptr |= self->pin_mask;
 11863   017586  EE20 F002          	lfsr	2,2
 11864   01758A  5005               	movf	SETxOCC@self^0,w,c
 11865   01758C  26D9               	addwf	fsr2l,f,c
 11866   01758E  5006               	movf	(SETxOCC@self+1)^0,w,c
 11867   017590  22DA               	addwfc	fsr2h,f,c
 11868   017592  50DF               	movf	indf2,w,c
 11869   017594  6E08               	movwf	??_SETxOCC^0,c
 11870   017596  C005  FFD9         	movff	SETxOCC@self,fsr2l
 11871   01759A  C006  FFDA         	movff	SETxOCC@self+1,fsr2h
 11872   01759E  CFDE F009          	movff	postinc2,??_SETxOCC+1
 11873   0175A2  CFDD F00A          	movff	postdec2,??_SETxOCC+2
 11874   0175A6  C009  FFD9         	movff	??_SETxOCC+1,fsr2l
 11875   0175AA  C00A  FFDA         	movff	??_SETxOCC+2,fsr2h
 11876   0175AE  5008               	movf	??_SETxOCC^0,w,c
 11877   0175B0  12DF               	iorwf	indf2,f,c
 11878                           
 11879                           ;setocc.c: 13:     }
 11880   0175B2  0012               	return	
 11881   0175B4                     l14551:
 11882                           
 11883                           ;setocc.c: 16:         *self->portx_ptr &= ~self->pin_mask;
 11884   0175B4  EE20 F002          	lfsr	2,2
 11885   0175B8  5005               	movf	SETxOCC@self^0,w,c
 11886   0175BA  26D9               	addwf	fsr2l,f,c
 11887   0175BC  5006               	movf	(SETxOCC@self+1)^0,w,c
 11888   0175BE  22DA               	addwfc	fsr2h,f,c
 11889   0175C0  50DF               	movf	indf2,w,c
 11890   0175C2  0AFF               	xorlw	255
 11891   0175C4  6E08               	movwf	??_SETxOCC^0,c
 11892   0175C6  C005  FFD9         	movff	SETxOCC@self,fsr2l
 11893   0175CA  C006  FFDA         	movff	SETxOCC@self+1,fsr2h
 11894   0175CE  CFDE F009          	movff	postinc2,??_SETxOCC+1
 11895   0175D2  CFDD F00A          	movff	postdec2,??_SETxOCC+2
 11896   0175D6  C009  FFD9         	movff	??_SETxOCC+1,fsr2l
 11897   0175DA  C00A  FFDA         	movff	??_SETxOCC+2,fsr2h
 11898   0175DE  5008               	movf	??_SETxOCC^0,w,c
 11899   0175E0  16DF               	andwf	indf2,f,c
 11900   0175E2  0012               	return		;funcret
 11901   0175E4                     __end_of_SETxOCC:
 11902                           	callstack 0
 11903                           
 11904 ;; *************** function _SETxMNTSTATIONxPATHWAY *****************
 11905 ;; Defined at:
 11906 ;;		line 113 in file "pathway.c"
 11907 ;; Parameters:    Size  Location     Type
 11908 ;;  self            2   33[COMRAM] PTR struct .
 11909 ;;		 -> waldberg(54), waldsee(54), 
 11910 ;;  path            1   35[COMRAM] enum E5060
 11911 ;; Auto vars:     Size  Location     Type
 11912 ;;  pin1            1   41[COMRAM] unsigned char 
 11913 ;; Return value:  Size  Location     Type
 11914 ;;                  1    wreg      void 
 11915 ;; Registers used:
 11916 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11917 ;; Tracked objects:
 11918 ;;		On entry : 0/1
 11919 ;;		On exit  : 3F/1
 11920 ;;		Unchanged: 0/0
 11921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11922 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11923 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11924 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11925 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11926 ;;Total ram usage:        9 bytes
 11927 ;; Hardware stack levels used: 1
 11928 ;; Hardware stack levels required when called: 6
 11929 ;; This function calls:
 11930 ;;		_CREATExTASKxSTATUSxMESSAGE
 11931 ;; This function is called by:
 11932 ;;		_UPDATExMOUNTAINxSTATION
 11933 ;;		_MOUNTAINxSTATIONxINBOUND
 11934 ;;		_MOUNTAINxSTATIONxOUTBOUND
 11935 ;; This function uses a non-reentrant model
 11936 ;;
 11937                           
 11938                           	psect	text14
 11939   016840                     __ptext14:
 11940                           	callstack 0
 11941   016840                     _SETxMNTSTATIONxPATHWAY:
 11942                           	callstack 23
 11943                           
 11944                           ;incstack = 0
 11945   016840  EE20 F00C          	lfsr	2,12
 11946   016844  5022               	movf	SETxMNTSTATIONxPATHWAY@self^0,w,c
 11947   016846  26D9               	addwf	fsr2l,f,c
 11948   016848  5023               	movf	(SETxMNTSTATIONxPATHWAY@self+1)^0,w,c
 11949   01684A  22DA               	addwfc	fsr2h,f,c
 11950   01684C  EE10 F002          	lfsr	1,2
 11951   016850  50DE               	movf	postinc2,w,c
 11952   016852  26E1               	addwf	fsr1l,f,c
 11953   016854  50DD               	movf	postdec2,w,c
 11954   016856  22E2               	addwfc	fsr1h,f,c
 11955   016858  50E7               	movf	indf1,w,c
 11956   01685A  6E2A               	movwf	SETxMNTSTATIONxPATHWAY@pin1^0,c
 11957   01685C  0E97               	movlw	151
 11958   01685E  1824               	xorwf	SETxMNTSTATIONxPATHWAY@path^0,w,c
 11959   016860  B4D8               	btfsc	status,2,c
 11960   016862  D008               	goto	u12990
 11961   016864  0E98               	movlw	152
 11962   016866  1824               	xorwf	SETxMNTSTATIONxPATHWAY@path^0,w,c
 11963   016868  B4D8               	btfsc	status,2,c
 11964   01686A  D021               	goto	u13000
 11965   01686C  0E9D               	movlw	157
 11966   01686E  1824               	xorwf	SETxMNTSTATIONxPATHWAY@path^0,w,c
 11967   016870  A4D8               	btfss	status,2,c
 11968   016872  D019               	goto	l14541
 11969   016874                     u12990:
 11970   016874  EE20 F00C          	lfsr	2,12
 11971   016878  5022               	movf	SETxMNTSTATIONxPATHWAY@self^0,w,c
 11972   01687A  26D9               	addwf	fsr2l,f,c
 11973   01687C  5023               	movf	(SETxMNTSTATIONxPATHWAY@self+1)^0,w,c
 11974   01687E  22DA               	addwfc	fsr2h,f,c
 11975   016880  CFDE F025          	movff	postinc2,??_SETxMNTSTATIONxPATHWAY
 11976   016884  CFDD F026          	movff	postdec2,??_SETxMNTSTATIONxPATHWAY+1
 11977   016888  C025  FFD9         	movff	??_SETxMNTSTATIONxPATHWAY,fsr2l
 11978   01688C  C026  FFDA         	movff	??_SETxMNTSTATIONxPATHWAY+1,fsr2h
 11979   016890  CFDE F027          	movff	postinc2,??_SETxMNTSTATIONxPATHWAY+2
 11980   016894  CFDD F028          	movff	postdec2,??_SETxMNTSTATIONxPATHWAY+3
 11981   016898  C027  FFD9         	movff	??_SETxMNTSTATIONxPATHWAY+2,fsr2l
 11982   01689C  C028  FFDA         	movff	??_SETxMNTSTATIONxPATHWAY+3,fsr2h
 11983   0168A0  502A               	movf	SETxMNTSTATIONxPATHWAY@pin1^0,w,c
 11984   0168A2  12DF               	iorwf	indf2,f,c
 11985   0168A4  D01F               	goto	l227
 11986   0168A6                     l14541:
 11987   0168A6  0E9E               	movlw	158
 11988   0168A8  1824               	xorwf	SETxMNTSTATIONxPATHWAY@path^0,w,c
 11989   0168AA  A4D8               	btfss	status,2,c
 11990   0168AC  D01B               	goto	l227
 11991   0168AE                     u13000:
 11992   0168AE  502A               	movf	SETxMNTSTATIONxPATHWAY@pin1^0,w,c
 11993   0168B0  0AFF               	xorlw	255
 11994   0168B2  6E25               	movwf	??_SETxMNTSTATIONxPATHWAY^0,c
 11995   0168B4  EE20 F00C          	lfsr	2,12
 11996   0168B8  5022               	movf	SETxMNTSTATIONxPATHWAY@self^0,w,c
 11997   0168BA  26D9               	addwf	fsr2l,f,c
 11998   0168BC  5023               	movf	(SETxMNTSTATIONxPATHWAY@self+1)^0,w,c
 11999   0168BE  22DA               	addwfc	fsr2h,f,c
 12000   0168C0  CFDE F026          	movff	postinc2,??_SETxMNTSTATIONxPATHWAY+1
 12001   0168C4  CFDD F027          	movff	postdec2,??_SETxMNTSTATIONxPATHWAY+2
 12002   0168C8  C026  FFD9         	movff	??_SETxMNTSTATIONxPATHWAY+1,fsr2l
 12003   0168CC  C027  FFDA         	movff	??_SETxMNTSTATIONxPATHWAY+2,fsr2h
 12004   0168D0  CFDE F028          	movff	postinc2,??_SETxMNTSTATIONxPATHWAY+3
 12005   0168D4  CFDD F029          	movff	postdec2,??_SETxMNTSTATIONxPATHWAY+4
 12006   0168D8  C028  FFD9         	movff	??_SETxMNTSTATIONxPATHWAY+3,fsr2l
 12007   0168DC  C029  FFDA         	movff	??_SETxMNTSTATIONxPATHWAY+4,fsr2h
 12008   0168E0  5025               	movf	??_SETxMNTSTATIONxPATHWAY^0,w,c
 12009   0168E2  16DF               	andwf	indf2,f,c
 12010   0168E4                     l227:
 12011   0168E4  0E85               	movlw	133
 12012   0168E6  6E12               	movwf	CREATExTASKxSTATUSxMESSAGE@task_command^0,c
 12013   0168E8  C022  FFD9         	movff	SETxMNTSTATIONxPATHWAY@self,fsr2l
 12014   0168EC  C023  FFDA         	movff	SETxMNTSTATIONxPATHWAY@self+1,fsr2h
 12015   0168F0  50DF               	movf	indf2,w,c
 12016   0168F2  6E13               	movwf	CREATExTASKxSTATUSxMESSAGE@task_state^0,c
 12017   0168F4  C024  F014         	movff	SETxMNTSTATIONxPATHWAY@path,CREATExTASKxSTATUSxMESSAGE@task_messages
 12018   0168F8  C022  FFD9         	movff	SETxMNTSTATIONxPATHWAY@self,fsr2l
 12019   0168FC  C023  FFDA         	movff	SETxMNTSTATIONxPATHWAY@self+1,fsr2h
 12020   016900  50DF               	movf	indf2,w,c
 12021   016902  ECFD  F0BD         	call	_CREATExTASKxSTATUSxMESSAGE
 12022                           
 12023                           ; BSR set to: 1
 12024   016906  0012               	return		;funcret
 12025   016908                     __end_of_SETxMNTSTATIONxPATHWAY:
 12026                           	callstack 0
 12027                           
 12028 ;; *************** function _CREATExTASKxSTATUSxMESSAGE *****************
 12029 ;; Defined at:
 12030 ;;		line 191 in file "communication.c"
 12031 ;; Parameters:    Size  Location     Type
 12032 ;;  task_id         1    wreg     unsigned char 
 12033 ;;  task_command    1   17[COMRAM] unsigned char 
 12034 ;;  task_state      1   18[COMRAM] unsigned char 
 12035 ;;  task_message    1   19[COMRAM] unsigned char 
 12036 ;; Auto vars:     Size  Location     Type
 12037 ;;  task_id         1   21[COMRAM] unsigned char 
 12038 ;;  StatusMessag   10   23[COMRAM] struct .
 12039 ;;  i               1   22[COMRAM] unsigned char 
 12040 ;; Return value:  Size  Location     Type
 12041 ;;                  1    wreg      void 
 12042 ;; Registers used:
 12043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12044 ;; Tracked objects:
 12045 ;;		On entry : 0/1
 12046 ;;		On exit  : 3F/1
 12047 ;;		Unchanged: 0/0
 12048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12049 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12050 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12051 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12052 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12053 ;;Total ram usage:       16 bytes
 12054 ;; Hardware stack levels used: 1
 12055 ;; Hardware stack levels required when called: 5
 12056 ;; This function calls:
 12057 ;;		_PUTxDATAxINxSENDxMAILxBOX
 12058 ;; This function is called by:
 12059 ;;		_SETxSTATIONxPATHWAY
 12060 ;;		_SETxMNTSTATIONxPATHWAY
 12061 ;;		_UPDATExSTATION
 12062 ;;		_UPDATExSTATIONxTRAINxWAIT
 12063 ;;		_MAINxSTATIONxPASSING
 12064 ;;		_MAINxSTATIONxINBOUND
 12065 ;;		_MAINxSTATIONxOUTBOUND
 12066 ;;		_SETxSIGNAL
 12067 ;;		_UPDATExMOUNTAINxSTATION
 12068 ;;		_UPDATExMOUNTAINxTRAINxWAIT
 12069 ;;		_MOUNTAINxSTATIONxINBOUND
 12070 ;;		_MOUNTAINxSTATIONxOUTBOUND
 12071 ;;		_main
 12072 ;; This function uses a non-reentrant model
 12073 ;;
 12074                           
 12075                           	psect	text15
 12076   017BFA                     __ptext15:
 12077                           	callstack 0
 12078   017BFA                     _CREATExTASKxSTATUSxMESSAGE:
 12079                           	callstack 24
 12080                           
 12081                           ; BSR set to: 1
 12082                           ;incstack = 0
 12083                           ;CREATExTASKxSTATUSxMESSAGE@task_id stored from wreg
 12084   017BFA  6E16               	movwf	CREATExTASKxSTATUSxMESSAGE@task_id^0,c
 12085                           
 12086                           ;communication.c: 193:     udpTrans_t StatusMessage;;communication.c: 195:     StatusMes
      +                          sage.header = (uint8_t)HEADER;
 12087   017BFC  0EAA               	movlw	170
 12088   017BFE  6E18               	movwf	CREATExTASKxSTATUSxMESSAGE@StatusMessage^0,c
 12089                           
 12090                           ;communication.c: 196:     StatusMessage.command = (uint8_t)task_id;
 12091   017C00  C016  F019         	movff	CREATExTASKxSTATUSxMESSAGE@task_id,CREATExTASKxSTATUSxMESSAGE@StatusMessage+1
 12092                           
 12093                           ;communication.c: 197:     StatusMessage.data[0] = (uint8_t)task_command;
 12094   017C04  C012  F01A         	movff	CREATExTASKxSTATUSxMESSAGE@task_command,CREATExTASKxSTATUSxMESSAGE@StatusMessage+
      +                          2
 12095                           
 12096                           ;communication.c: 198:     StatusMessage.data[1] = (uint8_t)task_state;
 12097   017C08  C013  F01B         	movff	CREATExTASKxSTATUSxMESSAGE@task_state,CREATExTASKxSTATUSxMESSAGE@StatusMessage+3
 12098                           
 12099                           ;communication.c: 199:     StatusMessage.data[2] = (uint8_t)task_messages;
 12100   017C0C  C014  F01C         	movff	CREATExTASKxSTATUSxMESSAGE@task_messages,CREATExTASKxSTATUSxMESSAGE@StatusMessage
      +                          +4
 12101                           
 12102                           ;communication.c: 203:     for(i=3; i < sizeof(StatusMessage.data); i++){
 12103   017C10  0E03               	movlw	3
 12104   017C12  6E17               	movwf	CREATExTASKxSTATUSxMESSAGE@i^0,c
 12105   017C14                     l14067:
 12106                           
 12107                           ;communication.c: 204:         StatusMessage.data[i] = 0;
 12108   017C14  C017  F015         	movff	CREATExTASKxSTATUSxMESSAGE@i,??_CREATExTASKxSTATUSxMESSAGE
 12109   017C18  0E02               	movlw	2
 12110   017C1A  2615               	addwf	??_CREATExTASKxSTATUSxMESSAGE^0,f,c
 12111   017C1C  5015               	movf	??_CREATExTASKxSTATUSxMESSAGE^0,w,c
 12112   017C1E  0F18               	addlw	low CREATExTASKxSTATUSxMESSAGE@StatusMessage
 12113   017C20  6ED9               	movwf	fsr2l,c
 12114   017C22  6ADA               	clrf	fsr2h,c
 12115   017C24  6ADF               	clrf	indf2,c
 12116                           
 12117                           ;communication.c: 205:     }
 12118   017C26  2A17               	incf	CREATExTASKxSTATUSxMESSAGE@i^0,f,c
 12119   017C28  0E07               	movlw	7
 12120   017C2A  6417               	cpfsgt	CREATExTASKxSTATUSxMESSAGE@i^0,c
 12121   017C2C  D7F3               	goto	l14067
 12122                           
 12123                           ;communication.c: 206:     PUTxDATAxINxSENDxMAILxBOX(&StatusMessage);
 12124   017C2E  0E18               	movlw	low CREATExTASKxSTATUSxMESSAGE@StatusMessage
 12125   017C30  6E05               	movwf	PUTxDATAxINxSENDxMAILxBOX@data^0,c
 12126   017C32  6A06               	clrf	(PUTxDATAxINxSENDxMAILxBOX@data+1)^0,c
 12127   017C34  EC28  F0BD         	call	_PUTxDATAxINxSENDxMAILxBOX	;wreg free
 12128                           
 12129                           ; BSR set to: 1
 12130   017C38  0012               	return		;funcret
 12131   017C3A                     __end_of_CREATExTASKxSTATUSxMESSAGE:
 12132                           	callstack 0
 12133                           
 12134 ;; *************** function _PUTxDATAxINxSENDxMAILxBOX *****************
 12135 ;; Defined at:
 12136 ;;		line 348 in file "communication.c"
 12137 ;; Parameters:    Size  Location     Type
 12138 ;;  data            2    4[COMRAM] PTR struct .
 12139 ;;		 -> StatusMessage(10), DataMessage(10), CREATExDATAxMESSAGE@StatusMessage(10), CREATExTASKxSTATUSxMESSAGE@StatusMess
      +age(10), 
 12140 ;; Auto vars:     Size  Location     Type
 12141 ;;		None
 12142 ;; Return value:  Size  Location     Type
 12143 ;;                  1    wreg      void 
 12144 ;; Registers used:
 12145 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 12146 ;; Tracked objects:
 12147 ;;		On entry : 0/0
 12148 ;;		On exit  : 3F/1
 12149 ;;		Unchanged: 0/0
 12150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12151 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12153 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12154 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12155 ;;Total ram usage:        4 bytes
 12156 ;; Hardware stack levels used: 1
 12157 ;; Hardware stack levels required when called: 4
 12158 ;; This function calls:
 12159 ;;		Nothing
 12160 ;; This function is called by:
 12161 ;;		_CREATExTASKxSTATUSxMESSAGE
 12162 ;;		_main
 12163 ;; This function uses a non-reentrant model
 12164 ;;
 12165                           
 12166                           	psect	text16
 12167   017A50                     __ptext16:
 12168                           	callstack 0
 12169   017A50                     _PUTxDATAxINxSENDxMAILxBOX:
 12170                           	callstack 24
 12171                           
 12172                           ;communication.c: 351:     *M_Box_Eth_Send_Ptr = *data;
 12173                           
 12174                           ; BSR set to: 1
 12175                           ;incstack = 0
 12176   017A50  C005  FFD9         	movff	PUTxDATAxINxSENDxMAILxBOX@data,fsr2l
 12177   017A54  C006  FFDA         	movff	PUTxDATAxINxSENDxMAILxBOX@data+1,fsr2h
 12178   017A58  C14F  FFE1         	movff	_M_Box_Eth_Send_Ptr,fsr1l
 12179   017A5C  C150  FFE2         	movff	_M_Box_Eth_Send_Ptr+1,fsr1h
 12180   017A60  0E09               	movlw	9
 12181   017A62                     u11911:
 12182   017A62  CFDB FFE3          	movff	plusw2,plusw1
 12183   017A66  06E8               	decf	wreg,f,c
 12184   017A68  E2FC               	bc	u11911
 12185                           
 12186                           ;communication.c: 353:     M_Box_Eth_Send_Ptr++;
 12187   017A6A  0E0A               	movlw	10
 12188   017A6C  0101               	movlb	1	; () banked
 12189   017A6E  274F               	addwf	_M_Box_Eth_Send_Ptr& (0+255),f,b
 12190   017A70  0E00               	movlw	0
 12191   017A72  2350               	addwfc	(_M_Box_Eth_Send_Ptr+1)& (0+255),f,b
 12192                           
 12193                           ; BSR set to: 1
 12194                           ;communication.c: 355:     if(M_Box_Eth_Send_Ptr >= &udpTransBox[8]){
 12195   017A74  0E00               	movlw	low _udpTransBox
 12196   017A76  6E07               	movwf	??_PUTxDATAxINxSENDxMAILxBOX^0,c
 12197   017A78  0E08               	movlw	high _udpTransBox
 12198   017A7A  6E08               	movwf	(??_PUTxDATAxINxSENDxMAILxBOX+1)^0,c
 12199   017A7C  0E50               	movlw	80
 12200   017A7E  2607               	addwf	??_PUTxDATAxINxSENDxMAILxBOX^0,f,c
 12201   017A80  0E00               	movlw	0
 12202   017A82  2208               	addwfc	(??_PUTxDATAxINxSENDxMAILxBOX+1)^0,f,c
 12203   017A84  5007               	movf	??_PUTxDATAxINxSENDxMAILxBOX^0,w,c
 12204   017A86  5D4F               	subwf	_M_Box_Eth_Send_Ptr& (0+255),w,b
 12205   017A88  5008               	movf	(??_PUTxDATAxINxSENDxMAILxBOX+1)^0,w,c
 12206   017A8A  5950               	subwfb	(_M_Box_Eth_Send_Ptr+1)& (0+255),w,b
 12207   017A8C  A0D8               	btfss	status,0,c
 12208   017A8E  0012               	return	
 12209                           
 12210                           ; BSR set to: 1
 12211                           ;communication.c: 357:         M_Box_Eth_Send_Ptr = &udpTransBox[0];
 12212   017A90  0E00               	movlw	low _udpTransBox
 12213   017A92  6F4F               	movwf	_M_Box_Eth_Send_Ptr& (0+255),b
 12214   017A94  0E08               	movlw	high _udpTransBox
 12215   017A96  6F50               	movwf	(_M_Box_Eth_Send_Ptr+1)& (0+255),b
 12216                           
 12217                           ; BSR set to: 1
 12218   017A98  0012               	return		;funcret
 12219   017A9A                     __end_of_PUTxDATAxINxSENDxMAILxBOX:
 12220                           	callstack 0
 12221                           
 12222 ;; *************** function _GETxRANDOMxNUMBER *****************
 12223 ;; Defined at:
 12224 ;;		line 14 in file "rand.c"
 12225 ;; Parameters:    Size  Location     Type
 12226 ;;		None
 12227 ;; Auto vars:     Size  Location     Type
 12228 ;;		None
 12229 ;; Return value:  Size  Location     Type
 12230 ;;                  2   22[COMRAM] unsigned short 
 12231 ;; Registers used:
 12232 ;;		wreg, status,2, status,0, cstack
 12233 ;; Tracked objects:
 12234 ;;		On entry : 0/1
 12235 ;;		On exit  : 3F/1
 12236 ;;		Unchanged: 0/0
 12237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12238 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12241 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12242 ;;Total ram usage:        2 bytes
 12243 ;; Hardware stack levels used: 1
 12244 ;; Hardware stack levels required when called: 6
 12245 ;; This function calls:
 12246 ;;		_rand
 12247 ;; This function is called by:
 12248 ;;		_UPDATExSTATION
 12249 ;;		_UPDATExSTATIONxTRAINxWAIT
 12250 ;;		_MAINxSTATIONxINBOUND
 12251 ;;		_UPDATExMOUNTAINxSTATION
 12252 ;;		_UPDATExMOUNTAINxTRAINxWAIT
 12253 ;;		_MOUNTAINxSTATIONxINBOUND
 12254 ;; This function uses a non-reentrant model
 12255 ;;
 12256                           
 12257                           	psect	text17
 12258   018220                     __ptext17:
 12259                           	callstack 0
 12260   018220                     _GETxRANDOMxNUMBER:
 12261                           	callstack 23
 12262                           
 12263                           ;rand.c: 15:     RandomNumber = (rand() << 1);
 12264                           
 12265                           ; BSR set to: 1
 12266                           ;incstack = 0
 12267   018220  EC25  F0BA         	call	_rand	;wreg free
 12268   018224  90D8               	bcf	status,0,c
 12269   018226  3411               	rlcf	?_rand^0,w,c
 12270   018228  6F3F               	movwf	_RandomNumber& (0+255),b
 12271   01822A  3412               	rlcf	(?_rand+1)^0,w,c
 12272   01822C  6F40               	movwf	(_RandomNumber+1)& (0+255),b
 12273                           
 12274                           ; BSR set to: 1
 12275                           ;rand.c: 16:     return ((uint16_t)RandomNumber);
 12276   01822E  C13F  F017         	movff	_RandomNumber,?_GETxRANDOMxNUMBER
 12277   018232  C140  F018         	movff	_RandomNumber+1,?_GETxRANDOMxNUMBER+1
 12278                           
 12279                           ; BSR set to: 1
 12280   018236  0012               	return		;funcret
 12281   018238                     __end_of_GETxRANDOMxNUMBER:
 12282                           	callstack 0
 12283                           
 12284 ;; *************** function _SYSTEM_Initialize *****************
 12285 ;; Defined at:
 12286 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12287 ;; Parameters:    Size  Location     Type
 12288 ;;		None
 12289 ;; Auto vars:     Size  Location     Type
 12290 ;;		None
 12291 ;; Return value:  Size  Location     Type
 12292 ;;                  1    wreg      void 
 12293 ;; Registers used:
 12294 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12295 ;; Tracked objects:
 12296 ;;		On entry : 0/0
 12297 ;;		On exit  : 0/0
 12298 ;;		Unchanged: 0/0
 12299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12304 ;;Total ram usage:        0 bytes
 12305 ;; Hardware stack levels used: 1
 12306 ;; Hardware stack levels required when called: 14
 12307 ;; This function calls:
 12308 ;;		_INTERRUPT_Initialize
 12309 ;;		_Network_Init
 12310 ;;		_OSCILLATOR_Initialize
 12311 ;;		_PIN_MANAGER_Initialize
 12312 ;;		_TMR0_Initialize
 12313 ;;		_TMR1_Initialize
 12314 ;; This function is called by:
 12315 ;;		_main
 12316 ;; This function uses a non-reentrant model
 12317 ;;
 12318                           
 12319                           	psect	text18
 12320   0181EC                     __ptext18:
 12321                           	callstack 0
 12322   0181EC                     _SYSTEM_Initialize:
 12323                           	callstack 16
 12324                           
 12325                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
 12326                           
 12327                           ; BSR set to: 1
 12328                           ;incstack = 0
 12329   0181EC  ECDE  F0C1         	call	_INTERRUPT_Initialize	;wreg free
 12330                           
 12331                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 12332   0181F0  EC72  F0BD         	call	_PIN_MANAGER_Initialize	;wreg free
 12333                           
 12334                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 12335   0181F4  EC99  F0C1         	call	_OSCILLATOR_Initialize	;wreg free
 12336                           
 12337                           ;mcc_generated_files/mcc.c: 56:     TMR1_Initialize();
 12338   0181F8  EC00  F0C0         	call	_TMR1_Initialize	;wreg free
 12339                           
 12340                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
 12341   0181FC  EC3C  F0BE         	call	_TMR0_Initialize	;wreg free
 12342                           
 12343                           ; BSR set to: 1
 12344                           ;mcc_generated_files/mcc.c: 58:     Network_Init();
 12345   018200  ECAE  F0C0         	call	_Network_Init	;wreg free
 12346   018204  0012               	return		;funcret
 12347   018206                     __end_of_SYSTEM_Initialize:
 12348                           	callstack 0
 12349                           
 12350 ;; *************** function _TMR1_Initialize *****************
 12351 ;; Defined at:
 12352 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 12353 ;; Parameters:    Size  Location     Type
 12354 ;;		None
 12355 ;; Auto vars:     Size  Location     Type
 12356 ;;		None
 12357 ;; Return value:  Size  Location     Type
 12358 ;;                  1    wreg      void 
 12359 ;; Registers used:
 12360 ;;		wreg, status,2, status,0, cstack
 12361 ;; Tracked objects:
 12362 ;;		On entry : 0/0
 12363 ;;		On exit  : 0/0
 12364 ;;		Unchanged: 0/0
 12365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12370 ;;Total ram usage:        0 bytes
 12371 ;; Hardware stack levels used: 1
 12372 ;; Hardware stack levels required when called: 5
 12373 ;; This function calls:
 12374 ;;		_TMR1_SetInterruptHandler
 12375 ;; This function is called by:
 12376 ;;		_SYSTEM_Initialize
 12377 ;; This function uses a non-reentrant model
 12378 ;;
 12379                           
 12380                           	psect	text19
 12381   018000                     __ptext19:
 12382                           	callstack 0
 12383   018000                     _TMR1_Initialize:
 12384                           	callstack 24
 12385                           
 12386                           ;mcc_generated_files/tmr1.c: 69:   TMR1H = 0xFA;
 12387                           
 12388                           ;incstack = 0
 12389   018000  0EFA               	movlw	250
 12390   018002  6ECF               	movwf	207,c	;volatile
 12391                           
 12392                           ;mcc_generated_files/tmr1.c: 72:   TMR1L = 0xEA;
 12393   018004  0EEA               	movlw	234
 12394   018006  6ECE               	movwf	206,c	;volatile
 12395                           
 12396                           ;mcc_generated_files/tmr1.c: 75:     timer1ReloadVal=TMR1;
 12397   018008  CFCE F141          	movff	4046,_timer1ReloadVal	;volatile
 12398   01800C  CFCF F142          	movff	4047,_timer1ReloadVal+1	;volatile
 12399                           
 12400                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
 12401   018010  909E               	bcf	158,0,c	;volatile
 12402                           
 12403                           ;mcc_generated_files/tmr1.c: 81:     PIE1bits.TMR1IE = 1;
 12404   018012  809D               	bsf	157,0,c	;volatile
 12405                           
 12406                           ;mcc_generated_files/tmr1.c: 84:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 12407   018014  0EC2               	movlw	low _TMR1_DefaultInterruptHandler
 12408   018016  6E05               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
 12409   018018  0E83               	movlw	high _TMR1_DefaultInterruptHandler
 12410   01801A  6E06               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
 12411   01801C  0E01               	movlw	low (_TMR1_DefaultInterruptHandler shr (0+16))
 12412   01801E  6E07               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+2)^0,c
 12413   018020  EC85  F0C1         	call	_TMR1_SetInterruptHandler	;wreg free
 12414                           
 12415                           ;mcc_generated_files/tmr1.c: 87:     T1CON = 0x31;
 12416   018024  0E31               	movlw	49
 12417   018026  6ECD               	movwf	205,c	;volatile
 12418   018028  0012               	return		;funcret
 12419   01802A                     __end_of_TMR1_Initialize:
 12420                           	callstack 0
 12421                           
 12422 ;; *************** function _TMR0_Initialize *****************
 12423 ;; Defined at:
 12424 ;;		line 67 in file "mcc_generated_files/tmr0.c"
 12425 ;; Parameters:    Size  Location     Type
 12426 ;;		None
 12427 ;; Auto vars:     Size  Location     Type
 12428 ;;		None
 12429 ;; Return value:  Size  Location     Type
 12430 ;;                  1    wreg      void 
 12431 ;; Registers used:
 12432 ;;		wreg, status,2, status,0, cstack
 12433 ;; Tracked objects:
 12434 ;;		On entry : 0/0
 12435 ;;		On exit  : 3F/1
 12436 ;;		Unchanged: 0/0
 12437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12440 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12441 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12442 ;;Total ram usage:        2 bytes
 12443 ;; Hardware stack levels used: 1
 12444 ;; Hardware stack levels required when called: 5
 12445 ;; This function calls:
 12446 ;;		_TMR0_SetInterruptHandler
 12447 ;; This function is called by:
 12448 ;;		_SYSTEM_Initialize
 12449 ;; This function uses a non-reentrant model
 12450 ;;
 12451                           
 12452                           	psect	text20
 12453   017C78                     __ptext20:
 12454                           	callstack 0
 12455   017C78                     _TMR0_Initialize:
 12456                           	callstack 24
 12457                           
 12458                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
 12459                           
 12460                           ;incstack = 0
 12461   017C78  9CD5               	bcf	213,6,c	;volatile
 12462                           
 12463                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x61;
 12464   017C7A  0E61               	movlw	97
 12465   017C7C  6ED7               	movwf	215,c	;volatile
 12466                           
 12467                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x0D;
 12468   017C7E  0E0D               	movlw	13
 12469   017C80  6ED6               	movwf	214,c	;volatile
 12470                           
 12471                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
 12472   017C82  50D6               	movf	214,w,c	;volatile
 12473   017C84  CFD7 F008          	movff	4055,??_TMR0_Initialize	;volatile
 12474   017C88  6A09               	clrf	(??_TMR0_Initialize+1)^0,c
 12475   017C8A  C008  F009         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
 12476   017C8E  6A08               	clrf	??_TMR0_Initialize^0,c
 12477   017C90  1008               	iorwf	??_TMR0_Initialize^0,w,c
 12478   017C92  0101               	movlb	1	; () banked
 12479   017C94  6F43               	movwf	_timer0ReloadVal& (0+255),b	;volatile
 12480   017C96  5009               	movf	(??_TMR0_Initialize+1)^0,w,c
 12481   017C98  6F44               	movwf	(_timer0ReloadVal+1)& (0+255),b	;volatile
 12482                           
 12483                           ; BSR set to: 1
 12484                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
 12485   017C9A  94F2               	bcf	242,2,c	;volatile
 12486                           
 12487                           ; BSR set to: 1
 12488                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
 12489   017C9C  8AF2               	bsf	242,5,c	;volatile
 12490                           
 12491                           ; BSR set to: 1
 12492                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 12493   017C9E  0EC6               	movlw	low _TMR0_DefaultInterruptHandler
 12494   017CA0  6E05               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
 12495   017CA2  0E83               	movlw	high _TMR0_DefaultInterruptHandler
 12496   017CA4  6E06               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
 12497   017CA6  0E01               	movlw	low (_TMR0_DefaultInterruptHandler shr (0+16))
 12498   017CA8  6E07               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+2)^0,c
 12499   017CAA  EC69  F0C1         	call	_TMR0_SetInterruptHandler	;wreg free
 12500                           
 12501                           ; BSR set to: 1
 12502                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x97;
 12503   017CAE  0E97               	movlw	151
 12504   017CB0  6ED5               	movwf	213,c	;volatile
 12505                           
 12506                           ; BSR set to: 1
 12507   017CB2  0012               	return		;funcret
 12508   017CB4                     __end_of_TMR0_Initialize:
 12509                           	callstack 0
 12510                           
 12511 ;; *************** function _PIN_MANAGER_Initialize *****************
 12512 ;; Defined at:
 12513 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
 12514 ;; Parameters:    Size  Location     Type
 12515 ;;		None
 12516 ;; Auto vars:     Size  Location     Type
 12517 ;;		None
 12518 ;; Return value:  Size  Location     Type
 12519 ;;                  1    wreg      void 
 12520 ;; Registers used:
 12521 ;;		wreg, status,2
 12522 ;; Tracked objects:
 12523 ;;		On entry : 0/0
 12524 ;;		On exit  : 0/0
 12525 ;;		Unchanged: 0/0
 12526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12531 ;;Total ram usage:        0 bytes
 12532 ;; Hardware stack levels used: 1
 12533 ;; Hardware stack levels required when called: 4
 12534 ;; This function calls:
 12535 ;;		Nothing
 12536 ;; This function is called by:
 12537 ;;		_SYSTEM_Initialize
 12538 ;; This function uses a non-reentrant model
 12539 ;;
 12540                           
 12541                           	psect	text21
 12542   017AE4                     __ptext21:
 12543                           	callstack 0
 12544   017AE4                     _PIN_MANAGER_Initialize:
 12545                           	callstack 25
 12546                           
 12547                           ;mcc_generated_files/pin_manager.c: 55:     LATE = 0x00;
 12548                           
 12549                           ; BSR set to: 1
 12550                           ;incstack = 0
 12551   017AE4  0E00               	movlw	0
 12552   017AE6  6E8D               	movwf	141,c	;volatile
 12553                           
 12554                           ;mcc_generated_files/pin_manager.c: 56:     LATJ = 0x00;
 12555   017AE8  0E00               	movlw	0
 12556   017AEA  6E91               	movwf	145,c	;volatile
 12557                           
 12558                           ;mcc_generated_files/pin_manager.c: 57:     LATD = 0x00;
 12559   017AEC  0E00               	movlw	0
 12560   017AEE  6E8C               	movwf	140,c	;volatile
 12561                           
 12562                           ;mcc_generated_files/pin_manager.c: 58:     LATA = 0x00;
 12563   017AF0  0E00               	movlw	0
 12564   017AF2  6E89               	movwf	137,c	;volatile
 12565                           
 12566                           ;mcc_generated_files/pin_manager.c: 59:     LATF = 0x00;
 12567   017AF4  0E00               	movlw	0
 12568   017AF6  6E8E               	movwf	142,c	;volatile
 12569                           
 12570                           ;mcc_generated_files/pin_manager.c: 60:     LATB = 0x00;
 12571   017AF8  0E00               	movlw	0
 12572   017AFA  6E8A               	movwf	138,c	;volatile
 12573                           
 12574                           ;mcc_generated_files/pin_manager.c: 61:     LATG = 0x00;
 12575   017AFC  0E00               	movlw	0
 12576   017AFE  6E8F               	movwf	143,c	;volatile
 12577                           
 12578                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 12579   017B00  0E00               	movlw	0
 12580   017B02  6E8B               	movwf	139,c	;volatile
 12581                           
 12582                           ;mcc_generated_files/pin_manager.c: 63:     LATH = 0x00;
 12583   017B04  0E00               	movlw	0
 12584   017B06  6E90               	movwf	144,c	;volatile
 12585                           
 12586                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0xE0;
 12587   017B08  0EE0               	movlw	224
 12588   017B0A  6E96               	movwf	150,c	;volatile
 12589                           
 12590                           ;mcc_generated_files/pin_manager.c: 69:     TRISF = 0xFF;
 12591   017B0C  6897               	setf	151,c	;volatile
 12592                           
 12593                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x00;
 12594   017B0E  0E00               	movlw	0
 12595   017B10  6E92               	movwf	146,c	;volatile
 12596                           
 12597                           ;mcc_generated_files/pin_manager.c: 71:     TRISG = 0xFF;
 12598   017B12  6898               	setf	152,c	;volatile
 12599                           
 12600                           ;mcc_generated_files/pin_manager.c: 72:     TRISB = 0x00;
 12601   017B14  0E00               	movlw	0
 12602   017B16  6E93               	movwf	147,c	;volatile
 12603                           
 12604                           ;mcc_generated_files/pin_manager.c: 73:     TRISH = 0xFF;
 12605   017B18  6899               	setf	153,c	;volatile
 12606                           
 12607                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0x00;
 12608   017B1A  0E00               	movlw	0
 12609   017B1C  6E94               	movwf	148,c	;volatile
 12610                           
 12611                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0x00;
 12612   017B1E  0E00               	movlw	0
 12613   017B20  6E95               	movwf	149,c	;volatile
 12614                           
 12615                           ;mcc_generated_files/pin_manager.c: 76:     TRISJ = 0x00;
 12616   017B22  0E00               	movlw	0
 12617   017B24  6E9A               	movwf	154,c	;volatile
 12618                           
 12619                           ;mcc_generated_files/pin_manager.c: 81:     ADCON1bits.PCFG = 0x0F;
 12620   017B26  0E0F               	movlw	15
 12621   017B28  12C1               	iorwf	193,f,c	;volatile
 12622   017B2A  0012               	return		;funcret
 12623   017B2C                     __end_of_PIN_MANAGER_Initialize:
 12624                           	callstack 0
 12625                           
 12626 ;; *************** function _OSCILLATOR_Initialize *****************
 12627 ;; Defined at:
 12628 ;;		line 61 in file "mcc_generated_files/mcc.c"
 12629 ;; Parameters:    Size  Location     Type
 12630 ;;		None
 12631 ;; Auto vars:     Size  Location     Type
 12632 ;;		None
 12633 ;; Return value:  Size  Location     Type
 12634 ;;                  1    wreg      void 
 12635 ;; Registers used:
 12636 ;;		wreg, status,2
 12637 ;; Tracked objects:
 12638 ;;		On entry : 0/0
 12639 ;;		On exit  : 0/0
 12640 ;;		Unchanged: 0/0
 12641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12646 ;;Total ram usage:        0 bytes
 12647 ;; Hardware stack levels used: 1
 12648 ;; Hardware stack levels required when called: 4
 12649 ;; This function calls:
 12650 ;;		Nothing
 12651 ;; This function is called by:
 12652 ;;		_SYSTEM_Initialize
 12653 ;; This function uses a non-reentrant model
 12654 ;;
 12655                           
 12656                           	psect	text22
 12657   018332                     __ptext22:
 12658                           	callstack 0
 12659   018332                     _OSCILLATOR_Initialize:
 12660                           	callstack 25
 12661                           
 12662                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x0A;
 12663                           
 12664                           ;incstack = 0
 12665   018332  0E0A               	movlw	10
 12666   018334  6ED3               	movwf	211,c	;volatile
 12667                           
 12668                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0xC0;
 12669   018336  0EC0               	movlw	192
 12670   018338  6E9B               	movwf	155,c	;volatile
 12671   01833A  0012               	return		;funcret
 12672   01833C                     __end_of_OSCILLATOR_Initialize:
 12673                           	callstack 0
 12674                           
 12675 ;; *************** function _Network_Init *****************
 12676 ;; Defined at:
 12677 ;;		line 74 in file "mcc_generated_files/TCPIPLibrary/network.c"
 12678 ;; Parameters:    Size  Location     Type
 12679 ;;		None
 12680 ;; Auto vars:     Size  Location     Type
 12681 ;;		None
 12682 ;; Return value:  Size  Location     Type
 12683 ;;                  1    wreg      void 
 12684 ;; Registers used:
 12685 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12686 ;; Tracked objects:
 12687 ;;		On entry : 3F/1
 12688 ;;		On exit  : 0/0
 12689 ;;		Unchanged: 0/0
 12690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12695 ;;Total ram usage:        0 bytes
 12696 ;; Hardware stack levels used: 1
 12697 ;; Hardware stack levels required when called: 13
 12698 ;; This function calls:
 12699 ;;		_ARPV4_Init
 12700 ;;		_ETH_Init
 12701 ;;		_IPV4_Init
 12702 ;;		_LOG_Init
 12703 ;;		_Network_WaitForLink
 12704 ;;		_rtcc_init
 12705 ;;		_timersInit
 12706 ;; This function is called by:
 12707 ;;		_SYSTEM_Initialize
 12708 ;; This function uses a non-reentrant model
 12709 ;;
 12710                           
 12711                           	psect	text23
 12712   01815C                     __ptext23:
 12713                           	callstack 0
 12714   01815C                     _Network_Init:
 12715                           	callstack 16
 12716                           
 12717                           ; BSR set to: 1
 12718                           ;mcc_generated_files/TCPIPLibrary/network.c: 76:     ETH_Init();
 12719                           
 12720                           ;incstack = 0
 12721   01815C  EC9F  F0AB         	call	_ETH_Init	;wreg free
 12722                           
 12723                           ;mcc_generated_files/TCPIPLibrary/network.c: 77:     ARPV4_Init();
 12724   018160  EC3E  F0C0         	call	_ARPV4_Init	;wreg free
 12725                           
 12726                           ; BSR set to: 14
 12727                           ;mcc_generated_files/TCPIPLibrary/network.c: 78:     IPV4_Init();
 12728   018164  ECD5  F0C1         	call	_IPV4_Init	;wreg free
 12729                           
 12730                           ; BSR set to: 1
 12731                           ;mcc_generated_files/TCPIPLibrary/network.c: 79:     rtcc_init();
 12732   018168  EC8C  F0C0         	call	_rtcc_init	;wreg free
 12733                           
 12734                           ; BSR set to: 1
 12735                           ;mcc_generated_files/TCPIPLibrary/network.c: 80:     Network_WaitForLink();
 12736   01816C  EC59  F0C1         	call	_Network_WaitForLink	;wreg free
 12737                           
 12738                           ; BSR set to: 1
 12739                           ;mcc_generated_files/TCPIPLibrary/network.c: 81:     timersInit();
 12740   018170  ECCC  F0C0         	call	_timersInit	;wreg free
 12741                           
 12742                           ; BSR set to: 1
 12743                           ;mcc_generated_files/TCPIPLibrary/network.c: 82:     LOG_Init();
 12744   018174  ECE5  F0B7         	call	_LOG_Init	;wreg free
 12745   018178  0012               	return		;funcret
 12746   01817A                     __end_of_Network_Init:
 12747                           	callstack 0
 12748                           
 12749 ;; *************** function _timersInit *****************
 12750 ;; Defined at:
 12751 ;;		line 85 in file "mcc_generated_files/TCPIPLibrary/network.c"
 12752 ;; Parameters:    Size  Location     Type
 12753 ;;		None
 12754 ;; Auto vars:     Size  Location     Type
 12755 ;;		None
 12756 ;; Return value:  Size  Location     Type
 12757 ;;                  1    wreg      void 
 12758 ;; Registers used:
 12759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12760 ;; Tracked objects:
 12761 ;;		On entry : 3F/1
 12762 ;;		On exit  : 3F/1
 12763 ;;		Unchanged: 0/0
 12764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12769 ;;Total ram usage:        0 bytes
 12770 ;; Hardware stack levels used: 1
 12771 ;; Hardware stack levels required when called: 5
 12772 ;; This function calls:
 12773 ;;		_time
 12774 ;; This function is called by:
 12775 ;;		_Network_Init
 12776 ;; This function uses a non-reentrant model
 12777 ;;
 12778                           
 12779                           	psect	text24
 12780   018198                     __ptext24:
 12781                           	callstack 0
 12782   018198                     _timersInit:
 12783                           	callstack 23
 12784                           
 12785                           ; BSR set to: 1
 12786                           ;mcc_generated_files/TCPIPLibrary/network.c: 87:     time(&arpTimer);
 12787                           
 12788                           ;incstack = 0
 12789   018198  0E8E               	movlw	low _arpTimer
 12790   01819A  6E05               	movwf	time@t^0,c
 12791   01819C  0E01               	movlw	high _arpTimer
 12792   01819E  6E06               	movwf	(time@t+1)^0,c
 12793   0181A0  EC0B  F0BC         	call	_time	;wreg free
 12794                           
 12795                           ;mcc_generated_files/TCPIPLibrary/network.c: 88:     arpTimer += 10;
 12796   0181A4  0E0A               	movlw	10
 12797   0181A6  0101               	movlb	1	; () banked
 12798   0181A8  278E               	addwf	_arpTimer& (0+255),f,b
 12799   0181AA  0E00               	movlw	0
 12800   0181AC  238F               	addwfc	(_arpTimer+1)& (0+255),f,b
 12801   0181AE  2390               	addwfc	(_arpTimer+2)& (0+255),f,b
 12802   0181B0  2391               	addwfc	(_arpTimer+3)& (0+255),f,b
 12803                           
 12804                           ; BSR set to: 1
 12805   0181B2  0012               	return		;funcret
 12806   0181B4                     __end_of_timersInit:
 12807                           	callstack 0
 12808                           
 12809 ;; *************** function _rtcc_init *****************
 12810 ;; Defined at:
 12811 ;;		line 60 in file "mcc_generated_files/TCPIPLibrary/rtcc.c"
 12812 ;; Parameters:    Size  Location     Type
 12813 ;;		None
 12814 ;; Auto vars:     Size  Location     Type
 12815 ;;		None
 12816 ;; Return value:  Size  Location     Type
 12817 ;;                  1    wreg      void 
 12818 ;; Registers used:
 12819 ;;		wreg, status,2, status,0, cstack
 12820 ;; Tracked objects:
 12821 ;;		On entry : 3F/1
 12822 ;;		On exit  : 3F/1
 12823 ;;		Unchanged: 0/0
 12824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12829 ;;Total ram usage:        0 bytes
 12830 ;; Hardware stack levels used: 1
 12831 ;; Hardware stack levels required when called: 5
 12832 ;; This function calls:
 12833 ;;		_TMR0_SetInterruptHandler
 12834 ;; This function is called by:
 12835 ;;		_Network_Init
 12836 ;; This function uses a non-reentrant model
 12837 ;;
 12838                           
 12839                           	psect	text25
 12840   018118                     __ptext25:
 12841                           	callstack 0
 12842   018118                     _rtcc_init:
 12843                           	callstack 23
 12844                           
 12845                           ; BSR set to: 1
 12846                           ;mcc_generated_files/TCPIPLibrary/rtcc.c: 62:     deviceTime = 1293861600;
 12847                           
 12848                           ; BSR set to: 1
 12849                           ;incstack = 0
 12850   018118  0EE0               	movlw	224
 12851   01811A  6F2A               	movwf	_deviceTime& (0+255),b	;volatile
 12852   01811C  0EC2               	movlw	194
 12853   01811E  6F2B               	movwf	(_deviceTime+1)& (0+255),b	;volatile
 12854   018120  0E1E               	movlw	30
 12855   018122  6F2C               	movwf	(_deviceTime+2)& (0+255),b	;volatile
 12856   018124  0E4D               	movlw	77
 12857   018126  6F2D               	movwf	(_deviceTime+3)& (0+255),b	;volatile
 12858                           
 12859                           ; BSR set to: 1
 12860                           ;mcc_generated_files/TCPIPLibrary/rtcc.c: 63:     TMR0_SetInterruptHandler(rtcc_handler)
      +                          ;
 12861   018128  0EC2               	movlw	low _rtcc_handler
 12862   01812A  6E05               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
 12863   01812C  0E82               	movlw	high _rtcc_handler
 12864   01812E  6E06               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
 12865   018130  0E01               	movlw	low (_rtcc_handler shr (0+16))
 12866   018132  6E07               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+2)^0,c
 12867   018134  EC69  F0C1         	call	_TMR0_SetInterruptHandler	;wreg free
 12868                           
 12869                           ; BSR set to: 1
 12870   018138  0012               	return		;funcret
 12871   01813A                     __end_of_rtcc_init:
 12872                           	callstack 0
 12873                           
 12874 ;; *************** function _TMR0_SetInterruptHandler *****************
 12875 ;; Defined at:
 12876 ;;		line 156 in file "mcc_generated_files/tmr0.c"
 12877 ;; Parameters:    Size  Location     Type
 12878 ;;  InterruptHan    3    4[COMRAM] PTR FTN()void 
 12879 ;;		 -> TMR0_DefaultInterruptHandler(1), rtcc_handler(1), 
 12880 ;; Auto vars:     Size  Location     Type
 12881 ;;		None
 12882 ;; Return value:  Size  Location     Type
 12883 ;;                  1    wreg      void 
 12884 ;; Registers used:
 12885 ;;		wreg, status,2, status,0
 12886 ;; Tracked objects:
 12887 ;;		On entry : 3F/1
 12888 ;;		On exit  : 3F/1
 12889 ;;		Unchanged: 3F/0
 12890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12891 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12894 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12895 ;;Total ram usage:        3 bytes
 12896 ;; Hardware stack levels used: 1
 12897 ;; Hardware stack levels required when called: 4
 12898 ;; This function calls:
 12899 ;;		Nothing
 12900 ;; This function is called by:
 12901 ;;		_rtcc_init
 12902 ;;		_TMR0_Initialize
 12903 ;; This function uses a non-reentrant model
 12904 ;;
 12905                           
 12906                           	psect	text26
 12907   0182D2                     __ptext26:
 12908                           	callstack 0
 12909   0182D2                     _TMR0_SetInterruptHandler:
 12910                           	callstack 24
 12911                           
 12912                           ; BSR set to: 1
 12913                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
 12914                           
 12915                           ; BSR set to: 1
 12916                           ;incstack = 0
 12917   0182D2  C005  F2F6         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 12918   0182D6  C006  F2F7         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 12919   0182DA  C007  F2F8         	movff	TMR0_SetInterruptHandler@InterruptHandler+2,_TMR0_InterruptHandler+2
 12920                           
 12921                           ; BSR set to: 1
 12922   0182DE  0012               	return		;funcret
 12923   0182E0                     __end_of_TMR0_SetInterruptHandler:
 12924                           	callstack 0
 12925                           
 12926 ;; *************** function _Network_WaitForLink *****************
 12927 ;; Defined at:
 12928 ;;		line 91 in file "mcc_generated_files/TCPIPLibrary/network.c"
 12929 ;; Parameters:    Size  Location     Type
 12930 ;;		None
 12931 ;; Auto vars:     Size  Location     Type
 12932 ;;		None
 12933 ;; Return value:  Size  Location     Type
 12934 ;;                  1    wreg      void 
 12935 ;; Registers used:
 12936 ;;		wreg, status,2, status,0, cstack
 12937 ;; Tracked objects:
 12938 ;;		On entry : 3F/1
 12939 ;;		On exit  : 3F/1
 12940 ;;		Unchanged: 0/0
 12941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12946 ;;Total ram usage:        0 bytes
 12947 ;; Hardware stack levels used: 1
 12948 ;; Hardware stack levels required when called: 7
 12949 ;; This function calls:
 12950 ;;		_ETH_CheckLinkUp
 12951 ;; This function is called by:
 12952 ;;		_Network_Init
 12953 ;; This function uses a non-reentrant model
 12954 ;;
 12955                           
 12956                           	psect	text27
 12957   0182B2                     __ptext27:
 12958                           	callstack 0
 12959   0182B2                     _Network_WaitForLink:
 12960                           	callstack 21
 12961                           
 12962                           ; BSR set to: 1
 12963                           ;mcc_generated_files/TCPIPLibrary/network.c: 93:     while(!ETH_CheckLinkUp()) __asm("no
      +                          p");
 12964                           
 12965                           ; BSR set to: 1
 12966                           ;incstack = 0
 12967   0182B2  D001               	goto	l14711
 12968   0182B4                     l1955:
 12969                           
 12970                           ; BSR set to: 1
 12971   0182B4  0000               	nop		;# 
 12972   0182B6                     l14711:
 12973   0182B6  EC15  F0C0         	call	_ETH_CheckLinkUp	;wreg free
 12974   0182BA  0900               	iorlw	0
 12975   0182BC  A4D8               	btfss	status,2,c
 12976   0182BE  0012               	return	
 12977   0182C0  D7F9               	goto	l1955
 12978   0182C2                     __end_of_Network_WaitForLink:
 12979                           	callstack 0
 12980                           
 12981 ;; *************** function _LOG_Init *****************
 12982 ;; Defined at:
 12983 ;;		line 97 in file "mcc_generated_files/TCPIPLibrary/log.c"
 12984 ;; Parameters:    Size  Location     Type
 12985 ;;		None
 12986 ;; Auto vars:     Size  Location     Type
 12987 ;;  x               1   84[COMRAM] unsigned char 
 12988 ;;  t               4   80[COMRAM] unsigned long 
 12989 ;; Return value:  Size  Location     Type
 12990 ;;                  1    wreg      void 
 12991 ;; Registers used:
 12992 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12993 ;; Tracked objects:
 12994 ;;		On entry : 3F/1
 12995 ;;		On exit  : 0/0
 12996 ;;		Unchanged: 0/0
 12997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12999 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13000 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13001 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13002 ;;Total ram usage:        7 bytes
 13003 ;; Hardware stack levels used: 1
 13004 ;; Hardware stack levels required when called: 12
 13005 ;; This function calls:
 13006 ;;		_printf
 13007 ;;		_time
 13008 ;; This function is called by:
 13009 ;;		_Network_Init
 13010 ;; This function uses a non-reentrant model
 13011 ;;
 13012                           
 13013                           	psect	text28
 13014   016FCA                     __ptext28:
 13015                           	callstack 0
 13016   016FCA                     _LOG_Init:
 13017                           	callstack 16
 13018                           
 13019                           ; BSR set to: 1
 13020                           ;mcc_generated_files/TCPIPLibrary/log.c: 99:     unsigned long t = (unsigned long)time(0
      +                          );
 13021                           
 13022                           ; BSR set to: 1
 13023                           ;incstack = 0
 13024   016FCA  0E00               	movlw	0
 13025   016FCC  6E05               	movwf	time@t^0,c
 13026   016FCE  0E00               	movlw	0
 13027   016FD0  6E06               	movwf	(time@t+1)^0,c
 13028   016FD2  EC0B  F0BC         	call	_time	;wreg free
 13029   016FD6  C005  F051         	movff	?_time,LOG_Init@t
 13030   016FDA  C006  F052         	movff	?_time+1,LOG_Init@t+1
 13031   016FDE  C007  F053         	movff	?_time+2,LOG_Init@t+2
 13032   016FE2  C008  F054         	movff	?_time+3,LOG_Init@t+3
 13033                           
 13034                           ;mcc_generated_files/TCPIPLibrary/log.c: 100:     printf("\n\nStarting Syslog at %lu\n",
      +                          t);
 13035   016FE6  0E57               	movlw	low STR_41
 13036   016FE8  6E48               	movwf	printf@fmt^0,c
 13037   016FEA  0EFE               	movlw	high STR_41
 13038   016FEC  6E49               	movwf	(printf@fmt+1)^0,c
 13039   016FEE  C051  F04A         	movff	LOG_Init@t,?_printf+2
 13040   016FF2  C052  F04B         	movff	LOG_Init@t+1,?_printf+3
 13041   016FF6  C053  F04C         	movff	LOG_Init@t+2,?_printf+4
 13042   016FFA  C054  F04D         	movff	LOG_Init@t+3,?_printf+5
 13043   016FFE  ECBD  F0C0         	call	_printf	;wreg free
 13044                           
 13045                           ;mcc_generated_files/TCPIPLibrary/log.c: 101:     for(uint8_t x=0;x<LOG_LAST;x++)
 13046   017002  0E00               	movlw	0
 13047   017004  6E55               	movwf	LOG_Init@x^0,c
 13048   017006                     l14727:
 13049                           
 13050                           ;mcc_generated_files/TCPIPLibrary/log.c: 102:     {;mcc_generated_files/TCPIPLibrary/log
      +                          .c: 103:         limit[(uint8_t)severityThresholdTable[x].logFacility] = severityThresho
      +                          ldTable[x].severityThreshold;
 13051   017006  5055               	movf	LOG_Init@x^0,w,c
 13052   017008  0D02               	mullw	2
 13053   01700A  0E8B               	movlw	low _severityThresholdTable
 13054   01700C  24F3               	addwf	243,w,c
 13055   01700E  6EF6               	movwf	tblptrl,c
 13056   017010  0EFD               	movlw	high _severityThresholdTable
 13057   017012  20F4               	addwfc	244,w,c
 13058   017014  6EF7               	movwf	tblptrh,c
 13059   017016                     	if	1	;There are 3 active tblptr bytes
 13060   017016  6AF8               	clrf	tblptru,c
 13061   017018  0E00               	movlw	low (__mediumconst shr (0+16))
 13062   01701A  22F8               	addwfc	tblptru,f,c
 13063   01701C                     	endif
 13064   01701C  0008               	tblrd		*
 13065   01701E  50F5               	movf	tablat,w,c
 13066   017020  6E4F               	movwf	??_LOG_Init^0,c
 13067   017022  6A50               	clrf	(??_LOG_Init+1)^0,c
 13068   017024  0E8C               	movlw	low _limit
 13069   017026  244F               	addwf	??_LOG_Init^0,w,c
 13070   017028  6ED9               	movwf	fsr2l,c
 13071   01702A  0E05               	movlw	high _limit
 13072   01702C  2050               	addwfc	(??_LOG_Init+1)^0,w,c
 13073   01702E  6EDA               	movwf	fsr2h,c
 13074   017030  5055               	movf	LOG_Init@x^0,w,c
 13075   017032  0D02               	mullw	2
 13076   017034  0E01               	movlw	1
 13077   017036  26F3               	addwf	243,f,c
 13078   017038  0E00               	movlw	0
 13079   01703A  22F4               	addwfc	244,f,c
 13080   01703C  0E8B               	movlw	low _severityThresholdTable
 13081   01703E  24F3               	addwf	243,w,c
 13082   017040  6EF6               	movwf	tblptrl,c
 13083   017042  0EFD               	movlw	high _severityThresholdTable
 13084   017044  20F4               	addwfc	244,w,c
 13085   017046  6EF7               	movwf	tblptrh,c
 13086   017048                     	if	1	;There are 3 active tblptr bytes
 13087   017048  6AF8               	clrf	tblptru,c
 13088   01704A  0E00               	movlw	low (__mediumconst shr (0+16))
 13089   01704C  22F8               	addwfc	tblptru,f,c
 13090   01704E                     	endif
 13091   01704E  0008               	tblrd		*
 13092   017050  CFF5 FFDF          	movff	tablat,indf2
 13093                           
 13094                           ;mcc_generated_files/TCPIPLibrary/log.c: 104:     }
 13095   017054  2A55               	incf	LOG_Init@x^0,f,c
 13096   017056  0E16               	movlw	22
 13097   017058  6455               	cpfsgt	LOG_Init@x^0,c
 13098   01705A  D7D5               	goto	l14727
 13099   01705C  0012               	return	
 13100   01705E                     __end_of_LOG_Init:
 13101                           	callstack 0
 13102                           
 13103 ;; *************** function _printf *****************
 13104 ;; Defined at:
 13105 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\printf.c"
 13106 ;; Parameters:    Size  Location     Type
 13107 ;;  fmt             2   71[COMRAM] PTR const unsigned char 
 13108 ;;		 -> STR_41(26), STR_22(66), 
 13109 ;; Auto vars:     Size  Location     Type
 13110 ;;  ret             2    0        int 
 13111 ;;  ap              1   77[COMRAM] PTR void [1]
 13112 ;;		 -> ?_printf(2), ?_sprintf(2), 
 13113 ;; Return value:  Size  Location     Type
 13114 ;;                  2   71[COMRAM] int 
 13115 ;; Registers used:
 13116 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13117 ;; Tracked objects:
 13118 ;;		On entry : 0/1
 13119 ;;		On exit  : 0/0
 13120 ;;		Unchanged: 0/0
 13121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13122 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13123 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13125 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13126 ;;Total ram usage:        7 bytes
 13127 ;; Hardware stack levels used: 1
 13128 ;; Hardware stack levels required when called: 11
 13129 ;; This function calls:
 13130 ;;		_vfprintf
 13131 ;; This function is called by:
 13132 ;;		_LOG_Init
 13133 ;; This function uses a non-reentrant model
 13134 ;;
 13135                           
 13136                           	psect	text29
 13137   01817A                     __ptext29:
 13138                           	callstack 0
 13139   01817A                     _printf:
 13140                           	callstack 16
 13141                           
 13142                           ;incstack = 0
 13143   01817A  0E4A               	movlw	low (?_printf+2)
 13144   01817C  6E4E               	movwf	printf@ap^0,c
 13145   01817E  0E00               	movlw	0
 13146   018180  6E41               	movwf	vfprintf@fp^0,c
 13147   018182  0E00               	movlw	0
 13148   018184  6E42               	movwf	(vfprintf@fp+1)^0,c
 13149   018186  C048  F043         	movff	printf@fmt,vfprintf@fmt
 13150   01818A  C049  F044         	movff	printf@fmt+1,vfprintf@fmt+1
 13151   01818E  0E4E               	movlw	low printf@ap
 13152   018190  6E45               	movwf	vfprintf@ap^0,c
 13153   018192  EC1D  F0BE         	call	_vfprintf	;wreg free
 13154   018196  0012               	return		;funcret
 13155   018198                     __end_of_printf:
 13156                           	callstack 0
 13157                           
 13158 ;; *************** function _IPV4_Init *****************
 13159 ;; Defined at:
 13160 ;;		line 65 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
 13161 ;; Parameters:    Size  Location     Type
 13162 ;;		None
 13163 ;; Auto vars:     Size  Location     Type
 13164 ;;		None
 13165 ;; Return value:  Size  Location     Type
 13166 ;;                  1    wreg      void 
 13167 ;; Registers used:
 13168 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13169 ;; Tracked objects:
 13170 ;;		On entry : 3F/E
 13171 ;;		On exit  : 3F/1
 13172 ;;		Unchanged: 0/0
 13173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13178 ;;Total ram usage:        0 bytes
 13179 ;; Hardware stack levels used: 1
 13180 ;; Hardware stack levels required when called: 5
 13181 ;; This function calls:
 13182 ;;		_ipdb_init
 13183 ;; This function is called by:
 13184 ;;		_Network_Init
 13185 ;; This function uses a non-reentrant model
 13186 ;;
 13187                           
 13188                           	psect	text30
 13189   0183AA                     __ptext30:
 13190                           	callstack 0
 13191   0183AA                     _IPV4_Init:
 13192                           	callstack 23
 13193                           
 13194                           ; BSR set to: 14
 13195                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 67:     ipdb_init();
 13196                           
 13197                           ;incstack = 0
 13198   0183AA  EC75  F0B8         	call	_ipdb_init	;wreg free
 13199                           
 13200                           ; BSR set to: 1
 13201   0183AE  0012               	return		;funcret
 13202   0183B0                     __end_of_IPV4_Init:
 13203                           	callstack 0
 13204                           
 13205 ;; *************** function _ipdb_init *****************
 13206 ;; Defined at:
 13207 ;;		line 31 in file "mcc_generated_files/TCPIPLibrary/ip_database.c"
 13208 ;; Parameters:    Size  Location     Type
 13209 ;;		None
 13210 ;; Auto vars:     Size  Location     Type
 13211 ;;  x               1    4[COMRAM] unsigned char 
 13212 ;; Return value:  Size  Location     Type
 13213 ;;                  1    wreg      void 
 13214 ;; Registers used:
 13215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13216 ;; Tracked objects:
 13217 ;;		On entry : 3F/E
 13218 ;;		On exit  : 3F/1
 13219 ;;		Unchanged: 0/0
 13220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13222 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13224 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13225 ;;Total ram usage:        1 bytes
 13226 ;; Hardware stack levels used: 1
 13227 ;; Hardware stack levels required when called: 4
 13228 ;; This function calls:
 13229 ;;		Nothing
 13230 ;; This function is called by:
 13231 ;;		_IPV4_Init
 13232 ;; This function uses a non-reentrant model
 13233 ;;
 13234                           
 13235                           	psect	text31
 13236   0170EA                     __ptext31:
 13237                           	callstack 0
 13238   0170EA                     _ipdb_init:
 13239                           	callstack 23
 13240                           
 13241                           ; BSR set to: 14
 13242                           ;mcc_generated_files/TCPIPLibrary/ip_database.c: 33:     ip_database_info.ipv4_myAddress
      +                           = 0xc0a801b1;
 13243                           
 13244                           ; BSR set to: 1
 13245                           ;incstack = 0
 13246   0170EA  0EB1               	movlw	177
 13247   0170EC  0101               	movlb	1	; () banked
 13248   0170EE  6F00               	movwf	_ip_database_info& (0+255),b
 13249   0170F0  0E01               	movlw	1
 13250   0170F2  6F01               	movwf	(_ip_database_info+1)& (0+255),b
 13251   0170F4  0EA8               	movlw	168
 13252   0170F6  6F02               	movwf	(_ip_database_info+2)& (0+255),b
 13253   0170F8  0EC0               	movlw	192
 13254   0170FA  6F03               	movwf	(_ip_database_info+3)& (0+255),b
 13255                           
 13256                           ;mcc_generated_files/TCPIPLibrary/ip_database.c: 34:     ip_database_info.ipv4_subnetMas
      +                          k = 0xffffff00;
 13257   0170FC  0E00               	movlw	0
 13258   0170FE  6F0C               	movwf	(_ip_database_info+12)& (0+255),b
 13259   017100  0EFF               	movlw	255
 13260   017102  6F0D               	movwf	(_ip_database_info+13)& (0+255),b
 13261   017104  0EFF               	movlw	255
 13262   017106  6F0E               	movwf	(_ip_database_info+14)& (0+255),b
 13263   017108  0EFF               	movlw	255
 13264   01710A  6F0F               	movwf	(_ip_database_info+15)& (0+255),b
 13265                           
 13266                           ;mcc_generated_files/TCPIPLibrary/ip_database.c: 35:     ip_database_info.ipv4_router = 
      +                          0xc0a801fe;
 13267   01710C  0EFE               	movlw	254
 13268   01710E  6F10               	movwf	(_ip_database_info+16)& (0+255),b
 13269   017110  0E01               	movlw	1
 13270   017112  6F11               	movwf	(_ip_database_info+17)& (0+255),b
 13271   017114  0EA8               	movlw	168
 13272   017116  6F12               	movwf	(_ip_database_info+18)& (0+255),b
 13273   017118  0EC0               	movlw	192
 13274   01711A  6F13               	movwf	(_ip_database_info+19)& (0+255),b
 13275                           
 13276                           ;mcc_generated_files/TCPIPLibrary/ip_database.c: 36:     ip_database_info.ipv4_dns[0] = 
      +                          0xc0a801fe;
 13277   01711C  0EFE               	movlw	254
 13278   01711E  6F04               	movwf	(_ip_database_info+4)& (0+255),b
 13279   017120  0E01               	movlw	1
 13280   017122  6F05               	movwf	(_ip_database_info+5)& (0+255),b
 13281   017124  0EA8               	movlw	168
 13282   017126  6F06               	movwf	(_ip_database_info+6)& (0+255),b
 13283   017128  0EC0               	movlw	192
 13284   01712A  6F07               	movwf	(_ip_database_info+7)& (0+255),b
 13285                           
 13286                           ;mcc_generated_files/TCPIPLibrary/ip_database.c: 37:     ip_database_info.ipv4_dns[1] = 
      +                          0;
 13287   01712C  0E00               	movlw	0
 13288   01712E  6F08               	movwf	(_ip_database_info+8)& (0+255),b
 13289   017130  0E00               	movlw	0
 13290   017132  6F09               	movwf	(_ip_database_info+9)& (0+255),b
 13291   017134  0E00               	movlw	0
 13292   017136  6F0A               	movwf	(_ip_database_info+10)& (0+255),b
 13293   017138  0E00               	movlw	0
 13294   01713A  6F0B               	movwf	(_ip_database_info+11)& (0+255),b
 13295                           
 13296                           ;mcc_generated_files/TCPIPLibrary/ip_database.c: 38:     for(uint8_t x=0; x < 2; x++)
 13297   01713C  0E00               	movlw	0
 13298   01713E  6E05               	movwf	ipdb_init@x^0,c
 13299   017140                     l14381:
 13300                           
 13301                           ;mcc_generated_files/TCPIPLibrary/ip_database.c: 39:         ip_database_info.ipv4_ntpAd
      +                          dress[x] = 0;
 13302   017140  5005               	movf	ipdb_init@x^0,w,c
 13303   017142  0D04               	mullw	4
 13304   017144  0E18               	movlw	low (_ip_database_info+24)
 13305   017146  24F3               	addwf	243,w,c
 13306   017148  6ED9               	movwf	fsr2l,c
 13307   01714A  0E01               	movlw	high (_ip_database_info+24)
 13308   01714C  20F4               	addwfc	prodh,w,c
 13309   01714E  6EDA               	movwf	fsr2h,c
 13310   017150  6ADE               	clrf	postinc2,c
 13311   017152  6ADE               	clrf	postinc2,c
 13312   017154  6ADE               	clrf	postinc2,c
 13313   017156  6ADD               	clrf	postdec2,c
 13314   017158  2A05               	incf	ipdb_init@x^0,f,c
 13315   01715A  0E01               	movlw	1
 13316   01715C  6405               	cpfsgt	ipdb_init@x^0,c
 13317   01715E  D7F0               	goto	l14381
 13318                           
 13319                           ;mcc_generated_files/TCPIPLibrary/ip_database.c: 40:     ip_database_info.ipv4_tftpAddre
      +                          ss = 0;
 13320   017160  0E00               	movlw	0
 13321   017162  0101               	movlb	1	; () banked
 13322   017164  6F20               	movwf	(_ip_database_info+32)& (0+255),b
 13323   017166  0E00               	movlw	0
 13324   017168  6F21               	movwf	(_ip_database_info+33)& (0+255),b
 13325   01716A  0E00               	movlw	0
 13326   01716C  6F22               	movwf	(_ip_database_info+34)& (0+255),b
 13327   01716E  0E00               	movlw	0
 13328   017170  6F23               	movwf	(_ip_database_info+35)& (0+255),b
 13329                           
 13330                           ; BSR set to: 1
 13331   017172  0012               	return		;funcret
 13332   017174                     __end_of_ipdb_init:
 13333                           	callstack 0
 13334                           
 13335 ;; *************** function _ETH_Init *****************
 13336 ;; Defined at:
 13337 ;;		line 132 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 13338 ;; Parameters:    Size  Location     Type
 13339 ;;		None
 13340 ;; Auto vars:     Size  Location     Type
 13341 ;;  mac             2   19[COMRAM] PTR const struct .
 13342 ;;		 -> macAddress(6), 
 13343 ;;  phycon1_valu    2    0        unsigned short 
 13344 ;; Return value:  Size  Location     Type
 13345 ;;                  1    wreg      void 
 13346 ;; Registers used:
 13347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13348 ;; Tracked objects:
 13349 ;;		On entry : 3F/1
 13350 ;;		On exit  : 3F/E
 13351 ;;		Unchanged: 0/0
 13352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13354 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13356 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13357 ;;Total ram usage:        2 bytes
 13358 ;; Hardware stack levels used: 1
 13359 ;; Hardware stack levels required when called: 7
 13360 ;; This function calls:
 13361 ;;		_ETH_CheckLinkUp
 13362 ;;		_ETH_Flush
 13363 ;;		_ETH_PacketListReset
 13364 ;;		_MAC_getAddress
 13365 ;;		_PHY_Write
 13366 ;; This function is called by:
 13367 ;;		_Network_Init
 13368 ;; This function uses a non-reentrant model
 13369 ;;
 13370                           
 13371                           	psect	text32
 13372   01573E                     __ptext32:
 13373                           	callstack 0
 13374   01573E                     _ETH_Init:
 13375                           	callstack 21
 13376                           
 13377                           ; BSR set to: 1
 13378                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 134:     const mac48Address_t *mac;
      +                          ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 135:     uint16_t phycon1_value;;mc
      +                          c_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 138:     ethData.error = 0;
 13379                           
 13380                           ; BSR set to: 1
 13381                           ;incstack = 0
 13382   01573E  9124               	bcf	_ethData& (0+255),0,b	;volatile
 13383                           
 13384                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 139:     ethData.up = 0;
 13385   015740  9524               	bcf	_ethData& (0+255),2,b	;volatile
 13386                           
 13387                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 140:     ethData.linkChange = 0;
 13388   015742  9924               	bcf	_ethData& (0+255),4,b	;volatile
 13389                           
 13390                           ; BSR set to: 1
 13391                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 142:     ETH_PacketListReset();
 13392   015744  EC4D  F0BD         	call	_ETH_PacketListReset	;wreg free
 13393                           
 13394                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 144:     ethData.saveRDPT = 0;
 13395   015748  0E00               	movlw	0
 13396   01574A  0101               	movlb	1	; () banked
 13397   01574C  6F27               	movwf	(_ethData+3)& (0+255),b	;volatile
 13398   01574E  0E00               	movlw	0
 13399   015750  6F26               	movwf	(_ethData+2)& (0+255),b	;volatile
 13400                           
 13401                           ; BSR set to: 1
 13402                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 146:     nextPacketPointer = (0);
 13403   015752  0E00               	movlw	0
 13404   015754  6F46               	movwf	(_nextPacketPointer+1)& (0+255),b
 13405   015756  0E00               	movlw	0
 13406   015758  6F45               	movwf	_nextPacketPointer& (0+255),b
 13407                           
 13408                           ; BSR set to: 1
 13409                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 148:     ECON1 = 0x00;
 13410   01575A  0E00               	movlw	0
 13411   01575C  6ED2               	movwf	210,c	;volatile
 13412   01575E                     l2148:
 13413   01575E  010E               	movlb	14	; () banked
 13414   015760  B5FD               	btfsc	253,2,b	;volatile
 13415   015762  D7FD               	goto	l2148
 13416   015764                     u13140:
 13417   015764  A6D2               	btfss	210,3,c	;volatile
 13418   015766  D005               	goto	l14625
 13419   015768  D7FD               	goto	u13140
 13420   01576A                     l2155:
 13421                           
 13422                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 152:     {;mcc_generated_files/TCPI
      +                          PLibrary/ETHxxJ6x_driver.c: 153:         ethData.pktReady = 0;
 13423   01576A  0101               	movlb	1	; () banked
 13424   01576C  9324               	bcf	_ethData& (0+255),1,b	;volatile
 13425                           
 13426                           ; BSR set to: 1
 13427                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 154:         ETH_Flush();
 13428   01576E  EC8D  F0BA         	call	_ETH_Flush	;wreg free
 13429   015772                     l14625:
 13430                           
 13431                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 151:     while (EIRbits.PKTIF)
 13432   015772  BC60               	btfsc	96,6,c	;volatile
 13433   015774  D7FA               	goto	l2155
 13434                           
 13435                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 157:     ECON2 = 0x00;
 13436   015776  0E00               	movlw	0
 13437   015778  010E               	movlb	14	; () banked
 13438   01577A  6FFE               	movwf	254,b	;volatile
 13439                           
 13440                           ; BSR set to: 14
 13441                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 159:     __nop();
 13442   01577C  0000               	nop	
 13443                           
 13444                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 160:     __nop();
 13445   01577E  0000               	nop	
 13446                           
 13447                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 161:     __nop();
 13448   015780  0000               	nop	
 13449                           
 13450                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 164:     ECON2 = 0xA0;
 13451   015782  0EA0               	movlw	160
 13452   015784  010E               	movlb	14	; () banked
 13453   015786  6FFE               	movwf	254,b	;volatile
 13454   015788                     l2157:
 13455                           
 13456                           ; BSR set to: 14
 13457   015788  A1FD               	btfss	253,0,b	;volatile
 13458   01578A  D7FE               	goto	l2157
 13459                           
 13460                           ; BSR set to: 14
 13461                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 180:     MACON1 = 0b00001101; __nop
      +                          ();
 13462   01578C  0E0D               	movlw	13
 13463   01578E  6FA0               	movwf	160,b	;volatile
 13464                           
 13465                           ; BSR set to: 14
 13466   015790  0000               	nop	
 13467                           
 13468                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 181:     MACON3 = 0b10110011; __nop
      +                          ();
 13469   015792  0EB3               	movlw	179
 13470   015794  010E               	movlb	14	; () banked
 13471   015796  6FA2               	movwf	162,b	;volatile
 13472                           
 13473                           ; BSR set to: 14
 13474   015798  0000               	nop	
 13475                           
 13476                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 182:     MACON4 = 0b00000000; __nop
      +                          ();
 13477   01579A  0E00               	movlw	0
 13478   01579C  010E               	movlb	14	; () banked
 13479   01579E  6FA3               	movwf	163,b	;volatile
 13480                           
 13481                           ; BSR set to: 14
 13482   0157A0  0000               	nop	
 13483                           
 13484                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 183:     MABBIPG = 0x15; __nop();
 13485   0157A2  0E15               	movlw	21
 13486   0157A4  010E               	movlb	14	; () banked
 13487   0157A6  6FA4               	movwf	164,b	;volatile
 13488                           
 13489                           ; BSR set to: 14
 13490   0157A8  0000               	nop	
 13491                           
 13492                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 184:     MAIPG = 0x0012; __nop();
 13493   0157AA  0E00               	movlw	0
 13494   0157AC  010E               	movlb	14	; () banked
 13495   0157AE  6FA7               	movwf	167,b	;volatile
 13496   0157B0  0E12               	movlw	18
 13497   0157B2  6FA6               	movwf	166,b	;volatile
 13498                           
 13499                           ; BSR set to: 14
 13500   0157B4  0000               	nop	
 13501                           
 13502                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 191:     ETXST = ((8192) - (((1518)
      +                           + (7)) << 1));
 13503   0157B6  0E14               	movlw	20
 13504   0157B8  010E               	movlb	14	; () banked
 13505   0157BA  6FE5               	movwf	229,b	;volatile
 13506   0157BC  0E16               	movlw	22
 13507   0157BE  6FE4               	movwf	228,b	;volatile
 13508                           
 13509                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 192:     ETXND = ((8192)-1);
 13510   0157C0  0E1F               	movlw	31
 13511   0157C2  6FE7               	movwf	231,b	;volatile
 13512   0157C4  69E6               	setf	230,b	;volatile
 13513                           
 13514                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 193:     ERXST = (0);
 13515   0157C6  0E00               	movlw	0
 13516   0157C8  6FE9               	movwf	233,b	;volatile
 13517   0157CA  0E00               	movlw	0
 13518   0157CC  6FE8               	movwf	232,b	;volatile
 13519                           
 13520                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 194:     ERXND = (((8192) - (((1518
      +                          ) + (7)) << 1)) - 1);
 13521   0157CE  0E14               	movlw	20
 13522   0157D0  6FEB               	movwf	235,b	;volatile
 13523   0157D2  0E15               	movlw	21
 13524   0157D4  6FEA               	movwf	234,b	;volatile
 13525                           
 13526                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 197:     ERDPT = (0);
 13527   0157D6  0E00               	movlw	0
 13528   0157D8  6E7B               	movwf	123,c	;volatile
 13529   0157DA  0E00               	movlw	0
 13530   0157DC  6E7A               	movwf	122,c	;volatile
 13531                           
 13532                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 198:     EWRPT = ((8192) - (((1518)
      +                           + (7)) << 1));
 13533   0157DE  0E14               	movlw	20
 13534   0157E0  6FE3               	movwf	227,b	;volatile
 13535   0157E2  0E16               	movlw	22
 13536   0157E4  6FE2               	movwf	226,b	;volatile
 13537                           
 13538                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 201:     ERXRDPT = (((8192) - (((15
      +                          18) + (7)) << 1)) - 1);
 13539   0157E6  0E14               	movlw	20
 13540   0157E8  6FED               	movwf	237,b	;volatile
 13541   0157EA  0E15               	movlw	21
 13542   0157EC  6FEC               	movwf	236,b	;volatile
 13543                           
 13544                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 203:     MAMXFL = (1518);
 13545   0157EE  0E05               	movlw	5
 13546   0157F0  6FAB               	movwf	171,b	;volatile
 13547   0157F2  0EEE               	movlw	238
 13548   0157F4  6FAA               	movwf	170,b	;volatile
 13549                           
 13550                           ; BSR set to: 14
 13551                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 206:     mac = MAC_getAddress();
 13552   0157F6  EC9E  F0C1         	call	_MAC_getAddress	;wreg free
 13553   0157FA  C005  F014         	movff	?_MAC_getAddress,ETH_Init@mac
 13554   0157FE  C006  F015         	movff	?_MAC_getAddress+1,ETH_Init@mac+1
 13555                           
 13556                           ; BSR set to: 14
 13557                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 208:     MAADR1 = mac->mac_array[0]
      +                          ;__nop();
 13558   015802  C014  FFD9         	movff	ETH_Init@mac,fsr2l
 13559   015806  C015  FFDA         	movff	ETH_Init@mac+1,fsr2h
 13560   01580A  50DF               	movf	indf2,w,c
 13561   01580C  6F84               	movwf	132,b	;volatile
 13562                           
 13563                           ; BSR set to: 14
 13564   01580E  0000               	nop	
 13565                           
 13566                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 209:     MAADR2 = mac->mac_array[1]
      +                          ;__nop();
 13567   015810  EE20 F001          	lfsr	2,1
 13568   015814  5014               	movf	ETH_Init@mac^0,w,c
 13569   015816  26D9               	addwf	fsr2l,f,c
 13570   015818  5015               	movf	(ETH_Init@mac+1)^0,w,c
 13571   01581A  22DA               	addwfc	fsr2h,f,c
 13572   01581C  50DF               	movf	indf2,w,c
 13573   01581E  010E               	movlb	14	; () banked
 13574   015820  6F85               	movwf	133,b	;volatile
 13575                           
 13576                           ; BSR set to: 14
 13577   015822  0000               	nop	
 13578                           
 13579                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 210:     MAADR3 = mac->mac_array[2]
      +                          ;__nop();
 13580   015824  EE20 F002          	lfsr	2,2
 13581   015828  5014               	movf	ETH_Init@mac^0,w,c
 13582   01582A  26D9               	addwf	fsr2l,f,c
 13583   01582C  5015               	movf	(ETH_Init@mac+1)^0,w,c
 13584   01582E  22DA               	addwfc	fsr2h,f,c
 13585   015830  50DF               	movf	indf2,w,c
 13586   015832  010E               	movlb	14	; () banked
 13587   015834  6F82               	movwf	130,b	;volatile
 13588                           
 13589                           ; BSR set to: 14
 13590   015836  0000               	nop	
 13591                           
 13592                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 211:     MAADR4 = mac->mac_array[3]
      +                          ;__nop();
 13593   015838  EE20 F003          	lfsr	2,3
 13594   01583C  5014               	movf	ETH_Init@mac^0,w,c
 13595   01583E  26D9               	addwf	fsr2l,f,c
 13596   015840  5015               	movf	(ETH_Init@mac+1)^0,w,c
 13597   015842  22DA               	addwfc	fsr2h,f,c
 13598   015844  50DF               	movf	indf2,w,c
 13599   015846  010E               	movlb	14	; () banked
 13600   015848  6F83               	movwf	131,b	;volatile
 13601                           
 13602                           ; BSR set to: 14
 13603   01584A  0000               	nop	
 13604                           
 13605                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 212:     MAADR5 = mac->mac_array[4]
      +                          ;__nop();
 13606   01584C  EE20 F004          	lfsr	2,4
 13607   015850  5014               	movf	ETH_Init@mac^0,w,c
 13608   015852  26D9               	addwf	fsr2l,f,c
 13609   015854  5015               	movf	(ETH_Init@mac+1)^0,w,c
 13610   015856  22DA               	addwfc	fsr2h,f,c
 13611   015858  50DF               	movf	indf2,w,c
 13612   01585A  010E               	movlb	14	; () banked
 13613   01585C  6F80               	movwf	128,b	;volatile
 13614                           
 13615                           ; BSR set to: 14
 13616   01585E  0000               	nop	
 13617                           
 13618                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 213:     MAADR6 = mac->mac_array[5]
      +                          ;__nop();
 13619   015860  EE20 F005          	lfsr	2,5
 13620   015864  5014               	movf	ETH_Init@mac^0,w,c
 13621   015866  26D9               	addwf	fsr2l,f,c
 13622   015868  5015               	movf	(ETH_Init@mac+1)^0,w,c
 13623   01586A  22DA               	addwfc	fsr2h,f,c
 13624   01586C  50DF               	movf	indf2,w,c
 13625   01586E  010E               	movlb	14	; () banked
 13626   015870  6F81               	movwf	129,b	;volatile
 13627                           
 13628                           ; BSR set to: 14
 13629   015872  0000               	nop	
 13630                           
 13631                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 217:     ERXFCON = 0b10101011;
 13632   015874  0EAB               	movlw	171
 13633   015876  010E               	movlb	14	; () banked
 13634   015878  6FD8               	movwf	216,b	;volatile
 13635                           
 13636                           ; BSR set to: 14
 13637                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 220:     ECON1=0x04;
 13638   01587A  0E04               	movlw	4
 13639   01587C  6ED2               	movwf	210,c	;volatile
 13640                           
 13641                           ; BSR set to: 14
 13642                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 223:     PHY_Write(PHCON1, phycon1_
      +                          value);
 13643   01587E  0E01               	movlw	1
 13644   015880  6E08               	movwf	(PHY_Write@data+1)^0,c
 13645   015882  0E00               	movlw	0
 13646   015884  6E07               	movwf	PHY_Write@data^0,c
 13647   015886  0E00               	movlw	0
 13648   015888  EC2A  F0C0         	call	_PHY_Write
 13649                           
 13650                           ; BSR set to: 14
 13651                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 224:     PHY_Write(PHCON2, 0x0110);
 13652   01588C  0E01               	movlw	1
 13653   01588E  6E08               	movwf	(PHY_Write@data+1)^0,c
 13654   015890  0E10               	movlw	16
 13655   015892  6E07               	movwf	PHY_Write@data^0,c
 13656   015894  0E10               	movlw	16
 13657   015896  EC2A  F0C0         	call	_PHY_Write
 13658                           
 13659                           ; BSR set to: 14
 13660                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 225:     PHY_Write(PHLCON, 0b011101
      +                          01001010);
 13661   01589A  0E1D               	movlw	29
 13662   01589C  6E08               	movwf	(PHY_Write@data+1)^0,c
 13663   01589E  0E4A               	movlw	74
 13664   0158A0  6E07               	movwf	PHY_Write@data^0,c
 13665   0158A2  0E14               	movlw	20
 13666   0158A4  EC2A  F0C0         	call	_PHY_Write
 13667                           
 13668                           ; BSR set to: 14
 13669                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 228:     ETH_CheckLinkUp();
 13670   0158A8  EC15  F0C0         	call	_ETH_CheckLinkUp	;wreg free
 13671                           
 13672                           ; BSR set to: 1
 13673                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 231:     EIE = 0b01011001;
 13674   0158AC  0E59               	movlw	89
 13675   0158AE  010E               	movlb	14	; () banked
 13676   0158B0  6FFB               	movwf	251,b	;volatile
 13677                           
 13678                           ; BSR set to: 14
 13679                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 232:     PHY_Write(PHIE,0x0012);
 13680   0158B2  0E00               	movlw	0
 13681   0158B4  6E08               	movwf	(PHY_Write@data+1)^0,c
 13682   0158B6  0E12               	movlw	18
 13683   0158B8  6E07               	movwf	PHY_Write@data^0,c
 13684   0158BA  0E12               	movlw	18
 13685   0158BC  EC2A  F0C0         	call	_PHY_Write
 13686                           
 13687                           ; BSR set to: 14
 13688   0158C0  0012               	return		;funcret
 13689   0158C2                     __end_of_ETH_Init:
 13690                           	callstack 0
 13691                           
 13692 ;; *************** function _PHY_Write *****************
 13693 ;; Defined at:
 13694 ;;		line 357 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 13695 ;; Parameters:    Size  Location     Type
 13696 ;;  reg             1    wreg     enum E5740
 13697 ;;  data            2    6[COMRAM] unsigned short 
 13698 ;; Auto vars:     Size  Location     Type
 13699 ;;  reg             1    8[COMRAM] enum E5740
 13700 ;;  GIESave         1    9[COMRAM] unsigned char 
 13701 ;; Return value:  Size  Location     Type
 13702 ;;                  1    wreg      enum E5749
 13703 ;; Registers used:
 13704 ;;		wreg, status,2, status,0, cstack
 13705 ;; Tracked objects:
 13706 ;;		On entry : 3F/E
 13707 ;;		On exit  : 3F/E
 13708 ;;		Unchanged: 0/0
 13709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13710 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13711 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13713 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13714 ;;Total ram usage:        4 bytes
 13715 ;; Hardware stack levels used: 1
 13716 ;; Hardware stack levels required when called: 5
 13717 ;; This function calls:
 13718 ;;		_PHY_WaitForBusy
 13719 ;; This function is called by:
 13720 ;;		_ETH_Init
 13721 ;; This function uses a non-reentrant model
 13722 ;;
 13723                           
 13724                           	psect	text33
 13725   018054                     __ptext33:
 13726                           	callstack 0
 13727   018054                     _PHY_Write:
 13728                           	callstack 22
 13729                           
 13730                           ; BSR set to: 14
 13731                           ;incstack = 0
 13732                           ;PHY_Write@reg stored from wreg
 13733   018054  6E09               	movwf	PHY_Write@reg^0,c
 13734                           
 13735                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 357: phyError_t PHY_Write(phyRegist
      +                          er_t reg, uint16_t data);mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 358: {;mcc_
      +                          generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 359:     uint8_t GIESave;;mcc_generated_
      +                          files/TCPIPLibrary/ETHxxJ6x_driver.c: 361:     MIREGADR = reg;
 13736   018056  C009  FEB4         	movff	PHY_Write@reg,3764	;volatile
 13737                           
 13738                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 373:     errataTemp = data;
 13739   01805A  C007  FE7E         	movff	PHY_Write@data,3710
 13740   01805E  C008  FE7F         	movff	PHY_Write@data+1,3711
 13741                           
 13742                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 374:     GIESave = INTCON;
 13743   018062  CFF2 F00A          	movff	4082,PHY_Write@GIESave	;volatile
 13744                           
 13745                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 375:     INTCON = 0;
 13746   018066  0E00               	movlw	0
 13747   018068  6EF2               	movwf	242,c	;volatile
 13748                           
 13749                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 376:     MIWR = errataTemp;
 13750   01806A  CE7E FEB6          	movff	3710,3766	;volatile
 13751   01806E  CE7F FEB7          	movff	3711,3767	;volatile
 13752                           
 13753                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 377:     INTCON = GIESave;
 13754   018072  C00A  FFF2         	movff	PHY_Write@GIESave,4082	;volatile
 13755                           
 13756                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 381:     return PHY_WaitForBusy();;
      +                          	Return value of _PHY_Write is never used
 13757   018076  ECA6  F0BF         	call	_PHY_WaitForBusy	;wreg free
 13758                           
 13759                           ; BSR set to: 14
 13760   01807A  0012               	return		;funcret
 13761   01807C                     __end_of_PHY_Write:
 13762                           	callstack 0
 13763                           
 13764 ;; *************** function _MAC_getAddress *****************
 13765 ;; Defined at:
 13766 ;;		line 48 in file "mcc_generated_files/TCPIPLibrary/mac_address.c"
 13767 ;; Parameters:    Size  Location     Type
 13768 ;;		None
 13769 ;; Auto vars:     Size  Location     Type
 13770 ;;		None
 13771 ;; Return value:  Size  Location     Type
 13772 ;;                  2    4[COMRAM] PTR const struct .
 13773 ;; Registers used:
 13774 ;;		wreg, status,2, status,0
 13775 ;; Tracked objects:
 13776 ;;		On entry : 3F/E
 13777 ;;		On exit  : 3F/E
 13778 ;;		Unchanged: 3F/0
 13779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13780 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13783 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13784 ;;Total ram usage:        2 bytes
 13785 ;; Hardware stack levels used: 1
 13786 ;; Hardware stack levels required when called: 4
 13787 ;; This function calls:
 13788 ;;		Nothing
 13789 ;; This function is called by:
 13790 ;;		_ETH_Init
 13791 ;; This function uses a non-reentrant model
 13792 ;;
 13793                           
 13794                           	psect	text34
 13795   01833C                     __ptext34:
 13796                           	callstack 0
 13797   01833C                     _MAC_getAddress:
 13798                           	callstack 23
 13799                           
 13800                           ; BSR set to: 14
 13801                           ;mcc_generated_files/TCPIPLibrary/mac_address.c: 50:     return &macAddress;
 13802                           
 13803                           ; BSR set to: 14
 13804                           ;incstack = 0
 13805   01833C  0EC9               	movlw	low _macAddress
 13806   01833E  6E05               	movwf	?_MAC_getAddress^0,c
 13807   018340  0E02               	movlw	high _macAddress
 13808   018342  6E06               	movwf	(?_MAC_getAddress+1)^0,c
 13809                           
 13810                           ; BSR set to: 14
 13811   018344  0012               	return		;funcret
 13812   018346                     __end_of_MAC_getAddress:
 13813                           	callstack 0
 13814                           
 13815 ;; *************** function _ARPV4_Init *****************
 13816 ;; Defined at:
 13817 ;;		line 87 in file "mcc_generated_files/TCPIPLibrary/arpv4.c"
 13818 ;; Parameters:    Size  Location     Type
 13819 ;;		None
 13820 ;; Auto vars:     Size  Location     Type
 13821 ;;  x               1    6[COMRAM] unsigned char 
 13822 ;; Return value:  Size  Location     Type
 13823 ;;                  1    wreg      void 
 13824 ;; Registers used:
 13825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13826 ;; Tracked objects:
 13827 ;;		On entry : 3F/E
 13828 ;;		On exit  : 3F/E
 13829 ;;		Unchanged: 3F/0
 13830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13832 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13834 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13835 ;;Total ram usage:        1 bytes
 13836 ;; Hardware stack levels used: 1
 13837 ;; Hardware stack levels required when called: 5
 13838 ;; This function calls:
 13839 ;;		_ETH_GetMAC
 13840 ;; This function is called by:
 13841 ;;		_Network_Init
 13842 ;; This function uses a non-reentrant model
 13843 ;;
 13844                           
 13845                           	psect	text35
 13846   01807C                     __ptext35:
 13847                           	callstack 0
 13848   01807C                     _ARPV4_Init:
 13849                           	callstack 23
 13850                           
 13851                           ; BSR set to: 14
 13852                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 89:     for(uint8_t x= 0 ; x < 8; x++)
 13853                           
 13854                           ; BSR set to: 14
 13855                           ;incstack = 0
 13856   01807C  0E00               	movlw	0
 13857   01807E  6E07               	movwf	ARPV4_Init@x^0,c
 13858   018080                     l14695:
 13859                           
 13860                           ; BSR set to: 14
 13861                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 90:     {;mcc_generated_files/TCPIPLibrary/ar
      +                          pv4.c: 91:         ((char *)arpMap)[x] = 0;
 13862   018080  0E00               	movlw	low _arpMap
 13863   018082  2407               	addwf	ARPV4_Init@x^0,w,c
 13864   018084  6ED9               	movwf	fsr2l,c
 13865   018086  6ADA               	clrf	fsr2h,c
 13866   018088  0E07               	movlw	high _arpMap
 13867   01808A  22DA               	addwfc	fsr2h,f,c
 13868   01808C  6ADF               	clrf	indf2,c
 13869                           
 13870                           ; BSR set to: 14
 13871                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 92:     }
 13872   01808E  2A07               	incf	ARPV4_Init@x^0,f,c
 13873                           
 13874                           ; BSR set to: 14
 13875   018090  0E07               	movlw	7
 13876   018092  6407               	cpfsgt	ARPV4_Init@x^0,c
 13877   018094  D7F5               	goto	l14695
 13878                           
 13879                           ; BSR set to: 14
 13880                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 93:     ETH_GetMAC((uint8_t*)&hostMacAddress)
      +                          ;
 13881   018096  0EA7               	movlw	low _hostMacAddress
 13882   018098  6E05               	movwf	ETH_GetMAC@mac^0,c
 13883   01809A  0E02               	movlw	high _hostMacAddress
 13884   01809C  6E06               	movwf	(ETH_GetMAC@mac+1)^0,c
 13885   01809E  EC53  F0BB         	call	_ETH_GetMAC	;wreg free
 13886                           
 13887                           ; BSR set to: 14
 13888   0180A2  0012               	return		;funcret
 13889   0180A4                     __end_of_ARPV4_Init:
 13890                           	callstack 0
 13891                           
 13892 ;; *************** function _ETH_GetMAC *****************
 13893 ;; Defined at:
 13894 ;;		line 1031 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 13895 ;; Parameters:    Size  Location     Type
 13896 ;;  mac             2    4[COMRAM] PTR unsigned char 
 13897 ;;		 -> hostMacAddress(6), 
 13898 ;; Auto vars:     Size  Location     Type
 13899 ;;		None
 13900 ;; Return value:  Size  Location     Type
 13901 ;;                  1    wreg      void 
 13902 ;; Registers used:
 13903 ;;		fsr2l, fsr2h, status,2, status,0
 13904 ;; Tracked objects:
 13905 ;;		On entry : 3F/E
 13906 ;;		On exit  : 3F/E
 13907 ;;		Unchanged: 3F/0
 13908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13909 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13912 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13913 ;;Total ram usage:        2 bytes
 13914 ;; Hardware stack levels used: 1
 13915 ;; Hardware stack levels required when called: 4
 13916 ;; This function calls:
 13917 ;;		Nothing
 13918 ;; This function is called by:
 13919 ;;		_ARPV4_Init
 13920 ;; This function uses a non-reentrant model
 13921 ;;
 13922                           
 13923                           	psect	text36
 13924   0176A6                     __ptext36:
 13925                           	callstack 0
 13926   0176A6                     _ETH_GetMAC:
 13927                           	callstack 23
 13928                           
 13929                           ; BSR set to: 14
 13930                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1031: void ETH_GetMAC(uint8_t *mac)
      +                          ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1032: {;mcc_generated_files/TCPIPLi
      +                          brary/ETHxxJ6x_driver.c: 1034:     *mac++ = MAADR1;
 13931                           
 13932                           ; BSR set to: 14
 13933                           ;incstack = 0
 13934   0176A6  C005  FFD9         	movff	ETH_GetMAC@mac,fsr2l
 13935   0176AA  C006  FFDA         	movff	ETH_GetMAC@mac+1,fsr2h
 13936   0176AE  CE84 FFDF          	movff	3716,indf2	;volatile
 13937                           
 13938                           ; BSR set to: 14
 13939   0176B2  4A05               	infsnz	ETH_GetMAC@mac^0,f,c
 13940   0176B4  2A06               	incf	(ETH_GetMAC@mac+1)^0,f,c
 13941                           
 13942                           ; BSR set to: 14
 13943                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1035:     *mac++ = MAADR2;
 13944   0176B6  C005  FFD9         	movff	ETH_GetMAC@mac,fsr2l
 13945   0176BA  C006  FFDA         	movff	ETH_GetMAC@mac+1,fsr2h
 13946   0176BE  CE85 FFDF          	movff	3717,indf2	;volatile
 13947   0176C2  4A05               	infsnz	ETH_GetMAC@mac^0,f,c
 13948   0176C4  2A06               	incf	(ETH_GetMAC@mac+1)^0,f,c
 13949                           
 13950                           ; BSR set to: 14
 13951                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1036:     *mac++ = MAADR3;
 13952   0176C6  C005  FFD9         	movff	ETH_GetMAC@mac,fsr2l
 13953   0176CA  C006  FFDA         	movff	ETH_GetMAC@mac+1,fsr2h
 13954   0176CE  CE82 FFDF          	movff	3714,indf2	;volatile
 13955                           
 13956                           ; BSR set to: 14
 13957   0176D2  4A05               	infsnz	ETH_GetMAC@mac^0,f,c
 13958   0176D4  2A06               	incf	(ETH_GetMAC@mac+1)^0,f,c
 13959                           
 13960                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1037:     *mac++ = MAADR4;
 13961   0176D6  C005  FFD9         	movff	ETH_GetMAC@mac,fsr2l
 13962   0176DA  C006  FFDA         	movff	ETH_GetMAC@mac+1,fsr2h
 13963   0176DE  CE83 FFDF          	movff	3715,indf2	;volatile
 13964                           
 13965                           ; BSR set to: 14
 13966   0176E2  4A05               	infsnz	ETH_GetMAC@mac^0,f,c
 13967   0176E4  2A06               	incf	(ETH_GetMAC@mac+1)^0,f,c
 13968                           
 13969                           ; BSR set to: 14
 13970                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1038:     *mac++ = MAADR5;
 13971   0176E6  C005  FFD9         	movff	ETH_GetMAC@mac,fsr2l
 13972   0176EA  C006  FFDA         	movff	ETH_GetMAC@mac+1,fsr2h
 13973   0176EE  CE80 FFDF          	movff	3712,indf2	;volatile
 13974   0176F2  4A05               	infsnz	ETH_GetMAC@mac^0,f,c
 13975   0176F4  2A06               	incf	(ETH_GetMAC@mac+1)^0,f,c
 13976                           
 13977                           ; BSR set to: 14
 13978                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1039:     *mac = MAADR6;
 13979   0176F6  C005  FFD9         	movff	ETH_GetMAC@mac,fsr2l
 13980   0176FA  C006  FFDA         	movff	ETH_GetMAC@mac+1,fsr2h
 13981   0176FE  CE81 FFDF          	movff	3713,indf2	;volatile
 13982                           
 13983                           ; BSR set to: 14
 13984   017702  0012               	return		;funcret
 13985   017704                     __end_of_ETH_GetMAC:
 13986                           	callstack 0
 13987                           
 13988 ;; *************** function _INTERRUPT_Initialize *****************
 13989 ;; Defined at:
 13990 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 13991 ;; Parameters:    Size  Location     Type
 13992 ;;		None
 13993 ;; Auto vars:     Size  Location     Type
 13994 ;;		None
 13995 ;; Return value:  Size  Location     Type
 13996 ;;                  1    wreg      void 
 13997 ;; Registers used:
 13998 ;;		None
 13999 ;; Tracked objects:
 14000 ;;		On entry : 0/0
 14001 ;;		On exit  : 0/0
 14002 ;;		Unchanged: 0/0
 14003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14008 ;;Total ram usage:        0 bytes
 14009 ;; Hardware stack levels used: 1
 14010 ;; Hardware stack levels required when called: 4
 14011 ;; This function calls:
 14012 ;;		Nothing
 14013 ;; This function is called by:
 14014 ;;		_SYSTEM_Initialize
 14015 ;; This function uses a non-reentrant model
 14016 ;;
 14017                           
 14018                           	psect	text37
 14019   0183BC                     __ptext37:
 14020                           	callstack 0
 14021   0183BC                     _INTERRUPT_Initialize:
 14022                           	callstack 25
 14023                           
 14024                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
 14025                           
 14026                           ; BSR set to: 14
 14027                           ;incstack = 0
 14028   0183BC  9ED0               	bcf	208,7,c	;volatile
 14029   0183BE  0012               	return		;funcret
 14030   0183C0                     __end_of_INTERRUPT_Initialize:
 14031                           	callstack 0
 14032                           
 14033 ;; *************** function _PROCESSxETHxDATAxINIT *****************
 14034 ;; Defined at:
 14035 ;;		line 73 in file "communication.c"
 14036 ;; Parameters:    Size  Location     Type
 14037 ;;		None
 14038 ;; Auto vars:     Size  Location     Type
 14039 ;;		None
 14040 ;; Return value:  Size  Location     Type
 14041 ;;                  1    wreg      void 
 14042 ;; Registers used:
 14043 ;;		wreg, status,2, status,0
 14044 ;; Tracked objects:
 14045 ;;		On entry : 0/0
 14046 ;;		On exit  : 3F/1
 14047 ;;		Unchanged: 0/0
 14048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14053 ;;Total ram usage:        0 bytes
 14054 ;; Hardware stack levels used: 1
 14055 ;; Hardware stack levels required when called: 4
 14056 ;; This function calls:
 14057 ;;		Nothing
 14058 ;; This function is called by:
 14059 ;;		_main
 14060 ;; This function uses a non-reentrant model
 14061 ;;
 14062                           
 14063                           	psect	text38
 14064   017FA8                     __ptext38:
 14065                           	callstack 0
 14066   017FA8                     _PROCESSxETHxDATAxINIT:
 14067                           	callstack 26
 14068                           
 14069                           ;communication.c: 76:     ethernetState = ETHERNET_LINKUP;
 14070                           
 14071                           ;incstack = 0
 14072   017FA8  0E00               	movlw	0
 14073   017FAA  0101               	movlb	1	; () banked
 14074   017FAC  6F6C               	movwf	_ethernetState& (0+255),b
 14075                           
 14076                           ;communication.c: 79:     isUdpConnected = 0;
 14077   017FAE  0E00               	movlw	0
 14078   017FB0  6F6B               	movwf	_isUdpConnected& (0+255),b
 14079                           
 14080                           ; BSR set to: 1
 14081                           ;communication.c: 82:     M_Box_Eth_Recv_Ptr = &udpRecvBox[0];
 14082   017FB2  0E68               	movlw	low _udpRecvBox
 14083   017FB4  6F53               	movwf	_M_Box_Eth_Recv_Ptr& (0+255),b
 14084   017FB6  0E07               	movlw	high _udpRecvBox
 14085   017FB8  6F54               	movwf	(_M_Box_Eth_Recv_Ptr+1)& (0+255),b
 14086                           
 14087                           ; BSR set to: 1
 14088                           ;communication.c: 84:     M_Box_Eth_Recv_Ptr_prev = &udpRecvBox[0];
 14089   017FBA  0E68               	movlw	low _udpRecvBox
 14090   017FBC  6F51               	movwf	_M_Box_Eth_Recv_Ptr_prev& (0+255),b
 14091   017FBE  0E07               	movlw	high _udpRecvBox
 14092   017FC0  6F52               	movwf	(_M_Box_Eth_Recv_Ptr_prev+1)& (0+255),b
 14093                           
 14094                           ; BSR set to: 1
 14095                           ;communication.c: 86:     M_Box_Eth_Send_Ptr = &udpTransBox[0];
 14096   017FC2  0E00               	movlw	low _udpTransBox
 14097   017FC4  6F4F               	movwf	_M_Box_Eth_Send_Ptr& (0+255),b
 14098   017FC6  0E08               	movlw	high _udpTransBox
 14099   017FC8  6F50               	movwf	(_M_Box_Eth_Send_Ptr+1)& (0+255),b
 14100                           
 14101                           ; BSR set to: 1
 14102                           ;communication.c: 88:     M_Box_Eth_Send_Ptr_prev = &udpTransBox[0];
 14103   017FCA  0E00               	movlw	low _udpTransBox
 14104   017FCC  6F4D               	movwf	_M_Box_Eth_Send_Ptr_prev& (0+255),b
 14105   017FCE  0E08               	movlw	high _udpTransBox
 14106   017FD0  6F4E               	movwf	(_M_Box_Eth_Send_Ptr_prev+1)& (0+255),b
 14107                           
 14108                           ; BSR set to: 1
 14109   017FD2  0012               	return		;funcret
 14110   017FD4                     __end_of_PROCESSxETHxDATAxINIT:
 14111                           	callstack 0
 14112                           
 14113 ;; *************** function _PROCESSxETHxDATA *****************
 14114 ;; Defined at:
 14115 ;;		line 96 in file "communication.c"
 14116 ;; Parameters:    Size  Location     Type
 14117 ;;		None
 14118 ;; Auto vars:     Size  Location     Type
 14119 ;;  udpSend         2  136[BANK0 ] PTR struct .
 14120 ;;		 -> udpTransBox(80), NULL(0), 
 14121 ;;  udpReceived     2    0        PTR struct .
 14122 ;;		 -> udpRecvBox(80), NULL(0), 
 14123 ;; Return value:  Size  Location     Type
 14124 ;;                  1    wreg      void 
 14125 ;; Registers used:
 14126 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 14127 ;; Tracked objects:
 14128 ;;		On entry : 0/1
 14129 ;;		On exit  : 3F/1
 14130 ;;		Unchanged: 0/0
 14131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14133 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14134 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14135 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14136 ;;Total ram usage:        4 bytes
 14137 ;; Hardware stack levels used: 1
 14138 ;; Hardware stack levels required when called: 15
 14139 ;; This function calls:
 14140 ;;		_CHECKxDATAxINxRECEIVExMAILxBOX
 14141 ;;		_CheckDataInSendMailBox
 14142 ;;		_ETH_CheckLinkUp
 14143 ;;		_ETH_TxReset
 14144 ;;		_ETH_WriteBlock
 14145 ;;		_GETxDATAxFROMxRECEIVExMAILxBOX
 14146 ;;		_GetDataFromSendMailBox
 14147 ;;		_Network_Manage
 14148 ;;		_UDP_Send
 14149 ;;		_UDP_Start
 14150 ;; This function is called by:
 14151 ;;		_main
 14152 ;; This function uses a non-reentrant model
 14153 ;;
 14154                           
 14155                           	psect	text39
 14156   015CFC                     __ptext39:
 14157                           	callstack 0
 14158   015CFC                     _PROCESSxETHxDATA:
 14159                           	callstack 15
 14160                           
 14161                           ;communication.c: 99:     Network_Manage();
 14162                           
 14163                           ; BSR set to: 1
 14164                           ;incstack = 0
 14165   015CFC  ECB4  F0B9         	call	_Network_Manage	;wreg free
 14166                           
 14167                           ;communication.c: 101:     switch(ethernetState){
 14168   015D00  D086               	goto	l16131
 14169   015D02                     l16089:
 14170                           
 14171                           ; BSR set to: 0
 14172                           ;communication.c: 103:             if(ETH_CheckLinkUp()){
 14173   015D02  EC15  F0C0         	call	_ETH_CheckLinkUp	;wreg free
 14174   015D06  0900               	iorlw	0
 14175   015D08  B4D8               	btfsc	status,2,c
 14176   015D0A  0012               	return	
 14177                           
 14178                           ; BSR set to: 1
 14179                           ;communication.c: 104:                 ethernetState = ETHERNET_CONNECT;
 14180   015D0C  0E01               	movlw	1
 14181   015D0E  6F6C               	movwf	_ethernetState& (0+255),b
 14182   015D10  0012               	return	
 14183   015D12                     l16093:
 14184                           
 14185                           ; BSR set to: 0
 14186                           ;communication.c: 110:             if(CHECKxDATAxINxRECEIVExMAILxBOX()){
 14187   015D12  EC1C  F0C1         	call	_CHECKxDATAxINxRECEIVExMAILxBOX	;wreg free
 14188   015D16  0900               	iorlw	0
 14189   015D18  B4D8               	btfsc	status,2,c
 14190   015D1A  0012               	return	
 14191                           
 14192                           ; BSR set to: 1
 14193                           ;communication.c: 111:                 udpPacketHeader.destinationAddress = (ipv4Header.
      +                          srcIpAddress);
 14194   015D1C  C17A  F200         	movff	_ipv4Header+12,_udpPacketHeader
 14195   015D20  C17B  F201         	movff	_ipv4Header+13,_udpPacketHeader+1
 14196   015D24  C17C  F202         	movff	_ipv4Header+14,_udpPacketHeader+2
 14197   015D28  C17D  F203         	movff	_ipv4Header+15,_udpPacketHeader+3
 14198                           
 14199                           ;communication.c: 112:                 udpPacketHeader.destinationPortNumber = (destPort
      +                          );
 14200   015D2C  C155  F204         	movff	_destPort,_udpPacketHeader+4
 14201   015D30  C156  F205         	movff	_destPort+1,_udpPacketHeader+5
 14202                           
 14203                           ;communication.c: 113:                 udpPacketHeader.sourceAddress = (ipv4Header.dstIp
      +                          Address);
 14204   015D34  C17E  F206         	movff	_ipv4Header+16,_udpPacketHeader+6
 14205   015D38  C17F  F207         	movff	_ipv4Header+17,_udpPacketHeader+7
 14206   015D3C  C180  F208         	movff	_ipv4Header+18,_udpPacketHeader+8
 14207   015D40  C181  F209         	movff	_ipv4Header+19,_udpPacketHeader+9
 14208                           
 14209                           ;communication.c: 114:                 udpPacketHeader.sourcePortNumber = (udpHeader.dst
      +                          Port);
 14210   015D44  C184  F20A         	movff	_udpHeader+2,_udpPacketHeader+10
 14211   015D48  C185  F20B         	movff	_udpHeader+3,_udpPacketHeader+11
 14212                           
 14213                           ; BSR set to: 1
 14214                           ;communication.c: 116:                 ret = UDP_Start(udpPacketHeader.destinationAddres
      +                          s, udpPacketHeader.sourcePortNumber, 60000);
 14215   015D4C  C200  F074         	movff	_udpPacketHeader,UDP_Start@destIP
 14216   015D50  C201  F075         	movff	_udpPacketHeader+1,UDP_Start@destIP+1
 14217   015D54  C202  F076         	movff	_udpPacketHeader+2,UDP_Start@destIP+2
 14218   015D58  C203  F077         	movff	_udpPacketHeader+3,UDP_Start@destIP+3
 14219   015D5C  C20A  F078         	movff	_udpPacketHeader+10,UDP_Start@srcPort
 14220   015D60  C20B  F079         	movff	_udpPacketHeader+11,UDP_Start@srcPort+1
 14221   015D64  0EEA               	movlw	234
 14222   015D66  0100               	movlb	0	; () banked
 14223   015D68  6F7B               	movwf	(UDP_Start@dstPort+1)& (0+255),b
 14224   015D6A  0E60               	movlw	96
 14225   015D6C  6F7A               	movwf	UDP_Start@dstPort& (0+255),b
 14226   015D6E  ECDF  F0BB         	call	_UDP_Start	;wreg free
 14227   015D72  0101               	movlb	1	; () banked
 14228   015D74  6F6A               	movwf	_ret& (0+255),b
 14229                           
 14230                           ; BSR set to: 1
 14231                           ;communication.c: 117:                 if(ret == SUCCESS){
 14232   015D76  056A               	decf	_ret& (0+255),w,b
 14233   015D78  A4D8               	btfss	status,2,c
 14234   015D7A  0012               	return	
 14235                           
 14236                           ; BSR set to: 1
 14237                           ;communication.c: 118:                     isUdpConnected = 1;
 14238   015D7C  0E01               	movlw	1
 14239   015D7E  6F6B               	movwf	_isUdpConnected& (0+255),b
 14240                           
 14241                           ;communication.c: 119:                     ethernetState = ETHERNET_DATA_TX;
 14242   015D80  0E04               	movlw	4
 14243   015D82  6F6C               	movwf	_ethernetState& (0+255),b
 14244   015D84  0012               	return	
 14245   015D86                     l16103:
 14246                           
 14247                           ; BSR set to: 0
 14248                           ;communication.c: 125:             if(CHECKxDATAxINxRECEIVExMAILxBOX() == 1){
 14249   015D86  EC1C  F0C1         	call	_CHECKxDATAxINxRECEIVExMAILxBOX	;wreg free
 14250   015D8A  06E8               	decf	wreg,f,c
 14251   015D8C  B4D8               	btfsc	status,2,c
 14252                           
 14253                           ; BSR set to: 1
 14254   015D8E  EC02  F0BD         	call	_GETxDATAxFROMxRECEIVExMAILxBOX	;wreg free
 14255   015D92                     l16107:
 14256                           
 14257                           ;communication.c: 135:             ethernetState = ETHERNET_DATA_TX;
 14258   015D92  0E04               	movlw	4
 14259   015D94  0101               	movlb	1	; () banked
 14260   015D96  6F6C               	movwf	_ethernetState& (0+255),b
 14261                           
 14262                           ;communication.c: 136:             break;
 14263   015D98  0012               	return	
 14264   015D9A                     l16109:
 14265                           
 14266                           ; BSR set to: 0
 14267                           ;communication.c: 142:             ret = UDP_Start(udpPacketHeader.destinationAddress, u
      +                          dpPacketHeader.sourcePortNumber, 60000);
 14268   015D9A  C200  F074         	movff	_udpPacketHeader,UDP_Start@destIP
 14269   015D9E  C201  F075         	movff	_udpPacketHeader+1,UDP_Start@destIP+1
 14270   015DA2  C202  F076         	movff	_udpPacketHeader+2,UDP_Start@destIP+2
 14271   015DA6  C203  F077         	movff	_udpPacketHeader+3,UDP_Start@destIP+3
 14272   015DAA  C20A  F078         	movff	_udpPacketHeader+10,UDP_Start@srcPort
 14273   015DAE  C20B  F079         	movff	_udpPacketHeader+11,UDP_Start@srcPort+1
 14274   015DB2  0EEA               	movlw	234
 14275   015DB4  6F7B               	movwf	(UDP_Start@dstPort+1)& (0+255),b
 14276   015DB6  0E60               	movlw	96
 14277   015DB8  6F7A               	movwf	UDP_Start@dstPort& (0+255),b
 14278   015DBA  ECDF  F0BB         	call	_UDP_Start	;wreg free
 14279   015DBE  0101               	movlb	1	; () banked
 14280   015DC0  6F6A               	movwf	_ret& (0+255),b
 14281                           
 14282                           ; BSR set to: 1
 14283                           ;communication.c: 143:             if(ret == SUCCESS){
 14284   015DC2  056A               	decf	_ret& (0+255),w,b
 14285   015DC4  A4D8               	btfss	status,2,c
 14286   015DC6  D018               	goto	l16121
 14287                           
 14288                           ; BSR set to: 1
 14289                           ;communication.c: 144:                 if (CheckDataInSendMailBox()){
 14290   015DC8  EC33  F0C1         	call	_CheckDataInSendMailBox	;wreg free
 14291   015DCC  0900               	iorlw	0
 14292   015DCE  B4D8               	btfsc	status,2,c
 14293   015DD0  D7E0               	goto	l16107
 14294                           
 14295                           ; BSR set to: 1
 14296                           ;communication.c: 145:                     udpTrans_t *udpSend;;communication.c: 146:   
      +                                            udpSend = GetDataFromSendMailBox();
 14297   015DD2  ECDC  F0BC         	call	_GetDataFromSendMailBox	;wreg free
 14298   015DD6  C005  F0E8         	movff	?_GetDataFromSendMailBox,PROCESSxETHxDATA@udpSend
 14299   015DDA  C006  F0E9         	movff	?_GetDataFromSendMailBox+1,PROCESSxETHxDATA@udpSend+1
 14300                           
 14301                           ; BSR set to: 1
 14302   015DDE  C0E8  F005         	movff	PROCESSxETHxDATA@udpSend,ETH_WriteBlock@buffer
 14303   015DE2  C0E9  F006         	movff	PROCESSxETHxDATA@udpSend+1,ETH_WriteBlock@buffer+1
 14304   015DE6  0E00               	movlw	0
 14305   015DE8  6E08               	movwf	(ETH_WriteBlock@length+1)^0,c
 14306   015DEA  0E0A               	movlw	10
 14307   015DEC  6E07               	movwf	ETH_WriteBlock@length^0,c
 14308   015DEE  ECEF  F0BE         	call	_ETH_WriteBlock	;wreg free
 14309                           
 14310                           ;communication.c: 148:                     UDP_Send();
 14311   015DF2  EC46  F0B5         	call	_UDP_Send	;wreg free
 14312   015DF6  D7CD               	goto	l16107
 14313   015DF8                     l16121:
 14314                           
 14315                           ; BSR set to: 1
 14316                           ;communication.c: 153:                 if(ret == BUFFER_BUSY){
 14317   015DF8  0E03               	movlw	3
 14318   015DFA  196A               	xorwf	_ret& (0+255),w,b
 14319   015DFC  A4D8               	btfss	status,2,c
 14320   015DFE  D7C9               	goto	l16107
 14321                           
 14322                           ; BSR set to: 1
 14323                           ;communication.c: 155:                     ETH_TxReset();
 14324   015E00  ECDA  F0C0         	call	_ETH_TxReset	;wreg free
 14325   015E04  D7C6               	goto	l16107
 14326   015E06                     l16127:
 14327                           
 14328                           ; BSR set to: 0
 14329   015E06  0E00               	movlw	0
 14330   015E08  0101               	movlb	1	; () banked
 14331   015E0A  6F6C               	movwf	_ethernetState& (0+255),b
 14332                           
 14333                           ;communication.c: 163:         break;
 14334   015E0C  0012               	return	
 14335   015E0E                     l16131:
 14336   015E0E  0101               	movlb	1	; () banked
 14337   015E10  516C               	movf	_ethernetState& (0+255),w,b
 14338   015E12  0100               	movlb	0	; () banked
 14339   015E14  6FE6               	movwf	??_PROCESSxETHxDATA& (0+255),b
 14340   015E16  6BE7               	clrf	(??_PROCESSxETHxDATA+1)& (0+255),b
 14341                           
 14342                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14343                           ; Switch size 1, requested type "simple"
 14344                           ; Number of cases is 1, Range of values is 0 to 0
 14345                           ; switch strategies available:
 14346                           ; Name         Instructions Cycles
 14347                           ; simple_byte            4     3 (average)
 14348                           ;	Chosen strategy is simple_byte
 14349   015E18  51E7               	movf	(??_PROCESSxETHxDATA+1)& (0+255),w,b
 14350   015E1A  0A00               	xorlw	0	; case 0
 14351   015E1C  A4D8               	btfss	status,2,c
 14352   015E1E  D7F3               	goto	l16127
 14353                           
 14354                           ; BSR set to: 0
 14355                           ; Switch size 1, requested type "simple"
 14356                           ; Number of cases is 4, Range of values is 0 to 4
 14357                           ; switch strategies available:
 14358                           ; Name         Instructions Cycles
 14359                           ; simple_byte           13     7 (average)
 14360                           ;	Chosen strategy is simple_byte
 14361   015E20  51E6               	movf	??_PROCESSxETHxDATA& (0+255),w,b
 14362   015E22  0A00               	xorlw	0	; case 0
 14363   015E24  B4D8               	btfsc	status,2,c
 14364   015E26  D76D               	goto	l16089
 14365   015E28  0A01               	xorlw	1	; case 1
 14366   015E2A  B4D8               	btfsc	status,2,c
 14367   015E2C  D772               	goto	l16093
 14368   015E2E  0A02               	xorlw	2	; case 3
 14369   015E30  B4D8               	btfsc	status,2,c
 14370   015E32  D7A9               	goto	l16103
 14371   015E34  0A07               	xorlw	7	; case 4
 14372   015E36  B4D8               	btfsc	status,2,c
 14373   015E38  D7B0               	goto	l16109
 14374   015E3A  D7E5               	goto	l16127
 14375   015E3C                     __end_of_PROCESSxETHxDATA:
 14376                           	callstack 0
 14377                           
 14378 ;; *************** function _UDP_Start *****************
 14379 ;; Defined at:
 14380 ;;		line 67 in file "mcc_generated_files/TCPIPLibrary/udpv4.c"
 14381 ;; Parameters:    Size  Location     Type
 14382 ;;  destIP          4   20[BANK0 ] unsigned long 
 14383 ;;  srcPort         2   24[BANK0 ] unsigned short 
 14384 ;;  dstPort         2   26[BANK0 ] unsigned short 
 14385 ;; Auto vars:     Size  Location     Type
 14386 ;;  ret             1   85[COMRAM] enum E617
 14387 ;; Return value:  Size  Location     Type
 14388 ;;                  1    wreg      enum E5840
 14389 ;; Registers used:
 14390 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14391 ;; Tracked objects:
 14392 ;;		On entry : 3F/0
 14393 ;;		On exit  : 0/0
 14394 ;;		Unchanged: 0/0
 14395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14396 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14397 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14399 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14400 ;;Total ram usage:        9 bytes
 14401 ;; Hardware stack levels used: 1
 14402 ;; Hardware stack levels required when called: 9
 14403 ;; This function calls:
 14404 ;;		_ETH_ResetByteCount
 14405 ;;		_ETH_Write16
 14406 ;;		_IPv4_Start
 14407 ;; This function is called by:
 14408 ;;		_PROCESSxETHxDATA
 14409 ;; This function uses a non-reentrant model
 14410 ;;
 14411                           
 14412                           	psect	text40
 14413   0177BE                     __ptext40:
 14414                           	callstack 0
 14415   0177BE                     _UDP_Start:
 14416                           	callstack 20
 14417                           
 14418                           ; BSR set to: 0
 14419                           ;mcc_generated_files/TCPIPLibrary/udpv4.c: 73:     ret = IPv4_Start(destIP,UDP_TCPIP);
 14420                           
 14421                           ; BSR set to: 0
 14422                           
 14423                           ; BSR set to: 1
 14424                           ;incstack = 0
 14425   0177BE  C074  F060         	movff	UDP_Start@destIP,IPv4_Start@destAddress
 14426   0177C2  C075  F061         	movff	UDP_Start@destIP+1,IPv4_Start@destAddress+1
 14427   0177C6  C076  F062         	movff	UDP_Start@destIP+2,IPv4_Start@destAddress+2
 14428   0177CA  C077  F063         	movff	UDP_Start@destIP+3,IPv4_Start@destAddress+3
 14429   0177CE  0E11               	movlw	17
 14430   0177D0  6F64               	movwf	IPv4_Start@protocol& (0+255),b
 14431   0177D2  EC62  F0A4         	call	_IPv4_Start	;wreg free
 14432   0177D6  6E56               	movwf	UDP_Start@ret^0,c
 14433                           
 14434                           ; BSR set to: 0
 14435                           ;mcc_generated_files/TCPIPLibrary/udpv4.c: 74:     if(ret == SUCCESS)
 14436   0177D8  0456               	decf	UDP_Start@ret^0,w,c
 14437   0177DA  A4D8               	btfss	status,2,c
 14438   0177DC  D01A               	goto	l15299
 14439                           
 14440                           ; BSR set to: 0
 14441                           ;mcc_generated_files/TCPIPLibrary/udpv4.c: 75:     {;mcc_generated_files/TCPIPLibrary/ud
      +                          pv4.c: 77:         ETH_ResetByteCount();
 14442   0177DE  ECD0  F0C1         	call	_ETH_ResetByteCount	;wreg free
 14443                           
 14444                           ;mcc_generated_files/TCPIPLibrary/udpv4.c: 80:         ETH_Write16(srcPort);
 14445   0177E2  C078  F005         	movff	UDP_Start@srcPort,ETH_Write16@data
 14446   0177E6  C079  F006         	movff	UDP_Start@srcPort+1,ETH_Write16@data+1
 14447   0177EA  EC7E  F0C1         	call	_ETH_Write16	;wreg free
 14448                           
 14449                           ;mcc_generated_files/TCPIPLibrary/udpv4.c: 83:         ETH_Write16(dstPort);
 14450   0177EE  C07A  F005         	movff	UDP_Start@dstPort,ETH_Write16@data
 14451   0177F2  C07B  F006         	movff	UDP_Start@dstPort+1,ETH_Write16@data+1
 14452   0177F6  EC7E  F0C1         	call	_ETH_Write16	;wreg free
 14453                           
 14454                           ;mcc_generated_files/TCPIPLibrary/udpv4.c: 86:         ETH_Write16(0);
 14455   0177FA  0E00               	movlw	0
 14456   0177FC  6E06               	movwf	(ETH_Write16@data+1)^0,c
 14457   0177FE  0E00               	movlw	0
 14458   017800  6E05               	movwf	ETH_Write16@data^0,c
 14459   017802  EC7E  F0C1         	call	_ETH_Write16	;wreg free
 14460                           
 14461                           ;mcc_generated_files/TCPIPLibrary/udpv4.c: 89:         ETH_Write16(0);
 14462   017806  0E00               	movlw	0
 14463   017808  6E06               	movwf	(ETH_Write16@data+1)^0,c
 14464   01780A  0E00               	movlw	0
 14465   01780C  6E05               	movwf	ETH_Write16@data^0,c
 14466   01780E  EC7E  F0C1         	call	_ETH_Write16	;wreg free
 14467   017812                     l15299:
 14468                           
 14469                           ;mcc_generated_files/TCPIPLibrary/udpv4.c: 92:     return ret;
 14470   017812  5056               	movf	UDP_Start@ret^0,w,c
 14471   017814  0012               	return		;funcret
 14472   017816                     __end_of_UDP_Start:
 14473                           	callstack 0
 14474                           
 14475 ;; *************** function _UDP_Send *****************
 14476 ;; Defined at:
 14477 ;;		line 95 in file "mcc_generated_files/TCPIPLibrary/udpv4.c"
 14478 ;; Parameters:    Size  Location     Type
 14479 ;;		None
 14480 ;; Auto vars:     Size  Location     Type
 14481 ;;  udpLength       2   49[COMRAM] unsigned short 
 14482 ;;  cksm            2   47[COMRAM] unsigned short 
 14483 ;;  ret             1    0        enum E617
 14484 ;; Return value:  Size  Location     Type
 14485 ;;                  1    wreg      enum E5840
 14486 ;; Registers used:
 14487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14488 ;; Tracked objects:
 14489 ;;		On entry : 0/1
 14490 ;;		On exit  : 0/0
 14491 ;;		Unchanged: 0/0
 14492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14494 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14495 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14496 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14497 ;;Total ram usage:        8 bytes
 14498 ;; Hardware stack levels used: 1
 14499 ;; Hardware stack levels required when called: 8
 14500 ;; This function calls:
 14501 ;;		_ETH_GetByteCount
 14502 ;;		_ETH_Insert
 14503 ;;		_ETH_TxComputeChecksum
 14504 ;;		_IPV4_Send
 14505 ;; This function is called by:
 14506 ;;		_PROCESSxETHxDATA
 14507 ;; This function uses a non-reentrant model
 14508 ;;
 14509                           
 14510                           	psect	text41
 14511   016A8C                     __ptext41:
 14512                           	callstack 0
 14513   016A8C                     _UDP_Send:
 14514                           	callstack 21
 14515                           
 14516                           ;mcc_generated_files/TCPIPLibrary/udpv4.c: 101:     udpLength = ETH_GetByteCount();
 14517                           
 14518                           ;incstack = 0
 14519   016A8C  EC28  F0C1         	call	_ETH_GetByteCount	;wreg free
 14520   016A90  C005  F032         	movff	?_ETH_GetByteCount,UDP_Send@udpLength
 14521   016A94  C006  F033         	movff	?_ETH_GetByteCount+1,UDP_Send@udpLength+1
 14522                           
 14523                           ; BSR set to: 14
 14524                           ;mcc_generated_files/TCPIPLibrary/udpv4.c: 102:     udpLength = ((((uint16_t)udpLength &
      +                           (uint16_t)0xFF00) >> 8) | (((uint16_t)udpLength & (uint16_t)0x00FF) << 8));
 14525   016A98  5032               	movf	UDP_Send@udpLength^0,w,c
 14526   016A9A  6E2D               	movwf	(??_UDP_Send+1)^0,c
 14527   016A9C  6A2C               	clrf	??_UDP_Send^0,c
 14528   016A9E  5033               	movf	(UDP_Send@udpLength+1)^0,w,c
 14529   016AA0  6E2E               	movwf	(??_UDP_Send+2)^0,c
 14530   016AA2  6A2F               	clrf	(??_UDP_Send+3)^0,c
 14531   016AA4  502C               	movf	??_UDP_Send^0,w,c
 14532   016AA6  102E               	iorwf	(??_UDP_Send+2)^0,w,c
 14533   016AA8  6E32               	movwf	UDP_Send@udpLength^0,c
 14534   016AAA  502D               	movf	(??_UDP_Send+1)^0,w,c
 14535   016AAC  102F               	iorwf	(??_UDP_Send+3)^0,w,c
 14536   016AAE  6E33               	movwf	(UDP_Send@udpLength+1)^0,c
 14537                           
 14538                           ; BSR set to: 14
 14539                           ;mcc_generated_files/TCPIPLibrary/udpv4.c: 103:     ETH_Insert((char *)&udpLength, 2, si
      +                          zeof(ethernetFrame_t) + sizeof(ipv4Header_t) + ((size_t)(((char*)&((udpHeader_t *)1)->le
      +                          ngth)-1)));
 14540   016AB0  0E32               	movlw	low UDP_Send@udpLength
 14541   016AB2  6E05               	movwf	ETH_Insert@data^0,c
 14542   016AB4  0E00               	movlw	0
 14543   016AB6  6E07               	movwf	(ETH_Insert@len+1)^0,c
 14544   016AB8  0E02               	movlw	2
 14545   016ABA  6E06               	movwf	ETH_Insert@len^0,c
 14546   016ABC  0E00               	movlw	0
 14547   016ABE  6E09               	movwf	(ETH_Insert@offset+1)^0,c
 14548   016AC0  0E26               	movlw	38
 14549   016AC2  6E08               	movwf	ETH_Insert@offset^0,c
 14550   016AC4  EC82  F0BB         	call	_ETH_Insert	;wreg free
 14551                           
 14552                           ;mcc_generated_files/TCPIPLibrary/udpv4.c: 104:     udpLength = ((((uint16_t)udpLength &
      +                           (uint16_t)0xFF00) >> 8) | (((uint16_t)udpLength & (uint16_t)0x00FF) << 8));
 14553   016AC8  5032               	movf	UDP_Send@udpLength^0,w,c
 14554   016ACA  6E2D               	movwf	(??_UDP_Send+1)^0,c
 14555   016ACC  6A2C               	clrf	??_UDP_Send^0,c
 14556   016ACE  5033               	movf	(UDP_Send@udpLength+1)^0,w,c
 14557   016AD0  6E2E               	movwf	(??_UDP_Send+2)^0,c
 14558   016AD2  6A2F               	clrf	(??_UDP_Send+3)^0,c
 14559   016AD4  502C               	movf	??_UDP_Send^0,w,c
 14560   016AD6  102E               	iorwf	(??_UDP_Send+2)^0,w,c
 14561   016AD8  6E32               	movwf	UDP_Send@udpLength^0,c
 14562   016ADA  502D               	movf	(??_UDP_Send+1)^0,w,c
 14563   016ADC  102F               	iorwf	(??_UDP_Send+3)^0,w,c
 14564   016ADE  6E33               	movwf	(UDP_Send@udpLength+1)^0,c
 14565                           
 14566                           ;mcc_generated_files/TCPIPLibrary/udpv4.c: 107:     cksm = udpLength + UDP_TCPIP;
 14567   016AE0  0E11               	movlw	17
 14568   016AE2  2432               	addwf	UDP_Send@udpLength^0,w,c
 14569   016AE4  6E30               	movwf	UDP_Send@cksm^0,c
 14570   016AE6  0E00               	movlw	0
 14571   016AE8  2033               	addwfc	(UDP_Send@udpLength+1)^0,w,c
 14572   016AEA  6E31               	movwf	(UDP_Send@cksm+1)^0,c
 14573                           
 14574                           ;mcc_generated_files/TCPIPLibrary/udpv4.c: 108:     cksm = ETH_TxComputeChecksum(sizeof(
      +                          ethernetFrame_t) + sizeof(ipv4Header_t) - 8, udpLength + 8, cksm);
 14575   016AEC  0E00               	movlw	0
 14576   016AEE  6E14               	movwf	(ETH_TxComputeChecksum@position+1)^0,c
 14577   016AF0  0E1A               	movlw	26
 14578   016AF2  6E13               	movwf	ETH_TxComputeChecksum@position^0,c
 14579   016AF4  0E08               	movlw	8
 14580   016AF6  2432               	addwf	UDP_Send@udpLength^0,w,c
 14581   016AF8  6E15               	movwf	ETH_TxComputeChecksum@len^0,c
 14582   016AFA  0E00               	movlw	0
 14583   016AFC  2033               	addwfc	(UDP_Send@udpLength+1)^0,w,c
 14584   016AFE  6E16               	movwf	(ETH_TxComputeChecksum@len+1)^0,c
 14585   016B00  C030  F017         	movff	UDP_Send@cksm,ETH_TxComputeChecksum@seed
 14586   016B04  C031  F018         	movff	UDP_Send@cksm+1,ETH_TxComputeChecksum@seed+1
 14587   016B08  EC78  F0B9         	call	_ETH_TxComputeChecksum	;wreg free
 14588   016B0C  C013  F030         	movff	?_ETH_TxComputeChecksum,UDP_Send@cksm
 14589   016B10  C014  F031         	movff	?_ETH_TxComputeChecksum+1,UDP_Send@cksm+1
 14590                           
 14591                           ;mcc_generated_files/TCPIPLibrary/udpv4.c: 111:     if (cksm == 0){
 14592   016B14  5030               	movf	UDP_Send@cksm^0,w,c
 14593   016B16  1031               	iorwf	(UDP_Send@cksm+1)^0,w,c
 14594   016B18  A4D8               	btfss	status,2,c
 14595   016B1A  D002               	goto	l15349
 14596                           
 14597                           ;mcc_generated_files/TCPIPLibrary/udpv4.c: 112:         cksm = 0xffff;
 14598   016B1C  6830               	setf	UDP_Send@cksm^0,c
 14599   016B1E  6831               	setf	(UDP_Send@cksm+1)^0,c
 14600   016B20                     l15349:
 14601                           
 14602                           ;mcc_generated_files/TCPIPLibrary/udpv4.c: 115:     ETH_Insert((char *)&cksm, 2, sizeof(
      +                          ethernetFrame_t) + sizeof(ipv4Header_t) + ((size_t)(((char*)&((udpHeader_t *)1)->checksu
      +                          m)-1)));
 14603   016B20  0E30               	movlw	low UDP_Send@cksm
 14604   016B22  6E05               	movwf	ETH_Insert@data^0,c
 14605   016B24  0E00               	movlw	0
 14606   016B26  6E07               	movwf	(ETH_Insert@len+1)^0,c
 14607   016B28  0E02               	movlw	2
 14608   016B2A  6E06               	movwf	ETH_Insert@len^0,c
 14609   016B2C  0E00               	movlw	0
 14610   016B2E  6E09               	movwf	(ETH_Insert@offset+1)^0,c
 14611   016B30  0E28               	movlw	40
 14612   016B32  6E08               	movwf	ETH_Insert@offset^0,c
 14613   016B34  EC82  F0BB         	call	_ETH_Insert	;wreg free
 14614   016B38  C032  F021         	movff	UDP_Send@udpLength,IPV4_Send@payloadLength
 14615   016B3C  C033  F022         	movff	UDP_Send@udpLength+1,IPV4_Send@payloadLength+1
 14616   016B40  ECFB  F0B8         	call	_IPV4_Send	;wreg free
 14617   016B44  0012               	return		;funcret
 14618   016B46                     __end_of_UDP_Send:
 14619                           	callstack 0
 14620                           
 14621 ;; *************** function _ETH_GetByteCount *****************
 14622 ;; Defined at:
 14623 ;;		line 1110 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 14624 ;; Parameters:    Size  Location     Type
 14625 ;;		None
 14626 ;; Auto vars:     Size  Location     Type
 14627 ;;		None
 14628 ;; Return value:  Size  Location     Type
 14629 ;;                  2    4[COMRAM] unsigned short 
 14630 ;; Registers used:
 14631 ;;		wreg, status,2, status,0
 14632 ;; Tracked objects:
 14633 ;;		On entry : 0/1
 14634 ;;		On exit  : 3F/E
 14635 ;;		Unchanged: 0/0
 14636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14637 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14640 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14641 ;;Total ram usage:        2 bytes
 14642 ;; Hardware stack levels used: 1
 14643 ;; Hardware stack levels required when called: 4
 14644 ;; This function calls:
 14645 ;;		Nothing
 14646 ;; This function is called by:
 14647 ;;		_UDP_Send
 14648 ;; This function uses a non-reentrant model
 14649 ;;
 14650                           
 14651                           	psect	text42
 14652   018250                     __ptext42:
 14653                           	callstack 0
 14654   018250                     _ETH_GetByteCount:
 14655                           	callstack 24
 14656                           
 14657                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1112:     return (EWRPT - ethData.s
      +                          aveWRPT);
 14658                           
 14659                           ;incstack = 0
 14660   018250  0101               	movlb	1	; () banked
 14661   018252  5128               	movf	(_ethData+4)& (0+255),w,b	;volatile
 14662   018254  010E               	movlb	14	; () banked
 14663   018256  5DE2               	subwf	226,w,b	;volatile
 14664   018258  6E05               	movwf	?_ETH_GetByteCount^0,c
 14665   01825A  0101               	movlb	1	; () banked
 14666   01825C  5129               	movf	(_ethData+5)& (0+255),w,b	;volatile
 14667   01825E  010E               	movlb	14	; () banked
 14668   018260  59E3               	subwfb	227,w,b	;volatile
 14669   018262  6E06               	movwf	(?_ETH_GetByteCount+1)^0,c
 14670                           
 14671                           ; BSR set to: 14
 14672   018264  0012               	return		;funcret
 14673   018266                     __end_of_ETH_GetByteCount:
 14674                           	callstack 0
 14675                           
 14676 ;; *************** function _Network_Manage *****************
 14677 ;; Defined at:
 14678 ;;		line 96 in file "mcc_generated_files/TCPIPLibrary/network.c"
 14679 ;; Parameters:    Size  Location     Type
 14680 ;;		None
 14681 ;; Auto vars:     Size  Location     Type
 14682 ;;  now             4  130[BANK0 ] unsigned long 
 14683 ;; Return value:  Size  Location     Type
 14684 ;;                  1    wreg      void 
 14685 ;; Registers used:
 14686 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 14687 ;; Tracked objects:
 14688 ;;		On entry : 0/1
 14689 ;;		On exit  : 3E/0
 14690 ;;		Unchanged: 0/0
 14691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14693 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14695 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14696 ;;Total ram usage:        4 bytes
 14697 ;; Hardware stack levels used: 1
 14698 ;; Hardware stack levels required when called: 14
 14699 ;; This function calls:
 14700 ;;		_ARPV4_Update
 14701 ;;		_ETH_EventHandler
 14702 ;;		_Network_Read
 14703 ;;		_time
 14704 ;; This function is called by:
 14705 ;;		_PROCESSxETHxDATA
 14706 ;; This function uses a non-reentrant model
 14707 ;;
 14708                           
 14709                           	psect	text43
 14710   017368                     __ptext43:
 14711                           	callstack 0
 14712   017368                     _Network_Manage:
 14713                           	callstack 15
 14714                           
 14715                           ;mcc_generated_files/TCPIPLibrary/network.c: 98:     time_t now;;mcc_generated_files/TCP
      +                          IPLibrary/network.c: 99:     static time_t nowPv = 0;;mcc_generated_files/TCPIPLibrary/n
      +                          etwork.c: 101:     ETH_EventHandler();
 14716                           
 14717                           ; BSR set to: 14
 14718                           ;incstack = 0
 14719   017368  ECB1  F0BB         	call	_ETH_EventHandler	;wreg free
 14720                           
 14721                           ;mcc_generated_files/TCPIPLibrary/network.c: 102:     Network_Read();
 14722   01736C  EC4D  F0B0         	call	_Network_Read	;wreg free
 14723                           
 14724                           ;mcc_generated_files/TCPIPLibrary/network.c: 105:     time(&now);
 14725   017370  0EE2               	movlw	low Network_Manage@now
 14726   017372  6E05               	movwf	time@t^0,c
 14727   017374  6A06               	clrf	(time@t+1)^0,c
 14728   017376  EC0B  F0BC         	call	_time	;wreg free
 14729                           
 14730                           ;mcc_generated_files/TCPIPLibrary/network.c: 106:     if(now >= arpTimer)
 14731   01737A  0101               	movlb	1	; () banked
 14732   01737C  518E               	movf	_arpTimer& (0+255),w,b
 14733   01737E  0100               	movlb	0	; () banked
 14734   017380  5DE2               	subwf	Network_Manage@now& (0+255),w,b
 14735   017382  0101               	movlb	1	; () banked
 14736   017384  518F               	movf	(_arpTimer+1)& (0+255),w,b
 14737   017386  0100               	movlb	0	; () banked
 14738   017388  59E3               	subwfb	(Network_Manage@now+1)& (0+255),w,b
 14739   01738A  0101               	movlb	1	; () banked
 14740   01738C  5190               	movf	(_arpTimer+2)& (0+255),w,b
 14741   01738E  0100               	movlb	0	; () banked
 14742   017390  59E4               	subwfb	(Network_Manage@now+2)& (0+255),w,b
 14743   017392  0101               	movlb	1	; () banked
 14744   017394  5191               	movf	(_arpTimer+3)& (0+255),w,b
 14745   017396  0100               	movlb	0	; () banked
 14746   017398  59E5               	subwfb	(Network_Manage@now+3)& (0+255),w,b
 14747   01739A  A0D8               	btfss	status,0,c
 14748   01739C  D015               	goto	l1963
 14749                           
 14750                           ; BSR set to: 0
 14751                           ;mcc_generated_files/TCPIPLibrary/network.c: 107:     {;mcc_generated_files/TCPIPLibrary
      +                          /network.c: 108:         ARPV4_Update();
 14752   01739E  ECEA  F0BF         	call	_ARPV4_Update	;wreg free
 14753                           
 14754                           ; BSR set to: 0
 14755                           ;mcc_generated_files/TCPIPLibrary/network.c: 109:         arpTimer = now + 10;
 14756   0173A2  0E0A               	movlw	10
 14757   0173A4  25E2               	addwf	Network_Manage@now& (0+255),w,b
 14758   0173A6  0101               	movlb	1	; () banked
 14759   0173A8  6F8E               	movwf	_arpTimer& (0+255),b
 14760   0173AA  0E00               	movlw	0
 14761   0173AC  0100               	movlb	0	; () banked
 14762   0173AE  21E3               	addwfc	(Network_Manage@now+1)& (0+255),w,b
 14763   0173B0  0101               	movlb	1	; () banked
 14764   0173B2  6F8F               	movwf	(_arpTimer+1)& (0+255),b
 14765   0173B4  0E00               	movlw	0
 14766   0173B6  0100               	movlb	0	; () banked
 14767   0173B8  21E4               	addwfc	(Network_Manage@now+2)& (0+255),w,b
 14768   0173BA  0101               	movlb	1	; () banked
 14769   0173BC  6F90               	movwf	(_arpTimer+2)& (0+255),b
 14770   0173BE  0E00               	movlw	0
 14771   0173C0  0100               	movlb	0	; () banked
 14772   0173C2  21E5               	addwfc	(Network_Manage@now+3)& (0+255),w,b
 14773   0173C4  0101               	movlb	1	; () banked
 14774   0173C6  6F91               	movwf	(_arpTimer+3)& (0+255),b
 14775   0173C8                     l1963:
 14776                           
 14777                           ;mcc_generated_files/TCPIPLibrary/network.c: 115:     nowPv = now;
 14778   0173C8  C0E2  F210         	movff	Network_Manage@now,Network_Manage@nowPv
 14779   0173CC  C0E3  F211         	movff	Network_Manage@now+1,Network_Manage@nowPv+1
 14780   0173D0  C0E4  F212         	movff	Network_Manage@now+2,Network_Manage@nowPv+2
 14781   0173D4  C0E5  F213         	movff	Network_Manage@now+3,Network_Manage@nowPv+3
 14782   0173D8  0012               	return		;funcret
 14783   0173DA                     __end_of_Network_Manage:
 14784                           	callstack 0
 14785                           
 14786 ;; *************** function _time *****************
 14787 ;; Defined at:
 14788 ;;		line 160 in file "mcc_generated_files/TCPIPLibrary/rtcc.c"
 14789 ;; Parameters:    Size  Location     Type
 14790 ;;  t               2    4[COMRAM] PTR unsigned long 
 14791 ;;		 -> Network_Manage@now(4), arpTimer(4), NULL(0), 
 14792 ;; Auto vars:     Size  Location     Type
 14793 ;;  the_time        4    9[COMRAM] unsigned long 
 14794 ;;  gie_val         1    8[COMRAM] _Bool 
 14795 ;; Return value:  Size  Location     Type
 14796 ;;                  4    4[COMRAM] unsigned long 
 14797 ;; Registers used:
 14798 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14799 ;; Tracked objects:
 14800 ;;		On entry : 30/1
 14801 ;;		On exit  : 0/0
 14802 ;;		Unchanged: 0/0
 14803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14804 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14805 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14807 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14808 ;;Total ram usage:        9 bytes
 14809 ;; Hardware stack levels used: 1
 14810 ;; Hardware stack levels required when called: 4
 14811 ;; This function calls:
 14812 ;;		Nothing
 14813 ;; This function is called by:
 14814 ;;		_timersInit
 14815 ;;		_Network_Manage
 14816 ;;		_LOG_Init
 14817 ;; This function uses a non-reentrant model
 14818 ;;
 14819                           
 14820                           	psect	text44
 14821   017816                     __ptext44:
 14822                           	callstack 0
 14823   017816                     _time:
 14824                           	callstack 23
 14825                           
 14826                           ;mcc_generated_files/TCPIPLibrary/rtcc.c: 160: time_t time(time_t *t);mcc_generated_file
      +                          s/TCPIPLibrary/rtcc.c: 161: {;mcc_generated_files/TCPIPLibrary/rtcc.c: 162:     _Bool gi
      +                          e_val;;mcc_generated_files/TCPIPLibrary/rtcc.c: 163:     time_t the_time;;mcc_generated_
      +                          files/TCPIPLibrary/rtcc.c: 165:     gie_val = (_Bool)GIE;
 14827                           
 14828                           ;incstack = 0
 14829   017816  0E00               	movlw	0
 14830   017818  BEF2               	btfsc	4082,7,c	;volatile
 14831   01781A  0E01               	movlw	1
 14832   01781C  6E09               	movwf	time@gie_val^0,c
 14833                           
 14834                           ;mcc_generated_files/TCPIPLibrary/rtcc.c: 166:     (INTCONbits.GIE = 0);
 14835   01781E  9EF2               	bcf	242,7,c	;volatile
 14836                           
 14837                           ;mcc_generated_files/TCPIPLibrary/rtcc.c: 167:     the_time = deviceTime;
 14838   017820  C12A  F00A         	movff	_deviceTime,time@the_time	;volatile
 14839   017824  C12B  F00B         	movff	_deviceTime+1,time@the_time+1	;volatile
 14840   017828  C12C  F00C         	movff	_deviceTime+2,time@the_time+2	;volatile
 14841   01782C  C12D  F00D         	movff	_deviceTime+3,time@the_time+3	;volatile
 14842                           
 14843                           ;mcc_generated_files/TCPIPLibrary/rtcc.c: 168:     GIE = gie_val;
 14844   017830  B009               	btfsc	time@gie_val^0,0,c
 14845   017832  D002               	bra	u12095
 14846   017834  9EF2               	bcf	4082,7,c	;volatile
 14847   017836  D001               	bra	u12096
 14848   017838                     u12095:
 14849   017838  8EF2               	bsf	4082,7,c	;volatile
 14850   01783A                     u12096:
 14851                           
 14852                           ;mcc_generated_files/TCPIPLibrary/rtcc.c: 170:     if(t)
 14853   01783A  5005               	movf	time@t^0,w,c
 14854   01783C  1006               	iorwf	(time@t+1)^0,w,c
 14855   01783E  B4D8               	btfsc	status,2,c
 14856   017840  D00C               	goto	l14103
 14857                           
 14858                           ;mcc_generated_files/TCPIPLibrary/rtcc.c: 171:     {;mcc_generated_files/TCPIPLibrary/rt
      +                          cc.c: 172:         *t = the_time;
 14859   017842  C005  FFD9         	movff	time@t,fsr2l
 14860   017846  C006  FFDA         	movff	time@t+1,fsr2h
 14861   01784A  C00A  FFDE         	movff	time@the_time,postinc2
 14862   01784E  C00B  FFDE         	movff	time@the_time+1,postinc2
 14863   017852  C00C  FFDE         	movff	time@the_time+2,postinc2
 14864   017856  C00D  FFDE         	movff	time@the_time+3,postinc2
 14865   01785A                     l14103:
 14866                           
 14867                           ;mcc_generated_files/TCPIPLibrary/rtcc.c: 175:     return (the_time);
 14868   01785A  C00A  F005         	movff	time@the_time,?_time
 14869   01785E  C00B  F006         	movff	time@the_time+1,?_time+1
 14870   017862  C00C  F007         	movff	time@the_time+2,?_time+2
 14871   017866  C00D  F008         	movff	time@the_time+3,?_time+3
 14872   01786A  0012               	return		;funcret
 14873   01786C                     __end_of_time:
 14874                           	callstack 0
 14875                           
 14876 ;; *************** function _Network_Read *****************
 14877 ;; Defined at:
 14878 ;;		line 118 in file "mcc_generated_files/TCPIPLibrary/network.c"
 14879 ;; Parameters:    Size  Location     Type
 14880 ;;		None
 14881 ;; Auto vars:     Size  Location     Type
 14882 ;;  t               4   80[BANK1 ] long 
 14883 ;;  debug_str      80    0[BANK1 ] unsigned char [80]
 14884 ;;  header         14   84[BANK1 ] struct .
 14885 ;; Return value:  Size  Location     Type
 14886 ;;                  1    wreg      void 
 14887 ;; Registers used:
 14888 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 14889 ;; Tracked objects:
 14890 ;;		On entry : 0/1
 14891 ;;		On exit  : 30/0
 14892 ;;		Unchanged: 0/0
 14893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14895 ;;      Locals:         0       0      98       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14896 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14897 ;;      Totals:         0       4      98       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14898 ;;Total ram usage:      102 bytes
 14899 ;; Hardware stack levels used: 1
 14900 ;; Hardware stack levels required when called: 13
 14901 ;; This function calls:
 14902 ;;		_ARPV4_Packet
 14903 ;;		_ETH_Flush
 14904 ;;		_ETH_NextPacketUpdate
 14905 ;;		_ETH_ReadBlock
 14906 ;;		_IPV4_Packet
 14907 ;;		_Network_SaveStartPosition
 14908 ;;		_sprintf
 14909 ;; This function is called by:
 14910 ;;		_Network_Manage
 14911 ;; This function uses a non-reentrant model
 14912 ;;
 14913                           
 14914                           	psect	text45
 14915   01609A                     __ptext45:
 14916                           	callstack 0
 14917   01609A                     _Network_Read:
 14918                           	callstack 15
 14919                           
 14920                           ;mcc_generated_files/TCPIPLibrary/network.c: 120:     ethernetFrame_t header;;mcc_genera
      +                          ted_files/TCPIPLibrary/network.c: 121:     char debug_str[80];;mcc_generated_files/TCPIP
      +                          Library/network.c: 123:     if(ethData.pktReady)
 14921                           
 14922                           ;incstack = 0
 14923   01609A  0101               	movlb	1	; () banked
 14924   01609C  A324               	btfss	_ethData& (0+255),1,b	;volatile
 14925   01609E  0012               	return	
 14926                           
 14927                           ; BSR set to: 1
 14928                           ;mcc_generated_files/TCPIPLibrary/network.c: 124:     {;mcc_generated_files/TCPIPLibrary
      +                          /network.c: 125:         ETH_NextPacketUpdate();
 14929   0160A0  ECDC  F0BD         	call	_ETH_NextPacketUpdate	;wreg free
 14930                           
 14931                           ; BSR set to: 1
 14932                           ;mcc_generated_files/TCPIPLibrary/network.c: 126:         ETH_ReadBlock((char *)&header,
      +                           sizeof(header));
 14933   0160A4  0EE6               	movlw	low Network_Read@header
 14934   0160A6  6E05               	movwf	ETH_ReadBlock@buffer^0,c
 14935   0160A8  0E01               	movlw	high Network_Read@header
 14936   0160AA  6E06               	movwf	(ETH_ReadBlock@buffer+1)^0,c
 14937   0160AC  0E00               	movlw	0
 14938   0160AE  6E08               	movwf	(ETH_ReadBlock@length+1)^0,c
 14939   0160B0  0E0E               	movlw	14
 14940   0160B2  6E07               	movwf	ETH_ReadBlock@length^0,c
 14941   0160B4  EC8C  F0BC         	call	_ETH_ReadBlock	;wreg free
 14942                           
 14943                           ; BSR set to: 1
 14944                           ;mcc_generated_files/TCPIPLibrary/network.c: 127:         header.id.type = ((((uint16_t)
      +                          header.id.type & (uint16_t)0xFF00) >> 8) | (((uint16_t)header.id.type & (uint16_t)0x00FF
      +                          ) << 8));
 14945   0160B8  51F2               	movf	(Network_Read@header+12)& (0+255),w,b
 14946   0160BA  0100               	movlb	0	; () banked
 14947   0160BC  6FDF               	movwf	(??_Network_Read+1)& (0+255),b
 14948   0160BE  6BDE               	clrf	??_Network_Read& (0+255),b
 14949   0160C0  EE21  F0F2         	lfsr	2,Network_Read@header+12
 14950   0160C4  CFDE F0E0          	movff	postinc2,??_Network_Read+2
 14951   0160C8  CFDD F0E1          	movff	postdec2,??_Network_Read+3
 14952   0160CC  C0E1  F0E0         	movff	??_Network_Read+3,??_Network_Read+2
 14953   0160D0  6BE1               	clrf	(??_Network_Read+3)& (0+255),b
 14954   0160D2  0EFF               	movlw	255
 14955   0160D4  17E0               	andwf	(??_Network_Read+2)& (0+255),f,b
 14956   0160D6  0E00               	movlw	0
 14957   0160D8  17E1               	andwf	(??_Network_Read+3)& (0+255),f,b
 14958   0160DA  51DE               	movf	??_Network_Read& (0+255),w,b
 14959   0160DC  11E0               	iorwf	(??_Network_Read+2)& (0+255),w,b
 14960   0160DE  0101               	movlb	1	; () banked
 14961   0160E0  6FF2               	movwf	(Network_Read@header+12)& (0+255),b
 14962   0160E2  0100               	movlb	0	; () banked
 14963   0160E4  51DF               	movf	(??_Network_Read+1)& (0+255),w,b
 14964   0160E6  11E1               	iorwf	(??_Network_Read+3)& (0+255),w,b
 14965   0160E8  0101               	movlb	1	; () banked
 14966   0160EA  6FF3               	movwf	(Network_Read@header+13)& (0+255),b
 14967                           
 14968                           ; BSR set to: 1
 14969                           ;mcc_generated_files/TCPIPLibrary/network.c: 128:         Network_SaveStartPosition();
 14970   0160EC  EC70  F0C1         	call	_Network_SaveStartPosition	;wreg free
 14971                           
 14972                           ;mcc_generated_files/TCPIPLibrary/network.c: 129:         switch (header.id.type)
 14973   0160F0  D03E               	goto	l14787
 14974   0160F2                     l14773:
 14975                           
 14976                           ; BSR set to: 0
 14977                           ;mcc_generated_files/TCPIPLibrary/network.c: 136:                 ARPV4_Packet();
 14978   0160F2  EC34  F088         	call	_ARPV4_Packet	;wreg free
 14979                           
 14980                           ;mcc_generated_files/TCPIPLibrary/network.c: 137:                 break;
 14981   0160F6  D05C               	goto	l14789
 14982   0160F8                     l14775:
 14983                           
 14984                           ; BSR set to: 0
 14985                           ;mcc_generated_files/TCPIPLibrary/network.c: 140:                 IPV4_Packet();
 14986   0160F8  EC45  F08B         	call	_IPV4_Packet	;wreg free
 14987                           
 14988                           ;mcc_generated_files/TCPIPLibrary/network.c: 141:                 break;
 14989   0160FC  D059               	goto	l14789
 14990   0160FE                     l14777:
 14991                           
 14992                           ; BSR set to: 0
 14993                           ;mcc_generated_files/TCPIPLibrary/network.c: 146:                 {;mcc_generated_files/
      +                          TCPIPLibrary/network.c: 147:                     long t = header.id.type;
 14994   0160FE  C1F2  F1E2         	movff	Network_Read@header+12,Network_Read@t
 14995   016102  C1F3  F1E3         	movff	Network_Read@header+13,Network_Read@t+1
 14996   016106  0101               	movlb	1	; () banked
 14997   016108  6BE4               	clrf	(Network_Read@t+2)& (0+255),b
 14998   01610A  6BE5               	clrf	(Network_Read@t+3)& (0+255),b
 14999                           
 15000                           ; BSR set to: 1
 15001                           ;mcc_generated_files/TCPIPLibrary/network.c: 148:                     if(t < 0x05dc)
 15002   01610C  BFE5               	btfsc	(Network_Read@t+3)& (0+255),7,b
 15003   01610E  D009               	goto	u13300
 15004   016110  51E5               	movf	(Network_Read@t+3)& (0+255),w,b
 15005   016112  11E4               	iorwf	(Network_Read@t+2)& (0+255),w,b
 15006   016114  E119               	bnz	l14783
 15007   016116  0EDC               	movlw	220
 15008   016118  5DE2               	subwf	Network_Read@t& (0+255),w,b
 15009   01611A  0E05               	movlw	5
 15010   01611C  59E3               	subwfb	(Network_Read@t+1)& (0+255),w,b
 15011   01611E  B0D8               	btfsc	status,0,c
 15012   016120  D013               	goto	l14783
 15013   016122                     u13300:
 15014                           
 15015                           ; BSR set to: 1
 15016                           ;mcc_generated_files/TCPIPLibrary/network.c: 149:                     {;mcc_generated_fi
      +                          les/TCPIPLibrary/network.c: 150:                         sprintf(debug_str,"802.3 length
      +                           0x%04lX",t);
 15017   016122  0E92               	movlw	low Network_Read@debug_str
 15018   016124  6E48               	movwf	sprintf@s^0,c
 15019   016126  0E01               	movlw	high Network_Read@debug_str
 15020   016128  6E49               	movwf	(sprintf@s+1)^0,c
 15021   01612A  0E9B               	movlw	low STR_17
 15022   01612C  6E4A               	movwf	sprintf@fmt^0,c
 15023   01612E  0EFE               	movlw	high STR_17
 15024   016130  6E4B               	movwf	(sprintf@fmt+1)^0,c
 15025   016132  C1E2  F04C         	movff	Network_Read@t,?_sprintf+4
 15026   016136  C1E3  F04D         	movff	Network_Read@t+1,?_sprintf+5
 15027   01613A  C1E4  F04E         	movff	Network_Read@t+2,?_sprintf+6
 15028   01613E  C1E5  F04F         	movff	Network_Read@t+3,?_sprintf+7
 15029   016142  ECB9  F0BD         	call	_sprintf	;wreg free
 15030                           
 15031                           ;mcc_generated_files/TCPIPLibrary/network.c: 151:                     }
 15032   016146  D034               	goto	l14789
 15033   016148                     l14783:
 15034                           
 15035                           ; BSR set to: 1
 15036                           ;mcc_generated_files/TCPIPLibrary/network.c: 153:                         sprintf(debug_
      +                          str,"802.3 type 0x%04lX",t);
 15037   016148  0E92               	movlw	low Network_Read@debug_str
 15038   01614A  6E48               	movwf	sprintf@s^0,c
 15039   01614C  0E01               	movlw	high Network_Read@debug_str
 15040   01614E  6E49               	movwf	(sprintf@s+1)^0,c
 15041   016150  0E38               	movlw	low STR_18
 15042   016152  6E4A               	movwf	sprintf@fmt^0,c
 15043   016154  0EFF               	movlw	high STR_18
 15044   016156  6E4B               	movwf	(sprintf@fmt+1)^0,c
 15045   016158  C1E2  F04C         	movff	Network_Read@t,?_sprintf+4
 15046   01615C  C1E3  F04D         	movff	Network_Read@t+1,?_sprintf+5
 15047   016160  C1E4  F04E         	movff	Network_Read@t+2,?_sprintf+6
 15048   016164  C1E5  F04F         	movff	Network_Read@t+3,?_sprintf+7
 15049   016168  ECB9  F0BD         	call	_sprintf	;wreg free
 15050   01616C  D021               	goto	l14789
 15051   01616E                     l14787:
 15052   01616E  EE21  F0F2         	lfsr	2,Network_Read@header+12
 15053   016172  CFDE F0DE          	movff	postinc2,??_Network_Read
 15054   016176  CFDD F0DF          	movff	postdec2,??_Network_Read+1
 15055                           
 15056                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
 15057                           ; Switch size 1, requested type "simple"
 15058                           ; Number of cases is 3, Range of values is 8 to 134
 15059                           ; switch strategies available:
 15060                           ; Name         Instructions Cycles
 15061                           ; simple_byte           10     6 (average)
 15062                           ;	Chosen strategy is simple_byte
 15063   01617A  0100               	movlb	0	; () banked
 15064   01617C  51DF               	movf	(??_Network_Read+1)& (0+255),w,b
 15065   01617E  0A08               	xorlw	8	; case 8
 15066   016180  B4D8               	btfsc	status,2,c
 15067   016182  D007               	goto	l16927
 15068   016184  0A89               	xorlw	137	; case 129
 15069   016186  B4D8               	btfsc	status,2,c
 15070   016188  D00C               	goto	l16929
 15071   01618A  0A07               	xorlw	7	; case 134
 15072   01618C  B4D8               	btfsc	status,2,c
 15073   01618E  D00C               	goto	l16931
 15074   016190  D7B6               	goto	l14777
 15075   016192                     l16927:
 15076                           
 15077                           ; BSR set to: 0
 15078                           ; Switch size 1, requested type "simple"
 15079                           ; Number of cases is 2, Range of values is 0 to 6
 15080                           ; switch strategies available:
 15081                           ; Name         Instructions Cycles
 15082                           ; simple_byte            7     4 (average)
 15083                           ;	Chosen strategy is simple_byte
 15084   016192  51DE               	movf	??_Network_Read& (0+255),w,b
 15085   016194  0A00               	xorlw	0	; case 0
 15086   016196  B4D8               	btfsc	status,2,c
 15087   016198  D7AF               	goto	l14775
 15088   01619A  0A06               	xorlw	6	; case 6
 15089   01619C  B4D8               	btfsc	status,2,c
 15090   01619E  D7A9               	goto	l14773
 15091   0161A0  D7AE               	goto	l14777
 15092   0161A2                     l16929:
 15093                           
 15094                           ; BSR set to: 0
 15095                           ; Switch size 1, requested type "simple"
 15096                           ; Number of cases is 1, Range of values is 0 to 0
 15097                           ; switch strategies available:
 15098                           ; Name         Instructions Cycles
 15099                           ; simple_byte            4     3 (average)
 15100                           ;	Chosen strategy is simple_byte
 15101   0161A2  51DE               	movf	??_Network_Read& (0+255),w,b
 15102   0161A4  0A00               	xorlw	0	; case 0
 15103   0161A6  D002               	goto	L24
 15104   0161A8                     l16931:
 15105                           
 15106                           ; BSR set to: 0
 15107                           ; Switch size 1, requested type "simple"
 15108                           ; Number of cases is 1, Range of values is 221 to 221
 15109                           ; switch strategies available:
 15110                           ; Name         Instructions Cycles
 15111                           ; simple_byte            4     3 (average)
 15112                           ;	Chosen strategy is simple_byte
 15113   0161A8  51DE               	movf	??_Network_Read& (0+255),w,b
 15114   0161AA  0ADD               	xorlw	221	; case 221
 15115   0161AC                     L24:
 15116   0161AC  A4D8               	btfss	status,2,c
 15117   0161AE  D7A7               	goto	l14777
 15118   0161B0                     l14789:
 15119                           
 15120                           ;mcc_generated_files/TCPIPLibrary/network.c: 159:         ETH_Flush();
 15121   0161B0  EC8D  F0BA         	call	_ETH_Flush	;wreg free
 15122   0161B4  0012               	return		;funcret
 15123   0161B6                     __end_of_Network_Read:
 15124                           	callstack 0
 15125                           
 15126 ;; *************** function _Network_SaveStartPosition *****************
 15127 ;; Defined at:
 15128 ;;		line 163 in file "mcc_generated_files/TCPIPLibrary/network.c"
 15129 ;; Parameters:    Size  Location     Type
 15130 ;;		None
 15131 ;; Auto vars:     Size  Location     Type
 15132 ;;		None
 15133 ;; Return value:  Size  Location     Type
 15134 ;;                  1    wreg      void 
 15135 ;; Registers used:
 15136 ;;		cstack
 15137 ;; Tracked objects:
 15138 ;;		On entry : 3F/1
 15139 ;;		On exit  : 3E/0
 15140 ;;		Unchanged: 3E/0
 15141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15146 ;;Total ram usage:        0 bytes
 15147 ;; Hardware stack levels used: 1
 15148 ;; Hardware stack levels required when called: 5
 15149 ;; This function calls:
 15150 ;;		_ETH_GetReadPtr
 15151 ;; This function is called by:
 15152 ;;		_Network_Read
 15153 ;; This function uses a non-reentrant model
 15154 ;;
 15155                           
 15156                           	psect	text46
 15157   0182E0                     __ptext46:
 15158                           	callstack 0
 15159   0182E0                     _Network_SaveStartPosition:
 15160                           	callstack 22
 15161                           
 15162                           ; BSR set to: 1
 15163                           ;mcc_generated_files/TCPIPLibrary/network.c: 165:     networkStartPosition = ETH_GetRead
      +                          Ptr();
 15164                           
 15165                           ;incstack = 0
 15166   0182E0  ECAD  F0C1         	call	_ETH_GetReadPtr	;wreg free
 15167   0182E4  C005  F14B         	movff	?_ETH_GetReadPtr,_networkStartPosition
 15168   0182E8  C006  F14C         	movff	?_ETH_GetReadPtr+1,_networkStartPosition+1
 15169   0182EC  0012               	return		;funcret
 15170   0182EE                     __end_of_Network_SaveStartPosition:
 15171                           	callstack 0
 15172                           
 15173 ;; *************** function _IPV4_Packet *****************
 15174 ;; Defined at:
 15175 ;;		line 114 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
 15176 ;; Parameters:    Size  Location     Type
 15177 ;;		None
 15178 ;; Auto vars:     Size  Location     Type
 15179 ;;  msg            40   81[BANK0 ] unsigned char [40]
 15180 ;;  cksm            2  124[BANK0 ] unsigned short 
 15181 ;;  length          2  121[BANK0 ] unsigned short 
 15182 ;;  hdrLen          1  123[BANK0 ] unsigned char 
 15183 ;; Return value:  Size  Location     Type
 15184 ;;                  1    wreg      enum E933
 15185 ;; Registers used:
 15186 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 15187 ;; Tracked objects:
 15188 ;;		On entry : 0/0
 15189 ;;		On exit  : 0/0
 15190 ;;		Unchanged: 0/0
 15191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15193 ;;      Locals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15194 ;;      Temps:          0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15195 ;;      Totals:         0      77       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15196 ;;Total ram usage:       77 bytes
 15197 ;; Hardware stack levels used: 1
 15198 ;; Hardware stack levels required when called: 12
 15199 ;; This function calls:
 15200 ;;		_ETH_Dump
 15201 ;;		_ETH_ReadBlock
 15202 ;;		_ETH_RxComputeChecksum
 15203 ;;		_ICMP_Receive
 15204 ;;		_IPV4_PseudoHeaderChecksum
 15205 ;;		_UDP_Receive
 15206 ;;		_getHeaderLen
 15207 ;;		_sprintf
 15208 ;; This function is called by:
 15209 ;;		_Network_Read
 15210 ;; This function uses a non-reentrant model
 15211 ;;
 15212                           
 15213                           	psect	text47
 15214   01168A                     __ptext47:
 15215                           	callstack 0
 15216   01168A                     _IPV4_Packet:
 15217                           	callstack 15
 15218                           
 15219                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 117:     uint16_t length = 0;
 15220                           
 15221                           ;incstack = 0
 15222   01168A  0E00               	movlw	0
 15223   01168C  0100               	movlb	0	; () banked
 15224   01168E  6FDA               	movwf	(IPV4_Packet@length+1)& (0+255),b
 15225   011690  0E00               	movlw	0
 15226   011692  6FD9               	movwf	IPV4_Packet@length& (0+255),b
 15227                           
 15228                           ; BSR set to: 0
 15229                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 118:     char msg[40];;mcc_generated_files/TCP
      +                          IPLibrary/ipv4.c: 119:     uint8_t hdrLen;;mcc_generated_files/TCPIPLibrary/ipv4.c: 122:
      +                               hdrLen = getHeaderLen();
 15230   011694  EC5A  F0BE         	call	_getHeaderLen	;wreg free
 15231   011698  0100               	movlb	0	; () banked
 15232   01169A  6FDB               	movwf	IPV4_Packet@hdrLen& (0+255),b
 15233                           
 15234                           ; BSR set to: 0
 15235                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 123:     cksm = ETH_RxComputeChecksum(hdrLen, 
      +                          0);
 15236   01169C  C0DB  F013         	movff	IPV4_Packet@hdrLen,ETH_RxComputeChecksum@len
 15237   0116A0  6A14               	clrf	(ETH_RxComputeChecksum@len+1)^0,c
 15238   0116A2  0E00               	movlw	0
 15239   0116A4  6E16               	movwf	(ETH_RxComputeChecksum@seed+1)^0,c
 15240   0116A6  0E00               	movlw	0
 15241   0116A8  6E15               	movwf	ETH_RxComputeChecksum@seed^0,c
 15242   0116AA  EC99  F0B7         	call	_ETH_RxComputeChecksum	;wreg free
 15243   0116AE  C013  F0DC         	movff	?_ETH_RxComputeChecksum,IPV4_Packet@cksm
 15244   0116B2  C014  F0DD         	movff	?_ETH_RxComputeChecksum+1,IPV4_Packet@cksm+1
 15245                           
 15246                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 124:     if (cksm != 0)
 15247   0116B6  0100               	movlb	0	; () banked
 15248   0116B8  51DC               	movf	IPV4_Packet@cksm& (0+255),w,b
 15249   0116BA  11DD               	iorwf	(IPV4_Packet@cksm+1)& (0+255),w,b
 15250   0116BC  A4D8               	btfss	status,2,c
 15251   0116BE  0012               	return	
 15252                           
 15253                           ; BSR set to: 0
 15254                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 129:     ETH_ReadBlock((char *)&ipv4Header, si
      +                          zeof(ipv4Header_t));
 15255   0116C0  0E6E               	movlw	low _ipv4Header
 15256   0116C2  6E05               	movwf	ETH_ReadBlock@buffer^0,c
 15257   0116C4  0E01               	movlw	high _ipv4Header
 15258   0116C6  6E06               	movwf	(ETH_ReadBlock@buffer+1)^0,c
 15259   0116C8  0E00               	movlw	0
 15260   0116CA  6E08               	movwf	(ETH_ReadBlock@length+1)^0,c
 15261   0116CC  0E14               	movlw	20
 15262   0116CE  6E07               	movwf	ETH_ReadBlock@length^0,c
 15263   0116D0  EC8C  F0BC         	call	_ETH_ReadBlock	;wreg free
 15264                           
 15265                           ; BSR set to: 1
 15266                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 130:     if(ipv4Header.version != 4)
 15267   0116D4  396E               	swapf	_ipv4Header& (0+255),w,b
 15268   0116D6  0B0F               	andlw	15
 15269   0116D8  0A04               	xorlw	4
 15270   0116DA  A4D8               	btfss	status,2,c
 15271   0116DC  0012               	return	
 15272                           
 15273                           ; BSR set to: 1
 15274                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 135:     ipv4Header.dstIpAddress = ((((uint32_
      +                          t)ipv4Header.dstIpAddress&(uint32_t)0xff000000) >> 24) | (((uint32_t)ipv4Header.dstIpAdd
      +                          ress&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)ipv4Header.dstIpAddress&(uint32_t)0x0000f
      +                          f00) << 8) | (((uint32_t)ipv4Header.dstIpAddress&(uint32_t)0x000000ff) << 24) );
 15275   0116DE  0EFF               	movlw	255
 15276   0116E0  157E               	andwf	(_ipv4Header+16)& (0+255),w,b
 15277   0116E2  0100               	movlb	0	; () banked
 15278   0116E4  6F91               	movwf	??_IPV4_Packet& (0+255),b
 15279   0116E6  0E00               	movlw	0
 15280   0116E8  0101               	movlb	1	; () banked
 15281   0116EA  157F               	andwf	(_ipv4Header+17)& (0+255),w,b
 15282   0116EC  0100               	movlb	0	; () banked
 15283   0116EE  6F92               	movwf	(??_IPV4_Packet+1)& (0+255),b
 15284   0116F0  0E00               	movlw	0
 15285   0116F2  0101               	movlb	1	; () banked
 15286   0116F4  1580               	andwf	(_ipv4Header+18)& (0+255),w,b
 15287   0116F6  0100               	movlb	0	; () banked
 15288   0116F8  6F93               	movwf	(??_IPV4_Packet+2)& (0+255),b
 15289   0116FA  0E00               	movlw	0
 15290   0116FC  0101               	movlb	1	; () banked
 15291   0116FE  1581               	andwf	(_ipv4Header+19)& (0+255),w,b
 15292   011700  0100               	movlb	0	; () banked
 15293   011702  6F94               	movwf	(??_IPV4_Packet+3)& (0+255),b
 15294   011704  C091  F094         	movff	??_IPV4_Packet,??_IPV4_Packet+3
 15295   011708  6B93               	clrf	(??_IPV4_Packet+2)& (0+255),b
 15296   01170A  6B92               	clrf	(??_IPV4_Packet+1)& (0+255),b
 15297   01170C  6B91               	clrf	??_IPV4_Packet& (0+255),b
 15298   01170E  EE21  F07E         	lfsr	2,_ipv4Header+16
 15299   011712  0E00               	movlw	0
 15300   011714  14DE               	andwf	postinc2,w,c
 15301   011716  6F95               	movwf	(??_IPV4_Packet+4)& (0+255),b
 15302   011718  0EFF               	movlw	255
 15303   01171A  14DE               	andwf	postinc2,w,c
 15304   01171C  6F96               	movwf	(??_IPV4_Packet+5)& (0+255),b
 15305   01171E  0E00               	movlw	0
 15306   011720  14DE               	andwf	postinc2,w,c
 15307   011722  6F97               	movwf	(??_IPV4_Packet+6)& (0+255),b
 15308   011724  0E00               	movlw	0
 15309   011726  14DE               	andwf	postinc2,w,c
 15310   011728  6F98               	movwf	(??_IPV4_Packet+7)& (0+255),b
 15311   01172A  C097  F098         	movff	??_IPV4_Packet+6,??_IPV4_Packet+7
 15312   01172E  C096  F097         	movff	??_IPV4_Packet+5,??_IPV4_Packet+6
 15313   011732  C095  F096         	movff	??_IPV4_Packet+4,??_IPV4_Packet+5
 15314   011736  6B95               	clrf	(??_IPV4_Packet+4)& (0+255),b
 15315   011738  C17E  F099         	movff	_ipv4Header+16,??_IPV4_Packet+8
 15316   01173C  C17F  F09A         	movff	_ipv4Header+17,??_IPV4_Packet+9
 15317   011740  C180  F09B         	movff	_ipv4Header+18,??_IPV4_Packet+10
 15318   011744  C181  F09C         	movff	_ipv4Header+19,??_IPV4_Packet+11
 15319   011748  C09A  F099         	movff	??_IPV4_Packet+9,??_IPV4_Packet+8
 15320   01174C  C09B  F09A         	movff	??_IPV4_Packet+10,??_IPV4_Packet+9
 15321   011750  C09C  F09B         	movff	??_IPV4_Packet+11,??_IPV4_Packet+10
 15322   011754  6B9C               	clrf	(??_IPV4_Packet+11)& (0+255),b
 15323   011756  0E00               	movlw	0
 15324   011758  1599               	andwf	(??_IPV4_Packet+8)& (0+255),w,b
 15325   01175A  6F9D               	movwf	(??_IPV4_Packet+12)& (0+255),b
 15326   01175C  0EFF               	movlw	255
 15327   01175E  159A               	andwf	(??_IPV4_Packet+9)& (0+255),w,b
 15328   011760  6F9E               	movwf	(??_IPV4_Packet+13)& (0+255),b
 15329   011762  0E00               	movlw	0
 15330   011764  159B               	andwf	(??_IPV4_Packet+10)& (0+255),w,b
 15331   011766  6F9F               	movwf	(??_IPV4_Packet+14)& (0+255),b
 15332   011768  0E00               	movlw	0
 15333   01176A  159C               	andwf	(??_IPV4_Packet+11)& (0+255),w,b
 15334   01176C  6FA0               	movwf	(??_IPV4_Packet+15)& (0+255),b
 15335   01176E  C17E  F0A1         	movff	_ipv4Header+16,??_IPV4_Packet+16
 15336   011772  C17F  F0A2         	movff	_ipv4Header+17,??_IPV4_Packet+17
 15337   011776  C180  F0A3         	movff	_ipv4Header+18,??_IPV4_Packet+18
 15338   01177A  C181  F0A4         	movff	_ipv4Header+19,??_IPV4_Packet+19
 15339   01177E  0E19               	movlw	25
 15340   011780  D005               	goto	u12340
 15341   011782                     u12345:
 15342   011782  90D8               	bcf	status,0,c
 15343   011784  33A4               	rrcf	(??_IPV4_Packet+19)& (0+255),f,b
 15344   011786  33A3               	rrcf	(??_IPV4_Packet+18)& (0+255),f,b
 15345   011788  33A2               	rrcf	(??_IPV4_Packet+17)& (0+255),f,b
 15346   01178A  33A1               	rrcf	(??_IPV4_Packet+16)& (0+255),f,b
 15347   01178C                     u12340:
 15348   01178C  2EE8               	decfsz	wreg,f,c
 15349   01178E  D7F9               	goto	u12345
 15350   011790  0EFF               	movlw	255
 15351   011792  15A1               	andwf	(??_IPV4_Packet+16)& (0+255),w,b
 15352   011794  6FA5               	movwf	(??_IPV4_Packet+20)& (0+255),b
 15353   011796  0E00               	movlw	0
 15354   011798  15A2               	andwf	(??_IPV4_Packet+17)& (0+255),w,b
 15355   01179A  6FA6               	movwf	(??_IPV4_Packet+21)& (0+255),b
 15356   01179C  0E00               	movlw	0
 15357   01179E  15A3               	andwf	(??_IPV4_Packet+18)& (0+255),w,b
 15358   0117A0  6FA7               	movwf	(??_IPV4_Packet+22)& (0+255),b
 15359   0117A2  0E00               	movlw	0
 15360   0117A4  15A4               	andwf	(??_IPV4_Packet+19)& (0+255),w,b
 15361   0117A6  6FA8               	movwf	(??_IPV4_Packet+23)& (0+255),b
 15362   0117A8  519D               	movf	(??_IPV4_Packet+12)& (0+255),w,b
 15363   0117AA  11A5               	iorwf	(??_IPV4_Packet+20)& (0+255),w,b
 15364   0117AC  6FA9               	movwf	(??_IPV4_Packet+24)& (0+255),b
 15365   0117AE  519E               	movf	(??_IPV4_Packet+13)& (0+255),w,b
 15366   0117B0  11A6               	iorwf	(??_IPV4_Packet+21)& (0+255),w,b
 15367   0117B2  6FAA               	movwf	(??_IPV4_Packet+25)& (0+255),b
 15368   0117B4  519F               	movf	(??_IPV4_Packet+14)& (0+255),w,b
 15369   0117B6  11A7               	iorwf	(??_IPV4_Packet+22)& (0+255),w,b
 15370   0117B8  6FAB               	movwf	(??_IPV4_Packet+26)& (0+255),b
 15371   0117BA  51A0               	movf	(??_IPV4_Packet+15)& (0+255),w,b
 15372   0117BC  11A8               	iorwf	(??_IPV4_Packet+23)& (0+255),w,b
 15373   0117BE  6FAC               	movwf	(??_IPV4_Packet+27)& (0+255),b
 15374   0117C0  5195               	movf	(??_IPV4_Packet+4)& (0+255),w,b
 15375   0117C2  11A9               	iorwf	(??_IPV4_Packet+24)& (0+255),w,b
 15376   0117C4  6FAD               	movwf	(??_IPV4_Packet+28)& (0+255),b
 15377   0117C6  5196               	movf	(??_IPV4_Packet+5)& (0+255),w,b
 15378   0117C8  11AA               	iorwf	(??_IPV4_Packet+25)& (0+255),w,b
 15379   0117CA  6FAE               	movwf	(??_IPV4_Packet+29)& (0+255),b
 15380   0117CC  5197               	movf	(??_IPV4_Packet+6)& (0+255),w,b
 15381   0117CE  11AB               	iorwf	(??_IPV4_Packet+26)& (0+255),w,b
 15382   0117D0  6FAF               	movwf	(??_IPV4_Packet+30)& (0+255),b
 15383   0117D2  5198               	movf	(??_IPV4_Packet+7)& (0+255),w,b
 15384   0117D4  11AC               	iorwf	(??_IPV4_Packet+27)& (0+255),w,b
 15385   0117D6  6FB0               	movwf	(??_IPV4_Packet+31)& (0+255),b
 15386   0117D8  5191               	movf	??_IPV4_Packet& (0+255),w,b
 15387   0117DA  11AD               	iorwf	(??_IPV4_Packet+28)& (0+255),w,b
 15388   0117DC  0101               	movlb	1	; () banked
 15389   0117DE  6F7E               	movwf	(_ipv4Header+16)& (0+255),b
 15390   0117E0  0100               	movlb	0	; () banked
 15391   0117E2  5192               	movf	(??_IPV4_Packet+1)& (0+255),w,b
 15392   0117E4  11AE               	iorwf	(??_IPV4_Packet+29)& (0+255),w,b
 15393   0117E6  0101               	movlb	1	; () banked
 15394   0117E8  6F7F               	movwf	(_ipv4Header+17)& (0+255),b
 15395   0117EA  0100               	movlb	0	; () banked
 15396   0117EC  5193               	movf	(??_IPV4_Packet+2)& (0+255),w,b
 15397   0117EE  11AF               	iorwf	(??_IPV4_Packet+30)& (0+255),w,b
 15398   0117F0  0101               	movlb	1	; () banked
 15399   0117F2  6F80               	movwf	(_ipv4Header+18)& (0+255),b
 15400   0117F4  0100               	movlb	0	; () banked
 15401   0117F6  5194               	movf	(??_IPV4_Packet+3)& (0+255),w,b
 15402   0117F8  11B0               	iorwf	(??_IPV4_Packet+31)& (0+255),w,b
 15403   0117FA  0101               	movlb	1	; () banked
 15404   0117FC  6F81               	movwf	(_ipv4Header+19)& (0+255),b
 15405                           
 15406                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 136:     ipv4Header.srcIpAddress = ((((uint32_
      +                          t)ipv4Header.srcIpAddress&(uint32_t)0xff000000) >> 24) | (((uint32_t)ipv4Header.srcIpAdd
      +                          ress&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)ipv4Header.srcIpAddress&(uint32_t)0x0000f
      +                          f00) << 8) | (((uint32_t)ipv4Header.srcIpAddress&(uint32_t)0x000000ff) << 24) );
 15407   0117FE  0EFF               	movlw	255
 15408   011800  157A               	andwf	(_ipv4Header+12)& (0+255),w,b
 15409   011802  0100               	movlb	0	; () banked
 15410   011804  6F91               	movwf	??_IPV4_Packet& (0+255),b
 15411   011806  0E00               	movlw	0
 15412   011808  0101               	movlb	1	; () banked
 15413   01180A  157B               	andwf	(_ipv4Header+13)& (0+255),w,b
 15414   01180C  0100               	movlb	0	; () banked
 15415   01180E  6F92               	movwf	(??_IPV4_Packet+1)& (0+255),b
 15416   011810  0E00               	movlw	0
 15417   011812  0101               	movlb	1	; () banked
 15418   011814  157C               	andwf	(_ipv4Header+14)& (0+255),w,b
 15419   011816  0100               	movlb	0	; () banked
 15420   011818  6F93               	movwf	(??_IPV4_Packet+2)& (0+255),b
 15421   01181A  0E00               	movlw	0
 15422   01181C  0101               	movlb	1	; () banked
 15423   01181E  157D               	andwf	(_ipv4Header+15)& (0+255),w,b
 15424   011820  0100               	movlb	0	; () banked
 15425   011822  6F94               	movwf	(??_IPV4_Packet+3)& (0+255),b
 15426   011824  C091  F094         	movff	??_IPV4_Packet,??_IPV4_Packet+3
 15427   011828  6B93               	clrf	(??_IPV4_Packet+2)& (0+255),b
 15428   01182A  6B92               	clrf	(??_IPV4_Packet+1)& (0+255),b
 15429   01182C  6B91               	clrf	??_IPV4_Packet& (0+255),b
 15430   01182E  EE21  F07A         	lfsr	2,_ipv4Header+12
 15431   011832  0E00               	movlw	0
 15432   011834  14DE               	andwf	postinc2,w,c
 15433   011836  6F95               	movwf	(??_IPV4_Packet+4)& (0+255),b
 15434   011838  0EFF               	movlw	255
 15435   01183A  14DE               	andwf	postinc2,w,c
 15436   01183C  6F96               	movwf	(??_IPV4_Packet+5)& (0+255),b
 15437   01183E  0E00               	movlw	0
 15438   011840  14DE               	andwf	postinc2,w,c
 15439   011842  6F97               	movwf	(??_IPV4_Packet+6)& (0+255),b
 15440   011844  0E00               	movlw	0
 15441   011846  14DE               	andwf	postinc2,w,c
 15442   011848  6F98               	movwf	(??_IPV4_Packet+7)& (0+255),b
 15443   01184A  C097  F098         	movff	??_IPV4_Packet+6,??_IPV4_Packet+7
 15444   01184E  C096  F097         	movff	??_IPV4_Packet+5,??_IPV4_Packet+6
 15445   011852  C095  F096         	movff	??_IPV4_Packet+4,??_IPV4_Packet+5
 15446   011856  6B95               	clrf	(??_IPV4_Packet+4)& (0+255),b
 15447   011858  C17A  F099         	movff	_ipv4Header+12,??_IPV4_Packet+8
 15448   01185C  C17B  F09A         	movff	_ipv4Header+13,??_IPV4_Packet+9
 15449   011860  C17C  F09B         	movff	_ipv4Header+14,??_IPV4_Packet+10
 15450   011864  C17D  F09C         	movff	_ipv4Header+15,??_IPV4_Packet+11
 15451   011868  C09A  F099         	movff	??_IPV4_Packet+9,??_IPV4_Packet+8
 15452   01186C  C09B  F09A         	movff	??_IPV4_Packet+10,??_IPV4_Packet+9
 15453   011870  C09C  F09B         	movff	??_IPV4_Packet+11,??_IPV4_Packet+10
 15454   011874  6B9C               	clrf	(??_IPV4_Packet+11)& (0+255),b
 15455   011876  0E00               	movlw	0
 15456   011878  1599               	andwf	(??_IPV4_Packet+8)& (0+255),w,b
 15457   01187A  6F9D               	movwf	(??_IPV4_Packet+12)& (0+255),b
 15458   01187C  0EFF               	movlw	255
 15459   01187E  159A               	andwf	(??_IPV4_Packet+9)& (0+255),w,b
 15460   011880  6F9E               	movwf	(??_IPV4_Packet+13)& (0+255),b
 15461   011882  0E00               	movlw	0
 15462   011884  159B               	andwf	(??_IPV4_Packet+10)& (0+255),w,b
 15463   011886  6F9F               	movwf	(??_IPV4_Packet+14)& (0+255),b
 15464   011888  0E00               	movlw	0
 15465   01188A  159C               	andwf	(??_IPV4_Packet+11)& (0+255),w,b
 15466   01188C  6FA0               	movwf	(??_IPV4_Packet+15)& (0+255),b
 15467   01188E  C17A  F0A1         	movff	_ipv4Header+12,??_IPV4_Packet+16
 15468   011892  C17B  F0A2         	movff	_ipv4Header+13,??_IPV4_Packet+17
 15469   011896  C17C  F0A3         	movff	_ipv4Header+14,??_IPV4_Packet+18
 15470   01189A  C17D  F0A4         	movff	_ipv4Header+15,??_IPV4_Packet+19
 15471   01189E  0E19               	movlw	25
 15472   0118A0  D005               	goto	u12350
 15473   0118A2                     u12355:
 15474   0118A2  90D8               	bcf	status,0,c
 15475   0118A4  33A4               	rrcf	(??_IPV4_Packet+19)& (0+255),f,b
 15476   0118A6  33A3               	rrcf	(??_IPV4_Packet+18)& (0+255),f,b
 15477   0118A8  33A2               	rrcf	(??_IPV4_Packet+17)& (0+255),f,b
 15478   0118AA  33A1               	rrcf	(??_IPV4_Packet+16)& (0+255),f,b
 15479   0118AC                     u12350:
 15480   0118AC  2EE8               	decfsz	wreg,f,c
 15481   0118AE  D7F9               	goto	u12355
 15482   0118B0  0EFF               	movlw	255
 15483   0118B2  15A1               	andwf	(??_IPV4_Packet+16)& (0+255),w,b
 15484   0118B4  6FA5               	movwf	(??_IPV4_Packet+20)& (0+255),b
 15485   0118B6  0E00               	movlw	0
 15486   0118B8  15A2               	andwf	(??_IPV4_Packet+17)& (0+255),w,b
 15487   0118BA  6FA6               	movwf	(??_IPV4_Packet+21)& (0+255),b
 15488   0118BC  0E00               	movlw	0
 15489   0118BE  15A3               	andwf	(??_IPV4_Packet+18)& (0+255),w,b
 15490   0118C0  6FA7               	movwf	(??_IPV4_Packet+22)& (0+255),b
 15491   0118C2  0E00               	movlw	0
 15492   0118C4  15A4               	andwf	(??_IPV4_Packet+19)& (0+255),w,b
 15493   0118C6  6FA8               	movwf	(??_IPV4_Packet+23)& (0+255),b
 15494   0118C8  519D               	movf	(??_IPV4_Packet+12)& (0+255),w,b
 15495   0118CA  11A5               	iorwf	(??_IPV4_Packet+20)& (0+255),w,b
 15496   0118CC  6FA9               	movwf	(??_IPV4_Packet+24)& (0+255),b
 15497   0118CE  519E               	movf	(??_IPV4_Packet+13)& (0+255),w,b
 15498   0118D0  11A6               	iorwf	(??_IPV4_Packet+21)& (0+255),w,b
 15499   0118D2  6FAA               	movwf	(??_IPV4_Packet+25)& (0+255),b
 15500   0118D4  519F               	movf	(??_IPV4_Packet+14)& (0+255),w,b
 15501   0118D6  11A7               	iorwf	(??_IPV4_Packet+22)& (0+255),w,b
 15502   0118D8  6FAB               	movwf	(??_IPV4_Packet+26)& (0+255),b
 15503   0118DA  51A0               	movf	(??_IPV4_Packet+15)& (0+255),w,b
 15504   0118DC  11A8               	iorwf	(??_IPV4_Packet+23)& (0+255),w,b
 15505   0118DE  6FAC               	movwf	(??_IPV4_Packet+27)& (0+255),b
 15506   0118E0  5195               	movf	(??_IPV4_Packet+4)& (0+255),w,b
 15507   0118E2  11A9               	iorwf	(??_IPV4_Packet+24)& (0+255),w,b
 15508   0118E4  6FAD               	movwf	(??_IPV4_Packet+28)& (0+255),b
 15509   0118E6  5196               	movf	(??_IPV4_Packet+5)& (0+255),w,b
 15510   0118E8  11AA               	iorwf	(??_IPV4_Packet+25)& (0+255),w,b
 15511   0118EA  6FAE               	movwf	(??_IPV4_Packet+29)& (0+255),b
 15512   0118EC  5197               	movf	(??_IPV4_Packet+6)& (0+255),w,b
 15513   0118EE  11AB               	iorwf	(??_IPV4_Packet+26)& (0+255),w,b
 15514   0118F0  6FAF               	movwf	(??_IPV4_Packet+30)& (0+255),b
 15515   0118F2  5198               	movf	(??_IPV4_Packet+7)& (0+255),w,b
 15516   0118F4  11AC               	iorwf	(??_IPV4_Packet+27)& (0+255),w,b
 15517   0118F6  6FB0               	movwf	(??_IPV4_Packet+31)& (0+255),b
 15518   0118F8  5191               	movf	??_IPV4_Packet& (0+255),w,b
 15519   0118FA  11AD               	iorwf	(??_IPV4_Packet+28)& (0+255),w,b
 15520   0118FC  0101               	movlb	1	; () banked
 15521   0118FE  6F7A               	movwf	(_ipv4Header+12)& (0+255),b
 15522   011900  0100               	movlb	0	; () banked
 15523   011902  5192               	movf	(??_IPV4_Packet+1)& (0+255),w,b
 15524   011904  11AE               	iorwf	(??_IPV4_Packet+29)& (0+255),w,b
 15525   011906  0101               	movlb	1	; () banked
 15526   011908  6F7B               	movwf	(_ipv4Header+13)& (0+255),b
 15527   01190A  0100               	movlb	0	; () banked
 15528   01190C  5193               	movf	(??_IPV4_Packet+2)& (0+255),w,b
 15529   01190E  11AF               	iorwf	(??_IPV4_Packet+30)& (0+255),w,b
 15530   011910  0101               	movlb	1	; () banked
 15531   011912  6F7C               	movwf	(_ipv4Header+14)& (0+255),b
 15532   011914  0100               	movlb	0	; () banked
 15533   011916  5194               	movf	(??_IPV4_Packet+3)& (0+255),w,b
 15534   011918  11B0               	iorwf	(??_IPV4_Packet+31)& (0+255),w,b
 15535   01191A  0101               	movlb	1	; () banked
 15536   01191C  6F7D               	movwf	(_ipv4Header+15)& (0+255),b
 15537                           
 15538                           ; BSR set to: 1
 15539                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 138:     if(ipv4Header.srcIpAddress == 0xFFFFF
      +                          FFF)
 15540   01191E  297A               	incf	(_ipv4Header+12)& (0+255),w,b
 15541   011920  E107               	bnz	l14237
 15542   011922  297B               	incf	(_ipv4Header+13)& (0+255),w,b
 15543   011924  E105               	bnz	l14237
 15544   011926  297C               	incf	(_ipv4Header+14)& (0+255),w,b
 15545   011928  E103               	bnz	l14237
 15546   01192A  297D               	incf	(_ipv4Header+15)& (0+255),w,b
 15547   01192C  B4D8               	btfsc	status,2,c
 15548   01192E  0012               	return	
 15549   011930                     l14237:
 15550                           
 15551                           ; BSR set to: 1
 15552                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 142:     if(ipv4Header.dstIpAddress == (ip_dat
      +                          abase_info.ipv4_myAddress) || (ipv4Header.dstIpAddress == 0)||
 15553   011930  5100               	movf	_ip_database_info& (0+255),w,b
 15554   011932  197E               	xorwf	(_ipv4Header+16)& (0+255),w,b
 15555   011934  E10A               	bnz	u12370
 15556   011936  5101               	movf	(_ip_database_info+1)& (0+255),w,b
 15557   011938  197F               	xorwf	(_ipv4Header+17)& (0+255),w,b
 15558   01193A  E107               	bnz	u12370
 15559   01193C  5102               	movf	(_ip_database_info+2)& (0+255),w,b
 15560   01193E  1980               	xorwf	(_ipv4Header+18)& (0+255),w,b
 15561   011940  E104               	bnz	u12370
 15562   011942  5103               	movf	(_ip_database_info+3)& (0+255),w,b
 15563   011944  1981               	xorwf	(_ipv4Header+19)& (0+255),w,b
 15564   011946  B4D8               	btfsc	status,2,c
 15565   011948  D08F               	goto	u12430
 15566   01194A                     u12370:
 15567                           
 15568                           ; BSR set to: 1
 15569   01194A  517E               	movf	(_ipv4Header+16)& (0+255),w,b
 15570   01194C  117F               	iorwf	(_ipv4Header+17)& (0+255),w,b
 15571   01194E  1180               	iorwf	(_ipv4Header+18)& (0+255),w,b
 15572   011950  1181               	iorwf	(_ipv4Header+19)& (0+255),w,b
 15573   011952  B4D8               	btfsc	status,2,c
 15574   011954  D089               	goto	u12430
 15575                           
 15576                           ; BSR set to: 1
 15577   011956  297E               	incf	(_ipv4Header+16)& (0+255),w,b
 15578   011958  E107               	bnz	u12390
 15579   01195A  297F               	incf	(_ipv4Header+17)& (0+255),w,b
 15580   01195C  E105               	bnz	u12390
 15581   01195E  2980               	incf	(_ipv4Header+18)& (0+255),w,b
 15582   011960  E103               	bnz	u12390
 15583   011962  2981               	incf	(_ipv4Header+19)& (0+255),w,b
 15584   011964  B4D8               	btfsc	status,2,c
 15585   011966  D080               	goto	u12430
 15586   011968                     u12390:
 15587                           
 15588                           ; BSR set to: 1
 15589   011968  0EFF               	movlw	255
 15590   01196A  1100               	iorwf	_ip_database_info& (0+255),w,b
 15591   01196C  0100               	movlb	0	; () banked
 15592   01196E  6F91               	movwf	??_IPV4_Packet& (0+255),b
 15593   011970  0EFF               	movlw	255
 15594   011972  0101               	movlb	1	; () banked
 15595   011974  1101               	iorwf	(_ip_database_info+1)& (0+255),w,b
 15596   011976  0100               	movlb	0	; () banked
 15597   011978  6F92               	movwf	(??_IPV4_Packet+1)& (0+255),b
 15598   01197A  0EFF               	movlw	255
 15599   01197C  0101               	movlb	1	; () banked
 15600   01197E  1102               	iorwf	(_ip_database_info+2)& (0+255),w,b
 15601   011980  0100               	movlb	0	; () banked
 15602   011982  6F93               	movwf	(??_IPV4_Packet+2)& (0+255),b
 15603   011984  0E00               	movlw	0
 15604   011986  0101               	movlb	1	; () banked
 15605   011988  1103               	iorwf	(_ip_database_info+3)& (0+255),w,b
 15606   01198A  0100               	movlb	0	; () banked
 15607   01198C  6F94               	movwf	(??_IPV4_Packet+3)& (0+255),b
 15608   01198E  0101               	movlb	1	; () banked
 15609   011990  517E               	movf	(_ipv4Header+16)& (0+255),w,b
 15610   011992  0100               	movlb	0	; () banked
 15611   011994  1991               	xorwf	??_IPV4_Packet& (0+255),w,b
 15612   011996  E110               	bnz	u12400
 15613   011998  0101               	movlb	1	; () banked
 15614   01199A  517F               	movf	(_ipv4Header+17)& (0+255),w,b
 15615   01199C  0100               	movlb	0	; () banked
 15616   01199E  1992               	xorwf	(??_IPV4_Packet+1)& (0+255),w,b
 15617   0119A0  E10B               	bnz	u12400
 15618   0119A2  0101               	movlb	1	; () banked
 15619   0119A4  5180               	movf	(_ipv4Header+18)& (0+255),w,b
 15620   0119A6  0100               	movlb	0	; () banked
 15621   0119A8  1993               	xorwf	(??_IPV4_Packet+2)& (0+255),w,b
 15622   0119AA  E106               	bnz	u12400
 15623   0119AC  0101               	movlb	1	; () banked
 15624   0119AE  5181               	movf	(_ipv4Header+19)& (0+255),w,b
 15625   0119B0  0100               	movlb	0	; () banked
 15626   0119B2  1994               	xorwf	(??_IPV4_Packet+3)& (0+255),w,b
 15627   0119B4  B4D8               	btfsc	status,2,c
 15628   0119B6  D058               	goto	u12430
 15629   0119B8                     u12400:
 15630                           
 15631                           ; BSR set to: 0
 15632   0119B8  0EFF               	movlw	255
 15633   0119BA  0101               	movlb	1	; () banked
 15634   0119BC  1100               	iorwf	_ip_database_info& (0+255),w,b
 15635   0119BE  0100               	movlb	0	; () banked
 15636   0119C0  6F91               	movwf	??_IPV4_Packet& (0+255),b
 15637   0119C2  0EFF               	movlw	255
 15638   0119C4  0101               	movlb	1	; () banked
 15639   0119C6  1101               	iorwf	(_ip_database_info+1)& (0+255),w,b
 15640   0119C8  0100               	movlb	0	; () banked
 15641   0119CA  6F92               	movwf	(??_IPV4_Packet+1)& (0+255),b
 15642   0119CC  0E00               	movlw	0
 15643   0119CE  0101               	movlb	1	; () banked
 15644   0119D0  1102               	iorwf	(_ip_database_info+2)& (0+255),w,b
 15645   0119D2  0100               	movlb	0	; () banked
 15646   0119D4  6F93               	movwf	(??_IPV4_Packet+2)& (0+255),b
 15647   0119D6  0E00               	movlw	0
 15648   0119D8  0101               	movlb	1	; () banked
 15649   0119DA  1103               	iorwf	(_ip_database_info+3)& (0+255),w,b
 15650   0119DC  0100               	movlb	0	; () banked
 15651   0119DE  6F94               	movwf	(??_IPV4_Packet+3)& (0+255),b
 15652   0119E0  0101               	movlb	1	; () banked
 15653   0119E2  517E               	movf	(_ipv4Header+16)& (0+255),w,b
 15654   0119E4  0100               	movlb	0	; () banked
 15655   0119E6  1991               	xorwf	??_IPV4_Packet& (0+255),w,b
 15656   0119E8  E110               	bnz	u12410
 15657   0119EA  0101               	movlb	1	; () banked
 15658   0119EC  517F               	movf	(_ipv4Header+17)& (0+255),w,b
 15659   0119EE  0100               	movlb	0	; () banked
 15660   0119F0  1992               	xorwf	(??_IPV4_Packet+1)& (0+255),w,b
 15661   0119F2  E10B               	bnz	u12410
 15662   0119F4  0101               	movlb	1	; () banked
 15663   0119F6  5180               	movf	(_ipv4Header+18)& (0+255),w,b
 15664   0119F8  0100               	movlb	0	; () banked
 15665   0119FA  1993               	xorwf	(??_IPV4_Packet+2)& (0+255),w,b
 15666   0119FC  E106               	bnz	u12410
 15667   0119FE  0101               	movlb	1	; () banked
 15668   011A00  5181               	movf	(_ipv4Header+19)& (0+255),w,b
 15669   011A02  0100               	movlb	0	; () banked
 15670   011A04  1994               	xorwf	(??_IPV4_Packet+3)& (0+255),w,b
 15671   011A06  B4D8               	btfsc	status,2,c
 15672   011A08  D02F               	goto	u12430
 15673   011A0A                     u12410:
 15674                           
 15675                           ; BSR set to: 0
 15676   011A0A  0EFF               	movlw	255
 15677   011A0C  0101               	movlb	1	; () banked
 15678   011A0E  1100               	iorwf	_ip_database_info& (0+255),w,b
 15679   011A10  0100               	movlb	0	; () banked
 15680   011A12  6F91               	movwf	??_IPV4_Packet& (0+255),b
 15681   011A14  0101               	movlb	1	; () banked
 15682   011A16  5101               	movf	(_ip_database_info+1)& (0+255),w,b
 15683   011A18  0100               	movlb	0	; () banked
 15684   011A1A  6F92               	movwf	(??_IPV4_Packet+1)& (0+255),b
 15685   011A1C  0101               	movlb	1	; () banked
 15686   011A1E  5102               	movf	(_ip_database_info+2)& (0+255),w,b
 15687   011A20  0100               	movlb	0	; () banked
 15688   011A22  6F93               	movwf	(??_IPV4_Packet+2)& (0+255),b
 15689   011A24  0101               	movlb	1	; () banked
 15690   011A26  5103               	movf	(_ip_database_info+3)& (0+255),w,b
 15691   011A28  0100               	movlb	0	; () banked
 15692   011A2A  6F94               	movwf	(??_IPV4_Packet+3)& (0+255),b
 15693   011A2C  0101               	movlb	1	; () banked
 15694   011A2E  517E               	movf	(_ipv4Header+16)& (0+255),w,b
 15695   011A30  0100               	movlb	0	; () banked
 15696   011A32  1991               	xorwf	??_IPV4_Packet& (0+255),w,b
 15697   011A34  E110               	bnz	u12420
 15698   011A36  0101               	movlb	1	; () banked
 15699   011A38  517F               	movf	(_ipv4Header+17)& (0+255),w,b
 15700   011A3A  0100               	movlb	0	; () banked
 15701   011A3C  1992               	xorwf	(??_IPV4_Packet+1)& (0+255),w,b
 15702   011A3E  E10B               	bnz	u12420
 15703   011A40  0101               	movlb	1	; () banked
 15704   011A42  5180               	movf	(_ipv4Header+18)& (0+255),w,b
 15705   011A44  0100               	movlb	0	; () banked
 15706   011A46  1993               	xorwf	(??_IPV4_Packet+2)& (0+255),w,b
 15707   011A48  E106               	bnz	u12420
 15708   011A4A  0101               	movlb	1	; () banked
 15709   011A4C  5181               	movf	(_ipv4Header+19)& (0+255),w,b
 15710   011A4E  0100               	movlb	0	; () banked
 15711   011A50  1994               	xorwf	(??_IPV4_Packet+3)& (0+255),w,b
 15712   011A52  B4D8               	btfsc	status,2,c
 15713   011A54  D009               	goto	u12430
 15714   011A56                     u12420:
 15715                           
 15716                           ; BSR set to: 0
 15717   011A56  0101               	movlb	1	; () banked
 15718   011A58  057E               	decf	(_ipv4Header+16)& (0+255),w,b
 15719   011A5A  E105               	bnz	u12431
 15720   011A5C  0EE0               	movlw	224
 15721   011A5E  1981               	xorwf	(_ipv4Header+19)& (0+255),w,b
 15722   011A60  117F               	iorwf	(_ipv4Header+17)& (0+255),w,b
 15723   011A62  1180               	iorwf	(_ipv4Header+18)& (0+255),w,b
 15724   011A64  A4D8               	btfss	status,2,c
 15725   011A66                     u12431:
 15726   011A66  0012               	return	
 15727   011A68                     u12430:
 15728                           
 15729                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 148:     {;mcc_generated_files/TCPIPLibrary/ip
      +                          v4.c: 149:         ipv4Header.length = ((((uint16_t)ipv4Header.length & (uint16_t)0xFF00
      +                          ) >> 8) | (((uint16_t)ipv4Header.length & (uint16_t)0x00FF) << 8));
 15730   011A68  0101               	movlb	1	; () banked
 15731   011A6A  5170               	movf	(_ipv4Header+2)& (0+255),w,b
 15732   011A6C  0100               	movlb	0	; () banked
 15733   011A6E  6F92               	movwf	(??_IPV4_Packet+1)& (0+255),b
 15734   011A70  6B91               	clrf	??_IPV4_Packet& (0+255),b
 15735   011A72  EE21  F070         	lfsr	2,_ipv4Header+2
 15736   011A76  CFDE F093          	movff	postinc2,??_IPV4_Packet+2
 15737   011A7A  CFDD F094          	movff	postdec2,??_IPV4_Packet+3
 15738   011A7E  C094  F093         	movff	??_IPV4_Packet+3,??_IPV4_Packet+2
 15739   011A82  6B94               	clrf	(??_IPV4_Packet+3)& (0+255),b
 15740   011A84  0EFF               	movlw	255
 15741   011A86  1793               	andwf	(??_IPV4_Packet+2)& (0+255),f,b
 15742   011A88  0E00               	movlw	0
 15743   011A8A  1794               	andwf	(??_IPV4_Packet+3)& (0+255),f,b
 15744   011A8C  5191               	movf	??_IPV4_Packet& (0+255),w,b
 15745   011A8E  1193               	iorwf	(??_IPV4_Packet+2)& (0+255),w,b
 15746   011A90  0101               	movlb	1	; () banked
 15747   011A92  6F70               	movwf	(_ipv4Header+2)& (0+255),b
 15748   011A94  0100               	movlb	0	; () banked
 15749   011A96  5192               	movf	(??_IPV4_Packet+1)& (0+255),w,b
 15750   011A98  1194               	iorwf	(??_IPV4_Packet+3)& (0+255),w,b
 15751   011A9A  0101               	movlb	1	; () banked
 15752   011A9C  6F71               	movwf	(_ipv4Header+3)& (0+255),b
 15753                           
 15754                           ; BSR set to: 1
 15755                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 151:         hdrLen = (uint8_t)(ipv4Header.ihl
      +                           << 2);
 15756   011A9E  516E               	movf	_ipv4Header& (0+255),w,b
 15757   011AA0  0B0F               	andlw	15
 15758   011AA2  0100               	movlb	0	; () banked
 15759   011AA4  6F91               	movwf	??_IPV4_Packet& (0+255),b
 15760   011AA6  90D8               	bcf	status,0,c
 15761   011AA8  3791               	rlcf	??_IPV4_Packet& (0+255),f,b
 15762   011AAA  90D8               	bcf	status,0,c
 15763   011AAC  3591               	rlcf	??_IPV4_Packet& (0+255),w,b
 15764   011AAE  6FDB               	movwf	IPV4_Packet@hdrLen& (0+255),b
 15765                           
 15766                           ; BSR set to: 0
 15767                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 153:         if(ipv4Header.ihl < 5)
 15768   011AB0  0101               	movlb	1	; () banked
 15769   011AB2  516E               	movf	_ipv4Header& (0+255),w,b
 15770   011AB4  0B0F               	andlw	15
 15771   011AB6  0100               	movlb	0	; () banked
 15772   011AB8  6F91               	movwf	??_IPV4_Packet& (0+255),b
 15773   011ABA  0E05               	movlw	5
 15774   011ABC  6191               	cpfslt	??_IPV4_Packet& (0+255),b
 15775   011ABE  D001               	goto	l14259
 15776   011AC0  0012               	return	
 15777   011AC2                     l14259:
 15778                           
 15779                           ; BSR set to: 0
 15780                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 156:         if (ipv4Header.ihl > 5)
 15781   011AC2  0101               	movlb	1	; () banked
 15782   011AC4  516E               	movf	_ipv4Header& (0+255),w,b
 15783   011AC6  0B0F               	andlw	15
 15784   011AC8  0100               	movlb	0	; () banked
 15785   011ACA  6F91               	movwf	??_IPV4_Packet& (0+255),b
 15786   011ACC  0E05               	movlw	5
 15787   011ACE  6591               	cpfsgt	??_IPV4_Packet& (0+255),b
 15788   011AD0  D075               	goto	l14291
 15789                           
 15790                           ; BSR set to: 0
 15791                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 157:         {;mcc_generated_files/TCPIPLibrar
      +                          y/ipv4.c: 159:             ETH_Dump((uint16_t)(hdrLen - sizeof(ipv4Header_t)));
 15792   011AD2  0EEC               	movlw	236
 15793   011AD4  25DB               	addwf	IPV4_Packet@hdrLen& (0+255),w,b
 15794   011AD6  6E05               	movwf	ETH_Dump@length^0,c
 15795   011AD8  6A06               	clrf	(ETH_Dump@length+1)^0,c
 15796   011ADA  0EFF               	movlw	255
 15797   011ADC  2206               	addwfc	(ETH_Dump@length+1)^0,f,c
 15798   011ADE  ECD2  F0BE         	call	_ETH_Dump	;wreg free
 15799   011AE2  D06C               	goto	l14291
 15800   011AE4                     l14263:
 15801                           
 15802                           ; BSR set to: 0
 15803                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 165:                 {;mcc_generated_files/TCP
      +                          IPLibrary/ipv4.c: 168:                     if(ipv4Header.dstIpAddress == 0)
 15804   011AE4  0101               	movlb	1	; () banked
 15805   011AE6  517E               	movf	(_ipv4Header+16)& (0+255),w,b
 15806   011AE8  117F               	iorwf	(_ipv4Header+17)& (0+255),w,b
 15807   011AEA  1180               	iorwf	(_ipv4Header+18)& (0+255),w,b
 15808   011AEC  1181               	iorwf	(_ipv4Header+19)& (0+255),w,b
 15809   011AEE  B4D8               	btfsc	status,2,c
 15810   011AF0  0012               	return	
 15811                           
 15812                           ; BSR set to: 1
 15813                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 172:                     length = ipv4Header.l
      +                          ength - hdrLen;
 15814   011AF2  0100               	movlb	0	; () banked
 15815   011AF4  51DB               	movf	IPV4_Packet@hdrLen& (0+255),w,b
 15816   011AF6  0101               	movlb	1	; () banked
 15817   011AF8  5D70               	subwf	(_ipv4Header+2)& (0+255),w,b
 15818   011AFA  0100               	movlb	0	; () banked
 15819   011AFC  6FD9               	movwf	IPV4_Packet@length& (0+255),b
 15820   011AFE  0101               	movlb	1	; () banked
 15821   011B00  5171               	movf	(_ipv4Header+3)& (0+255),w,b
 15822   011B02  A0D8               	btfss	status,0,c
 15823   011B04  0571               	decf	(_ipv4Header+3)& (0+255),w,b
 15824   011B06  0100               	movlb	0	; () banked
 15825   011B08  6FDA               	movwf	(IPV4_Packet@length+1)& (0+255),b
 15826                           
 15827                           ; BSR set to: 0
 15828                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 173:                     cksm = ETH_RxComputeC
      +                          hecksum(length, 0);
 15829   011B0A  C0D9  F013         	movff	IPV4_Packet@length,ETH_RxComputeChecksum@len
 15830   011B0E  C0DA  F014         	movff	IPV4_Packet@length+1,ETH_RxComputeChecksum@len+1
 15831   011B12  0E00               	movlw	0
 15832   011B14  6E16               	movwf	(ETH_RxComputeChecksum@seed+1)^0,c
 15833   011B16  0E00               	movlw	0
 15834   011B18  6E15               	movwf	ETH_RxComputeChecksum@seed^0,c
 15835   011B1A  EC99  F0B7         	call	_ETH_RxComputeChecksum	;wreg free
 15836   011B1E  C013  F0DC         	movff	?_ETH_RxComputeChecksum,IPV4_Packet@cksm
 15837   011B22  C014  F0DD         	movff	?_ETH_RxComputeChecksum+1,IPV4_Packet@cksm+1
 15838                           
 15839                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 175:                     if (cksm == 0)
 15840   011B26  0100               	movlb	0	; () banked
 15841   011B28  51DC               	movf	IPV4_Packet@cksm& (0+255),w,b
 15842   011B2A  11DD               	iorwf	(IPV4_Packet@cksm+1)& (0+255),w,b
 15843   011B2C  A4D8               	btfss	status,2,c
 15844   011B2E  D007               	goto	l14275
 15845                           
 15846                           ; BSR set to: 0
 15847                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 176:                     {;mcc_generated_files
      +                          /TCPIPLibrary/ipv4.c: 177:                         ICMP_Receive(&ipv4Header);
 15848   011B30  0E6E               	movlw	low _ipv4Header
 15849   011B32  6F85               	movwf	ICMP_Receive@ipv4Hdr& (0+255),b
 15850   011B34  0E01               	movlw	high _ipv4Header
 15851   011B36  6F86               	movwf	(ICMP_Receive@ipv4Hdr+1)& (0+255),b
 15852   011B38  ECBB  F0B3         	call	_ICMP_Receive	;wreg free
 15853                           
 15854                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 178:                     }
 15855   011B3C  0012               	return	
 15856   011B3E                     l14275:
 15857                           
 15858                           ; BSR set to: 0
 15859                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 180:                     {;mcc_generated_files
      +                          /TCPIPLibrary/ipv4.c: 181:                         sprintf(msg, "icmp wrong cksm : %x",c
      +                          ksm);
 15860   011B3E  0EB1               	movlw	low IPV4_Packet@msg
 15861   011B40  6E48               	movwf	sprintf@s^0,c
 15862   011B42  6A49               	clrf	(sprintf@s+1)^0,c
 15863   011B44  0E71               	movlw	low STR_27
 15864   011B46  6E4A               	movwf	sprintf@fmt^0,c
 15865   011B48  0EFE               	movlw	high STR_27
 15866   011B4A  6E4B               	movwf	(sprintf@fmt+1)^0,c
 15867   011B4C  C0DC  F04C         	movff	IPV4_Packet@cksm,?_sprintf+4
 15868   011B50  C0DD  F04D         	movff	IPV4_Packet@cksm+1,?_sprintf+5
 15869   011B54  ECB9  F0BD         	call	_sprintf	;wreg free
 15870   011B58  0012               	return	
 15871   011B5A                     l14279:
 15872                           
 15873                           ; BSR set to: 0
 15874                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 190:                 length = ipv4Header.lengt
      +                          h - hdrLen;
 15875   011B5A  51DB               	movf	IPV4_Packet@hdrLen& (0+255),w,b
 15876   011B5C  0101               	movlb	1	; () banked
 15877   011B5E  5D70               	subwf	(_ipv4Header+2)& (0+255),w,b
 15878   011B60  0100               	movlb	0	; () banked
 15879   011B62  6FD9               	movwf	IPV4_Packet@length& (0+255),b
 15880   011B64  0101               	movlb	1	; () banked
 15881   011B66  5171               	movf	(_ipv4Header+3)& (0+255),w,b
 15882   011B68  A0D8               	btfss	status,0,c
 15883   011B6A  0571               	decf	(_ipv4Header+3)& (0+255),w,b
 15884   011B6C  0100               	movlb	0	; () banked
 15885   011B6E  6FDA               	movwf	(IPV4_Packet@length+1)& (0+255),b
 15886                           
 15887                           ; BSR set to: 0
 15888                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 191:                 cksm = IPV4_PseudoHeaderC
      +                          hecksum(length);
 15889   011B70  C0D9  F005         	movff	IPV4_Packet@length,IPV4_PseudoHeaderChecksum@payloadLen
 15890   011B74  C0DA  F006         	movff	IPV4_Packet@length+1,IPV4_PseudoHeaderChecksum@payloadLen+1
 15891   011B78  ECA3  F0B5         	call	_IPV4_PseudoHeaderChecksum	;wreg free
 15892   011B7C  C005  F0DC         	movff	?_IPV4_PseudoHeaderChecksum,IPV4_Packet@cksm
 15893   011B80  C006  F0DD         	movff	?_IPV4_PseudoHeaderChecksum+1,IPV4_Packet@cksm+1
 15894                           
 15895                           ; BSR set to: 0
 15896                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 192:                 cksm = ETH_RxComputeCheck
      +                          sum(length, cksm);
 15897   011B84  C0D9  F013         	movff	IPV4_Packet@length,ETH_RxComputeChecksum@len
 15898   011B88  C0DA  F014         	movff	IPV4_Packet@length+1,ETH_RxComputeChecksum@len+1
 15899   011B8C  C0DC  F015         	movff	IPV4_Packet@cksm,ETH_RxComputeChecksum@seed
 15900   011B90  C0DD  F016         	movff	IPV4_Packet@cksm+1,ETH_RxComputeChecksum@seed+1
 15901   011B94  EC99  F0B7         	call	_ETH_RxComputeChecksum	;wreg free
 15902   011B98  C013  F0DC         	movff	?_ETH_RxComputeChecksum,IPV4_Packet@cksm
 15903   011B9C  C014  F0DD         	movff	?_ETH_RxComputeChecksum+1,IPV4_Packet@cksm+1
 15904                           
 15905                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 193:                 UDP_Receive(cksm);
 15906   011BA0  C0DC  F081         	movff	IPV4_Packet@cksm,UDP_Receive@udpcksm
 15907   011BA4  C0DD  F082         	movff	IPV4_Packet@cksm+1,UDP_Receive@udpcksm+1
 15908   011BA8  EC0E  F0AA         	call	_UDP_Receive	;wreg free
 15909                           
 15910                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 194:                 break;
 15911   011BAC  0012               	return	
 15912   011BAE                     l14287:
 15913                           
 15914                           ; BSR set to: 0
 15915                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 196:                 ETH_Dump(ipv4Header.lengt
      +                          h);
 15916   011BAE  C170  F005         	movff	_ipv4Header+2,ETH_Dump@length
 15917   011BB2  C171  F006         	movff	_ipv4Header+3,ETH_Dump@length+1
 15918   011BB6  ECD2  F0BE         	call	_ETH_Dump	;wreg free
 15919                           
 15920                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 197:                 break;
 15921   011BBA  0012               	return	
 15922   011BBC                     l14291:
 15923   011BBC  0101               	movlb	1	; () banked
 15924   011BBE  5177               	movf	(_ipv4Header+9)& (0+255),w,b
 15925   011BC0  0100               	movlb	0	; () banked
 15926   011BC2  6F91               	movwf	??_IPV4_Packet& (0+255),b
 15927   011BC4  6B92               	clrf	(??_IPV4_Packet+1)& (0+255),b
 15928                           
 15929                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15930                           ; Switch size 1, requested type "simple"
 15931                           ; Number of cases is 1, Range of values is 0 to 0
 15932                           ; switch strategies available:
 15933                           ; Name         Instructions Cycles
 15934                           ; simple_byte            4     3 (average)
 15935                           ;	Chosen strategy is simple_byte
 15936   011BC6  5192               	movf	(??_IPV4_Packet+1)& (0+255),w,b
 15937   011BC8  0A00               	xorlw	0	; case 0
 15938   011BCA  A4D8               	btfss	status,2,c
 15939   011BCC  D7F0               	goto	l14287
 15940                           
 15941                           ; BSR set to: 0
 15942                           ; Switch size 1, requested type "simple"
 15943                           ; Number of cases is 2, Range of values is 1 to 17
 15944                           ; switch strategies available:
 15945                           ; Name         Instructions Cycles
 15946                           ; simple_byte            7     4 (average)
 15947                           ;	Chosen strategy is simple_byte
 15948   011BCE  5191               	movf	??_IPV4_Packet& (0+255),w,b
 15949   011BD0  0A01               	xorlw	1	; case 1
 15950   011BD2  B4D8               	btfsc	status,2,c
 15951   011BD4  D787               	goto	l14263
 15952   011BD6  0A10               	xorlw	16	; case 17
 15953   011BD8  B4D8               	btfsc	status,2,c
 15954   011BDA  D7BF               	goto	l14279
 15955   011BDC  D7E8               	goto	l14287
 15956   011BDE                     __end_of_IPV4_Packet:
 15957                           	callstack 0
 15958                           
 15959 ;; *************** function _sprintf *****************
 15960 ;; Defined at:
 15961 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
 15962 ;; Parameters:    Size  Location     Type
 15963 ;;  s               2   71[COMRAM] PTR unsigned char 
 15964 ;;		 -> logSyslog@storage(12), IPV4_Packet@msg(40), makeIpv4AddresstoStr@ip_str(15), Network_Read@debug_str(80), 
 15965 ;;  fmt             2   73[COMRAM] PTR const unsigned char 
 15966 ;;		 -> STR_40(2), STR_38(5), STR_36(4), STR_34(4), 
 15967 ;;		 -> STR_32(4), STR_31(13), STR_30(17), STR_29(13), 
 15968 ;;		 -> STR_28(8), STR_27(21), STR_21(12), STR_18(19), 
 15969 ;;		 -> STR_17(21), 
 15970 ;; Auto vars:     Size  Location     Type
 15971 ;;  f              12    1[BANK0 ] struct _IO_FILE
 15972 ;;  ret             2    0        int 
 15973 ;;  ap              1    0[BANK0 ] PTR void [1]
 15974 ;;		 -> ?_printf(2), ?_sprintf(2), 
 15975 ;; Return value:  Size  Location     Type
 15976 ;;                  2   71[COMRAM] int 
 15977 ;; Registers used:
 15978 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15979 ;; Tracked objects:
 15980 ;;		On entry : 3E/1
 15981 ;;		On exit  : 3F/0
 15982 ;;		Unchanged: 0/0
 15983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15984 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15985 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15987 ;;      Totals:         8      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15988 ;;Total ram usage:       21 bytes
 15989 ;; Hardware stack levels used: 1
 15990 ;; Hardware stack levels required when called: 11
 15991 ;; This function calls:
 15992 ;;		_vfprintf
 15993 ;; This function is called by:
 15994 ;;		_Network_Read
 15995 ;;		_IPV4_Packet
 15996 ;; This function uses a non-reentrant model
 15997 ;;
 15998                           
 15999                           	psect	text48
 16000   017B72                     __ptext48:
 16001                           	callstack 0
 16002   017B72                     _sprintf:
 16003                           	callstack 16
 16004                           
 16005                           ;incstack = 0
 16006   017B72  0E4C               	movlw	low (?_sprintf+4)
 16007   017B74  0100               	movlb	0	; () banked
 16008   017B76  6F60               	movwf	sprintf@ap& (0+255),b
 16009   017B78  C048  F061         	movff	sprintf@s,sprintf@f
 16010   017B7C  C049  F062         	movff	sprintf@s+1,sprintf@f+1
 16011                           
 16012                           ; BSR set to: 0
 16013   017B80  0E00               	movlw	0
 16014   017B82  6F65               	movwf	(sprintf@f+4)& (0+255),b
 16015   017B84  0E00               	movlw	0
 16016   017B86  6F64               	movwf	(sprintf@f+3)& (0+255),b
 16017                           
 16018                           ; BSR set to: 0
 16019   017B88  0E00               	movlw	0
 16020   017B8A  6F6C               	movwf	(sprintf@f+11)& (0+255),b
 16021   017B8C  0E00               	movlw	0
 16022   017B8E  6F6B               	movwf	(sprintf@f+10)& (0+255),b
 16023                           
 16024                           ; BSR set to: 0
 16025   017B90  0E61               	movlw	low sprintf@f
 16026   017B92  6E41               	movwf	vfprintf@fp^0,c
 16027   017B94  6A42               	clrf	(vfprintf@fp+1)^0,c
 16028   017B96  C04A  F043         	movff	sprintf@fmt,vfprintf@fmt
 16029   017B9A  C04B  F044         	movff	sprintf@fmt+1,vfprintf@fmt+1
 16030   017B9E  0E60               	movlw	low sprintf@ap
 16031   017BA0  6E45               	movwf	vfprintf@ap^0,c
 16032   017BA2  EC1D  F0BE         	call	_vfprintf	;wreg free
 16033   017BA6  0100               	movlb	0	; () banked
 16034   017BA8  5164               	movf	(sprintf@f+3)& (0+255),w,b
 16035   017BAA  2448               	addwf	sprintf@s^0,w,c
 16036   017BAC  6ED9               	movwf	fsr2l,c
 16037   017BAE  5165               	movf	(sprintf@f+4)& (0+255),w,b
 16038   017BB0  2049               	addwfc	(sprintf@s+1)^0,w,c
 16039   017BB2  6EDA               	movwf	fsr2h,c
 16040   017BB4  6ADF               	clrf	indf2,c
 16041                           
 16042                           ; BSR set to: 0
 16043   017BB6  0012               	return		;funcret
 16044   017BB8                     __end_of_sprintf:
 16045                           	callstack 0
 16046                           
 16047 ;; *************** function _vfprintf *****************
 16048 ;; Defined at:
 16049 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 16050 ;; Parameters:    Size  Location     Type
 16051 ;;  fp              2   64[COMRAM] PTR struct _IO_FILE
 16052 ;;		 -> sprintf@f(12), NULL(0), 
 16053 ;;  fmt             2   66[COMRAM] PTR const unsigned char 
 16054 ;;		 -> STR_41(26), STR_40(2), STR_38(5), STR_36(4), 
 16055 ;;		 -> STR_34(4), STR_32(4), STR_31(13), STR_30(17), 
 16056 ;;		 -> STR_29(13), STR_28(8), STR_27(21), STR_22(66), 
 16057 ;;		 -> STR_21(12), STR_18(19), STR_17(21), 
 16058 ;;  ap              1   68[COMRAM] PTR PTR void 
 16059 ;;		 -> printf@ap(1), sprintf@ap(1), 
 16060 ;; Auto vars:     Size  Location     Type
 16061 ;;  cfmt            2   69[COMRAM] PTR unsigned char 
 16062 ;;		 -> STR_41(26), STR_40(2), STR_38(5), STR_36(4), 
 16063 ;;		 -> STR_34(4), STR_32(4), STR_31(13), STR_30(17), 
 16064 ;;		 -> STR_29(13), STR_28(8), STR_27(21), STR_22(66), 
 16065 ;;		 -> STR_21(12), STR_18(19), STR_17(21), 
 16066 ;; Return value:  Size  Location     Type
 16067 ;;                  2   64[COMRAM] int 
 16068 ;; Registers used:
 16069 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16070 ;; Tracked objects:
 16071 ;;		On entry : 0/1
 16072 ;;		On exit  : 0/0
 16073 ;;		Unchanged: 0/0
 16074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16075 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16076 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16078 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16079 ;;Total ram usage:        7 bytes
 16080 ;; Hardware stack levels used: 1
 16081 ;; Hardware stack levels required when called: 10
 16082 ;; This function calls:
 16083 ;;		_vfpfcnvrt
 16084 ;; This function is called by:
 16085 ;;		_sprintf
 16086 ;;		_printf
 16087 ;; This function uses a non-reentrant model
 16088 ;;
 16089                           
 16090                           	psect	text49
 16091   017C3A                     __ptext49:
 16092                           	callstack 0
 16093   017C3A                     _vfprintf:
 16094                           	callstack 16
 16095                           
 16096                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
 16097                           
 16098                           ; BSR set to: 0
 16099                           ;incstack = 0
 16100   017C3A  C043  F046         	movff	vfprintf@fmt,vfprintf@cfmt
 16101   017C3E  C044  F047         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 16102                           
 16103                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 16104   017C42  D00A               	goto	l13871
 16105   017C44                     l13869:
 16106                           
 16107                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
 16108   017C44  C041  F033         	movff	vfprintf@fp,vfpfcnvrt@fp
 16109   017C48  C042  F034         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 16110   017C4C  0E46               	movlw	low vfprintf@cfmt
 16111   017C4E  6E35               	movwf	vfpfcnvrt@fmt^0,c
 16112   017C50  C045  F036         	movff	vfprintf@ap,vfpfcnvrt@ap
 16113   017C54  EC66  F099         	call	_vfpfcnvrt	;wreg free
 16114   017C58                     l13871:
 16115                           
 16116                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 16117   017C58  C046  FFF6         	movff	vfprintf@cfmt,tblptrl
 16118   017C5C  C047  FFF7         	movff	vfprintf@cfmt+1,tblptrh
 16119   017C60                     	if	0	;tblptru may be non-zero
 16120   017C60                     	endif
 16121   017C60                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16122   017C60  0E00               	movlw	low (__mediumconst shr (0+16))
 16123   017C62  6EF8               	movwf	tblptru,c
 16124   017C64                     	endif
 16125   017C64  0008               	tblrd		*
 16126   017C66  50F5               	movf	tablat,w,c
 16127   017C68  0900               	iorlw	0
 16128   017C6A  A4D8               	btfss	status,2,c
 16129   017C6C  D7EB               	goto	l13869
 16130                           
 16131                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
 16132   017C6E  0E00               	movlw	0
 16133   017C70  6E42               	movwf	(?_vfprintf+1)^0,c
 16134   017C72  0E00               	movlw	0
 16135   017C74  6E41               	movwf	?_vfprintf^0,c
 16136   017C76  0012               	return		;funcret
 16137   017C78                     __end_of_vfprintf:
 16138                           	callstack 0
 16139                           
 16140 ;; *************** function _vfpfcnvrt *****************
 16141 ;; Defined at:
 16142 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 16143 ;; Parameters:    Size  Location     Type
 16144 ;;  fp              2   50[COMRAM] PTR struct _IO_FILE
 16145 ;;		 -> sprintf@f(12), NULL(0), 
 16146 ;;  fmt             1   52[COMRAM] PTR PTR unsigned char 
 16147 ;;		 -> vfprintf@cfmt(2), 
 16148 ;;  ap              1   53[COMRAM] PTR PTR void 
 16149 ;;		 -> printf@ap(1), sprintf@ap(1), 
 16150 ;; Auto vars:     Size  Location     Type
 16151 ;;  convarg         4   57[COMRAM] struct .
 16152 ;;  cp              2   62[COMRAM] PTR unsigned char 
 16153 ;;		 -> STR_41(26), STR_40(2), STR_38(5), STR_36(4), 
 16154 ;;		 -> STR_34(4), STR_32(4), STR_31(13), STR_30(17), 
 16155 ;;		 -> STR_29(13), STR_28(8), STR_27(21), STR_22(66), 
 16156 ;;		 -> STR_21(12), STR_18(19), STR_17(21), 
 16157 ;;  c               1   61[COMRAM] unsigned char 
 16158 ;;  done            1   56[COMRAM] _Bool 
 16159 ;; Return value:  Size  Location     Type
 16160 ;;                  1    wreg      void 
 16161 ;; Registers used:
 16162 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16163 ;; Tracked objects:
 16164 ;;		On entry : 0/1
 16165 ;;		On exit  : 0/0
 16166 ;;		Unchanged: 0/0
 16167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16168 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16169 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16170 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16171 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16172 ;;Total ram usage:       14 bytes
 16173 ;; Hardware stack levels used: 1
 16174 ;; Hardware stack levels required when called: 9
 16175 ;; This function calls:
 16176 ;;		_dtoa
 16177 ;;		_fputc
 16178 ;;		_read_prec_or_width
 16179 ;;		_stoa
 16180 ;;		_utoa
 16181 ;;		_xtoa
 16182 ;; This function is called by:
 16183 ;;		_vfprintf
 16184 ;; This function uses a non-reentrant model
 16185 ;;
 16186                           
 16187                           	psect	text50
 16188   0132CC                     __ptext50:
 16189                           	callstack 0
 16190   0132CC                     _vfpfcnvrt:
 16191                           	callstack 16
 16192                           
 16193                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
 16194                           
 16195                           ;incstack = 0
 16196   0132CC  5035               	movf	vfpfcnvrt@fmt^0,w,c
 16197   0132CE  6ED9               	movwf	fsr2l,c
 16198   0132D0  6ADA               	clrf	fsr2h,c
 16199   0132D2  CFDE FFF6          	movff	postinc2,tblptrl
 16200   0132D6  CFDD FFF7          	movff	postdec2,tblptrh
 16201   0132DA                     	if	0	;tblptru may be non-zero
 16202   0132DA                     	endif
 16203   0132DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16204   0132DA  0E00               	movlw	low (__mediumconst shr (0+16))
 16205   0132DC  6EF8               	movwf	tblptru,c
 16206   0132DE                     	endif
 16207   0132DE  0008               	tblrd		*
 16208   0132E0  50F5               	movf	tablat,w,c
 16209   0132E2  0A25               	xorlw	37
 16210   0132E4  A4D8               	btfss	status,2,c
 16211   0132E6  D1F2               	goto	l13719
 16212                           
 16213                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
 16214   0132E8  5035               	movf	vfpfcnvrt@fmt^0,w,c
 16215   0132EA  6ED9               	movwf	fsr2l,c
 16216   0132EC  6ADA               	clrf	fsr2h,c
 16217   0132EE  2ADE               	incf	postinc2,f,c
 16218   0132F0  0E00               	movlw	0
 16219   0132F2  22DD               	addwfc	postdec2,f,c
 16220                           
 16221                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
 16222   0132F4  0E00               	movlw	0
 16223   0132F6  0101               	movlb	1	; () banked
 16224   0132F8  6F3C               	movwf	(_width+1)& (0+255),b
 16225   0132FA  0E00               	movlw	0
 16226   0132FC  6F3B               	movwf	_width& (0+255),b
 16227   0132FE  C13B  F163         	movff	_width,_flags
 16228                           
 16229                           ; BSR set to: 1
 16230                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
 16231   013302  693D               	setf	_prec& (0+255),b
 16232   013304  693E               	setf	(_prec+1)& (0+255),b
 16233                           
 16234                           ; BSR set to: 1
 16235                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
 16236   013306  0E00               	movlw	0
 16237   013308  D00A               	goto	L25
 16238   01330A                     l13607:
 16239                           
 16240                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
 16241   01330A  0101               	movlb	1	; () banked
 16242   01330C  8363               	bsf	_flags& (0+255),1,b
 16243                           
 16244                           ; BSR set to: 1
 16245                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
 16246   01330E  5035               	movf	vfpfcnvrt@fmt^0,w,c
 16247   013310  6ED9               	movwf	fsr2l,c
 16248   013312  6ADA               	clrf	fsr2h,c
 16249   013314  2ADE               	incf	postinc2,f,c
 16250   013316  0E00               	movlw	0
 16251   013318  22DD               	addwfc	postdec2,f,c
 16252                           
 16253                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
 16254   01331A  D012               	goto	l13617
 16255   01331C                     l13611:
 16256                           
 16257                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
 16258   01331C  0E01               	movlw	1
 16259   01331E                     L25:
 16260   01331E  6E39               	movwf	vfpfcnvrt@done^0,c
 16261                           
 16262                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
 16263   013320  D00F               	goto	l13617
 16264   013322                     l13615:
 16265   013322  5035               	movf	vfpfcnvrt@fmt^0,w,c
 16266   013324  6ED9               	movwf	fsr2l,c
 16267   013326  6ADA               	clrf	fsr2h,c
 16268   013328  CFDE FFF6          	movff	postinc2,tblptrl
 16269   01332C  CFDD FFF7          	movff	postdec2,tblptrh
 16270   013330                     	if	0	;tblptru may be non-zero
 16271   013330                     	endif
 16272   013330                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16273   013330  0E00               	movlw	low (__mediumconst shr (0+16))
 16274   013332  6EF8               	movwf	tblptru,c
 16275   013334                     	endif
 16276   013334  0008               	tblrd		*
 16277   013336  50F5               	movf	tablat,w,c
 16278                           
 16279                           ; Switch size 1, requested type "simple"
 16280                           ; Number of cases is 1, Range of values is 48 to 48
 16281                           ; switch strategies available:
 16282                           ; Name         Instructions Cycles
 16283                           ; simple_byte            4     3 (average)
 16284                           ;	Chosen strategy is simple_byte
 16285   013338  0A30               	xorlw	48	; case 48
 16286   01333A  B4D8               	btfsc	status,2,c
 16287   01333C  D7E6               	goto	l13607
 16288   01333E  D7EE               	goto	l13611
 16289   013340                     l13617:
 16290                           
 16291                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
 16292   013340  5039               	movf	vfpfcnvrt@done^0,w,c
 16293   013342  B4D8               	btfsc	status,2,c
 16294   013344  D7EE               	goto	l13615
 16295                           
 16296                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
 16297   013346  C035  F00B         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
 16298   01334A  C036  F00C         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
 16299   01334E  ECAA  F0B6         	call	_read_prec_or_width	;wreg free
 16300   013352  C00B  F13B         	movff	?_read_prec_or_width,_width
 16301   013356  C00C  F13C         	movff	?_read_prec_or_width+1,_width+1
 16302                           
 16303                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
 16304   01335A  0101               	movlb	1	; () banked
 16305   01335C  AF3C               	btfss	(_width+1)& (0+255),7,b
 16306   01335E  D005               	goto	l13625
 16307                           
 16308                           ; BSR set to: 1
 16309                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
 16310   013360  8163               	bsf	_flags& (0+255),0,b
 16311                           
 16312                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
 16313   013362  6D3B               	negf	_width& (0+255),b
 16314   013364  1F3C               	comf	(_width+1)& (0+255),f,b
 16315   013366  B0D8               	btfsc	status,0,c
 16316   013368  2B3C               	incf	(_width+1)& (0+255),f,b
 16317   01336A                     l13625:
 16318                           
 16319                           ; BSR set to: 1
 16320                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
 16321   01336A  5035               	movf	vfpfcnvrt@fmt^0,w,c
 16322   01336C  6ED9               	movwf	fsr2l,c
 16323   01336E  6ADA               	clrf	fsr2h,c
 16324   013370  CFDE FFF6          	movff	postinc2,tblptrl
 16325   013374  CFDD FFF7          	movff	postdec2,tblptrh
 16326   013378                     	if	0	;tblptru may be non-zero
 16327   013378                     	endif
 16328   013378                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16329   013378  0E00               	movlw	low (__mediumconst shr (0+16))
 16330   01337A  6EF8               	movwf	tblptru,c
 16331   01337C                     	endif
 16332   01337C  0008               	tblrd		*
 16333   01337E  50F5               	movf	tablat,w,c
 16334   013380  0A2E               	xorlw	46
 16335   013382  A4D8               	btfss	status,2,c
 16336   013384  D010               	goto	l13631
 16337                           
 16338                           ; BSR set to: 1
 16339                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
 16340   013386  5035               	movf	vfpfcnvrt@fmt^0,w,c
 16341   013388  6ED9               	movwf	fsr2l,c
 16342   01338A  6ADA               	clrf	fsr2h,c
 16343   01338C  2ADE               	incf	postinc2,f,c
 16344   01338E  0E00               	movlw	0
 16345   013390  22DD               	addwfc	postdec2,f,c
 16346                           
 16347                           ; BSR set to: 1
 16348                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
 16349   013392  C035  F00B         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
 16350   013396  C036  F00C         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
 16351   01339A  ECAA  F0B6         	call	_read_prec_or_width	;wreg free
 16352   01339E  C00B  F13D         	movff	?_read_prec_or_width,_prec
 16353   0133A2  C00C  F13E         	movff	?_read_prec_or_width+1,_prec+1
 16354   0133A6                     l13631:
 16355                           
 16356                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
 16357   0133A6  5035               	movf	vfpfcnvrt@fmt^0,w,c
 16358   0133A8  6ED9               	movwf	fsr2l,c
 16359   0133AA  6ADA               	clrf	fsr2h,c
 16360   0133AC  CFDE F03F          	movff	postinc2,vfpfcnvrt@cp
 16361   0133B0  CFDD F040          	movff	postdec2,vfpfcnvrt@cp+1
 16362                           
 16363                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
 16364   0133B4  C03F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 16365   0133B8  C040  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 16366   0133BC                     	if	0	;tblptru may be non-zero
 16367   0133BC                     	endif
 16368   0133BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16369   0133BC  0E00               	movlw	low (__mediumconst shr (0+16))
 16370   0133BE  6EF8               	movwf	tblptru,c
 16371   0133C0                     	endif
 16372   0133C0  0008               	tblrd		*
 16373   0133C2  CFF5 F03E          	movff	tablat,vfpfcnvrt@c
 16374                           
 16375                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1294:   switch(c)
      +                           {
 16376   0133C6  D008               	goto	l13643
 16377   0133C8                     l13635:
 16378                           
 16379                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1309:     cp++;
 16380   0133C8  4A3F               	infsnz	vfpfcnvrt@cp^0,f,c
 16381   0133CA  2A40               	incf	(vfpfcnvrt@cp+1)^0,f,c
 16382                           
 16383                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1316:     break;
 16384   0133CC  D019               	goto	l13645
 16385   0133CE                     l4401:
 16386                           
 16387                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1350:     c = 'i'
      +                          ;
 16388   0133CE  0E69               	movlw	105
 16389   0133D0  D001               	goto	L26
 16390   0133D2                     l13639:
 16391                           
 16392                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
 16393   0133D2  0E00               	movlw	0
 16394   0133D4                     L26:
 16395   0133D4  6E3E               	movwf	vfpfcnvrt@c^0,c
 16396                           
 16397                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1354:     break;
 16398   0133D6  D014               	goto	l13645
 16399   0133D8                     l13643:
 16400   0133D8  503E               	movf	vfpfcnvrt@c^0,w,c
 16401                           
 16402                           ; Switch size 1, requested type "simple"
 16403                           ; Number of cases is 6, Range of values is 88 to 120
 16404                           ; switch strategies available:
 16405                           ; Name         Instructions Cycles
 16406                           ; simple_byte           19    10 (average)
 16407                           ;	Chosen strategy is simple_byte
 16408   0133DA  0A58               	xorlw	88	; case 88
 16409   0133DC  B4D8               	btfsc	status,2,c
 16410   0133DE  D7F7               	goto	l4401
 16411   0133E0  0A3C               	xorlw	60	; case 100
 16412   0133E2  B4D8               	btfsc	status,2,c
 16413   0133E4  D7F4               	goto	l4401
 16414   0133E6  0A0D               	xorlw	13	; case 105
 16415   0133E8  B4D8               	btfsc	status,2,c
 16416   0133EA  D7F1               	goto	l4401
 16417   0133EC  0A05               	xorlw	5	; case 108
 16418   0133EE  B4D8               	btfsc	status,2,c
 16419   0133F0  D7EB               	goto	l13635
 16420   0133F2  0A19               	xorlw	25	; case 117
 16421   0133F4  B4D8               	btfsc	status,2,c
 16422   0133F6  D7EB               	goto	l4401
 16423   0133F8  0A0D               	xorlw	13	; case 120
 16424   0133FA  B4D8               	btfsc	status,2,c
 16425   0133FC  D7E8               	goto	l4401
 16426   0133FE  D7E9               	goto	l13639
 16427   013400                     l13645:
 16428                           
 16429                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
 16430   013400  C03F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 16431   013404  C040  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 16432   013408                     	if	0	;tblptru may be non-zero
 16433   013408                     	endif
 16434   013408                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16435   013408  0E00               	movlw	low (__mediumconst shr (0+16))
 16436   01340A  6EF8               	movwf	tblptru,c
 16437   01340C                     	endif
 16438   01340C  0008               	tblrd		*
 16439   01340E  50F5               	movf	tablat,w,c
 16440   013410  0A64               	xorlw	100
 16441   013412  B4D8               	btfsc	status,2,c
 16442   013414  D02F               	goto	l13655
 16443   013416  C03F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 16444   01341A  C040  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 16445   01341E                     	if	0	;tblptru may be non-zero
 16446   01341E                     	endif
 16447   01341E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16448   01341E  0E00               	movlw	low (__mediumconst shr (0+16))
 16449   013420  6EF8               	movwf	tblptru,c
 16450   013422                     	endif
 16451   013422  0008               	tblrd		*
 16452   013424  50F5               	movf	tablat,w,c
 16453   013426  0A69               	xorlw	105
 16454   013428  B4D8               	btfsc	status,2,c
 16455   01342A  D024               	goto	l13655
 16456   01342C  D046               	goto	l13663
 16457   01342E                     l13649:
 16458                           
 16459                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1365:      convar
      +                          g.sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
 16460   01342E  5036               	movf	vfpfcnvrt@ap^0,w,c
 16461   013430  6ED9               	movwf	fsr2l,c
 16462   013432  6ADA               	clrf	fsr2h,c
 16463   013434  50DF               	movf	indf2,w,c
 16464   013436  2ADF               	incf	indf2,f,c
 16465   013438  2ADF               	incf	indf2,f,c
 16466   01343A  6ED9               	movwf	fsr2l,c
 16467   01343C  6ADA               	clrf	fsr2h,c
 16468   01343E  CFDE F03A          	movff	postinc2,vfpfcnvrt@convarg
 16469   013442  CFDD F03B          	movff	postdec2,vfpfcnvrt@convarg+1
 16470   013446  0E00               	movlw	0
 16471   013448  BE3B               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
 16472   01344A  0EFF               	movlw	-1
 16473   01344C  6E3C               	movwf	(vfpfcnvrt@convarg+2)^0,c
 16474   01344E  6E3D               	movwf	(vfpfcnvrt@convarg+3)^0,c
 16475                           
 16476                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1366:      break;
 16477   013450  D018               	goto	l13657
 16478   013452                     l13651:
 16479                           
 16480                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1379:      convar
      +                          g.sint = (vfpf_sint_t)(*(long *)__va_arg(*(long **)ap, (long)0));
 16481   013452  5036               	movf	vfpfcnvrt@ap^0,w,c
 16482   013454  6ED9               	movwf	fsr2l,c
 16483   013456  6ADA               	clrf	fsr2h,c
 16484   013458  0E04               	movlw	4
 16485   01345A  26DF               	addwf	indf2,f,c
 16486   01345C  5CDF               	subwf	indf2,w,c
 16487   01345E  6ED9               	movwf	fsr2l,c
 16488   013460  6ADA               	clrf	fsr2h,c
 16489   013462  CFDE F03A          	movff	postinc2,vfpfcnvrt@convarg
 16490   013466  CFDE F03B          	movff	postinc2,vfpfcnvrt@convarg+1
 16491   01346A  CFDE F03C          	movff	postinc2,vfpfcnvrt@convarg+2
 16492   01346E  CFDE F03D          	movff	postinc2,vfpfcnvrt@convarg+3
 16493                           
 16494                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1380:      break;
 16495   013472  D007               	goto	l13657
 16496   013474                     l13655:
 16497   013474  503E               	movf	vfpfcnvrt@c^0,w,c
 16498                           
 16499                           ; Switch size 1, requested type "simple"
 16500                           ; Number of cases is 2, Range of values is 105 to 108
 16501                           ; switch strategies available:
 16502                           ; Name         Instructions Cycles
 16503                           ; simple_byte            7     4 (average)
 16504                           ;	Chosen strategy is simple_byte
 16505   013476  0A69               	xorlw	105	; case 105
 16506   013478  B4D8               	btfsc	status,2,c
 16507   01347A  D7D9               	goto	l13649
 16508   01347C  0A05               	xorlw	5	; case 108
 16509   01347E  B4D8               	btfsc	status,2,c
 16510   013480  D7E8               	goto	l13651
 16511   013482                     l13657:
 16512                           
 16513                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
 16514   013482  0E01               	movlw	1
 16515   013484  243F               	addwf	vfpfcnvrt@cp^0,w,c
 16516   013486  6E37               	movwf	??_vfpfcnvrt^0,c
 16517   013488  0E00               	movlw	0
 16518   01348A  2040               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
 16519   01348C  6E38               	movwf	(??_vfpfcnvrt+1)^0,c
 16520   01348E  5035               	movf	vfpfcnvrt@fmt^0,w,c
 16521   013490  6ED9               	movwf	fsr2l,c
 16522   013492  6ADA               	clrf	fsr2h,c
 16523   013494  C037  FFDE         	movff	??_vfpfcnvrt,postinc2
 16524   013498  C038  FFDD         	movff	??_vfpfcnvrt+1,postdec2
 16525                           
 16526                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
 16527   01349C  C033  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
 16528   0134A0  C034  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 16529   0134A4  C03A  F020         	movff	vfpfcnvrt@convarg,dtoa@d
 16530   0134A8  C03B  F021         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
 16531   0134AC  C03C  F022         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
 16532   0134B0  C03D  F023         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
 16533   0134B4  EC1D  F0AD         	call	_dtoa	;wreg free
 16534   0134B8  0012               	return	
 16535   0134BA                     l13663:
 16536   0134BA  C03F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 16537   0134BE  C040  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 16538   0134C2                     	if	0	;tblptru may be non-zero
 16539   0134C2                     	endif
 16540   0134C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16541   0134C2  0E00               	movlw	low (__mediumconst shr (0+16))
 16542   0134C4  6EF8               	movwf	tblptru,c
 16543   0134C6                     	endif
 16544   0134C6  0008               	tblrd		*
 16545   0134C8  50F5               	movf	tablat,w,c
 16546   0134CA  0A78               	xorlw	120
 16547   0134CC  B4D8               	btfsc	status,2,c
 16548   0134CE  D03B               	goto	l13675
 16549   0134D0  C03F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 16550   0134D4  C040  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 16551   0134D8                     	if	0	;tblptru may be non-zero
 16552   0134D8                     	endif
 16553   0134D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16554   0134D8  0E00               	movlw	low (__mediumconst shr (0+16))
 16555   0134DA  6EF8               	movwf	tblptru,c
 16556   0134DC                     	endif
 16557   0134DC  0008               	tblrd		*
 16558   0134DE  50F5               	movf	tablat,w,c
 16559   0134E0  0A58               	xorlw	88
 16560   0134E2  B4D8               	btfsc	status,2,c
 16561   0134E4  D030               	goto	l13675
 16562   0134E6  C03F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 16563   0134EA  C040  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 16564   0134EE                     	if	0	;tblptru may be non-zero
 16565   0134EE                     	endif
 16566   0134EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16567   0134EE  0E00               	movlw	low (__mediumconst shr (0+16))
 16568   0134F0  6EF8               	movwf	tblptru,c
 16569   0134F2                     	endif
 16570   0134F2  0008               	tblrd		*
 16571   0134F4  50F5               	movf	tablat,w,c
 16572   0134F6  0A75               	xorlw	117
 16573   0134F8  B4D8               	btfsc	status,2,c
 16574   0134FA  D025               	goto	l13675
 16575   0134FC  D071               	goto	l13691
 16576   0134FE                     l13669:
 16577                           
 16578                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1456:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
 16579   0134FE  5036               	movf	vfpfcnvrt@ap^0,w,c
 16580   013500  6ED9               	movwf	fsr2l,c
 16581   013502  6ADA               	clrf	fsr2h,c
 16582   013504  50DF               	movf	indf2,w,c
 16583   013506  2ADF               	incf	indf2,f,c
 16584   013508  2ADF               	incf	indf2,f,c
 16585   01350A  6ED9               	movwf	fsr2l,c
 16586   01350C  6ADA               	clrf	fsr2h,c
 16587   01350E  CFDE F037          	movff	postinc2,??_vfpfcnvrt
 16588   013512  CFDD F038          	movff	postdec2,??_vfpfcnvrt+1
 16589   013516  C037  F03A         	movff	??_vfpfcnvrt,vfpfcnvrt@convarg
 16590   01351A  C038  F03B         	movff	??_vfpfcnvrt+1,vfpfcnvrt@convarg+1
 16591   01351E  6A3C               	clrf	(vfpfcnvrt@convarg+2)^0,c
 16592   013520  6A3D               	clrf	(vfpfcnvrt@convarg+3)^0,c
 16593                           
 16594                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1457:      break;
 16595   013522  D018               	goto	l13677
 16596   013524                     l13671:
 16597                           
 16598                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1470:      convar
      +                          g.uint = (vfpf_uint_t)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)
      +                          0));
 16599   013524  5036               	movf	vfpfcnvrt@ap^0,w,c
 16600   013526  6ED9               	movwf	fsr2l,c
 16601   013528  6ADA               	clrf	fsr2h,c
 16602   01352A  0E04               	movlw	4
 16603   01352C  26DF               	addwf	indf2,f,c
 16604   01352E  5CDF               	subwf	indf2,w,c
 16605   013530  6ED9               	movwf	fsr2l,c
 16606   013532  6ADA               	clrf	fsr2h,c
 16607   013534  CFDE F03A          	movff	postinc2,vfpfcnvrt@convarg
 16608   013538  CFDE F03B          	movff	postinc2,vfpfcnvrt@convarg+1
 16609   01353C  CFDE F03C          	movff	postinc2,vfpfcnvrt@convarg+2
 16610   013540  CFDE F03D          	movff	postinc2,vfpfcnvrt@convarg+3
 16611                           
 16612                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1471:      break;
 16613   013544  D007               	goto	l13677
 16614   013546                     l13675:
 16615   013546  503E               	movf	vfpfcnvrt@c^0,w,c
 16616                           
 16617                           ; Switch size 1, requested type "simple"
 16618                           ; Number of cases is 2, Range of values is 105 to 108
 16619                           ; switch strategies available:
 16620                           ; Name         Instructions Cycles
 16621                           ; simple_byte            7     4 (average)
 16622                           ;	Chosen strategy is simple_byte
 16623   013548  0A69               	xorlw	105	; case 105
 16624   01354A  B4D8               	btfsc	status,2,c
 16625   01354C  D7D8               	goto	l13669
 16626   01354E  0A05               	xorlw	5	; case 108
 16627   013550  B4D8               	btfsc	status,2,c
 16628   013552  D7E8               	goto	l13671
 16629   013554                     l13677:
 16630                           
 16631                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
 16632   013554  0E01               	movlw	1
 16633   013556  243F               	addwf	vfpfcnvrt@cp^0,w,c
 16634   013558  6E37               	movwf	??_vfpfcnvrt^0,c
 16635   01355A  0E00               	movlw	0
 16636   01355C  2040               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
 16637   01355E  6E38               	movwf	(??_vfpfcnvrt+1)^0,c
 16638   013560  5035               	movf	vfpfcnvrt@fmt^0,w,c
 16639   013562  6ED9               	movwf	fsr2l,c
 16640   013564  6ADA               	clrf	fsr2h,c
 16641   013566  C037  FFDE         	movff	??_vfpfcnvrt,postinc2
 16642   01356A  C038  FFDD         	movff	??_vfpfcnvrt+1,postdec2
 16643                           
 16644                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
 16645   01356E  D027               	goto	l13689
 16646   013570                     l13679:
 16647                           
 16648                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (void) utoa(fp, convarg.uint);;	Return value of _vfpfcnvrt is never used
 16649   013570  C033  F01E         	movff	vfpfcnvrt@fp,utoa@fp
 16650   013574  C034  F01F         	movff	vfpfcnvrt@fp+1,utoa@fp+1
 16651   013578  C03A  F020         	movff	vfpfcnvrt@convarg,utoa@d
 16652   01357C  C03B  F021         	movff	vfpfcnvrt@convarg+1,utoa@d+1
 16653   013580  C03C  F022         	movff	vfpfcnvrt@convarg+2,utoa@d+2
 16654   013584  C03D  F023         	movff	vfpfcnvrt@convarg+3,utoa@d+3
 16655   013588  EC68  F0B1         	call	_utoa	;wreg free
 16656   01358C  0012               	return	
 16657   01358E                     l13683:
 16658                           
 16659                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1586:      return
      +                           (void) xtoa(fp,convarg.uint,*cp);;	Return value of _vfpfcnvrt is never used
 16660   01358E  C033  F01E         	movff	vfpfcnvrt@fp,xtoa@fp
 16661   013592  C034  F01F         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 16662   013596  C03A  F020         	movff	vfpfcnvrt@convarg,xtoa@d
 16663   01359A  C03B  F021         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
 16664   01359E  C03C  F022         	movff	vfpfcnvrt@convarg+2,xtoa@d+2
 16665   0135A2  C03D  F023         	movff	vfpfcnvrt@convarg+3,xtoa@d+3
 16666   0135A6  C03F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 16667   0135AA  C040  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 16668   0135AE                     	if	0	;tblptru may be non-zero
 16669   0135AE                     	endif
 16670   0135AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16671   0135AE  0E00               	movlw	low (__mediumconst shr (0+16))
 16672   0135B0  6EF8               	movwf	tblptru,c
 16673   0135B2                     	endif
 16674   0135B2  0008               	tblrd		*
 16675   0135B4  CFF5 F024          	movff	tablat,xtoa@x
 16676   0135B8  ECDB  F0B0         	call	_xtoa	;wreg free
 16677   0135BC  0012               	return	
 16678   0135BE                     l13689:
 16679   0135BE  C03F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 16680   0135C2  C040  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 16681   0135C6                     	if	0	;tblptru may be non-zero
 16682   0135C6                     	endif
 16683   0135C6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16684   0135C6  0E00               	movlw	low (__mediumconst shr (0+16))
 16685   0135C8  6EF8               	movwf	tblptru,c
 16686   0135CA                     	endif
 16687   0135CA  0008               	tblrd		*
 16688   0135CC  50F5               	movf	tablat,w,c
 16689                           
 16690                           ; Switch size 1, requested type "simple"
 16691                           ; Number of cases is 3, Range of values is 88 to 120
 16692                           ; switch strategies available:
 16693                           ; Name         Instructions Cycles
 16694                           ; simple_byte           10     6 (average)
 16695                           ;	Chosen strategy is simple_byte
 16696   0135CE  0A58               	xorlw	88	; case 88
 16697   0135D0  B4D8               	btfsc	status,2,c
 16698   0135D2  D7DD               	goto	l13683
 16699   0135D4  0A2D               	xorlw	45	; case 117
 16700   0135D6  B4D8               	btfsc	status,2,c
 16701   0135D8  D7CB               	goto	l13679
 16702   0135DA  0A0D               	xorlw	13	; case 120
 16703   0135DC  B4D8               	btfsc	status,2,c
 16704   0135DE  D7D7               	goto	l13683
 16705   0135E0                     l13691:
 16706                           
 16707                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
 16708   0135E0  0E00               	movlw	0
 16709   0135E2  6E39               	movwf	vfpfcnvrt@done^0,c
 16710                           
 16711                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
 16712   0135E4  5035               	movf	vfpfcnvrt@fmt^0,w,c
 16713   0135E6  6ED9               	movwf	fsr2l,c
 16714   0135E8  6ADA               	clrf	fsr2h,c
 16715   0135EA  CFDE FFF6          	movff	postinc2,tblptrl
 16716   0135EE  CFDD FFF7          	movff	postdec2,tblptrh
 16717   0135F2                     	if	0	;tblptru may be non-zero
 16718   0135F2                     	endif
 16719   0135F2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16720   0135F2  0E00               	movlw	low (__mediumconst shr (0+16))
 16721   0135F4  6EF8               	movwf	tblptru,c
 16722   0135F6                     	endif
 16723   0135F6  0008               	tblrd		*
 16724   0135F8  50F5               	movf	tablat,w,c
 16725   0135FA  0A73               	xorlw	115
 16726   0135FC  A4D8               	btfss	status,2,c
 16727   0135FE  D009               	goto	l13699
 16728                           
 16729                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
 16730   013600  5035               	movf	vfpfcnvrt@fmt^0,w,c
 16731   013602  6ED9               	movwf	fsr2l,c
 16732   013604  6ADA               	clrf	fsr2h,c
 16733   013606  2ADE               	incf	postinc2,f,c
 16734   013608  0E00               	movlw	0
 16735   01360A  22DD               	addwfc	postdec2,f,c
 16736                           
 16737                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
 16738   01360C  0E01               	movlw	1
 16739   01360E  6E39               	movwf	vfpfcnvrt@done^0,c
 16740                           
 16741                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1660:   }
 16742   013610  D040               	goto	l13709
 16743   013612                     l13699:
 16744   013612  5035               	movf	vfpfcnvrt@fmt^0,w,c
 16745   013614  6ED9               	movwf	fsr2l,c
 16746   013616  6ADA               	clrf	fsr2h,c
 16747   013618  CFDE FFF6          	movff	postinc2,tblptrl
 16748   01361C  CFDD FFF7          	movff	postdec2,tblptrh
 16749   013620                     	if	0	;tblptru may be non-zero
 16750   013620                     	endif
 16751   013620                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16752   013620  0E00               	movlw	low (__mediumconst shr (0+16))
 16753   013622  6EF8               	movwf	tblptru,c
 16754   013624                     	endif
 16755   013624  0008               	tblrd		*
 16756   013626  50F5               	movf	tablat,w,c
 16757   013628  0A6C               	xorlw	108
 16758   01362A  A4D8               	btfss	status,2,c
 16759   01362C  D032               	goto	l13709
 16760   01362E  5035               	movf	vfpfcnvrt@fmt^0,w,c
 16761   013630  6ED9               	movwf	fsr2l,c
 16762   013632  6ADA               	clrf	fsr2h,c
 16763   013634  CFDE F037          	movff	postinc2,??_vfpfcnvrt
 16764   013638  CFDD F038          	movff	postdec2,??_vfpfcnvrt+1
 16765   01363C  0E01               	movlw	1
 16766   01363E  2637               	addwf	??_vfpfcnvrt^0,f,c
 16767   013640  0E00               	movlw	0
 16768   013642  2238               	addwfc	(??_vfpfcnvrt+1)^0,f,c
 16769   013644  C037  FFF6         	movff	??_vfpfcnvrt,tblptrl
 16770   013648  C038  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
 16771   01364C                     	if	0	;tblptru may be non-zero
 16772   01364C                     	endif
 16773   01364C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16774   01364C  0E00               	movlw	low (__mediumconst shr (0+16))
 16775   01364E  6EF8               	movwf	tblptru,c
 16776   013650                     	endif
 16777   013650  0008               	tblrd		*
 16778   013652  50F5               	movf	tablat,w,c
 16779   013654  0A6C               	xorlw	108
 16780   013656  A4D8               	btfss	status,2,c
 16781   013658  D01C               	goto	l13709
 16782   01365A  5035               	movf	vfpfcnvrt@fmt^0,w,c
 16783   01365C  6ED9               	movwf	fsr2l,c
 16784   01365E  6ADA               	clrf	fsr2h,c
 16785   013660  CFDE F037          	movff	postinc2,??_vfpfcnvrt
 16786   013664  CFDD F038          	movff	postdec2,??_vfpfcnvrt+1
 16787   013668  0E02               	movlw	2
 16788   01366A  2637               	addwf	??_vfpfcnvrt^0,f,c
 16789   01366C  0E00               	movlw	0
 16790   01366E  2238               	addwfc	(??_vfpfcnvrt+1)^0,f,c
 16791   013670  C037  FFF6         	movff	??_vfpfcnvrt,tblptrl
 16792   013674  C038  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
 16793   013678                     	if	0	;tblptru may be non-zero
 16794   013678                     	endif
 16795   013678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16796   013678  0E00               	movlw	low (__mediumconst shr (0+16))
 16797   01367A  6EF8               	movwf	tblptru,c
 16798   01367C                     	endif
 16799   01367C  0008               	tblrd		*
 16800   01367E  50F5               	movf	tablat,w,c
 16801   013680  0A73               	xorlw	115
 16802   013682  A4D8               	btfss	status,2,c
 16803   013684  D006               	goto	l13709
 16804                           
 16805                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
 16806   013686  5035               	movf	vfpfcnvrt@fmt^0,w,c
 16807   013688  6ED9               	movwf	fsr2l,c
 16808   01368A  6ADA               	clrf	fsr2h,c
 16809   01368C  0E03               	movlw	3
 16810   01368E  26DE               	addwf	postinc2,f,c
 16811   013690  D7BB               	goto	L27
 16812   013692                     l13709:
 16813                           
 16814                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
 16815   013692  5039               	movf	vfpfcnvrt@done^0,w,c
 16816   013694  B4D8               	btfsc	status,2,c
 16817   013696  D013               	goto	l13715
 16818                           
 16819                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1682:    return (
      +                          void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpf
      +                          cnvrt is never used
 16820   013698  C033  F00E         	movff	vfpfcnvrt@fp,stoa@fp
 16821   01369C  C034  F00F         	movff	vfpfcnvrt@fp+1,stoa@fp+1
 16822   0136A0  5036               	movf	vfpfcnvrt@ap^0,w,c
 16823   0136A2  6ED9               	movwf	fsr2l,c
 16824   0136A4  6ADA               	clrf	fsr2h,c
 16825   0136A6  0E02               	movlw	2
 16826   0136A8  26DF               	addwf	indf2,f,c
 16827   0136AA  5CDF               	subwf	indf2,w,c
 16828   0136AC  6ED9               	movwf	fsr2l,c
 16829   0136AE  6ADA               	clrf	fsr2h,c
 16830   0136B0  CFDE F010          	movff	postinc2,stoa@s
 16831   0136B4  CFDE F011          	movff	postinc2,stoa@s+1
 16832   0136B8  EC1E  F0AF         	call	_stoa	;wreg free
 16833   0136BC  0012               	return	
 16834   0136BE                     l13715:
 16835                           
 16836                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 16837   0136BE  5035               	movf	vfpfcnvrt@fmt^0,w,c
 16838   0136C0  6ED9               	movwf	fsr2l,c
 16839   0136C2  6ADA               	clrf	fsr2h,c
 16840   0136C4  2ADE               	incf	postinc2,f,c
 16841   0136C6  0E00               	movlw	0
 16842   0136C8  22DD               	addwfc	postdec2,f,c
 16843   0136CA  0012               	return	
 16844   0136CC                     l13719:
 16845                           
 16846                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 16847   0136CC  5035               	movf	vfpfcnvrt@fmt^0,w,c
 16848   0136CE  6ED9               	movwf	fsr2l,c
 16849   0136D0  6ADA               	clrf	fsr2h,c
 16850   0136D2  CFDE FFF6          	movff	postinc2,tblptrl
 16851   0136D6  CFDD FFF7          	movff	postdec2,tblptrh
 16852   0136DA                     	if	0	;tblptru may be non-zero
 16853   0136DA                     	endif
 16854   0136DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16855   0136DA  0E00               	movlw	low (__mediumconst shr (0+16))
 16856   0136DC  6EF8               	movwf	tblptru,c
 16857   0136DE                     	endif
 16858   0136DE  0008               	tblrd		*
 16859   0136E0  50F5               	movf	tablat,w,c
 16860   0136E2  6E05               	movwf	fputc@c^0,c
 16861   0136E4  6A06               	clrf	(fputc@c+1)^0,c
 16862   0136E6  C033  F007         	movff	vfpfcnvrt@fp,fputc@fp
 16863   0136EA  C034  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 16864   0136EE  ECFA  F0B6         	call	_fputc	;wreg free
 16865   0136F2  D7E5               	goto	l13715
 16866   0136F4                     __end_of_vfpfcnvrt:
 16867                           	callstack 0
 16868                           
 16869 ;; *************** function _xtoa *****************
 16870 ;; Defined at:
 16871 ;;		line 1052 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 16872 ;; Parameters:    Size  Location     Type
 16873 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 16874 ;;		 -> sprintf@f(12), NULL(0), 
 16875 ;;  d               4   31[COMRAM] unsigned long 
 16876 ;;  x               1   35[COMRAM] unsigned char 
 16877 ;; Auto vars:     Size  Location     Type
 16878 ;;  i               2   48[COMRAM] int 
 16879 ;;  w               2   45[COMRAM] int 
 16880 ;;  p               2   43[COMRAM] int 
 16881 ;;  c               1   47[COMRAM] unsigned char 
 16882 ;;  a               1   40[COMRAM] unsigned char 
 16883 ;; Return value:  Size  Location     Type
 16884 ;;                  1    wreg      void 
 16885 ;; Registers used:
 16886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16887 ;; Tracked objects:
 16888 ;;		On entry : 0/1
 16889 ;;		On exit  : 0/0
 16890 ;;		Unchanged: 0/0
 16891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16892 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16893 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16894 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16895 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16896 ;;Total ram usage:       21 bytes
 16897 ;; Hardware stack levels used: 1
 16898 ;; Hardware stack levels required when called: 8
 16899 ;; This function calls:
 16900 ;;		_pad
 16901 ;; This function is called by:
 16902 ;;		_vfpfcnvrt
 16903 ;; This function uses a non-reentrant model
 16904 ;;
 16905                           
 16906                           	psect	text51
 16907   0161B6                     __ptext51:
 16908                           	callstack 0
 16909   0161B6                     _xtoa:
 16910                           	callstack 16
 16911                           
 16912                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1052: static void
      +                           xtoa(FILE *fp, vfpf_uint_t d, char x);C:\Program Files\Microchip\xc8\v2.46\pic\sources\
      +                          c99\common\doprnt.c: 1058: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1059:  char c;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\do
      +                          prnt.c: 1061:  char a;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprn
      +                          t.c: 1063:     int i, w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dop
      +                          rnt.c: 1065:  int p;
 16913                           
 16914                           ;incstack = 0
 16915   0161B6  0101               	movlb	1	; () banked
 16916   0161B8  AF3E               	btfss	(_prec+1)& (0+255),7,b
 16917                           
 16918                           ; BSR set to: 1
 16919                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1077:         fla
      +                          gs &= ~(1 << 1);
 16920   0161BA  9363               	bcf	_flags& (0+255),1,b
 16921                           
 16922                           ; BSR set to: 1
 16923                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1080:     p = (0 
      +                          <= prec) ? prec : 1;
 16924   0161BC  AF3E               	btfss	(_prec+1)& (0+255),7,b
 16925   0161BE  D005               	goto	l4358
 16926                           
 16927                           ; BSR set to: 1
 16928   0161C0  0E00               	movlw	0
 16929   0161C2  6E2D               	movwf	(xtoa@p+1)^0,c
 16930   0161C4  0E01               	movlw	1
 16931   0161C6  6E2C               	movwf	xtoa@p^0,c
 16932   0161C8  D004               	goto	l4360
 16933   0161CA                     l4358:
 16934                           
 16935                           ; BSR set to: 1
 16936   0161CA  C13D  F02C         	movff	_prec,xtoa@p
 16937   0161CE  C13E  F02D         	movff	_prec+1,xtoa@p+1
 16938   0161D2                     l4360:
 16939                           
 16940                           ; BSR set to: 1
 16941                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1082:     w = wid
      +                          th;
 16942   0161D2  C13B  F02E         	movff	_width,xtoa@w
 16943   0161D6  C13C  F02F         	movff	_width+1,xtoa@w+1
 16944                           
 16945                           ; BSR set to: 1
 16946                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1091:  a = x == '
      +                          x' ? 'a' : 'A';
 16947   0161DA  0E78               	movlw	120
 16948   0161DC  1824               	xorwf	xtoa@x^0,w,c
 16949   0161DE  B4D8               	btfsc	status,2,c
 16950   0161E0  D004               	goto	l13401
 16951                           
 16952                           ; BSR set to: 1
 16953   0161E2  0E00               	movlw	0
 16954   0161E4  6E2B               	movwf	(_xtoa$8772+1)^0,c
 16955   0161E6  0E41               	movlw	65
 16956   0161E8  D003               	goto	L28
 16957   0161EA                     l13401:
 16958                           
 16959                           ; BSR set to: 1
 16960   0161EA  0E00               	movlw	0
 16961   0161EC  6E2B               	movwf	(_xtoa$8772+1)^0,c
 16962   0161EE  0E61               	movlw	97
 16963   0161F0                     L28:
 16964   0161F0  6E2A               	movwf	_xtoa$8772^0,c
 16965                           
 16966                           ; BSR set to: 1
 16967   0161F2  C02A  F029         	movff	_xtoa$8772,xtoa@a
 16968                           
 16969                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1095:     i = siz
      +                          eof(dbuf) - 1;
 16970   0161F6  0E00               	movlw	0
 16971   0161F8  6E32               	movwf	(xtoa@i+1)^0,c
 16972   0161FA  0E1F               	movlw	31
 16973   0161FC  6E31               	movwf	xtoa@i^0,c
 16974                           
 16975                           ; BSR set to: 1
 16976                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1096:     dbuf[i]
      +                           = '\0';
 16977   0161FE  0E00               	movlw	0
 16978   016200  0105               	movlb	5	; () banked
 16979   016202  6FC2               	movwf	(_dbuf+31)& (0+255),b
 16980                           
 16981                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
 16982   016204  D035               	goto	l13425
 16983   016206                     l13407:
 16984                           
 16985                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1106:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1107:         --i;
 16986   016206  0631               	decf	xtoa@i^0,f,c
 16987   016208  A0D8               	btfss	status,0,c
 16988   01620A  0632               	decf	(xtoa@i+1)^0,f,c
 16989                           
 16990                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1108:         c =
      +                           d & 0x0f;
 16991   01620C  5020               	movf	xtoa@d^0,w,c
 16992   01620E  0B0F               	andlw	15
 16993   016210  6E30               	movwf	xtoa@c^0,c
 16994                           
 16995                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1109:   if (c < 1
      +                          0) {
 16996   016212  0E0A               	movlw	10
 16997   016214  6030               	cpfslt	xtoa@c^0,c
 16998   016216  D002               	goto	l13415
 16999                           
 17000                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1110:    c += '0'
      +                          ;
 17001   016218  0E30               	movlw	48
 17002   01621A  D002               	goto	L29
 17003   01621C                     l13415:
 17004                           
 17005                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1114:    c += a -
      +                           10;
 17006   01621C  5029               	movf	xtoa@a^0,w,c
 17007   01621E  0FF6               	addlw	246
 17008   016220                     L29:
 17009   016220  2630               	addwf	xtoa@c^0,f,c
 17010                           
 17011                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1121:   dbuf[i] =
      +                           c;
 17012   016222  0EA3               	movlw	low _dbuf
 17013   016224  2431               	addwf	xtoa@i^0,w,c
 17014   016226  6ED9               	movwf	fsr2l,c
 17015   016228  0E05               	movlw	high _dbuf
 17016   01622A  2032               	addwfc	(xtoa@i+1)^0,w,c
 17017   01622C  6EDA               	movwf	fsr2h,c
 17018   01622E  C030  FFDF         	movff	xtoa@c,indf2
 17019                           
 17020                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1123:         --p
      +                          ;
 17021   016232  062C               	decf	xtoa@p^0,f,c
 17022   016234  A0D8               	btfss	status,0,c
 17023   016236  062D               	decf	(xtoa@p+1)^0,f,c
 17024                           
 17025                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1127:         --w
      +                          ;
 17026   016238  062E               	decf	xtoa@w^0,f,c
 17027   01623A  A0D8               	btfss	status,0,c
 17028   01623C  062F               	decf	(xtoa@w+1)^0,f,c
 17029                           
 17030                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1128:         d =
      +                           d >> 4;
 17031   01623E  C020  F025         	movff	xtoa@d,??_xtoa
 17032   016242  C021  F026         	movff	xtoa@d+1,??_xtoa+1
 17033   016246  C022  F027         	movff	xtoa@d+2,??_xtoa+2
 17034   01624A  C023  F028         	movff	xtoa@d+3,??_xtoa+3
 17035   01624E  0E05               	movlw	5
 17036   016250  D005               	goto	u11300
 17037   016252                     u11305:
 17038   016252  90D8               	bcf	status,0,c
 17039   016254  3228               	rrcf	(??_xtoa+3)^0,f,c
 17040   016256  3227               	rrcf	(??_xtoa+2)^0,f,c
 17041   016258  3226               	rrcf	(??_xtoa+1)^0,f,c
 17042   01625A  3225               	rrcf	??_xtoa^0,f,c
 17043   01625C                     u11300:
 17044   01625C  2EE8               	decfsz	wreg,f,c
 17045   01625E  D7F9               	goto	u11305
 17046   016260  C025  F020         	movff	??_xtoa,xtoa@d
 17047   016264  C026  F021         	movff	??_xtoa+1,xtoa@d+1
 17048   016268  C027  F022         	movff	??_xtoa+2,xtoa@d+2
 17049   01626C  C028  F023         	movff	??_xtoa+3,xtoa@d+3
 17050   016270                     l13425:
 17051                           
 17052                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
 17053   016270  BE32               	btfsc	(xtoa@i+1)^0,7,c
 17054   016272  D01D               	goto	u11350
 17055   016274  5032               	movf	(xtoa@i+1)^0,w,c
 17056   016276  E104               	bnz	u11310
 17057   016278  0E02               	movlw	2
 17058   01627A  5C31               	subwf	xtoa@i^0,w,c
 17059   01627C  A0D8               	btfss	status,0,c
 17060   01627E  D017               	goto	u11350
 17061   016280                     u11310:
 17062   016280  5020               	movf	xtoa@d^0,w,c
 17063   016282  1021               	iorwf	(xtoa@d+1)^0,w,c
 17064   016284  1022               	iorwf	(xtoa@d+2)^0,w,c
 17065   016286  1023               	iorwf	(xtoa@d+3)^0,w,c
 17066   016288  A4D8               	btfss	status,2,c
 17067   01628A  D7BD               	goto	l13407
 17068   01628C  BE2D               	btfsc	(xtoa@p+1)^0,7,c
 17069   01628E  D005               	goto	u11330
 17070   016290  502D               	movf	(xtoa@p+1)^0,w,c
 17071   016292  E1B9               	bnz	l13407
 17072   016294  042C               	decf	xtoa@p^0,w,c
 17073   016296  B0D8               	btfsc	status,0,c
 17074   016298  D7B6               	goto	l13407
 17075   01629A                     u11330:
 17076   01629A  BE2F               	btfsc	(xtoa@w+1)^0,7,c
 17077   01629C  D008               	goto	u11350
 17078   01629E  502F               	movf	(xtoa@w+1)^0,w,c
 17079   0162A0  E103               	bnz	u11340
 17080   0162A2  042E               	decf	xtoa@w^0,w,c
 17081   0162A4  A0D8               	btfss	status,0,c
 17082   0162A6  D003               	goto	u11350
 17083   0162A8                     u11340:
 17084   0162A8  0101               	movlb	1	; () banked
 17085   0162AA  B363               	btfsc	_flags& (0+255),1,b
 17086   0162AC  D7AC               	goto	l13407
 17087   0162AE                     u11350:
 17088                           
 17089                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1152:     return 
      +                          (void) pad(fp, &dbuf[i], w);
 17090   0162AE  C01E  F015         	movff	xtoa@fp,pad@fp
 17091   0162B2  C01F  F016         	movff	xtoa@fp+1,pad@fp+1
 17092   0162B6  0EA3               	movlw	low _dbuf
 17093   0162B8  2431               	addwf	xtoa@i^0,w,c
 17094   0162BA  6E17               	movwf	pad@buf^0,c
 17095   0162BC  0E05               	movlw	high _dbuf
 17096   0162BE  2032               	addwfc	(xtoa@i+1)^0,w,c
 17097   0162C0  6E18               	movwf	(pad@buf+1)^0,c
 17098   0162C2  C02E  F019         	movff	xtoa@w,pad@p
 17099   0162C6  C02F  F01A         	movff	xtoa@w+1,pad@p+1
 17100   0162CA  EC3C  F0B9         	call	_pad	;wreg free
 17101   0162CE  0012               	return		;funcret
 17102   0162D0                     __end_of_xtoa:
 17103                           	callstack 0
 17104                           
 17105 ;; *************** function _utoa *****************
 17106 ;; Defined at:
 17107 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 17108 ;; Parameters:    Size  Location     Type
 17109 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 17110 ;;		 -> sprintf@f(12), NULL(0), 
 17111 ;;  d               4   31[COMRAM] unsigned long 
 17112 ;; Auto vars:     Size  Location     Type
 17113 ;;  i               2   39[COMRAM] int 
 17114 ;;  w               2   37[COMRAM] int 
 17115 ;;  p               2   35[COMRAM] int 
 17116 ;; Return value:  Size  Location     Type
 17117 ;;                  1    wreg      void 
 17118 ;; Registers used:
 17119 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17120 ;; Tracked objects:
 17121 ;;		On entry : 0/1
 17122 ;;		On exit  : 0/0
 17123 ;;		Unchanged: 0/0
 17124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17125 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17126 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17128 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17129 ;;Total ram usage:       12 bytes
 17130 ;; Hardware stack levels used: 1
 17131 ;; Hardware stack levels required when called: 8
 17132 ;; This function calls:
 17133 ;;		___lldiv
 17134 ;;		___llmod
 17135 ;;		_pad
 17136 ;; This function is called by:
 17137 ;;		_vfpfcnvrt
 17138 ;; This function uses a non-reentrant model
 17139 ;;
 17140                           
 17141                           	psect	text52
 17142   0162D0                     __ptext52:
 17143                           	callstack 0
 17144   0162D0                     _utoa:
 17145                           	callstack 16
 17146                           
 17147                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1001: static void
      +                           utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 1003:     int i, w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprn
      +                          t.c: 1005:  int p;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           1013:     if (!(prec < 0)) {
 17148                           
 17149                           ;incstack = 0
 17150   0162D0  0101               	movlb	1	; () banked
 17151   0162D2  AF3E               	btfss	(_prec+1)& (0+255),7,b
 17152                           
 17153                           ; BSR set to: 1
 17154                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1014:         fla
      +                          gs &= ~(1 << 1);
 17155   0162D4  9363               	bcf	_flags& (0+255),1,b
 17156                           
 17157                           ; BSR set to: 1
 17158                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1017:     p = (0 
      +                          <= prec) ? prec : 1;
 17159   0162D6  AF3E               	btfss	(_prec+1)& (0+255),7,b
 17160   0162D8  D005               	goto	l4343
 17161                           
 17162                           ; BSR set to: 1
 17163   0162DA  0E00               	movlw	0
 17164   0162DC  6E25               	movwf	(utoa@p+1)^0,c
 17165   0162DE  0E01               	movlw	1
 17166   0162E0  6E24               	movwf	utoa@p^0,c
 17167   0162E2  D004               	goto	l4345
 17168   0162E4                     l4343:
 17169                           
 17170                           ; BSR set to: 1
 17171   0162E4  C13D  F024         	movff	_prec,utoa@p
 17172   0162E8  C13E  F025         	movff	_prec+1,utoa@p+1
 17173   0162EC                     l4345:
 17174                           
 17175                           ; BSR set to: 1
 17176                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
 17177   0162EC  C13B  F026         	movff	_width,utoa@w
 17178   0162F0  C13C  F027         	movff	_width+1,utoa@w+1
 17179                           
 17180                           ; BSR set to: 1
 17181                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
 17182   0162F4  0E00               	movlw	0
 17183   0162F6  6E29               	movwf	(utoa@i+1)^0,c
 17184   0162F8  0E1F               	movlw	31
 17185   0162FA  6E28               	movwf	utoa@i^0,c
 17186                           
 17187                           ; BSR set to: 1
 17188                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
 17189   0162FC  0E00               	movlw	0
 17190   0162FE  0105               	movlb	5	; () banked
 17191   016300  6FC2               	movwf	(_dbuf+31)& (0+255),b
 17192                           
 17193                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
 17194   016302  D03E               	goto	l13375
 17195   016304                     l13365:
 17196                           
 17197                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1034:         --i;
 17198   016304  0628               	decf	utoa@i^0,f,c
 17199   016306  A0D8               	btfss	status,0,c
 17200   016308  0629               	decf	(utoa@i+1)^0,f,c
 17201                           
 17202                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
 17203   01630A  0EA3               	movlw	low _dbuf
 17204   01630C  2428               	addwf	utoa@i^0,w,c
 17205   01630E  6ED9               	movwf	fsr2l,c
 17206   016310  0E05               	movlw	high _dbuf
 17207   016312  2029               	addwfc	(utoa@i+1)^0,w,c
 17208   016314  6EDA               	movwf	fsr2h,c
 17209   016316  C020  F005         	movff	utoa@d,___llmod@dividend
 17210   01631A  C021  F006         	movff	utoa@d+1,___llmod@dividend+1
 17211   01631E  C022  F007         	movff	utoa@d+2,___llmod@dividend+2
 17212   016322  C023  F008         	movff	utoa@d+3,___llmod@dividend+3
 17213   016326  0E0A               	movlw	10
 17214   016328  6E09               	movwf	___llmod@divisor^0,c
 17215   01632A  0E00               	movlw	0
 17216   01632C  6E0A               	movwf	(___llmod@divisor+1)^0,c
 17217   01632E  0E00               	movlw	0
 17218   016330  6E0B               	movwf	(___llmod@divisor+2)^0,c
 17219   016332  0E00               	movlw	0
 17220   016334  6E0C               	movwf	(___llmod@divisor+3)^0,c
 17221   016336  EC5A  F0BA         	call	___llmod	;wreg free
 17222   01633A  5005               	movf	?___llmod^0,w,c
 17223   01633C  0F30               	addlw	48
 17224   01633E  6EDF               	movwf	indf2,c
 17225                           
 17226                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1037:         --p
      +                          ;
 17227   016340  0624               	decf	utoa@p^0,f,c
 17228   016342  A0D8               	btfss	status,0,c
 17229   016344  0625               	decf	(utoa@p+1)^0,f,c
 17230                           
 17231                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
 17232   016346  0626               	decf	utoa@w^0,f,c
 17233   016348  A0D8               	btfss	status,0,c
 17234   01634A  0627               	decf	(utoa@w+1)^0,f,c
 17235                           
 17236                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
 17237   01634C  C020  F005         	movff	utoa@d,___lldiv@dividend
 17238   016350  C021  F006         	movff	utoa@d+1,___lldiv@dividend+1
 17239   016354  C022  F007         	movff	utoa@d+2,___lldiv@dividend+2
 17240   016358  C023  F008         	movff	utoa@d+3,___lldiv@dividend+3
 17241   01635C  0E0A               	movlw	10
 17242   01635E  6E09               	movwf	___lldiv@divisor^0,c
 17243   016360  0E00               	movlw	0
 17244   016362  6E0A               	movwf	(___lldiv@divisor+1)^0,c
 17245   016364  0E00               	movlw	0
 17246   016366  6E0B               	movwf	(___lldiv@divisor+2)^0,c
 17247   016368  0E00               	movlw	0
 17248   01636A  6E0C               	movwf	(___lldiv@divisor+3)^0,c
 17249   01636C  ECBA  F0B8         	call	___lldiv	;wreg free
 17250   016370  C005  F020         	movff	?___lldiv,utoa@d
 17251   016374  C006  F021         	movff	?___lldiv+1,utoa@d+1
 17252   016378  C007  F022         	movff	?___lldiv+2,utoa@d+2
 17253   01637C  C008  F023         	movff	?___lldiv+3,utoa@d+3
 17254   016380                     l13375:
 17255                           
 17256                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
 17257   016380  5028               	movf	utoa@i^0,w,c
 17258   016382  1029               	iorwf	(utoa@i+1)^0,w,c
 17259   016384  B4D8               	btfsc	status,2,c
 17260   016386  D017               	goto	u11250
 17261   016388  5020               	movf	utoa@d^0,w,c
 17262   01638A  1021               	iorwf	(utoa@d+1)^0,w,c
 17263   01638C  1022               	iorwf	(utoa@d+2)^0,w,c
 17264   01638E  1023               	iorwf	(utoa@d+3)^0,w,c
 17265   016390  A4D8               	btfss	status,2,c
 17266   016392  D7B8               	goto	l13365
 17267   016394  BE25               	btfsc	(utoa@p+1)^0,7,c
 17268   016396  D005               	goto	u11230
 17269   016398  5025               	movf	(utoa@p+1)^0,w,c
 17270   01639A  E1B4               	bnz	l13365
 17271   01639C  0424               	decf	utoa@p^0,w,c
 17272   01639E  B0D8               	btfsc	status,0,c
 17273   0163A0  D7B1               	goto	l13365
 17274   0163A2                     u11230:
 17275   0163A2  BE27               	btfsc	(utoa@w+1)^0,7,c
 17276   0163A4  D008               	goto	u11250
 17277   0163A6  5027               	movf	(utoa@w+1)^0,w,c
 17278   0163A8  E103               	bnz	u11240
 17279   0163AA  0426               	decf	utoa@w^0,w,c
 17280   0163AC  A0D8               	btfss	status,0,c
 17281   0163AE  D003               	goto	u11250
 17282   0163B0                     u11240:
 17283   0163B0  0101               	movlb	1	; () banked
 17284   0163B2  B363               	btfsc	_flags& (0+255),1,b
 17285   0163B4  D7A7               	goto	l13365
 17286   0163B6                     u11250:
 17287                           
 17288                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (void) pad(fp, &dbuf[i], w);
 17289   0163B6  C01E  F015         	movff	utoa@fp,pad@fp
 17290   0163BA  C01F  F016         	movff	utoa@fp+1,pad@fp+1
 17291   0163BE  0EA3               	movlw	low _dbuf
 17292   0163C0  2428               	addwf	utoa@i^0,w,c
 17293   0163C2  6E17               	movwf	pad@buf^0,c
 17294   0163C4  0E05               	movlw	high _dbuf
 17295   0163C6  2029               	addwfc	(utoa@i+1)^0,w,c
 17296   0163C8  6E18               	movwf	(pad@buf+1)^0,c
 17297   0163CA  C026  F019         	movff	utoa@w,pad@p
 17298   0163CE  C027  F01A         	movff	utoa@w+1,pad@p+1
 17299   0163D2  EC3C  F0B9         	call	_pad	;wreg free
 17300   0163D6  0012               	return		;funcret
 17301   0163D8                     __end_of_utoa:
 17302                           	callstack 0
 17303                           
 17304 ;; *************** function ___llmod *****************
 17305 ;; Defined at:
 17306 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\llmod.c"
 17307 ;; Parameters:    Size  Location     Type
 17308 ;;  dividend        4    4[COMRAM] unsigned long 
 17309 ;;  divisor         4    8[COMRAM] unsigned long 
 17310 ;; Auto vars:     Size  Location     Type
 17311 ;;  counter         1   12[COMRAM] unsigned char 
 17312 ;; Return value:  Size  Location     Type
 17313 ;;                  4    4[COMRAM] unsigned long 
 17314 ;; Registers used:
 17315 ;;		wreg, status,2, status,0
 17316 ;; Tracked objects:
 17317 ;;		On entry : 0/5
 17318 ;;		On exit  : 0/0
 17319 ;;		Unchanged: 0/0
 17320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17321 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17322 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17324 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17325 ;;Total ram usage:        9 bytes
 17326 ;; Hardware stack levels used: 1
 17327 ;; Hardware stack levels required when called: 4
 17328 ;; This function calls:
 17329 ;;		Nothing
 17330 ;; This function is called by:
 17331 ;;		_utoa
 17332 ;;		___secs_to_tm
 17333 ;; This function uses a non-reentrant model
 17334 ;;
 17335                           
 17336                           	psect	text53
 17337   0174B4                     __ptext53:
 17338                           	callstack 0
 17339   0174B4                     ___llmod:
 17340                           	callstack 19
 17341                           
 17342                           ;incstack = 0
 17343   0174B4  5009               	movf	___llmod@divisor^0,w,c
 17344   0174B6  100A               	iorwf	(___llmod@divisor+1)^0,w,c
 17345   0174B8  100B               	iorwf	(___llmod@divisor+2)^0,w,c
 17346   0174BA  100C               	iorwf	(___llmod@divisor+3)^0,w,c
 17347   0174BC  B4D8               	btfsc	status,2,c
 17348   0174BE  D024               	goto	l3955
 17349   0174C0  0E01               	movlw	1
 17350   0174C2  6E0D               	movwf	___llmod@counter^0,c
 17351   0174C4  D006               	goto	l13143
 17352   0174C6                     l13141:
 17353   0174C6  90D8               	bcf	status,0,c
 17354   0174C8  3609               	rlcf	___llmod@divisor^0,f,c
 17355   0174CA  360A               	rlcf	(___llmod@divisor+1)^0,f,c
 17356   0174CC  360B               	rlcf	(___llmod@divisor+2)^0,f,c
 17357   0174CE  360C               	rlcf	(___llmod@divisor+3)^0,f,c
 17358   0174D0  2A0D               	incf	___llmod@counter^0,f,c
 17359   0174D2                     l13143:
 17360   0174D2  AE0C               	btfss	(___llmod@divisor+3)^0,7,c
 17361   0174D4  D7F8               	goto	l13141
 17362   0174D6                     u10840:
 17363   0174D6  5009               	movf	___llmod@divisor^0,w,c
 17364   0174D8  5C05               	subwf	___llmod@dividend^0,w,c
 17365   0174DA  500A               	movf	(___llmod@divisor+1)^0,w,c
 17366   0174DC  5806               	subwfb	(___llmod@dividend+1)^0,w,c
 17367   0174DE  500B               	movf	(___llmod@divisor+2)^0,w,c
 17368   0174E0  5807               	subwfb	(___llmod@dividend+2)^0,w,c
 17369   0174E2  500C               	movf	(___llmod@divisor+3)^0,w,c
 17370   0174E4  5808               	subwfb	(___llmod@dividend+3)^0,w,c
 17371   0174E6  A0D8               	btfss	status,0,c
 17372   0174E8  D008               	goto	l13149
 17373   0174EA  5009               	movf	___llmod@divisor^0,w,c
 17374   0174EC  5E05               	subwf	___llmod@dividend^0,f,c
 17375   0174EE  500A               	movf	(___llmod@divisor+1)^0,w,c
 17376   0174F0  5A06               	subwfb	(___llmod@dividend+1)^0,f,c
 17377   0174F2  500B               	movf	(___llmod@divisor+2)^0,w,c
 17378   0174F4  5A07               	subwfb	(___llmod@dividend+2)^0,f,c
 17379   0174F6  500C               	movf	(___llmod@divisor+3)^0,w,c
 17380   0174F8  5A08               	subwfb	(___llmod@dividend+3)^0,f,c
 17381   0174FA                     l13149:
 17382   0174FA  90D8               	bcf	status,0,c
 17383   0174FC  320C               	rrcf	(___llmod@divisor+3)^0,f,c
 17384   0174FE  320B               	rrcf	(___llmod@divisor+2)^0,f,c
 17385   017500  320A               	rrcf	(___llmod@divisor+1)^0,f,c
 17386   017502  3209               	rrcf	___llmod@divisor^0,f,c
 17387   017504  2E0D               	decfsz	___llmod@counter^0,f,c
 17388   017506  D7E7               	goto	u10840
 17389   017508                     l3955:
 17390   017508  C005  F005         	movff	___llmod@dividend,?___llmod
 17391   01750C  C006  F006         	movff	___llmod@dividend+1,?___llmod+1
 17392   017510  C007  F007         	movff	___llmod@dividend+2,?___llmod+2
 17393   017514  C008  F008         	movff	___llmod@dividend+3,?___llmod+3
 17394   017518  0012               	return		;funcret
 17395   01751A                     __end_of___llmod:
 17396                           	callstack 0
 17397                           
 17398 ;; *************** function ___lldiv *****************
 17399 ;; Defined at:
 17400 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__lldiv.c"
 17401 ;; Parameters:    Size  Location     Type
 17402 ;;  dividend        4    4[COMRAM] unsigned long 
 17403 ;;  divisor         4    8[COMRAM] unsigned long 
 17404 ;; Auto vars:     Size  Location     Type
 17405 ;;  quotient        4   12[COMRAM] unsigned long 
 17406 ;;  counter         1   16[COMRAM] unsigned char 
 17407 ;; Return value:  Size  Location     Type
 17408 ;;                  4    4[COMRAM] unsigned long 
 17409 ;; Registers used:
 17410 ;;		wreg, status,2, status,0
 17411 ;; Tracked objects:
 17412 ;;		On entry : 0/0
 17413 ;;		On exit  : 0/0
 17414 ;;		Unchanged: 0/0
 17415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17416 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17417 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17419 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17420 ;;Total ram usage:       13 bytes
 17421 ;; Hardware stack levels used: 1
 17422 ;; Hardware stack levels required when called: 4
 17423 ;; This function calls:
 17424 ;;		Nothing
 17425 ;; This function is called by:
 17426 ;;		_MAINxSTATIONxINBOUND
 17427 ;;		_UPDATExMOUNTAINxSTATION
 17428 ;;		_UPDATExMOUNTAINxTRAINxWAIT
 17429 ;;		_MOUNTAINxSTATIONxINBOUND
 17430 ;;		_utoa
 17431 ;;		___secs_to_tm
 17432 ;; This function uses a non-reentrant model
 17433 ;;
 17434                           
 17435                           	psect	text54
 17436   017174                     __ptext54:
 17437                           	callstack 0
 17438   017174                     ___lldiv:
 17439                           	callstack 24
 17440                           
 17441                           ;incstack = 0
 17442   017174  0E00               	movlw	0
 17443   017176  6E0D               	movwf	___lldiv@quotient^0,c
 17444   017178  0E00               	movlw	0
 17445   01717A  6E0E               	movwf	(___lldiv@quotient+1)^0,c
 17446   01717C  0E00               	movlw	0
 17447   01717E  6E0F               	movwf	(___lldiv@quotient+2)^0,c
 17448   017180  0E00               	movlw	0
 17449   017182  6E10               	movwf	(___lldiv@quotient+3)^0,c
 17450   017184  5009               	movf	___lldiv@divisor^0,w,c
 17451   017186  100A               	iorwf	(___lldiv@divisor+1)^0,w,c
 17452   017188  100B               	iorwf	(___lldiv@divisor+2)^0,w,c
 17453   01718A  100C               	iorwf	(___lldiv@divisor+3)^0,w,c
 17454   01718C  B4D8               	btfsc	status,2,c
 17455   01718E  D02A               	goto	l3562
 17456   017190  0E01               	movlw	1
 17457   017192  6E11               	movwf	___lldiv@counter^0,c
 17458   017194  D006               	goto	l13043
 17459   017196                     l13041:
 17460   017196  90D8               	bcf	status,0,c
 17461   017198  3609               	rlcf	___lldiv@divisor^0,f,c
 17462   01719A  360A               	rlcf	(___lldiv@divisor+1)^0,f,c
 17463   01719C  360B               	rlcf	(___lldiv@divisor+2)^0,f,c
 17464   01719E  360C               	rlcf	(___lldiv@divisor+3)^0,f,c
 17465   0171A0  2A11               	incf	___lldiv@counter^0,f,c
 17466   0171A2                     l13043:
 17467   0171A2  AE0C               	btfss	(___lldiv@divisor+3)^0,7,c
 17468   0171A4  D7F8               	goto	l13041
 17469   0171A6                     u10690:
 17470   0171A6  90D8               	bcf	status,0,c
 17471   0171A8  360D               	rlcf	___lldiv@quotient^0,f,c
 17472   0171AA  360E               	rlcf	(___lldiv@quotient+1)^0,f,c
 17473   0171AC  360F               	rlcf	(___lldiv@quotient+2)^0,f,c
 17474   0171AE  3610               	rlcf	(___lldiv@quotient+3)^0,f,c
 17475   0171B0  5009               	movf	___lldiv@divisor^0,w,c
 17476   0171B2  5C05               	subwf	___lldiv@dividend^0,w,c
 17477   0171B4  500A               	movf	(___lldiv@divisor+1)^0,w,c
 17478   0171B6  5806               	subwfb	(___lldiv@dividend+1)^0,w,c
 17479   0171B8  500B               	movf	(___lldiv@divisor+2)^0,w,c
 17480   0171BA  5807               	subwfb	(___lldiv@dividend+2)^0,w,c
 17481   0171BC  500C               	movf	(___lldiv@divisor+3)^0,w,c
 17482   0171BE  5808               	subwfb	(___lldiv@dividend+3)^0,w,c
 17483   0171C0  A0D8               	btfss	status,0,c
 17484   0171C2  D009               	goto	l13053
 17485   0171C4  5009               	movf	___lldiv@divisor^0,w,c
 17486   0171C6  5E05               	subwf	___lldiv@dividend^0,f,c
 17487   0171C8  500A               	movf	(___lldiv@divisor+1)^0,w,c
 17488   0171CA  5A06               	subwfb	(___lldiv@dividend+1)^0,f,c
 17489   0171CC  500B               	movf	(___lldiv@divisor+2)^0,w,c
 17490   0171CE  5A07               	subwfb	(___lldiv@dividend+2)^0,f,c
 17491   0171D0  500C               	movf	(___lldiv@divisor+3)^0,w,c
 17492   0171D2  5A08               	subwfb	(___lldiv@dividend+3)^0,f,c
 17493   0171D4  800D               	bsf	___lldiv@quotient^0,0,c
 17494   0171D6                     l13053:
 17495   0171D6  90D8               	bcf	status,0,c
 17496   0171D8  320C               	rrcf	(___lldiv@divisor+3)^0,f,c
 17497   0171DA  320B               	rrcf	(___lldiv@divisor+2)^0,f,c
 17498   0171DC  320A               	rrcf	(___lldiv@divisor+1)^0,f,c
 17499   0171DE  3209               	rrcf	___lldiv@divisor^0,f,c
 17500   0171E0  2E11               	decfsz	___lldiv@counter^0,f,c
 17501   0171E2  D7E1               	goto	u10690
 17502   0171E4                     l3562:
 17503   0171E4  C00D  F005         	movff	___lldiv@quotient,?___lldiv
 17504   0171E8  C00E  F006         	movff	___lldiv@quotient+1,?___lldiv+1
 17505   0171EC  C00F  F007         	movff	___lldiv@quotient+2,?___lldiv+2
 17506   0171F0  C010  F008         	movff	___lldiv@quotient+3,?___lldiv+3
 17507   0171F4  0012               	return		;funcret
 17508   0171F6                     __end_of___lldiv:
 17509                           	callstack 0
 17510                           
 17511 ;; *************** function _stoa *****************
 17512 ;; Defined at:
 17513 ;;		line 942 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 17514 ;; Parameters:    Size  Location     Type
 17515 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
 17516 ;;		 -> sprintf@f(12), NULL(0), 
 17517 ;;  s               2   15[COMRAM] PTR unsigned char 
 17518 ;;		 -> F183$tm_year(2), F183$tm_mon(2), F183$tm_mday(2), F183$tm_hour(2), 
 17519 ;;		 -> F183$tm_min(2), F183$tm_sec(2), ?_printf(2), ?_sprintf(2), 
 17520 ;;		 -> STR_39(2), STR_37(2), STR_35(2), STR_33(2), 
 17521 ;;		 -> STR_26(2), STR_25(2), STR_24(2), STR_23(2), 
 17522 ;; Auto vars:     Size  Location     Type
 17523 ;;  l               2   25[COMRAM] int 
 17524 ;;  cp              2   23[COMRAM] PTR unsigned char 
 17525 ;;		 -> F183$tm_year(2), F183$tm_mon(2), F183$tm_mday(2), F183$tm_hour(2), 
 17526 ;;		 -> F183$tm_min(2), F183$tm_sec(2), ?_printf(2), STR_43(7), 
 17527 ;;		 -> ?_sprintf(2), STR_39(2), STR_37(2), STR_35(2), 
 17528 ;;		 -> STR_33(2), STR_26(2), STR_25(2), STR_24(2), 
 17529 ;;		 -> STR_23(2), 
 17530 ;;  w               2   21[COMRAM] int 
 17531 ;;  p               2   19[COMRAM] int 
 17532 ;; Return value:  Size  Location     Type
 17533 ;;                  1    wreg      void 
 17534 ;; Registers used:
 17535 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17536 ;; Tracked objects:
 17537 ;;		On entry : 0/1
 17538 ;;		On exit  : 0/0
 17539 ;;		Unchanged: 0/0
 17540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17541 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17542 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17543 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17544 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17545 ;;Total ram usage:       14 bytes
 17546 ;; Hardware stack levels used: 1
 17547 ;; Hardware stack levels required when called: 6
 17548 ;; This function calls:
 17549 ;;		_fputc
 17550 ;; This function is called by:
 17551 ;;		_vfpfcnvrt
 17552 ;; This function uses a non-reentrant model
 17553 ;;
 17554                           
 17555                           	psect	text55
 17556   015E3C                     __ptext55:
 17557                           	callstack 0
 17558   015E3C                     _stoa:
 17559                           	callstack 18
 17560                           
 17561                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 942: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 943: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 944: 
      +                              char *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 945:
      +                               int l, p;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 947
      +                          :  int w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 951:    
      +                           cp = s;
 17562                           
 17563                           ;incstack = 0
 17564   015E3C  C010  F018         	movff	stoa@s,stoa@cp
 17565   015E40  C011  F019         	movff	stoa@s+1,stoa@cp+1
 17566                           
 17567                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 952:     if (!cp)
      +                           {
 17568   015E44  5018               	movf	stoa@cp^0,w,c
 17569   015E46  1019               	iorwf	(stoa@cp+1)^0,w,c
 17570   015E48  A4D8               	btfss	status,2,c
 17571   015E4A  D004               	goto	l13319
 17572                           
 17573                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 953:         cp =
      +                           "(null)";
 17574   015E4C  0EDE               	movlw	low STR_43
 17575   015E4E  6E18               	movwf	stoa@cp^0,c
 17576   015E50  0EFF               	movlw	high STR_43
 17577   015E52  6E19               	movwf	(stoa@cp+1)^0,c
 17578   015E54                     l13319:
 17579                           
 17580                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 957:  for (l = 0;
      +                           cp[l] != '\0'; l++) {
 17581   015E54  0E00               	movlw	0
 17582   015E56  6E1B               	movwf	(stoa@l+1)^0,c
 17583   015E58  0E00               	movlw	0
 17584   015E5A  6E1A               	movwf	stoa@l^0,c
 17585   015E5C  D002               	goto	l13323
 17586   015E5E                     l13321:
 17587   015E5E  4A1A               	infsnz	stoa@l^0,f,c
 17588   015E60  2A1B               	incf	(stoa@l+1)^0,f,c
 17589   015E62                     l13323:
 17590   015E62  501A               	movf	stoa@l^0,w,c
 17591   015E64  2418               	addwf	stoa@cp^0,w,c
 17592   015E66  6E12               	movwf	??_stoa^0,c
 17593   015E68  501B               	movf	(stoa@l+1)^0,w,c
 17594   015E6A  2019               	addwfc	(stoa@cp+1)^0,w,c
 17595   015E6C  6E13               	movwf	(??_stoa+1)^0,c
 17596   015E6E  C012  FFF6         	movff	??_stoa,tblptrl
 17597   015E72  C013  FFF7         	movff	??_stoa+1,tblptrh
 17598   015E76  0E00               	movlw	low (__mediumconst shr (0+16))
 17599   015E78  6EF8               	movwf	tblptru,c
 17600   015E7A  0E0F               	movlw	(high __ramtop+-1)
 17601   015E7C  64F7               	cpfsgt	tblptrh,c
 17602   015E7E  D003               	bra	u11097
 17603   015E80  0008               	tblrd		*
 17604   015E82  50F5               	movf	tablat,w,c
 17605   015E84  D005               	bra	u11090
 17606   015E86                     u11097:
 17607   015E86  CFF6 FFE9          	movff	tblptrl,fsr0l
 17608   015E8A  CFF7 FFEA          	movff	tblptrh,fsr0h
 17609   015E8E  50EF               	movf	indf0,w,c
 17610   015E90                     u11090:
 17611   015E90  0900               	iorlw	0
 17612   015E92  A4D8               	btfss	status,2,c
 17613   015E94  D7E4               	goto	l13321
 17614                           
 17615                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 961:  if (!(prec 
      +                          < 0) && (prec < l)) {
 17616   015E96  0101               	movlb	1	; () banked
 17617   015E98  BF3E               	btfsc	(_prec+1)& (0+255),7,b
 17618   015E9A  D00E               	goto	l4326
 17619                           
 17620                           ; BSR set to: 1
 17621   015E9C  501A               	movf	stoa@l^0,w,c
 17622   015E9E  5D3D               	subwf	_prec& (0+255),w,b
 17623   015EA0  513E               	movf	(_prec+1)& (0+255),w,b
 17624   015EA2  0A80               	xorlw	128
 17625   015EA4  6E12               	movwf	??_stoa^0,c
 17626   015EA6  501B               	movf	(stoa@l+1)^0,w,c
 17627   015EA8  0A80               	xorlw	128
 17628   015EAA  5812               	subwfb	??_stoa^0,w,c
 17629   015EAC  B0D8               	btfsc	status,0,c
 17630   015EAE  D004               	goto	l4326
 17631                           
 17632                           ; BSR set to: 1
 17633                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 962:   l = prec;
 17634   015EB0  C13D  F01A         	movff	_prec,stoa@l
 17635   015EB4  C13E  F01B         	movff	_prec+1,stoa@l+1
 17636   015EB8                     l4326:
 17637                           
 17638                           ; BSR set to: 1
 17639                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 965:     p = l;
 17640   015EB8  C01A  F014         	movff	stoa@l,stoa@p
 17641   015EBC  C01B  F015         	movff	stoa@l+1,stoa@p+1
 17642                           
 17643                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 969:     w = widt
      +                          h;
 17644   015EC0  C13B  F016         	movff	_width,stoa@w
 17645   015EC4  C13C  F017         	movff	_width+1,stoa@w+1
 17646                           
 17647                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 970:     if (!(fl
      +                          ags & (1 << 0))) {
 17648   015EC8  A163               	btfss	_flags& (0+255),0,b
 17649   015ECA  D00D               	goto	l13337
 17650   015ECC  D034               	goto	l13343
 17651   015ECE                     l13333:
 17652                           
 17653                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 972:             
      +                          fputc(' ', fp);
 17654   015ECE  0E00               	movlw	0
 17655   015ED0  6E06               	movwf	(fputc@c+1)^0,c
 17656   015ED2  0E20               	movlw	32
 17657   015ED4  6E05               	movwf	fputc@c^0,c
 17658   015ED6  C00E  F007         	movff	stoa@fp,fputc@fp
 17659   015EDA  C00F  F008         	movff	stoa@fp+1,fputc@fp+1
 17660   015EDE  ECFA  F0B6         	call	_fputc	;wreg free
 17661                           
 17662                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 973:             
      +                          ++l;
 17663   015EE2  4A1A               	infsnz	stoa@l^0,f,c
 17664   015EE4  2A1B               	incf	(stoa@l+1)^0,f,c
 17665   015EE6                     l13337:
 17666                           
 17667                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 971:         whil
      +                          e (l < w) {
 17668   015EE6  5016               	movf	stoa@w^0,w,c
 17669   015EE8  5C1A               	subwf	stoa@l^0,w,c
 17670   015EEA  501B               	movf	(stoa@l+1)^0,w,c
 17671   015EEC  0A80               	xorlw	128
 17672   015EEE  6E12               	movwf	??_stoa^0,c
 17673   015EF0  5017               	movf	(stoa@w+1)^0,w,c
 17674   015EF2  0A80               	xorlw	128
 17675   015EF4  5812               	subwfb	??_stoa^0,w,c
 17676   015EF6  B0D8               	btfsc	status,0,c
 17677   015EF8  D01E               	goto	l13343
 17678   015EFA  D7E9               	goto	l13333
 17679   015EFC                     l13339:
 17680                           
 17681                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 980:         fput
      +                          c(*cp, fp);
 17682   015EFC  C018  FFF6         	movff	stoa@cp,tblptrl
 17683   015F00  C019  FFF7         	movff	stoa@cp+1,tblptrh
 17684   015F04  0E00               	movlw	low (__mediumconst shr (0+16))
 17685   015F06  6EF8               	movwf	tblptru,c
 17686   015F08  0E0F               	movlw	(high __ramtop+-1)
 17687   015F0A  64F7               	cpfsgt	tblptrh,c
 17688   015F0C  D003               	bra	u11157
 17689   015F0E  0008               	tblrd		*
 17690   015F10  50F5               	movf	tablat,w,c
 17691   015F12  D005               	bra	u11150
 17692   015F14                     u11157:
 17693   015F14  CFF6 FFE9          	movff	tblptrl,fsr0l
 17694   015F18  CFF7 FFEA          	movff	tblptrh,fsr0h
 17695   015F1C  50EF               	movf	indf0,w,c
 17696   015F1E                     u11150:
 17697   015F1E  6E12               	movwf	??_stoa^0,c
 17698   015F20  5012               	movf	??_stoa^0,w,c
 17699   015F22  6E05               	movwf	fputc@c^0,c
 17700   015F24  6A06               	clrf	(fputc@c+1)^0,c
 17701   015F26  C00E  F007         	movff	stoa@fp,fputc@fp
 17702   015F2A  C00F  F008         	movff	stoa@fp+1,fputc@fp+1
 17703   015F2E  ECFA  F0B6         	call	_fputc	;wreg free
 17704                           
 17705                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 981:         ++cp
      +                          ;
 17706   015F32  4A18               	infsnz	stoa@cp^0,f,c
 17707   015F34  2A19               	incf	(stoa@cp+1)^0,f,c
 17708   015F36                     l13343:
 17709                           
 17710                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 979:     while (p
      +                          --) {
 17711   015F36  0614               	decf	stoa@p^0,f,c
 17712   015F38  A0D8               	btfss	status,0,c
 17713   015F3A  0615               	decf	(stoa@p+1)^0,f,c
 17714   015F3C  2814               	incf	stoa@p^0,w,c
 17715   015F3E  E1DE               	bnz	l13339
 17716   015F40  2815               	incf	(stoa@p+1)^0,w,c
 17717   015F42  A4D8               	btfss	status,2,c
 17718   015F44  D7DB               	goto	l13339
 17719                           
 17720                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 986:     if (flag
      +                          s & (1 << 0)) {
 17721   015F46  0101               	movlb	1	; () banked
 17722   015F48  A163               	btfss	_flags& (0+255),0,b
 17723   015F4A  0012               	return	
 17724   015F4C  D00C               	goto	l13351
 17725   015F4E                     l13347:
 17726                           
 17727                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 988:             
      +                          fputc(' ', fp);
 17728   015F4E  0E00               	movlw	0
 17729   015F50  6E06               	movwf	(fputc@c+1)^0,c
 17730   015F52  0E20               	movlw	32
 17731   015F54  6E05               	movwf	fputc@c^0,c
 17732   015F56  C00E  F007         	movff	stoa@fp,fputc@fp
 17733   015F5A  C00F  F008         	movff	stoa@fp+1,fputc@fp+1
 17734   015F5E  ECFA  F0B6         	call	_fputc	;wreg free
 17735                           
 17736                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 989:             
      +                          ++l;
 17737   015F62  4A1A               	infsnz	stoa@l^0,f,c
 17738   015F64  2A1B               	incf	(stoa@l+1)^0,f,c
 17739   015F66                     l13351:
 17740                           
 17741                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 987:         whil
      +                          e (l < w) {
 17742   015F66  5016               	movf	stoa@w^0,w,c
 17743   015F68  5C1A               	subwf	stoa@l^0,w,c
 17744   015F6A  501B               	movf	(stoa@l+1)^0,w,c
 17745   015F6C  0A80               	xorlw	128
 17746   015F6E  6E12               	movwf	??_stoa^0,c
 17747   015F70  5017               	movf	(stoa@w+1)^0,w,c
 17748   015F72  0A80               	xorlw	128
 17749   015F74  5812               	subwfb	??_stoa^0,w,c
 17750   015F76  B0D8               	btfsc	status,0,c
 17751   015F78  0012               	return	
 17752   015F7A  D7E9               	goto	l13347
 17753   015F7C                     __end_of_stoa:
 17754                           	callstack 0
 17755                           
 17756 ;; *************** function _read_prec_or_width *****************
 17757 ;; Defined at:
 17758 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 17759 ;; Parameters:    Size  Location     Type
 17760 ;;  fmt             1   10[COMRAM] PTR PTR const unsigned c
 17761 ;;		 -> vfprintf@cfmt(2), 
 17762 ;;  ap              1   11[COMRAM] PTR PTR void [1]
 17763 ;;		 -> printf@ap(1), sprintf@ap(1), 
 17764 ;; Auto vars:     Size  Location     Type
 17765 ;;  c               1   12[COMRAM] unsigned char 
 17766 ;;  n               2   13[COMRAM] int 
 17767 ;; Return value:  Size  Location     Type
 17768 ;;                  2   10[COMRAM] int 
 17769 ;; Registers used:
 17770 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17771 ;; Tracked objects:
 17772 ;;		On entry : 0/1
 17773 ;;		On exit  : 0/0
 17774 ;;		Unchanged: 0/0
 17775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17776 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17777 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17779 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17780 ;;Total ram usage:        5 bytes
 17781 ;; Hardware stack levels used: 1
 17782 ;; Hardware stack levels required when called: 5
 17783 ;; This function calls:
 17784 ;;		___wmul
 17785 ;; This function is called by:
 17786 ;;		_vfpfcnvrt
 17787 ;; This function uses a non-reentrant model
 17788 ;;
 17789                           
 17790                           	psect	text56
 17791   016D54                     __ptext56:
 17792                           	callstack 0
 17793   016D54                     _read_prec_or_width:
 17794                           	callstack 19
 17795                           
 17796                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
 17797                           
 17798                           ;incstack = 0
 17799   016D54  0E00               	movlw	0
 17800   016D56  6E0F               	movwf	(read_prec_or_width@n+1)^0,c
 17801   016D58  0E00               	movlw	0
 17802   016D5A  6E0E               	movwf	read_prec_or_width@n^0,c
 17803                           
 17804                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
 17805   016D5C  500B               	movf	read_prec_or_width@fmt^0,w,c
 17806   016D5E  6ED9               	movwf	fsr2l,c
 17807   016D60  6ADA               	clrf	fsr2h,c
 17808   016D62  CFDE FFF6          	movff	postinc2,tblptrl
 17809   016D66  CFDD FFF7          	movff	postdec2,tblptrh
 17810   016D6A                     	if	0	;tblptru may be non-zero
 17811   016D6A                     	endif
 17812   016D6A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17813   016D6A  0E00               	movlw	low (__mediumconst shr (0+16))
 17814   016D6C  6EF8               	movwf	tblptru,c
 17815   016D6E                     	endif
 17816   016D6E  0008               	tblrd		*
 17817   016D70  50F5               	movf	tablat,w,c
 17818   016D72  0A2A               	xorlw	42
 17819   016D74  A4D8               	btfss	status,2,c
 17820   016D76  D029               	goto	l13451
 17821                           
 17822                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
 17823   016D78  500B               	movf	read_prec_or_width@fmt^0,w,c
 17824   016D7A  6ED9               	movwf	fsr2l,c
 17825   016D7C  6ADA               	clrf	fsr2h,c
 17826   016D7E  2ADE               	incf	postinc2,f,c
 17827   016D80  0E00               	movlw	0
 17828   016D82  22DD               	addwfc	postdec2,f,c
 17829                           
 17830                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
 17831   016D84  500C               	movf	read_prec_or_width@ap^0,w,c
 17832   016D86  6ED9               	movwf	fsr2l,c
 17833   016D88  6ADA               	clrf	fsr2h,c
 17834   016D8A  0E02               	movlw	2
 17835   016D8C  26DF               	addwf	indf2,f,c
 17836   016D8E  5CDF               	subwf	indf2,w,c
 17837   016D90  6ED9               	movwf	fsr2l,c
 17838   016D92  6ADA               	clrf	fsr2h,c
 17839   016D94  CFDE F00E          	movff	postinc2,read_prec_or_width@n
 17840   016D98  CFDE F00F          	movff	postinc2,read_prec_or_width@n+1
 17841                           
 17842                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
 17843   016D9C  D026               	goto	u11370
 17844   016D9E                     l13447:
 17845                           
 17846                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
 17847   016D9E  C00E  F005         	movff	read_prec_or_width@n,___wmul@multiplier
 17848   016DA2  C00F  F006         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
 17849   016DA6  0E00               	movlw	0
 17850   016DA8  6E08               	movwf	(___wmul@multiplicand+1)^0,c
 17851   016DAA  0E0A               	movlw	10
 17852   016DAC  6E07               	movwf	___wmul@multiplicand^0,c
 17853   016DAE  EC79  F0C0         	call	___wmul	;wreg free
 17854   016DB2  500D               	movf	read_prec_or_width@c^0,w,c
 17855   016DB4  2405               	addwf	?___wmul^0,w,c
 17856   016DB6  6E0E               	movwf	read_prec_or_width@n^0,c
 17857   016DB8  0E00               	movlw	0
 17858   016DBA  2006               	addwfc	(?___wmul+1)^0,w,c
 17859   016DBC  6E0F               	movwf	(read_prec_or_width@n+1)^0,c
 17860                           
 17861                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
 17862   016DBE  500B               	movf	read_prec_or_width@fmt^0,w,c
 17863   016DC0  6ED9               	movwf	fsr2l,c
 17864   016DC2  6ADA               	clrf	fsr2h,c
 17865   016DC4  2ADE               	incf	postinc2,f,c
 17866   016DC6  0E00               	movlw	0
 17867   016DC8  22DD               	addwfc	postdec2,f,c
 17868   016DCA                     l13451:
 17869                           
 17870                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
 17871   016DCA  500B               	movf	read_prec_or_width@fmt^0,w,c
 17872   016DCC  6ED9               	movwf	fsr2l,c
 17873   016DCE  6ADA               	clrf	fsr2h,c
 17874   016DD0  CFDE FFF6          	movff	postinc2,tblptrl
 17875   016DD4  CFDD FFF7          	movff	postdec2,tblptrh
 17876   016DD8                     	if	0	;tblptru may be non-zero
 17877   016DD8                     	endif
 17878   016DD8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17879   016DD8  0E00               	movlw	low (__mediumconst shr (0+16))
 17880   016DDA  6EF8               	movwf	tblptru,c
 17881   016DDC                     	endif
 17882   016DDC  0008               	tblrd		*
 17883   016DDE  50F5               	movf	tablat,w,c
 17884   016DE0  0FD0               	addlw	208
 17885   016DE2  6E0D               	movwf	read_prec_or_width@c^0,c
 17886   016DE4  0E09               	movlw	9
 17887   016DE6  640D               	cpfsgt	read_prec_or_width@c^0,c
 17888   016DE8  D7DA               	goto	l13447
 17889   016DEA                     u11370:
 17890                           
 17891                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
 17892                           
 17893                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1169:     }
 17894   016DEA  C00E  F00B         	movff	read_prec_or_width@n,?_read_prec_or_width
 17895   016DEE  C00F  F00C         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
 17896   016DF2  0012               	return		;funcret
 17897   016DF4                     __end_of_read_prec_or_width:
 17898                           	callstack 0
 17899                           
 17900 ;; *************** function _dtoa *****************
 17901 ;; Defined at:
 17902 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 17903 ;; Parameters:    Size  Location     Type
 17904 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 17905 ;;		 -> sprintf@f(12), NULL(0), 
 17906 ;;  d               4   31[COMRAM] long 
 17907 ;; Auto vars:     Size  Location     Type
 17908 ;;  i               2   42[COMRAM] int 
 17909 ;;  w               2   39[COMRAM] int 
 17910 ;;  p               2   37[COMRAM] int 
 17911 ;;  s               1   41[COMRAM] unsigned char 
 17912 ;; Return value:  Size  Location     Type
 17913 ;;                  1    wreg      void 
 17914 ;; Registers used:
 17915 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17916 ;; Tracked objects:
 17917 ;;		On entry : 0/1
 17918 ;;		On exit  : 0/0
 17919 ;;		Unchanged: 0/0
 17920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17921 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17922 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17924 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17925 ;;Total ram usage:       15 bytes
 17926 ;; Hardware stack levels used: 1
 17927 ;; Hardware stack levels required when called: 8
 17928 ;; This function calls:
 17929 ;;		___aldiv
 17930 ;;		___almod
 17931 ;;		_abs
 17932 ;;		_pad
 17933 ;; This function is called by:
 17934 ;;		_vfpfcnvrt
 17935 ;; This function uses a non-reentrant model
 17936 ;;
 17937                           
 17938                           	psect	text57
 17939   015A3A                     __ptext57:
 17940                           	callstack 0
 17941   015A3A                     _dtoa:
 17942                           	callstack 16
 17943                           
 17944                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 51
      +                          8:  int p;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 524:   
      +                            s = d < 0 ? 1 : 0;
 17945                           
 17946                           ;incstack = 0
 17947   015A3A  AE23               	btfss	(dtoa@d+3)^0,7,c
 17948   015A3C  D002               	goto	u10960
 17949   015A3E  0E01               	movlw	1
 17950   015A40  D001               	goto	u10970
 17951   015A42                     u10960:
 17952   015A42  0E00               	movlw	0
 17953   015A44                     u10970:
 17954   015A44  6E2A               	movwf	dtoa@s^0,c
 17955                           
 17956                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 529:     if (!(pr
      +                          ec < 0)) {
 17957   015A46  0101               	movlb	1	; () banked
 17958   015A48  AF3E               	btfss	(_prec+1)& (0+255),7,b
 17959                           
 17960                           ; BSR set to: 1
 17961                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 530:         flag
      +                          s &= ~(1 << 1);
 17962   015A4A  9363               	bcf	_flags& (0+255),1,b
 17963                           
 17964                           ; BSR set to: 1
 17965                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
 17966   015A4C  AF3E               	btfss	(_prec+1)& (0+255),7,b
 17967   015A4E  D005               	goto	l4302
 17968                           
 17969                           ; BSR set to: 1
 17970   015A50  0E00               	movlw	0
 17971   015A52  6E27               	movwf	(dtoa@p+1)^0,c
 17972   015A54  0E01               	movlw	1
 17973   015A56  6E26               	movwf	dtoa@p^0,c
 17974   015A58  D004               	goto	l4304
 17975   015A5A                     l4302:
 17976                           
 17977                           ; BSR set to: 1
 17978   015A5A  C13D  F026         	movff	_prec,dtoa@p
 17979   015A5E  C13E  F027         	movff	_prec+1,dtoa@p+1
 17980   015A62                     l4304:
 17981                           
 17982                           ; BSR set to: 1
 17983                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
 17984   015A62  C13B  F028         	movff	_width,dtoa@w
 17985   015A66  C13C  F029         	movff	_width+1,dtoa@w+1
 17986                           
 17987                           ; BSR set to: 1
 17988                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 536:     if (s
 17989   015A6A  502A               	movf	dtoa@s^0,w,c
 17990   015A6C  B4D8               	btfsc	status,2,c
 17991   015A6E  D010               	goto	l4305
 17992                           
 17993                           ; BSR set to: 1
 17994                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 541:         --w;
 17995   015A70  0628               	decf	dtoa@w^0,f,c
 17996   015A72  A0D8               	btfss	status,0,c
 17997   015A74  0629               	decf	(dtoa@w+1)^0,f,c
 17998                           
 17999                           ; BSR set to: 1
 18000                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
 18001   015A76  502A               	movf	dtoa@s^0,w,c
 18002   015A78  A4D8               	btfss	status,2,c
 18003   015A7A  D004               	goto	l13279
 18004                           
 18005                           ; BSR set to: 1
 18006   015A7C  0E00               	movlw	0
 18007   015A7E  6E25               	movwf	(_dtoa$8747+1)^0,c
 18008   015A80  0E2B               	movlw	43
 18009   015A82  D003               	goto	L30
 18010   015A84                     l13279:
 18011                           
 18012                           ; BSR set to: 1
 18013   015A84  0E00               	movlw	0
 18014   015A86  6E25               	movwf	(_dtoa$8747+1)^0,c
 18015   015A88  0E2D               	movlw	45
 18016   015A8A                     L30:
 18017   015A8A  6E24               	movwf	_dtoa$8747^0,c
 18018                           
 18019                           ; BSR set to: 1
 18020   015A8C  C024  F02A         	movff	_dtoa$8747,dtoa@s
 18021   015A90                     l4305:
 18022                           
 18023                           ; BSR set to: 1
 18024                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
 18025   015A90  0E00               	movlw	0
 18026   015A92  6E2C               	movwf	(dtoa@i+1)^0,c
 18027   015A94  0E1F               	movlw	31
 18028   015A96  6E2B               	movwf	dtoa@i^0,c
 18029                           
 18030                           ; BSR set to: 1
 18031                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
 18032   015A98  0E00               	movlw	0
 18033   015A9A  0105               	movlb	5	; () banked
 18034   015A9C  6FC2               	movwf	(_dbuf+31)& (0+255),b
 18035                           
 18036                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 18037   015A9E  D044               	goto	l13295
 18038   015AA0                     l13285:
 18039                           
 18040                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 564:         --i;
 18041   015AA0  062B               	decf	dtoa@i^0,f,c
 18042   015AA2  A0D8               	btfss	status,0,c
 18043   015AA4  062C               	decf	(dtoa@i+1)^0,f,c
 18044                           
 18045                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
 18046   015AA6  0EA3               	movlw	low _dbuf
 18047   015AA8  242B               	addwf	dtoa@i^0,w,c
 18048   015AAA  6ED9               	movwf	fsr2l,c
 18049   015AAC  0E05               	movlw	high _dbuf
 18050   015AAE  202C               	addwfc	(dtoa@i+1)^0,w,c
 18051   015AB0  6EDA               	movwf	fsr2h,c
 18052   015AB2  C020  F005         	movff	dtoa@d,___almod@dividend
 18053   015AB6  C021  F006         	movff	dtoa@d+1,___almod@dividend+1
 18054   015ABA  C022  F007         	movff	dtoa@d+2,___almod@dividend+2
 18055   015ABE  C023  F008         	movff	dtoa@d+3,___almod@dividend+3
 18056   015AC2  0E0A               	movlw	10
 18057   015AC4  6E09               	movwf	___almod@divisor^0,c
 18058   015AC6  0E00               	movlw	0
 18059   015AC8  6E0A               	movwf	(___almod@divisor+1)^0,c
 18060   015ACA  0E00               	movlw	0
 18061   015ACC  6E0B               	movwf	(___almod@divisor+2)^0,c
 18062   015ACE  0E00               	movlw	0
 18063   015AD0  6E0C               	movwf	(___almod@divisor+3)^0,c
 18064   015AD2  EC54  F0B6         	call	___almod	;wreg free
 18065   015AD6  C005  F00F         	movff	?___almod,abs@a
 18066   015ADA  C006  F010         	movff	?___almod+1,abs@a+1
 18067   015ADE  EC52  F0C0         	call	_abs	;wreg free
 18068   015AE2  500F               	movf	?_abs^0,w,c
 18069   015AE4  0F30               	addlw	48
 18070   015AE6  6EDF               	movwf	indf2,c
 18071                           
 18072                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 567:         --p;
 18073   015AE8  0626               	decf	dtoa@p^0,f,c
 18074   015AEA  A0D8               	btfss	status,0,c
 18075   015AEC  0627               	decf	(dtoa@p+1)^0,f,c
 18076                           
 18077                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 571:         --w;
 18078   015AEE  0628               	decf	dtoa@w^0,f,c
 18079   015AF0  A0D8               	btfss	status,0,c
 18080   015AF2  0629               	decf	(dtoa@w+1)^0,f,c
 18081                           
 18082                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
 18083   015AF4  C020  F005         	movff	dtoa@d,___aldiv@dividend
 18084   015AF8  C021  F006         	movff	dtoa@d+1,___aldiv@dividend+1
 18085   015AFC  C022  F007         	movff	dtoa@d+2,___aldiv@dividend+2
 18086   015B00  C023  F008         	movff	dtoa@d+3,___aldiv@dividend+3
 18087   015B04  0E0A               	movlw	10
 18088   015B06  6E09               	movwf	___aldiv@divisor^0,c
 18089   015B08  0E00               	movlw	0
 18090   015B0A  6E0A               	movwf	(___aldiv@divisor+1)^0,c
 18091   015B0C  0E00               	movlw	0
 18092   015B0E  6E0B               	movwf	(___aldiv@divisor+2)^0,c
 18093   015B10  0E00               	movlw	0
 18094   015B12  6E0C               	movwf	(___aldiv@divisor+3)^0,c
 18095   015B14  EC55  F0B3         	call	___aldiv	;wreg free
 18096   015B18  C005  F020         	movff	?___aldiv,dtoa@d
 18097   015B1C  C006  F021         	movff	?___aldiv+1,dtoa@d+1
 18098   015B20  C007  F022         	movff	?___aldiv+2,dtoa@d+2
 18099   015B24  C008  F023         	movff	?___aldiv+3,dtoa@d+3
 18100   015B28                     l13295:
 18101                           
 18102                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 18103   015B28  BE2C               	btfsc	(dtoa@i+1)^0,7,c
 18104   015B2A  D01C               	goto	u11060
 18105   015B2C  502C               	movf	(dtoa@i+1)^0,w,c
 18106   015B2E  E103               	bnz	u11020
 18107   015B30  042B               	decf	dtoa@i^0,w,c
 18108   015B32  A0D8               	btfss	status,0,c
 18109   015B34  D017               	goto	u11060
 18110   015B36                     u11020:
 18111   015B36  5020               	movf	dtoa@d^0,w,c
 18112   015B38  1021               	iorwf	(dtoa@d+1)^0,w,c
 18113   015B3A  1022               	iorwf	(dtoa@d+2)^0,w,c
 18114   015B3C  1023               	iorwf	(dtoa@d+3)^0,w,c
 18115   015B3E  A4D8               	btfss	status,2,c
 18116   015B40  D7AF               	goto	l13285
 18117   015B42  BE27               	btfsc	(dtoa@p+1)^0,7,c
 18118   015B44  D005               	goto	u11040
 18119   015B46  5027               	movf	(dtoa@p+1)^0,w,c
 18120   015B48  E1AB               	bnz	l13285
 18121   015B4A  0426               	decf	dtoa@p^0,w,c
 18122   015B4C  B0D8               	btfsc	status,0,c
 18123   015B4E  D7A8               	goto	l13285
 18124   015B50                     u11040:
 18125   015B50  BE29               	btfsc	(dtoa@w+1)^0,7,c
 18126   015B52  D008               	goto	u11060
 18127   015B54  5029               	movf	(dtoa@w+1)^0,w,c
 18128   015B56  E103               	bnz	u11050
 18129   015B58  0428               	decf	dtoa@w^0,w,c
 18130   015B5A  A0D8               	btfss	status,0,c
 18131   015B5C  D003               	goto	u11060
 18132   015B5E                     u11050:
 18133   015B5E  0101               	movlb	1	; () banked
 18134   015B60  B363               	btfsc	_flags& (0+255),1,b
 18135   015B62  D79E               	goto	l13285
 18136   015B64                     u11060:
 18137                           
 18138                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
 18139   015B64  502A               	movf	dtoa@s^0,w,c
 18140   015B66  B4D8               	btfsc	status,2,c
 18141   015B68  D00B               	goto	l13311
 18142                           
 18143                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 577:         --i;
 18144   015B6A  062B               	decf	dtoa@i^0,f,c
 18145   015B6C  A0D8               	btfss	status,0,c
 18146   015B6E  062C               	decf	(dtoa@i+1)^0,f,c
 18147                           
 18148                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
 18149   015B70  0EA3               	movlw	low _dbuf
 18150   015B72  242B               	addwf	dtoa@i^0,w,c
 18151   015B74  6ED9               	movwf	fsr2l,c
 18152   015B76  0E05               	movlw	high _dbuf
 18153   015B78  202C               	addwfc	(dtoa@i+1)^0,w,c
 18154   015B7A  6EDA               	movwf	fsr2h,c
 18155   015B7C  C02A  FFDF         	movff	dtoa@s,indf2
 18156   015B80                     l13311:
 18157                           
 18158                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
 18159   015B80  C01E  F015         	movff	dtoa@fp,pad@fp
 18160   015B84  C01F  F016         	movff	dtoa@fp+1,pad@fp+1
 18161   015B88  0EA3               	movlw	low _dbuf
 18162   015B8A  242B               	addwf	dtoa@i^0,w,c
 18163   015B8C  6E17               	movwf	pad@buf^0,c
 18164   015B8E  0E05               	movlw	high _dbuf
 18165   015B90  202C               	addwfc	(dtoa@i+1)^0,w,c
 18166   015B92  6E18               	movwf	(pad@buf+1)^0,c
 18167   015B94  C028  F019         	movff	dtoa@w,pad@p
 18168   015B98  C029  F01A         	movff	dtoa@w+1,pad@p+1
 18169   015B9C  EC3C  F0B9         	call	_pad	;wreg free
 18170   015BA0  0012               	return		;funcret
 18171   015BA2                     __end_of_dtoa:
 18172                           	callstack 0
 18173                           
 18174 ;; *************** function _pad *****************
 18175 ;; Defined at:
 18176 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 18177 ;; Parameters:    Size  Location     Type
 18178 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
 18179 ;;		 -> sprintf@f(12), NULL(0), 
 18180 ;;  buf             2   22[COMRAM] PTR unsigned char 
 18181 ;;		 -> dbuf(32), 
 18182 ;;  p               2   24[COMRAM] int 
 18183 ;; Auto vars:     Size  Location     Type
 18184 ;;  i               2   27[COMRAM] int 
 18185 ;; Return value:  Size  Location     Type
 18186 ;;                  1    wreg      void 
 18187 ;; Registers used:
 18188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18189 ;; Tracked objects:
 18190 ;;		On entry : 0/5
 18191 ;;		On exit  : 0/0
 18192 ;;		Unchanged: 0/0
 18193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18194 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18195 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18196 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18197 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18198 ;;Total ram usage:        9 bytes
 18199 ;; Hardware stack levels used: 1
 18200 ;; Hardware stack levels required when called: 7
 18201 ;; This function calls:
 18202 ;;		_fputc
 18203 ;;		_fputs
 18204 ;; This function is called by:
 18205 ;;		_dtoa
 18206 ;;		_utoa
 18207 ;;		_xtoa
 18208 ;; This function uses a non-reentrant model
 18209 ;;
 18210                           
 18211                           	psect	text58
 18212   017278                     __ptext58:
 18213                           	callstack 0
 18214   017278                     _pad:
 18215                           	callstack 16
 18216                           
 18217                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
 18218                           
 18219                           ;incstack = 0
 18220   017278  0101               	movlb	1	; () banked
 18221   01727A  A163               	btfss	_flags& (0+255),0,b
 18222   01727C  D00A               	goto	l13157
 18223                           
 18224                           ; BSR set to: 1
 18225                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
 18226   01727E  C017  F00E         	movff	pad@buf,fputs@s
 18227   017282  C018  F00F         	movff	pad@buf+1,fputs@s+1
 18228   017286  C015  F010         	movff	pad@fp,fputs@fp
 18229   01728A  C016  F011         	movff	pad@fp+1,fputs@fp+1
 18230   01728E  EC28  F0BF         	call	_fputs	;wreg free
 18231   017292                     l13157:
 18232                           
 18233                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
 18234   017292  AE1A               	btfss	(pad@p+1)^0,7,c
 18235   017294  D004               	goto	l4292
 18236                           
 18237                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 18238   017296  0E00               	movlw	0
 18239   017298  6E1A               	movwf	(pad@p+1)^0,c
 18240   01729A  0E00               	movlw	0
 18241   01729C  6E19               	movwf	pad@p^0,c
 18242   01729E                     l4292:
 18243                           
 18244                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 18245   01729E  0E00               	movlw	0
 18246   0172A0  6E1D               	movwf	(pad@i+1)^0,c
 18247   0172A2  0E00               	movlw	0
 18248   0172A4  6E1C               	movwf	pad@i^0,c
 18249                           
 18250                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 18251   0172A6  D00C               	goto	l13165
 18252   0172A8                     l13161:
 18253                           
 18254                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 18255   0172A8  0E00               	movlw	0
 18256   0172AA  6E06               	movwf	(fputc@c+1)^0,c
 18257   0172AC  0E20               	movlw	32
 18258   0172AE  6E05               	movwf	fputc@c^0,c
 18259   0172B0  C015  F007         	movff	pad@fp,fputc@fp
 18260   0172B4  C016  F008         	movff	pad@fp+1,fputc@fp+1
 18261   0172B8  ECFA  F0B6         	call	_fputc	;wreg free
 18262                           
 18263                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 211:         ++i;
 18264   0172BC  4A1C               	infsnz	pad@i^0,f,c
 18265   0172BE  2A1D               	incf	(pad@i+1)^0,f,c
 18266   0172C0                     l13165:
 18267                           
 18268                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 18269   0172C0  5019               	movf	pad@p^0,w,c
 18270   0172C2  5C1C               	subwf	pad@i^0,w,c
 18271   0172C4  501D               	movf	(pad@i+1)^0,w,c
 18272   0172C6  0A80               	xorlw	128
 18273   0172C8  6E1B               	movwf	??_pad^0,c
 18274   0172CA  501A               	movf	(pad@p+1)^0,w,c
 18275   0172CC  0A80               	xorlw	128
 18276   0172CE  581B               	subwfb	??_pad^0,w,c
 18277   0172D0  A0D8               	btfss	status,0,c
 18278   0172D2  D7EA               	goto	l13161
 18279                           
 18280                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
 18281   0172D4  0101               	movlb	1	; () banked
 18282   0172D6  B163               	btfsc	_flags& (0+255),0,b
 18283   0172D8  0012               	return	
 18284                           
 18285                           ; BSR set to: 1
 18286                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 18287   0172DA  C017  F00E         	movff	pad@buf,fputs@s
 18288   0172DE  C018  F00F         	movff	pad@buf+1,fputs@s+1
 18289   0172E2  C015  F010         	movff	pad@fp,fputs@fp
 18290   0172E6  C016  F011         	movff	pad@fp+1,fputs@fp+1
 18291   0172EA  EC28  F0BF         	call	_fputs	;wreg free
 18292   0172EE  0012               	return		;funcret
 18293   0172F0                     __end_of_pad:
 18294                           	callstack 0
 18295                           
 18296 ;; *************** function _fputs *****************
 18297 ;; Defined at:
 18298 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputs.c"
 18299 ;; Parameters:    Size  Location     Type
 18300 ;;  s               2   13[COMRAM] PTR const unsigned char 
 18301 ;;		 -> dbuf(32), 
 18302 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
 18303 ;;		 -> sprintf@f(12), NULL(0), 
 18304 ;; Auto vars:     Size  Location     Type
 18305 ;;  i               2   18[COMRAM] int 
 18306 ;;  c               1   17[COMRAM] unsigned char 
 18307 ;; Return value:  Size  Location     Type
 18308 ;;                  2   13[COMRAM] int 
 18309 ;; Registers used:
 18310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18311 ;; Tracked objects:
 18312 ;;		On entry : 3F/1
 18313 ;;		On exit  : 0/0
 18314 ;;		Unchanged: 0/0
 18315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18316 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18317 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18319 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18320 ;;Total ram usage:        7 bytes
 18321 ;; Hardware stack levels used: 1
 18322 ;; Hardware stack levels required when called: 6
 18323 ;; This function calls:
 18324 ;;		_fputc
 18325 ;; This function is called by:
 18326 ;;		_pad
 18327 ;; This function uses a non-reentrant model
 18328 ;;
 18329                           
 18330                           	psect	text59
 18331   017E50                     __ptext59:
 18332                           	callstack 0
 18333   017E50                     _fputs:
 18334                           	callstack 16
 18335                           
 18336                           ; BSR set to: 1
 18337                           
 18338                           ;incstack = 0
 18339   017E50  0E00               	movlw	0
 18340   017E52  6E14               	movwf	(fputs@i+1)^0,c
 18341   017E54  0E00               	movlw	0
 18342   017E56  6E13               	movwf	fputs@i^0,c
 18343   017E58  D00B               	goto	l12875
 18344   017E5A                     l12871:
 18345   017E5A  C012  F005         	movff	fputs@c,fputc@c
 18346   017E5E  6A06               	clrf	(fputc@c+1)^0,c
 18347   017E60  C010  F007         	movff	fputs@fp,fputc@fp
 18348   017E64  C011  F008         	movff	fputs@fp+1,fputc@fp+1
 18349   017E68  ECFA  F0B6         	call	_fputc	;wreg free
 18350   017E6C  4A13               	infsnz	fputs@i^0,f,c
 18351   017E6E  2A14               	incf	(fputs@i+1)^0,f,c
 18352   017E70                     l12875:
 18353   017E70  5013               	movf	fputs@i^0,w,c
 18354   017E72  240E               	addwf	fputs@s^0,w,c
 18355   017E74  6ED9               	movwf	fsr2l,c
 18356   017E76  5014               	movf	(fputs@i+1)^0,w,c
 18357   017E78  200F               	addwfc	(fputs@s+1)^0,w,c
 18358   017E7A  6EDA               	movwf	fsr2h,c
 18359   017E7C  50DF               	movf	indf2,w,c
 18360   017E7E  6E12               	movwf	fputs@c^0,c
 18361   017E80  5012               	movf	fputs@c^0,w,c
 18362   017E82  B4D8               	btfsc	status,2,c
 18363   017E84  0012               	return	
 18364   017E86  D7E9               	goto	l12871
 18365   017E88                     __end_of_fputs:
 18366                           	callstack 0
 18367                           
 18368 ;; *************** function _fputc *****************
 18369 ;; Defined at:
 18370 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
 18371 ;; Parameters:    Size  Location     Type
 18372 ;;  c               2    4[COMRAM] int 
 18373 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
 18374 ;;		 -> sprintf@f(12), NULL(0), 
 18375 ;; Auto vars:     Size  Location     Type
 18376 ;;		None
 18377 ;; Return value:  Size  Location     Type
 18378 ;;                  2    4[COMRAM] int 
 18379 ;; Registers used:
 18380 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18381 ;; Tracked objects:
 18382 ;;		On entry : 0/1
 18383 ;;		On exit  : 0/0
 18384 ;;		Unchanged: 0/0
 18385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18386 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18388 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18389 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18390 ;;Total ram usage:        9 bytes
 18391 ;; Hardware stack levels used: 1
 18392 ;; Hardware stack levels required when called: 5
 18393 ;; This function calls:
 18394 ;;		_putch
 18395 ;; This function is called by:
 18396 ;;		_pad
 18397 ;;		_stoa
 18398 ;;		_vfpfcnvrt
 18399 ;;		_fputs
 18400 ;; This function uses a non-reentrant model
 18401 ;;
 18402                           
 18403                           	psect	text60
 18404   016DF4                     __ptext60:
 18405                           	callstack 0
 18406   016DF4                     _fputc:
 18407                           	callstack 16
 18408                           
 18409                           ;incstack = 0
 18410   016DF4  5007               	movf	fputc@fp^0,w,c
 18411   016DF6  1008               	iorwf	(fputc@fp+1)^0,w,c
 18412   016DF8  B4D8               	btfsc	status,2,c
 18413   016DFA  D004               	goto	u10280
 18414   016DFC  5007               	movf	fputc@fp^0,w,c
 18415   016DFE  1008               	iorwf	(fputc@fp+1)^0,w,c
 18416   016E00  A4D8               	btfss	status,2,c
 18417   016E02  D004               	goto	l12761
 18418   016E04                     u10280:
 18419   016E04  5005               	movf	fputc@c^0,w,c
 18420   016E06  ECE0  F0C1         	call	_putch
 18421   016E0A  0012               	return	
 18422   016E0C                     l12761:
 18423   016E0C  EE20 F00A          	lfsr	2,10
 18424   016E10  5007               	movf	fputc@fp^0,w,c
 18425   016E12  26D9               	addwf	fsr2l,f,c
 18426   016E14  5008               	movf	(fputc@fp+1)^0,w,c
 18427   016E16  22DA               	addwfc	fsr2h,f,c
 18428   016E18  50DE               	movf	postinc2,w,c
 18429   016E1A  10DE               	iorwf	postinc2,w,c
 18430   016E1C  B4D8               	btfsc	status,2,c
 18431   016E1E  D016               	goto	u10300
 18432   016E20  EE20 F00A          	lfsr	2,10
 18433   016E24  5007               	movf	fputc@fp^0,w,c
 18434   016E26  26D9               	addwf	fsr2l,f,c
 18435   016E28  5008               	movf	(fputc@fp+1)^0,w,c
 18436   016E2A  22DA               	addwfc	fsr2h,f,c
 18437   016E2C  EE10 F003          	lfsr	1,3
 18438   016E30  5007               	movf	fputc@fp^0,w,c
 18439   016E32  26E1               	addwf	fsr1l,f,c
 18440   016E34  5008               	movf	(fputc@fp+1)^0,w,c
 18441   016E36  22E2               	addwfc	fsr1h,f,c
 18442   016E38  50DE               	movf	postinc2,w,c
 18443   016E3A  5CE6               	subwf	postinc1,w,c
 18444   016E3C  50E6               	movf	postinc1,w,c
 18445   016E3E  0A80               	xorlw	128
 18446   016E40  6E0D               	movwf	(??_fputc+4)^0,c
 18447   016E42  50DE               	movf	postinc2,w,c
 18448   016E44  0A80               	xorlw	128
 18449   016E46  580D               	subwfb	(??_fputc+4)^0,w,c
 18450   016E48  B0D8               	btfsc	status,0,c
 18451   016E4A  0012               	return	
 18452   016E4C                     u10300:
 18453   016E4C  EE20 F003          	lfsr	2,3
 18454   016E50  5007               	movf	fputc@fp^0,w,c
 18455   016E52  26D9               	addwf	fsr2l,f,c
 18456   016E54  5008               	movf	(fputc@fp+1)^0,w,c
 18457   016E56  22DA               	addwfc	fsr2h,f,c
 18458   016E58  CFDE F009          	movff	postinc2,??_fputc
 18459   016E5C  CFDD F00A          	movff	postdec2,??_fputc+1
 18460   016E60  C007  FFD9         	movff	fputc@fp,fsr2l
 18461   016E64  C008  FFDA         	movff	fputc@fp+1,fsr2h
 18462   016E68  CFDE F00B          	movff	postinc2,??_fputc+2
 18463   016E6C  CFDD F00C          	movff	postdec2,??_fputc+3
 18464   016E70  5009               	movf	??_fputc^0,w,c
 18465   016E72  240B               	addwf	(??_fputc+2)^0,w,c
 18466   016E74  6ED9               	movwf	fsr2l,c
 18467   016E76  500A               	movf	(??_fputc+1)^0,w,c
 18468   016E78  200C               	addwfc	(??_fputc+3)^0,w,c
 18469   016E7A  6EDA               	movwf	fsr2h,c
 18470   016E7C  C005  FFDF         	movff	fputc@c,indf2
 18471   016E80  EE20 F003          	lfsr	2,3
 18472   016E84  5007               	movf	fputc@fp^0,w,c
 18473   016E86  26D9               	addwf	fsr2l,f,c
 18474   016E88  5008               	movf	(fputc@fp+1)^0,w,c
 18475   016E8A  22DA               	addwfc	fsr2h,f,c
 18476   016E8C  2ADE               	incf	postinc2,f,c
 18477   016E8E  0E00               	movlw	0
 18478   016E90  22DD               	addwfc	postdec2,f,c
 18479   016E92  0012               	return		;funcret
 18480   016E94                     __end_of_fputc:
 18481                           	callstack 0
 18482                           
 18483 ;; *************** function _putch *****************
 18484 ;; Defined at:
 18485 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
 18486 ;; Parameters:    Size  Location     Type
 18487 ;;  c               1    wreg     unsigned char 
 18488 ;; Auto vars:     Size  Location     Type
 18489 ;;  c               1    0[COMRAM] unsigned char 
 18490 ;; Return value:  Size  Location     Type
 18491 ;;                  1    wreg      void 
 18492 ;; Registers used:
 18493 ;;		wreg
 18494 ;; Tracked objects:
 18495 ;;		On entry : 0/1
 18496 ;;		On exit  : 0/0
 18497 ;;		Unchanged: 0/0
 18498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18503 ;;Total ram usage:        0 bytes
 18504 ;; Hardware stack levels used: 1
 18505 ;; Hardware stack levels required when called: 4
 18506 ;; This function calls:
 18507 ;;		Nothing
 18508 ;; This function is called by:
 18509 ;;		_fputc
 18510 ;; This function uses a non-reentrant model
 18511 ;;
 18512                           
 18513                           	psect	text61
 18514   0183C0                     __ptext61:
 18515                           	callstack 0
 18516   0183C0                     _putch:
 18517                           	callstack 16
 18518                           
 18519                           ;incstack = 0
 18520   0183C0  0012               	return		;funcret
 18521   0183C2                     __end_of_putch:
 18522                           	callstack 0
 18523                           
 18524 ;; *************** function _abs *****************
 18525 ;; Defined at:
 18526 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
 18527 ;; Parameters:    Size  Location     Type
 18528 ;;  a               2   14[COMRAM] int 
 18529 ;; Auto vars:     Size  Location     Type
 18530 ;;		None
 18531 ;; Return value:  Size  Location     Type
 18532 ;;                  2   14[COMRAM] int 
 18533 ;; Registers used:
 18534 ;;		wreg, status,2, status,0
 18535 ;; Tracked objects:
 18536 ;;		On entry : 0/5
 18537 ;;		On exit  : 0/0
 18538 ;;		Unchanged: 0/0
 18539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18540 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18542 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18543 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18544 ;;Total ram usage:        4 bytes
 18545 ;; Hardware stack levels used: 1
 18546 ;; Hardware stack levels required when called: 4
 18547 ;; This function calls:
 18548 ;;		Nothing
 18549 ;; This function is called by:
 18550 ;;		_dtoa
 18551 ;; This function uses a non-reentrant model
 18552 ;;
 18553                           
 18554                           	psect	text62
 18555   0180A4                     __ptext62:
 18556                           	callstack 0
 18557   0180A4                     _abs:
 18558                           	callstack 19
 18559                           
 18560                           ;incstack = 0
 18561   0180A4  BE10               	btfsc	(abs@a+1)^0,7,c
 18562   0180A6  D005               	goto	l4437
 18563   0180A8  C00F  F00F         	movff	abs@a,?_abs
 18564   0180AC  C010  F010         	movff	abs@a+1,?_abs+1
 18565   0180B0  0012               	return	
 18566   0180B2                     l4437:
 18567   0180B2  C00F  F011         	movff	abs@a,??_abs
 18568   0180B6  C010  F012         	movff	abs@a+1,??_abs+1
 18569   0180BA  1E11               	comf	??_abs^0,f,c
 18570   0180BC  1E12               	comf	(??_abs+1)^0,f,c
 18571   0180BE  4A11               	infsnz	??_abs^0,f,c
 18572   0180C0  2A12               	incf	(??_abs+1)^0,f,c
 18573   0180C2  C011  F00F         	movff	??_abs,?_abs
 18574   0180C6  C012  F010         	movff	??_abs+1,?_abs+1
 18575   0180CA  0012               	return		;funcret
 18576   0180CC                     __end_of_abs:
 18577                           	callstack 0
 18578                           
 18579 ;; *************** function ___almod *****************
 18580 ;; Defined at:
 18581 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\almod.c"
 18582 ;; Parameters:    Size  Location     Type
 18583 ;;  dividend        4    4[COMRAM] long 
 18584 ;;  divisor         4    8[COMRAM] long 
 18585 ;; Auto vars:     Size  Location     Type
 18586 ;;  sign            1   13[COMRAM] unsigned char 
 18587 ;;  counter         1   12[COMRAM] unsigned char 
 18588 ;; Return value:  Size  Location     Type
 18589 ;;                  4    4[COMRAM] long 
 18590 ;; Registers used:
 18591 ;;		wreg, status,2, status,0
 18592 ;; Tracked objects:
 18593 ;;		On entry : 0/5
 18594 ;;		On exit  : 0/0
 18595 ;;		Unchanged: 0/0
 18596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18597 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18598 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18600 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18601 ;;Total ram usage:       10 bytes
 18602 ;; Hardware stack levels used: 1
 18603 ;; Hardware stack levels required when called: 4
 18604 ;; This function calls:
 18605 ;;		Nothing
 18606 ;; This function is called by:
 18607 ;;		_dtoa
 18608 ;;		___secs_to_tm
 18609 ;; This function uses a non-reentrant model
 18610 ;;
 18611                           
 18612                           	psect	text63
 18613   016CA8                     __ptext63:
 18614                           	callstack 0
 18615   016CA8                     ___almod:
 18616                           	callstack 19
 18617                           
 18618                           ;incstack = 0
 18619   016CA8  0E00               	movlw	0
 18620   016CAA  6E0E               	movwf	___almod@sign^0,c
 18621   016CAC  AE08               	btfss	(___almod@dividend+3)^0,7,c
 18622   016CAE  D00A               	goto	l13109
 18623   016CB0  1E08               	comf	(___almod@dividend+3)^0,f,c
 18624   016CB2  1E07               	comf	(___almod@dividend+2)^0,f,c
 18625   016CB4  1E06               	comf	(___almod@dividend+1)^0,f,c
 18626   016CB6  6C05               	negf	___almod@dividend^0,c
 18627   016CB8  0E00               	movlw	0
 18628   016CBA  2206               	addwfc	(___almod@dividend+1)^0,f,c
 18629   016CBC  2207               	addwfc	(___almod@dividend+2)^0,f,c
 18630   016CBE  2208               	addwfc	(___almod@dividend+3)^0,f,c
 18631   016CC0  0E01               	movlw	1
 18632   016CC2  6E0E               	movwf	___almod@sign^0,c
 18633   016CC4                     l13109:
 18634   016CC4  AE0C               	btfss	(___almod@divisor+3)^0,7,c
 18635   016CC6  D008               	goto	l13113
 18636   016CC8  1E0C               	comf	(___almod@divisor+3)^0,f,c
 18637   016CCA  1E0B               	comf	(___almod@divisor+2)^0,f,c
 18638   016CCC  1E0A               	comf	(___almod@divisor+1)^0,f,c
 18639   016CCE  6C09               	negf	___almod@divisor^0,c
 18640   016CD0  0E00               	movlw	0
 18641   016CD2  220A               	addwfc	(___almod@divisor+1)^0,f,c
 18642   016CD4  220B               	addwfc	(___almod@divisor+2)^0,f,c
 18643   016CD6  220C               	addwfc	(___almod@divisor+3)^0,f,c
 18644   016CD8                     l13113:
 18645   016CD8  5009               	movf	___almod@divisor^0,w,c
 18646   016CDA  100A               	iorwf	(___almod@divisor+1)^0,w,c
 18647   016CDC  100B               	iorwf	(___almod@divisor+2)^0,w,c
 18648   016CDE  100C               	iorwf	(___almod@divisor+3)^0,w,c
 18649   016CE0  B4D8               	btfsc	status,2,c
 18650   016CE2  D024               	goto	l13129
 18651   016CE4  0E01               	movlw	1
 18652   016CE6  6E0D               	movwf	___almod@counter^0,c
 18653   016CE8  D006               	goto	l13119
 18654   016CEA                     l13117:
 18655   016CEA  90D8               	bcf	status,0,c
 18656   016CEC  3609               	rlcf	___almod@divisor^0,f,c
 18657   016CEE  360A               	rlcf	(___almod@divisor+1)^0,f,c
 18658   016CF0  360B               	rlcf	(___almod@divisor+2)^0,f,c
 18659   016CF2  360C               	rlcf	(___almod@divisor+3)^0,f,c
 18660   016CF4  2A0D               	incf	___almod@counter^0,f,c
 18661   016CF6                     l13119:
 18662   016CF6  AE0C               	btfss	(___almod@divisor+3)^0,7,c
 18663   016CF8  D7F8               	goto	l13117
 18664   016CFA                     u10800:
 18665   016CFA  5009               	movf	___almod@divisor^0,w,c
 18666   016CFC  5C05               	subwf	___almod@dividend^0,w,c
 18667   016CFE  500A               	movf	(___almod@divisor+1)^0,w,c
 18668   016D00  5806               	subwfb	(___almod@dividend+1)^0,w,c
 18669   016D02  500B               	movf	(___almod@divisor+2)^0,w,c
 18670   016D04  5807               	subwfb	(___almod@dividend+2)^0,w,c
 18671   016D06  500C               	movf	(___almod@divisor+3)^0,w,c
 18672   016D08  5808               	subwfb	(___almod@dividend+3)^0,w,c
 18673   016D0A  A0D8               	btfss	status,0,c
 18674   016D0C  D008               	goto	l13125
 18675   016D0E  5009               	movf	___almod@divisor^0,w,c
 18676   016D10  5E05               	subwf	___almod@dividend^0,f,c
 18677   016D12  500A               	movf	(___almod@divisor+1)^0,w,c
 18678   016D14  5A06               	subwfb	(___almod@dividend+1)^0,f,c
 18679   016D16  500B               	movf	(___almod@divisor+2)^0,w,c
 18680   016D18  5A07               	subwfb	(___almod@dividend+2)^0,f,c
 18681   016D1A  500C               	movf	(___almod@divisor+3)^0,w,c
 18682   016D1C  5A08               	subwfb	(___almod@dividend+3)^0,f,c
 18683   016D1E                     l13125:
 18684   016D1E  90D8               	bcf	status,0,c
 18685   016D20  320C               	rrcf	(___almod@divisor+3)^0,f,c
 18686   016D22  320B               	rrcf	(___almod@divisor+2)^0,f,c
 18687   016D24  320A               	rrcf	(___almod@divisor+1)^0,f,c
 18688   016D26  3209               	rrcf	___almod@divisor^0,f,c
 18689   016D28  2E0D               	decfsz	___almod@counter^0,f,c
 18690   016D2A  D7E7               	goto	u10800
 18691   016D2C                     l13129:
 18692   016D2C  500E               	movf	___almod@sign^0,w,c
 18693   016D2E  B4D8               	btfsc	status,2,c
 18694   016D30  D008               	goto	l13133
 18695   016D32  1E08               	comf	(___almod@dividend+3)^0,f,c
 18696   016D34  1E07               	comf	(___almod@dividend+2)^0,f,c
 18697   016D36  1E06               	comf	(___almod@dividend+1)^0,f,c
 18698   016D38  6C05               	negf	___almod@dividend^0,c
 18699   016D3A  0E00               	movlw	0
 18700   016D3C  2206               	addwfc	(___almod@dividend+1)^0,f,c
 18701   016D3E  2207               	addwfc	(___almod@dividend+2)^0,f,c
 18702   016D40  2208               	addwfc	(___almod@dividend+3)^0,f,c
 18703   016D42                     l13133:
 18704   016D42  C005  F005         	movff	___almod@dividend,?___almod
 18705   016D46  C006  F006         	movff	___almod@dividend+1,?___almod+1
 18706   016D4A  C007  F007         	movff	___almod@dividend+2,?___almod+2
 18707   016D4E  C008  F008         	movff	___almod@dividend+3,?___almod+3
 18708   016D52  0012               	return		;funcret
 18709   016D54                     __end_of___almod:
 18710                           	callstack 0
 18711                           
 18712 ;; *************** function ___aldiv *****************
 18713 ;; Defined at:
 18714 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\aldiv.c"
 18715 ;; Parameters:    Size  Location     Type
 18716 ;;  dividend        4    4[COMRAM] long 
 18717 ;;  divisor         4    8[COMRAM] long 
 18718 ;; Auto vars:     Size  Location     Type
 18719 ;;  quotient        4   14[COMRAM] long 
 18720 ;;  sign            1   13[COMRAM] unsigned char 
 18721 ;;  counter         1   12[COMRAM] unsigned char 
 18722 ;; Return value:  Size  Location     Type
 18723 ;;                  4    4[COMRAM] long 
 18724 ;; Registers used:
 18725 ;;		wreg, status,2, status,0
 18726 ;; Tracked objects:
 18727 ;;		On entry : 0/5
 18728 ;;		On exit  : 0/0
 18729 ;;		Unchanged: 0/0
 18730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18731 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18732 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18734 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18735 ;;Total ram usage:       14 bytes
 18736 ;; Hardware stack levels used: 1
 18737 ;; Hardware stack levels required when called: 4
 18738 ;; This function calls:
 18739 ;;		Nothing
 18740 ;; This function is called by:
 18741 ;;		_dtoa
 18742 ;;		___secs_to_tm
 18743 ;; This function uses a non-reentrant model
 18744 ;;
 18745                           
 18746                           	psect	text64
 18747   0166AA                     __ptext64:
 18748                           	callstack 0
 18749   0166AA                     ___aldiv:
 18750                           	callstack 19
 18751                           
 18752                           ;incstack = 0
 18753   0166AA  0E00               	movlw	0
 18754   0166AC  6E0E               	movwf	___aldiv@sign^0,c
 18755   0166AE  AE0C               	btfss	(___aldiv@divisor+3)^0,7,c
 18756   0166B0  D00A               	goto	l13065
 18757   0166B2  1E0C               	comf	(___aldiv@divisor+3)^0,f,c
 18758   0166B4  1E0B               	comf	(___aldiv@divisor+2)^0,f,c
 18759   0166B6  1E0A               	comf	(___aldiv@divisor+1)^0,f,c
 18760   0166B8  6C09               	negf	___aldiv@divisor^0,c
 18761   0166BA  0E00               	movlw	0
 18762   0166BC  220A               	addwfc	(___aldiv@divisor+1)^0,f,c
 18763   0166BE  220B               	addwfc	(___aldiv@divisor+2)^0,f,c
 18764   0166C0  220C               	addwfc	(___aldiv@divisor+3)^0,f,c
 18765   0166C2  0E01               	movlw	1
 18766   0166C4  6E0E               	movwf	___aldiv@sign^0,c
 18767   0166C6                     l13065:
 18768   0166C6  AE08               	btfss	(___aldiv@dividend+3)^0,7,c
 18769   0166C8  D00A               	goto	l13071
 18770   0166CA  1E08               	comf	(___aldiv@dividend+3)^0,f,c
 18771   0166CC  1E07               	comf	(___aldiv@dividend+2)^0,f,c
 18772   0166CE  1E06               	comf	(___aldiv@dividend+1)^0,f,c
 18773   0166D0  6C05               	negf	___aldiv@dividend^0,c
 18774   0166D2  0E00               	movlw	0
 18775   0166D4  2206               	addwfc	(___aldiv@dividend+1)^0,f,c
 18776   0166D6  2207               	addwfc	(___aldiv@dividend+2)^0,f,c
 18777   0166D8  2208               	addwfc	(___aldiv@dividend+3)^0,f,c
 18778   0166DA  0E01               	movlw	1
 18779   0166DC  1A0E               	xorwf	___aldiv@sign^0,f,c
 18780   0166DE                     l13071:
 18781   0166DE  0E00               	movlw	0
 18782   0166E0  6E0F               	movwf	___aldiv@quotient^0,c
 18783   0166E2  0E00               	movlw	0
 18784   0166E4  6E10               	movwf	(___aldiv@quotient+1)^0,c
 18785   0166E6  0E00               	movlw	0
 18786   0166E8  6E11               	movwf	(___aldiv@quotient+2)^0,c
 18787   0166EA  0E00               	movlw	0
 18788   0166EC  6E12               	movwf	(___aldiv@quotient+3)^0,c
 18789   0166EE  5009               	movf	___aldiv@divisor^0,w,c
 18790   0166F0  100A               	iorwf	(___aldiv@divisor+1)^0,w,c
 18791   0166F2  100B               	iorwf	(___aldiv@divisor+2)^0,w,c
 18792   0166F4  100C               	iorwf	(___aldiv@divisor+3)^0,w,c
 18793   0166F6  B4D8               	btfsc	status,2,c
 18794   0166F8  D02A               	goto	l13093
 18795   0166FA  0E01               	movlw	1
 18796   0166FC  6E0D               	movwf	___aldiv@counter^0,c
 18797   0166FE  D006               	goto	l13079
 18798   016700                     l13077:
 18799   016700  90D8               	bcf	status,0,c
 18800   016702  3609               	rlcf	___aldiv@divisor^0,f,c
 18801   016704  360A               	rlcf	(___aldiv@divisor+1)^0,f,c
 18802   016706  360B               	rlcf	(___aldiv@divisor+2)^0,f,c
 18803   016708  360C               	rlcf	(___aldiv@divisor+3)^0,f,c
 18804   01670A  2A0D               	incf	___aldiv@counter^0,f,c
 18805   01670C                     l13079:
 18806   01670C  AE0C               	btfss	(___aldiv@divisor+3)^0,7,c
 18807   01670E  D7F8               	goto	l13077
 18808   016710                     u10740:
 18809   016710  90D8               	bcf	status,0,c
 18810   016712  360F               	rlcf	___aldiv@quotient^0,f,c
 18811   016714  3610               	rlcf	(___aldiv@quotient+1)^0,f,c
 18812   016716  3611               	rlcf	(___aldiv@quotient+2)^0,f,c
 18813   016718  3612               	rlcf	(___aldiv@quotient+3)^0,f,c
 18814   01671A  5009               	movf	___aldiv@divisor^0,w,c
 18815   01671C  5C05               	subwf	___aldiv@dividend^0,w,c
 18816   01671E  500A               	movf	(___aldiv@divisor+1)^0,w,c
 18817   016720  5806               	subwfb	(___aldiv@dividend+1)^0,w,c
 18818   016722  500B               	movf	(___aldiv@divisor+2)^0,w,c
 18819   016724  5807               	subwfb	(___aldiv@dividend+2)^0,w,c
 18820   016726  500C               	movf	(___aldiv@divisor+3)^0,w,c
 18821   016728  5808               	subwfb	(___aldiv@dividend+3)^0,w,c
 18822   01672A  A0D8               	btfss	status,0,c
 18823   01672C  D009               	goto	l13089
 18824   01672E  5009               	movf	___aldiv@divisor^0,w,c
 18825   016730  5E05               	subwf	___aldiv@dividend^0,f,c
 18826   016732  500A               	movf	(___aldiv@divisor+1)^0,w,c
 18827   016734  5A06               	subwfb	(___aldiv@dividend+1)^0,f,c
 18828   016736  500B               	movf	(___aldiv@divisor+2)^0,w,c
 18829   016738  5A07               	subwfb	(___aldiv@dividend+2)^0,f,c
 18830   01673A  500C               	movf	(___aldiv@divisor+3)^0,w,c
 18831   01673C  5A08               	subwfb	(___aldiv@dividend+3)^0,f,c
 18832   01673E  800F               	bsf	___aldiv@quotient^0,0,c
 18833   016740                     l13089:
 18834   016740  90D8               	bcf	status,0,c
 18835   016742  320C               	rrcf	(___aldiv@divisor+3)^0,f,c
 18836   016744  320B               	rrcf	(___aldiv@divisor+2)^0,f,c
 18837   016746  320A               	rrcf	(___aldiv@divisor+1)^0,f,c
 18838   016748  3209               	rrcf	___aldiv@divisor^0,f,c
 18839   01674A  2E0D               	decfsz	___aldiv@counter^0,f,c
 18840   01674C  D7E1               	goto	u10740
 18841   01674E                     l13093:
 18842   01674E  500E               	movf	___aldiv@sign^0,w,c
 18843   016750  B4D8               	btfsc	status,2,c
 18844   016752  D008               	goto	l13097
 18845   016754  1E12               	comf	(___aldiv@quotient+3)^0,f,c
 18846   016756  1E11               	comf	(___aldiv@quotient+2)^0,f,c
 18847   016758  1E10               	comf	(___aldiv@quotient+1)^0,f,c
 18848   01675A  6C0F               	negf	___aldiv@quotient^0,c
 18849   01675C  0E00               	movlw	0
 18850   01675E  2210               	addwfc	(___aldiv@quotient+1)^0,f,c
 18851   016760  2211               	addwfc	(___aldiv@quotient+2)^0,f,c
 18852   016762  2212               	addwfc	(___aldiv@quotient+3)^0,f,c
 18853   016764                     l13097:
 18854   016764  C00F  F005         	movff	___aldiv@quotient,?___aldiv
 18855   016768  C010  F006         	movff	___aldiv@quotient+1,?___aldiv+1
 18856   01676C  C011  F007         	movff	___aldiv@quotient+2,?___aldiv+2
 18857   016770  C012  F008         	movff	___aldiv@quotient+3,?___aldiv+3
 18858   016774  0012               	return		;funcret
 18859   016776                     __end_of___aldiv:
 18860                           	callstack 0
 18861                           
 18862 ;; *************** function _getHeaderLen *****************
 18863 ;; Defined at:
 18864 ;;		line 103 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
 18865 ;; Parameters:    Size  Location     Type
 18866 ;;		None
 18867 ;; Auto vars:     Size  Location     Type
 18868 ;;  rxptr           2    8[COMRAM] unsigned short 
 18869 ;;  header_len      1   10[COMRAM] unsigned char 
 18870 ;; Return value:  Size  Location     Type
 18871 ;;                  1    wreg      unsigned char 
 18872 ;; Registers used:
 18873 ;;		wreg, status,2, status,0, cstack
 18874 ;; Tracked objects:
 18875 ;;		On entry : 3F/0
 18876 ;;		On exit  : 0/0
 18877 ;;		Unchanged: 0/0
 18878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18880 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18882 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18883 ;;Total ram usage:        3 bytes
 18884 ;; Hardware stack levels used: 1
 18885 ;; Hardware stack levels required when called: 6
 18886 ;; This function calls:
 18887 ;;		_ETH_GetReadPtr
 18888 ;;		_ETH_GetRxByteCount
 18889 ;;		_ETH_Read8
 18890 ;;		_ETH_SetReadPtr
 18891 ;;		_ETH_SetRxByteCount
 18892 ;; This function is called by:
 18893 ;;		_IPV4_Packet
 18894 ;; This function uses a non-reentrant model
 18895 ;;
 18896                           
 18897                           	psect	text65
 18898   017CB4                     __ptext65:
 18899                           	callstack 0
 18900   017CB4                     _getHeaderLen:
 18901                           	callstack 20
 18902                           
 18903                           ; BSR set to: 0
 18904                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 107:     rxptr = ETH_GetReadPtr();
 18905                           
 18906                           ; BSR set to: 0
 18907                           
 18908                           ;incstack = 0
 18909   017CB4  ECAD  F0C1         	call	_ETH_GetReadPtr	;wreg free
 18910   017CB8  C005  F009         	movff	?_ETH_GetReadPtr,getHeaderLen@rxptr
 18911   017CBC  C006  F00A         	movff	?_ETH_GetReadPtr+1,getHeaderLen@rxptr+1
 18912                           
 18913                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 108:     header_len = ETH_Read8() & 0x0fu;
 18914   017CC0  EC66  F0C0         	call	_ETH_Read8	;wreg free
 18915   017CC4  0B0F               	andlw	15
 18916   017CC6  6E0B               	movwf	getHeaderLen@header_len^0,c
 18917                           
 18918                           ; BSR set to: 1
 18919                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 109:     ETH_SetRxByteCount(ETH_GetRxByteCount
      +                          ()+1);
 18920   017CC8  ECA8  F0C1         	call	_ETH_GetRxByteCount	;wreg free
 18921   017CCC  0E01               	movlw	1
 18922   017CCE  2405               	addwf	?_ETH_GetRxByteCount^0,w,c
 18923   017CD0  6E07               	movwf	ETH_SetRxByteCount@count^0,c
 18924   017CD2  0E00               	movlw	0
 18925   017CD4  2006               	addwfc	(?_ETH_GetRxByteCount+1)^0,w,c
 18926   017CD6  6E08               	movwf	(ETH_SetRxByteCount@count+1)^0,c
 18927   017CD8  ECA3  F0C1         	call	_ETH_SetRxByteCount	;wreg free
 18928                           
 18929                           ; BSR set to: 1
 18930                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 110:     ETH_SetReadPtr(rxptr);
 18931   017CDC  C009  F007         	movff	getHeaderLen@rxptr,ETH_SetReadPtr@rdptr
 18932   017CE0  C00A  F008         	movff	getHeaderLen@rxptr+1,ETH_SetReadPtr@rdptr+1
 18933   017CE4  ECBC  F0C1         	call	_ETH_SetReadPtr	;wreg free
 18934                           
 18935                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 111:     return (uint8_t)(header_len<<2) ;
 18936   017CE8  440B               	rlncf	getHeaderLen@header_len^0,w,c
 18937   017CEA  46E8               	rlncf	wreg,f,c
 18938   017CEC  0BFC               	andlw	252
 18939   017CEE  0012               	return		;funcret
 18940   017CF0                     __end_of_getHeaderLen:
 18941                           	callstack 0
 18942                           
 18943 ;; *************** function _ETH_SetRxByteCount *****************
 18944 ;; Defined at:
 18945 ;;		line 1100 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 18946 ;; Parameters:    Size  Location     Type
 18947 ;;  count           2    6[COMRAM] unsigned short 
 18948 ;; Auto vars:     Size  Location     Type
 18949 ;;		None
 18950 ;; Return value:  Size  Location     Type
 18951 ;;                  1    wreg      void 
 18952 ;; Registers used:
 18953 ;;		wreg, status,2, status,0
 18954 ;; Tracked objects:
 18955 ;;		On entry : 3F/1
 18956 ;;		On exit  : 3F/1
 18957 ;;		Unchanged: 0/0
 18958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18959 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18962 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18963 ;;Total ram usage:        2 bytes
 18964 ;; Hardware stack levels used: 1
 18965 ;; Hardware stack levels required when called: 4
 18966 ;; This function calls:
 18967 ;;		Nothing
 18968 ;; This function is called by:
 18969 ;;		_getHeaderLen
 18970 ;; This function uses a non-reentrant model
 18971 ;;
 18972                           
 18973                           	psect	text66
 18974   018346                     __ptext66:
 18975                           	callstack 0
 18976   018346                     _ETH_SetRxByteCount:
 18977                           	callstack 21
 18978                           
 18979                           ; BSR set to: 1
 18980                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1100: void ETH_SetRxByteCount(uint1
      +                          6_t count);mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1101: {;mcc_generated_fil
      +                          es/TCPIPLibrary/ETHxxJ6x_driver.c: 1102:     rxPacketStatusVector.byteCount += count;
 18981                           
 18982                           ;incstack = 0
 18983   018346  5007               	movf	ETH_SetRxByteCount@count^0,w,c
 18984   018348  272E               	addwf	_rxPacketStatusVector& (0+255),f,b
 18985   01834A  5008               	movf	(ETH_SetRxByteCount@count+1)^0,w,c
 18986   01834C  232F               	addwfc	(_rxPacketStatusVector+1)& (0+255),f,b
 18987                           
 18988                           ; BSR set to: 1
 18989   01834E  0012               	return		;funcret
 18990   018350                     __end_of_ETH_SetRxByteCount:
 18991                           	callstack 0
 18992                           
 18993 ;; *************** function _ETH_Read8 *****************
 18994 ;; Defined at:
 18995 ;;		line 420 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 18996 ;; Parameters:    Size  Location     Type
 18997 ;;		None
 18998 ;; Auto vars:     Size  Location     Type
 18999 ;;  ret             1    4[COMRAM] unsigned char 
 19000 ;; Return value:  Size  Location     Type
 19001 ;;                  1    wreg      unsigned char 
 19002 ;; Registers used:
 19003 ;;		wreg, status,2, status,0, cstack
 19004 ;; Tracked objects:
 19005 ;;		On entry : 3E/0
 19006 ;;		On exit  : 3F/1
 19007 ;;		Unchanged: 0/0
 19008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19010 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19012 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19013 ;;Total ram usage:        1 bytes
 19014 ;; Hardware stack levels used: 1
 19015 ;; Hardware stack levels required when called: 5
 19016 ;; This function calls:
 19017 ;;		_ETH_EdataRead
 19018 ;; This function is called by:
 19019 ;;		_getHeaderLen
 19020 ;; This function uses a non-reentrant model
 19021 ;;
 19022                           
 19023                           	psect	text67
 19024   0180CC                     __ptext67:
 19025                           	callstack 0
 19026   0180CC                     _ETH_Read8:
 19027                           	callstack 20
 19028                           
 19029                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 422:     uint8_t ret = 0;
 19030                           
 19031                           ; BSR set to: 1
 19032                           ;incstack = 0
 19033   0180CC  0E00               	movlw	0
 19034   0180CE  6E05               	movwf	ETH_Read8@ret^0,c
 19035                           
 19036                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 423:     if(rxPacketStatusVector.by
      +                          teCount >= sizeof(ret))
 19037   0180D0  0101               	movlb	1	; () banked
 19038   0180D2  512E               	movf	_rxPacketStatusVector& (0+255),w,b
 19039   0180D4  112F               	iorwf	(_rxPacketStatusVector+1)& (0+255),w,b
 19040   0180D6  B4D8               	btfsc	status,2,c
 19041   0180D8  D009               	goto	l2209
 19042                           
 19043                           ; BSR set to: 1
 19044                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 424:     {;mcc_generated_files/TCPI
      +                          PLibrary/ETHxxJ6x_driver.c: 425:         ret = ETH_EdataRead();
 19045   0180DA  ECCB  F0C1         	call	_ETH_EdataRead	;wreg free
 19046   0180DE  6E05               	movwf	ETH_Read8@ret^0,c
 19047                           
 19048                           ; BSR set to: 14
 19049                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 426:         rxPacketStatusVector.b
      +                          yteCount -= sizeof(ret);
 19050   0180E0  0101               	movlb	1	; () banked
 19051   0180E2  072E               	decf	_rxPacketStatusVector& (0+255),f,b
 19052   0180E4  A0D8               	btfss	status,0,c
 19053   0180E6  072F               	decf	(_rxPacketStatusVector+1)& (0+255),f,b
 19054                           
 19055                           ; BSR set to: 1
 19056                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 427:         ethData.error = 0;
 19057   0180E8  9124               	bcf	_ethData& (0+255),0,b	;volatile
 19058                           
 19059                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 428:     }
 19060   0180EA  D001               	goto	l13783
 19061   0180EC                     l2209:
 19062                           
 19063                           ; BSR set to: 1
 19064                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 430:     {;mcc_generated_files/TCPI
      +                          PLibrary/ETHxxJ6x_driver.c: 431:         ethData.error = 1;
 19065   0180EC  8124               	bsf	_ethData& (0+255),0,b	;volatile
 19066   0180EE                     l13783:
 19067                           
 19068                           ; BSR set to: 1
 19069                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 433:     return ret;
 19070   0180EE  5005               	movf	ETH_Read8@ret^0,w,c
 19071                           
 19072                           ; BSR set to: 1
 19073   0180F0  0012               	return		;funcret
 19074   0180F2                     __end_of_ETH_Read8:
 19075                           	callstack 0
 19076                           
 19077 ;; *************** function _ETH_GetRxByteCount *****************
 19078 ;; Defined at:
 19079 ;;		line 1095 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 19080 ;; Parameters:    Size  Location     Type
 19081 ;;		None
 19082 ;; Auto vars:     Size  Location     Type
 19083 ;;		None
 19084 ;; Return value:  Size  Location     Type
 19085 ;;                  2    4[COMRAM] unsigned short 
 19086 ;; Registers used:
 19087 ;;		None
 19088 ;; Tracked objects:
 19089 ;;		On entry : 3F/1
 19090 ;;		On exit  : 3F/1
 19091 ;;		Unchanged: 3F/0
 19092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19093 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19096 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19097 ;;Total ram usage:        2 bytes
 19098 ;; Hardware stack levels used: 1
 19099 ;; Hardware stack levels required when called: 4
 19100 ;; This function calls:
 19101 ;;		Nothing
 19102 ;; This function is called by:
 19103 ;;		_getHeaderLen
 19104 ;; This function uses a non-reentrant model
 19105 ;;
 19106                           
 19107                           	psect	text68
 19108   018350                     __ptext68:
 19109                           	callstack 0
 19110   018350                     _ETH_GetRxByteCount:
 19111                           	callstack 21
 19112                           
 19113                           ; BSR set to: 1
 19114                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1097:     return (rxPacketStatusVec
      +                          tor.byteCount);
 19115                           
 19116                           ; BSR set to: 1
 19117                           ;incstack = 0
 19118   018350  C12E  F005         	movff	_rxPacketStatusVector,?_ETH_GetRxByteCount
 19119   018354  C12F  F006         	movff	_rxPacketStatusVector+1,?_ETH_GetRxByteCount+1
 19120                           
 19121                           ; BSR set to: 1
 19122   018358  0012               	return		;funcret
 19123   01835A                     __end_of_ETH_GetRxByteCount:
 19124                           	callstack 0
 19125                           
 19126 ;; *************** function _ETH_GetReadPtr *****************
 19127 ;; Defined at:
 19128 ;;		line 1064 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 19129 ;; Parameters:    Size  Location     Type
 19130 ;;		None
 19131 ;; Auto vars:     Size  Location     Type
 19132 ;;		None
 19133 ;; Return value:  Size  Location     Type
 19134 ;;                  2    4[COMRAM] unsigned short 
 19135 ;; Registers used:
 19136 ;;		None
 19137 ;; Tracked objects:
 19138 ;;		On entry : 3E/1
 19139 ;;		On exit  : 3E/0
 19140 ;;		Unchanged: 3E/0
 19141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19142 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19145 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19146 ;;Total ram usage:        2 bytes
 19147 ;; Hardware stack levels used: 1
 19148 ;; Hardware stack levels required when called: 4
 19149 ;; This function calls:
 19150 ;;		Nothing
 19151 ;; This function is called by:
 19152 ;;		_Network_SaveStartPosition
 19153 ;;		_getHeaderLen
 19154 ;; This function uses a non-reentrant model
 19155 ;;
 19156                           
 19157                           	psect	text69
 19158   01835A                     __ptext69:
 19159                           	callstack 0
 19160   01835A                     _ETH_GetReadPtr:
 19161                           	callstack 22
 19162                           
 19163                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1066:     return(ERDPT);
 19164                           
 19165                           ; BSR set to: 1
 19166                           ;incstack = 0
 19167   01835A  CF7A F005          	movff	3962,?_ETH_GetReadPtr	;volatile
 19168   01835E  CF7B F006          	movff	3963,?_ETH_GetReadPtr+1	;volatile
 19169   018362  0012               	return		;funcret
 19170   018364                     __end_of_ETH_GetReadPtr:
 19171                           	callstack 0
 19172                           
 19173 ;; *************** function _UDP_Receive *****************
 19174 ;; Defined at:
 19175 ;;		line 122 in file "mcc_generated_files/TCPIPLibrary/udpv4.c"
 19176 ;; Parameters:    Size  Location     Type
 19177 ;;  udpcksm         2   33[BANK0 ] unsigned short 
 19178 ;; Auto vars:     Size  Location     Type
 19179 ;;  hptr            2   40[BANK0 ] PTR struct .
 19180 ;;		 -> UDP_CallBackTable(5), NULL(0), 
 19181 ;;  ret             1   39[BANK0 ] enum E617
 19182 ;; Return value:  Size  Location     Type
 19183 ;;                  1    wreg      enum E617
 19184 ;; Registers used:
 19185 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 19186 ;; Tracked objects:
 19187 ;;		On entry : 30/0
 19188 ;;		On exit  : 0/0
 19189 ;;		Unchanged: 0/0
 19190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19191 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19192 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19193 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19194 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19195 ;;Total ram usage:        9 bytes
 19196 ;; Hardware stack levels used: 1
 19197 ;; Hardware stack levels required when called: 10
 19198 ;; This function calls:
 19199 ;;		_ETH_ReadBlock
 19200 ;;		_ICMP_PortUnreachable
 19201 ;;		_IPV4_GetDatagramLength
 19202 ;;		_UDPxDATAxRECV
 19203 ;;		_udp_table_getIterator
 19204 ;;		_udp_table_nextEntry
 19205 ;; This function is called by:
 19206 ;;		_IPV4_Packet
 19207 ;; This function uses a non-reentrant model
 19208 ;;
 19209                           
 19210                           	psect	text70
 19211   01541C                     __ptext70:
 19212                           	callstack 0
 19213   01541C                     _UDP_Receive:
 19214                           	callstack 16
 19215                           
 19216                           ;mcc_generated_files/TCPIPLibrary/udpv4.c: 125:     udp_table_iterator_t hptr;;mcc_gener
      +                          ated_files/TCPIPLibrary/udpv4.c: 127:     ETH_ReadBlock((char *)&udpHeader,sizeof(udpHea
      +                          der));
 19217                           
 19218                           ;incstack = 0
 19219   01541C  0E82               	movlw	low _udpHeader
 19220   01541E  6E05               	movwf	ETH_ReadBlock@buffer^0,c
 19221   015420  0E01               	movlw	high _udpHeader
 19222   015422  6E06               	movwf	(ETH_ReadBlock@buffer+1)^0,c
 19223   015424  0E00               	movlw	0
 19224   015426  6E08               	movwf	(ETH_ReadBlock@length+1)^0,c
 19225   015428  0E08               	movlw	8
 19226   01542A  6E07               	movwf	ETH_ReadBlock@length^0,c
 19227   01542C  EC8C  F0BC         	call	_ETH_ReadBlock	;wreg free
 19228                           
 19229                           ; BSR set to: 1
 19230                           ;mcc_generated_files/TCPIPLibrary/udpv4.c: 129:     if((udpHeader.checksum == 0) || (udp
      +                          cksm == 0))
 19231   015430  5188               	movf	(_udpHeader+6)& (0+255),w,b
 19232   015432  1189               	iorwf	(_udpHeader+7)& (0+255),w,b
 19233   015434  B4D8               	btfsc	status,2,c
 19234   015436  D005               	goto	u11980
 19235                           
 19236                           ; BSR set to: 1
 19237   015438  0100               	movlb	0	; () banked
 19238   01543A  5181               	movf	UDP_Receive@udpcksm& (0+255),w,b
 19239   01543C  1182               	iorwf	(UDP_Receive@udpcksm+1)& (0+255),w,b
 19240   01543E  A4D8               	btfss	status,2,c
 19241   015440  0012               	return	
 19242   015442                     u11980:
 19243                           
 19244                           ;mcc_generated_files/TCPIPLibrary/udpv4.c: 130:     {;mcc_generated_files/TCPIPLibrary/u
      +                          dpv4.c: 131:         udpHeader.dstPort = ((((uint16_t)udpHeader.dstPort & (uint16_t)0xFF
      +                          00) >> 8) | (((uint16_t)udpHeader.dstPort & (uint16_t)0x00FF) << 8));
 19245   015442  0101               	movlb	1	; () banked
 19246   015444  5184               	movf	(_udpHeader+2)& (0+255),w,b
 19247   015446  0100               	movlb	0	; () banked
 19248   015448  6F84               	movwf	(??_UDP_Receive+1)& (0+255),b
 19249   01544A  6B83               	clrf	??_UDP_Receive& (0+255),b
 19250   01544C  EE21  F084         	lfsr	2,_udpHeader+2
 19251   015450  CFDE F085          	movff	postinc2,??_UDP_Receive+2
 19252   015454  CFDD F086          	movff	postdec2,??_UDP_Receive+3
 19253   015458  C086  F085         	movff	??_UDP_Receive+3,??_UDP_Receive+2
 19254   01545C  6B86               	clrf	(??_UDP_Receive+3)& (0+255),b
 19255   01545E  0EFF               	movlw	255
 19256   015460  1785               	andwf	(??_UDP_Receive+2)& (0+255),f,b
 19257   015462  0E00               	movlw	0
 19258   015464  1786               	andwf	(??_UDP_Receive+3)& (0+255),f,b
 19259   015466  5183               	movf	??_UDP_Receive& (0+255),w,b
 19260   015468  1185               	iorwf	(??_UDP_Receive+2)& (0+255),w,b
 19261   01546A  0101               	movlb	1	; () banked
 19262   01546C  6F84               	movwf	(_udpHeader+2)& (0+255),b
 19263   01546E  0100               	movlb	0	; () banked
 19264   015470  5184               	movf	(??_UDP_Receive+1)& (0+255),w,b
 19265   015472  1186               	iorwf	(??_UDP_Receive+3)& (0+255),w,b
 19266   015474  0101               	movlb	1	; () banked
 19267   015476  6F85               	movwf	(_udpHeader+3)& (0+255),b
 19268                           
 19269                           ; BSR set to: 1
 19270                           ;mcc_generated_files/TCPIPLibrary/udpv4.c: 132:         destPort = ((((uint16_t)udpHeade
      +                          r.srcPort & (uint16_t)0xFF00) >> 8) | (((uint16_t)udpHeader.srcPort & (uint16_t)0x00FF) 
      +                          << 8));
 19271   015478  5182               	movf	_udpHeader& (0+255),w,b
 19272   01547A  0100               	movlb	0	; () banked
 19273   01547C  6F84               	movwf	(??_UDP_Receive+1)& (0+255),b
 19274   01547E  6B83               	clrf	??_UDP_Receive& (0+255),b
 19275   015480  0101               	movlb	1	; () banked
 19276   015482  5183               	movf	(_udpHeader+1)& (0+255),w,b
 19277   015484  0100               	movlb	0	; () banked
 19278   015486  6F85               	movwf	(??_UDP_Receive+2)& (0+255),b
 19279   015488  6B86               	clrf	(??_UDP_Receive+3)& (0+255),b
 19280   01548A  5183               	movf	??_UDP_Receive& (0+255),w,b
 19281   01548C  1185               	iorwf	(??_UDP_Receive+2)& (0+255),w,b
 19282   01548E  0101               	movlb	1	; () banked
 19283   015490  6F55               	movwf	_destPort& (0+255),b
 19284   015492  0100               	movlb	0	; () banked
 19285   015494  5184               	movf	(??_UDP_Receive+1)& (0+255),w,b
 19286   015496  1186               	iorwf	(??_UDP_Receive+3)& (0+255),w,b
 19287   015498  0101               	movlb	1	; () banked
 19288   01549A  6F56               	movwf	(_destPort+1)& (0+255),b
 19289                           
 19290                           ; BSR set to: 1
 19291                           ;mcc_generated_files/TCPIPLibrary/udpv4.c: 133:         udpHeader.length = ((((uint16_t)
      +                          udpHeader.length & (uint16_t)0xFF00) >> 8) | (((uint16_t)udpHeader.length & (uint16_t)0x
      +                          00FF) << 8));
 19292   01549C  5186               	movf	(_udpHeader+4)& (0+255),w,b
 19293   01549E  0100               	movlb	0	; () banked
 19294   0154A0  6F84               	movwf	(??_UDP_Receive+1)& (0+255),b
 19295   0154A2  6B83               	clrf	??_UDP_Receive& (0+255),b
 19296   0154A4  EE21  F086         	lfsr	2,_udpHeader+4
 19297   0154A8  CFDE F085          	movff	postinc2,??_UDP_Receive+2
 19298   0154AC  CFDD F086          	movff	postdec2,??_UDP_Receive+3
 19299   0154B0  C086  F085         	movff	??_UDP_Receive+3,??_UDP_Receive+2
 19300   0154B4  6B86               	clrf	(??_UDP_Receive+3)& (0+255),b
 19301   0154B6  0EFF               	movlw	255
 19302   0154B8  1785               	andwf	(??_UDP_Receive+2)& (0+255),f,b
 19303   0154BA  0E00               	movlw	0
 19304   0154BC  1786               	andwf	(??_UDP_Receive+3)& (0+255),f,b
 19305   0154BE  5183               	movf	??_UDP_Receive& (0+255),w,b
 19306   0154C0  1185               	iorwf	(??_UDP_Receive+2)& (0+255),w,b
 19307   0154C2  0101               	movlb	1	; () banked
 19308   0154C4  6F86               	movwf	(_udpHeader+4)& (0+255),b
 19309   0154C6  0100               	movlb	0	; () banked
 19310   0154C8  5184               	movf	(??_UDP_Receive+1)& (0+255),w,b
 19311   0154CA  1186               	iorwf	(??_UDP_Receive+3)& (0+255),w,b
 19312   0154CC  0101               	movlb	1	; () banked
 19313   0154CE  6F87               	movwf	(_udpHeader+5)& (0+255),b
 19314                           
 19315                           ; BSR set to: 1
 19316                           ;mcc_generated_files/TCPIPLibrary/udpv4.c: 134:         ret = PORT_NOT_AVAILABLE;
 19317   0154D0  0E0D               	movlw	13
 19318   0154D2  0100               	movlb	0	; () banked
 19319   0154D4  6F87               	movwf	UDP_Receive@ret& (0+255),b
 19320                           
 19321                           ; BSR set to: 0
 19322                           ;mcc_generated_files/TCPIPLibrary/udpv4.c: 137:         hptr = udp_table_getIterator();
 19323   0154D6  ECB2  F0C1         	call	_udp_table_getIterator	;wreg free
 19324   0154DA  C005  F088         	movff	?_udp_table_getIterator,UDP_Receive@hptr
 19325   0154DE  C006  F089         	movff	?_udp_table_getIterator+1,UDP_Receive@hptr+1
 19326                           
 19327                           ;mcc_generated_files/TCPIPLibrary/udpv4.c: 139:         while(hptr != ((void*)0))
 19328   0154E2  D049               	goto	l13987
 19329   0154E4                     l13977:
 19330                           
 19331                           ; BSR set to: 0
 19332                           ;mcc_generated_files/TCPIPLibrary/udpv4.c: 140:         {;mcc_generated_files/TCPIPLibra
      +                          ry/udpv4.c: 141:             if(hptr->portNumber == udpHeader.dstPort)
 19333   0154E4  C088  FFF6         	movff	UDP_Receive@hptr,tblptrl
 19334   0154E8  C089  FFF7         	movff	UDP_Receive@hptr+1,tblptrh
 19335   0154EC                     	if	0	;tblptru may be non-zero
 19336   0154EC                     	endif
 19337   0154EC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19338   0154EC  0E00               	movlw	low (__mediumconst shr (0+16))
 19339   0154EE  6EF8               	movwf	tblptru,c
 19340   0154F0                     	endif
 19341   0154F0  0101               	movlb	1	; () banked
 19342   0154F2  5184               	movf	(_udpHeader+2)& (0+255),w,b
 19343   0154F4  0009               	tblrd		*+
 19344   0154F6  18F5               	xorwf	tablat,w,c
 19345   0154F8  E134               	bnz	l13985
 19346   0154FA  5185               	movf	(_udpHeader+3)& (0+255),w,b
 19347   0154FC  0009               	tblrd		*+
 19348   0154FE  18F5               	xorwf	tablat,w,c
 19349   015500  A4D8               	btfss	status,2,c
 19350   015502  D02F               	goto	l13985
 19351                           
 19352                           ; BSR set to: 1
 19353                           ;mcc_generated_files/TCPIPLibrary/udpv4.c: 142:             {;mcc_generated_files/TCPIPL
      +                          ibrary/udpv4.c: 143:                 if(udpHeader.length == IPV4_GetDatagramLength())
 19354   015504  EC77  F0C1         	call	_IPV4_GetDatagramLength	;wreg free
 19355   015508  5186               	movf	(_udpHeader+4)& (0+255),w,b
 19356   01550A  1805               	xorwf	?_IPV4_GetDatagramLength^0,w,c
 19357   01550C  E126               	bnz	l13983
 19358   01550E  5187               	movf	(_udpHeader+5)& (0+255),w,b
 19359   015510  1806               	xorwf	(?_IPV4_GetDatagramLength+1)^0,w,c
 19360   015512  A4D8               	btfss	status,2,c
 19361   015514  D022               	goto	u12019
 19362                           
 19363                           ; BSR set to: 1
 19364                           ;mcc_generated_files/TCPIPLibrary/udpv4.c: 144:                 {;mcc_generated_files/TC
      +                          PIPLibrary/udpv4.c: 145:                     hptr->callBack(udpHeader.length - sizeof(ud
      +                          pHeader));
 19365   015516  0EF8               	movlw	248
 19366   015518  2586               	addwf	(_udpHeader+4)& (0+255),w,b
 19367   01551A  6E11               	movwf	UDPxDATAxRECV@length^0,c
 19368   01551C  0EFF               	movlw	255
 19369   01551E  2187               	addwfc	(_udpHeader+5)& (0+255),w,b
 19370   015520  6E12               	movwf	(UDPxDATAxRECV@length+1)^0,c
 19371   015522  0E02               	movlw	2
 19372   015524  0100               	movlb	0	; () banked
 19373   015526  2588               	addwf	UDP_Receive@hptr& (0+255),w,b
 19374   015528  6F83               	movwf	??_UDP_Receive& (0+255),b
 19375   01552A  0E00               	movlw	0
 19376   01552C  2189               	addwfc	(UDP_Receive@hptr+1)& (0+255),w,b
 19377   01552E  6F84               	movwf	(??_UDP_Receive+1)& (0+255),b
 19378   015530  C083  FFF6         	movff	??_UDP_Receive,tblptrl
 19379   015534  C084  FFF7         	movff	??_UDP_Receive+1,tblptrh
 19380   015538                     	if	0	;tblptru may be non-zero
 19381   015538                     	endif
 19382   015538                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19383   015538  0E00               	movlw	low (__mediumconst shr (0+16))
 19384   01553A  6EF8               	movwf	tblptru,c
 19385   01553C                     	endif
 19386   01553C  D801               	call	u12018
 19387   01553E  D00D               	goto	u12019
 19388   015540                     u12018:
 19389   015540  0005               	push	
 19390   015542  6EFA               	movwf	pclath,c
 19391   015544  0009               	tblrd		*+
 19392   015546  50F5               	movf	tablat,w,c
 19393   015548  6EFD               	movwf	tosl,c
 19394   01554A  0009               	tblrd		*+
 19395   01554C  50F5               	movf	tablat,w,c
 19396   01554E  6EFE               	movwf	tosh,c
 19397   015550  0009               	tblrd		*+
 19398   015552  50F5               	movf	tablat,w,c
 19399   015554  6EFF               	movwf	tosu,c
 19400   015556  50FA               	movf	pclath,w,c
 19401   015558  0012               	return		;indir
 19402   01555A                     u12019:
 19403   01555A                     l13983:
 19404                           
 19405                           ;mcc_generated_files/TCPIPLibrary/udpv4.c: 147:                 ret = SUCCESS;
 19406   01555A  0E01               	movlw	1
 19407   01555C  0100               	movlb	0	; () banked
 19408   01555E  6F87               	movwf	UDP_Receive@ret& (0+255),b
 19409                           
 19410                           ;mcc_generated_files/TCPIPLibrary/udpv4.c: 148:                 break;
 19411   015560  D00F               	goto	u12020
 19412   015562                     l13985:
 19413                           
 19414                           ; BSR set to: 1
 19415                           ;mcc_generated_files/TCPIPLibrary/udpv4.c: 150:             hptr = udp_table_nextEntry(h
      +                          ptr);
 19416   015562  C088  F005         	movff	UDP_Receive@hptr,udp_table_nextEntry@i
 19417   015566  C089  F006         	movff	UDP_Receive@hptr+1,udp_table_nextEntry@i+1
 19418   01556A  EC76  F0BF         	call	_udp_table_nextEntry	;wreg free
 19419   01556E  C005  F088         	movff	?_udp_table_nextEntry,UDP_Receive@hptr
 19420   015572  C006  F089         	movff	?_udp_table_nextEntry+1,UDP_Receive@hptr+1
 19421   015576                     l13987:
 19422                           
 19423                           ;mcc_generated_files/TCPIPLibrary/udpv4.c: 139:         while(hptr != ((void*)0))
 19424   015576  0100               	movlb	0	; () banked
 19425   015578  5188               	movf	UDP_Receive@hptr& (0+255),w,b
 19426   01557A  1189               	iorwf	(UDP_Receive@hptr+1)& (0+255),w,b
 19427   01557C  A4D8               	btfss	status,2,c
 19428   01557E  D7B2               	goto	l13977
 19429   015580                     u12020:
 19430                           
 19431                           ; BSR set to: 0
 19432                           ;mcc_generated_files/TCPIPLibrary/udpv4.c: 152:         if(ret== PORT_NOT_AVAILABLE)
 19433   015580  0E0D               	movlw	13
 19434   015582  1987               	xorwf	UDP_Receive@ret& (0+255),w,b
 19435   015584  A4D8               	btfss	status,2,c
 19436   015586  0012               	return	
 19437                           
 19438                           ; BSR set to: 0
 19439                           ;mcc_generated_files/TCPIPLibrary/udpv4.c: 153:         {;mcc_generated_files/TCPIPLibra
      +                          ry/udpv4.c: 156:             ICMP_PortUnreachable((ipv4Header.dstIpAddress), (ipv4Header
      +                          .srcIpAddress), 64);
 19440   015588  C17E  F074         	movff	_ipv4Header+16,ICMP_PortUnreachable@srcIPAddress
 19441   01558C  C17F  F075         	movff	_ipv4Header+17,ICMP_PortUnreachable@srcIPAddress+1
 19442   015590  C180  F076         	movff	_ipv4Header+18,ICMP_PortUnreachable@srcIPAddress+2
 19443   015594  C181  F077         	movff	_ipv4Header+19,ICMP_PortUnreachable@srcIPAddress+3
 19444   015598  C17A  F078         	movff	_ipv4Header+12,ICMP_PortUnreachable@destIPAddress
 19445   01559C  C17B  F079         	movff	_ipv4Header+13,ICMP_PortUnreachable@destIPAddress+1
 19446   0155A0  C17C  F07A         	movff	_ipv4Header+14,ICMP_PortUnreachable@destIPAddress+2
 19447   0155A4  C17D  F07B         	movff	_ipv4Header+15,ICMP_PortUnreachable@destIPAddress+3
 19448   0155A8  0E00               	movlw	0
 19449   0155AA  6F7D               	movwf	(ICMP_PortUnreachable@length+1)& (0+255),b
 19450   0155AC  0E40               	movlw	64
 19451   0155AE  6F7C               	movwf	ICMP_PortUnreachable@length& (0+255),b
 19452   0155B0  ECEC  F0B1         	call	_ICMP_PortUnreachable	;wreg free
 19453   0155B4  0012               	return	
 19454   0155B6                     __end_of_UDP_Receive:
 19455                           	callstack 0
 19456                           
 19457 ;; *************** function _udp_table_nextEntry *****************
 19458 ;; Defined at:
 19459 ;;		line 57 in file "mcc_generated_files/TCPIPLibrary/udpv4_port_handler_table.c"
 19460 ;; Parameters:    Size  Location     Type
 19461 ;;  i               2    4[COMRAM] PTR struct .
 19462 ;;		 -> UDP_CallBackTable(5), NULL(0), 
 19463 ;; Auto vars:     Size  Location     Type
 19464 ;;		None
 19465 ;; Return value:  Size  Location     Type
 19466 ;;                  2    4[COMRAM] PTR struct .
 19467 ;; Registers used:
 19468 ;;		wreg, status,2, status,0
 19469 ;; Tracked objects:
 19470 ;;		On entry : 3F/1
 19471 ;;		On exit  : 3F/1
 19472 ;;		Unchanged: 3F/0
 19473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19474 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19476 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19477 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19478 ;;Total ram usage:        4 bytes
 19479 ;; Hardware stack levels used: 1
 19480 ;; Hardware stack levels required when called: 4
 19481 ;; This function calls:
 19482 ;;		Nothing
 19483 ;; This function is called by:
 19484 ;;		_UDP_Receive
 19485 ;; This function uses a non-reentrant model
 19486 ;;
 19487                           
 19488                           	psect	text71
 19489   017EEC                     __ptext71:
 19490                           	callstack 0
 19491   017EEC                     _udp_table_nextEntry:
 19492                           	callstack 21
 19493                           
 19494                           ; BSR set to: 1
 19495                           ;mcc_generated_files/TCPIPLibrary/udpv4_port_handler_table.c: 57: udp_table_iterator_t u
      +                          dp_table_nextEntry(udp_table_iterator_t i);mcc_generated_files/TCPIPLibrary/udpv4_port_h
      +                          andler_table.c: 58: {;mcc_generated_files/TCPIPLibrary/udpv4_port_handler_table.c: 59:  
      +                             i ++;
 19496                           
 19497                           ;incstack = 0
 19498   017EEC  0E05               	movlw	5
 19499   017EEE  2605               	addwf	udp_table_nextEntry@i^0,f,c
 19500   017EF0  0E00               	movlw	0
 19501   017EF2  2206               	addwfc	(udp_table_nextEntry@i+1)^0,f,c
 19502                           
 19503                           ;mcc_generated_files/TCPIPLibrary/udpv4_port_handler_table.c: 60:     if(i < UDP_CallBac
      +                          kTable + sizeof(UDP_CallBackTable))
 19504   017EF4  0E24               	movlw	low (_UDP_CallBackTable+25)
 19505   017EF6  6E07               	movwf	??_udp_table_nextEntry^0,c
 19506   017EF8  0EFE               	movlw	high (_UDP_CallBackTable+25)
 19507   017EFA  6E08               	movwf	(??_udp_table_nextEntry+1)^0,c
 19508   017EFC  5007               	movf	??_udp_table_nextEntry^0,w,c
 19509   017EFE  5C05               	subwf	udp_table_nextEntry@i^0,w,c
 19510   017F00  5008               	movf	(??_udp_table_nextEntry+1)^0,w,c
 19511   017F02  5806               	subwfb	(udp_table_nextEntry@i+1)^0,w,c
 19512   017F04  B0D8               	btfsc	status,0,c
 19513   017F06  D005               	goto	l13747
 19514                           
 19515                           ; BSR set to: 1
 19516                           ;mcc_generated_files/TCPIPLibrary/udpv4_port_handler_table.c: 61:     {;mcc_generated_fi
      +                          les/TCPIPLibrary/udpv4_port_handler_table.c: 62:         return (udp_table_iterator_t) i
      +                          ;
 19517   017F08  C005  F005         	movff	udp_table_nextEntry@i,?_udp_table_nextEntry
 19518   017F0C  C006  F006         	movff	udp_table_nextEntry@i+1,?_udp_table_nextEntry+1
 19519   017F10  0012               	return	
 19520   017F12                     l13747:
 19521                           
 19522                           ; BSR set to: 1
 19523                           ;mcc_generated_files/TCPIPLibrary/udpv4_port_handler_table.c: 65:         return (udp_ta
      +                          ble_iterator_t) ((void*)0);
 19524   017F12  0E00               	movlw	0
 19525   017F14  6E05               	movwf	?_udp_table_nextEntry^0,c
 19526   017F16  0E00               	movlw	0
 19527   017F18  6E06               	movwf	(?_udp_table_nextEntry+1)^0,c
 19528                           
 19529                           ; BSR set to: 1
 19530   017F1A  0012               	return		;funcret
 19531   017F1C                     __end_of_udp_table_nextEntry:
 19532                           	callstack 0
 19533                           
 19534 ;; *************** function _udp_table_getIterator *****************
 19535 ;; Defined at:
 19536 ;;		line 52 in file "mcc_generated_files/TCPIPLibrary/udpv4_port_handler_table.c"
 19537 ;; Parameters:    Size  Location     Type
 19538 ;;		None
 19539 ;; Auto vars:     Size  Location     Type
 19540 ;;		None
 19541 ;; Return value:  Size  Location     Type
 19542 ;;                  2    4[COMRAM] PTR struct .
 19543 ;; Registers used:
 19544 ;;		wreg, status,2, status,0
 19545 ;; Tracked objects:
 19546 ;;		On entry : 3F/0
 19547 ;;		On exit  : 3F/0
 19548 ;;		Unchanged: 3F/0
 19549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19550 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19553 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19554 ;;Total ram usage:        2 bytes
 19555 ;; Hardware stack levels used: 1
 19556 ;; Hardware stack levels required when called: 4
 19557 ;; This function calls:
 19558 ;;		Nothing
 19559 ;; This function is called by:
 19560 ;;		_UDP_Receive
 19561 ;; This function uses a non-reentrant model
 19562 ;;
 19563                           
 19564                           	psect	text72
 19565   018364                     __ptext72:
 19566                           	callstack 0
 19567   018364                     _udp_table_getIterator:
 19568                           	callstack 21
 19569                           
 19570                           ; BSR set to: 0
 19571                           ;mcc_generated_files/TCPIPLibrary/udpv4_port_handler_table.c: 54:     return (udp_table_
      +                          iterator_t) UDP_CallBackTable;
 19572                           
 19573                           ; BSR set to: 1
 19574                           ;incstack = 0
 19575   018364  0E0B               	movlw	low _UDP_CallBackTable
 19576   018366  6E05               	movwf	?_udp_table_getIterator^0,c
 19577   018368  0EFE               	movlw	high _UDP_CallBackTable
 19578   01836A  6E06               	movwf	(?_udp_table_getIterator+1)^0,c
 19579                           
 19580                           ; BSR set to: 0
 19581   01836C  0012               	return		;funcret
 19582   01836E                     __end_of_udp_table_getIterator:
 19583                           	callstack 0
 19584                           
 19585 ;; *************** function _UDPxDATAxRECV *****************
 19586 ;; Defined at:
 19587 ;;		line 170 in file "communication.c"
 19588 ;; Parameters:    Size  Location     Type
 19589 ;;  length          2   16[COMRAM] short 
 19590 ;; Auto vars:     Size  Location     Type
 19591 ;;		None
 19592 ;; Return value:  Size  Location     Type
 19593 ;;                  1    wreg      void 
 19594 ;; Registers used:
 19595 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19596 ;; Tracked objects:
 19597 ;;		On entry : 3F/0
 19598 ;;		On exit  : 30/0
 19599 ;;		Unchanged: 0/0
 19600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19601 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19604 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19605 ;;Total ram usage:        2 bytes
 19606 ;; Hardware stack levels used: 1
 19607 ;; Hardware stack levels required when called: 6
 19608 ;; This function calls:
 19609 ;;		_ETH_Flush
 19610 ;;		_ETH_ReadBlock
 19611 ;;		_PutDataInReceiveMailBox
 19612 ;; This function is called by:
 19613 ;;		_UDP_Receive
 19614 ;; This function uses a non-reentrant model
 19615 ;;
 19616                           
 19617                           	psect	text73
 19618   017CF0                     __ptext73:
 19619                           	callstack 0
 19620   017CF0                     _UDPxDATAxRECV:
 19621                           	callstack 19
 19622                           
 19623                           ; BSR set to: 0
 19624                           
 19625                           ; BSR set to: 0
 19626                           ;incstack = 0
 19627   017CF0  0E0A               	movlw	10
 19628   017CF2  1811               	xorwf	UDPxDATAxRECV@length^0,w,c
 19629   017CF4  1012               	iorwf	(UDPxDATAxRECV@length+1)^0,w,c
 19630   017CF6  A4D8               	btfss	status,2,c
 19631   017CF8  D016               	goto	l13731
 19632                           
 19633                           ; BSR set to: 0
 19634   017CFA  0EEE               	movlw	low _udpReceivedData
 19635   017CFC  6E05               	movwf	ETH_ReadBlock@buffer^0,c
 19636   017CFE  0E04               	movlw	high _udpReceivedData
 19637   017D00  6E06               	movwf	(ETH_ReadBlock@buffer+1)^0,c
 19638   017D02  0E00               	movlw	0
 19639   017D04  6E08               	movwf	(ETH_ReadBlock@length+1)^0,c
 19640   017D06  0E0A               	movlw	10
 19641   017D08  6E07               	movwf	ETH_ReadBlock@length^0,c
 19642   017D0A  EC8C  F0BC         	call	_ETH_ReadBlock	;wreg free
 19643                           
 19644                           ; BSR set to: 1
 19645                           ;communication.c: 174:         PutDataInReceiveMailBox(udpReceivedData);
 19646   017D0E  EE24  F0EE         	lfsr	2,_udpReceivedData
 19647   017D12  EE00  F005         	lfsr	0,PutDataInReceiveMailBox@data
 19648   017D16  0E09               	movlw	9
 19649   017D18                     u11781:
 19650   017D18  CFDB FFEB          	movff	plusw2,plusw0
 19651   017D1C  06E8               	decf	wreg,f,c
 19652   017D1E  E2FC               	bc	u11781
 19653   017D20  ECB6  F0BC         	call	_PutDataInReceiveMailBox	;wreg free
 19654                           
 19655                           ;communication.c: 175:     }
 19656   017D24  0012               	return	
 19657   017D26                     l13731:
 19658                           
 19659                           ; BSR set to: 0
 19660                           ;communication.c: 177:         ETH_Flush();
 19661   017D26  EC8D  F0BA         	call	_ETH_Flush	;wreg free
 19662   017D2A  0012               	return		;funcret
 19663   017D2C                     __end_of_UDPxDATAxRECV:
 19664                           	callstack 0
 19665                           
 19666 ;; *************** function _PutDataInReceiveMailBox *****************
 19667 ;; Defined at:
 19668 ;;		line 240 in file "communication.c"
 19669 ;; Parameters:    Size  Location     Type
 19670 ;;  data           10    4[COMRAM] struct .
 19671 ;; Auto vars:     Size  Location     Type
 19672 ;;		None
 19673 ;; Return value:  Size  Location     Type
 19674 ;;                  1    wreg      void 
 19675 ;; Registers used:
 19676 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 19677 ;; Tracked objects:
 19678 ;;		On entry : 3F/1
 19679 ;;		On exit  : 3F/1
 19680 ;;		Unchanged: 0/0
 19681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19682 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19684 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19685 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19686 ;;Total ram usage:       12 bytes
 19687 ;; Hardware stack levels used: 1
 19688 ;; Hardware stack levels required when called: 4
 19689 ;; This function calls:
 19690 ;;		Nothing
 19691 ;; This function is called by:
 19692 ;;		_UDPxDATAxRECV
 19693 ;; This function uses a non-reentrant model
 19694 ;;
 19695                           
 19696                           	psect	text74
 19697   01796C                     __ptext74:
 19698                           	callstack 0
 19699   01796C                     _PutDataInReceiveMailBox:
 19700                           	callstack 20
 19701                           
 19702                           ; BSR set to: 1
 19703                           ;communication.c: 242:     if(data.header == HEADER){
 19704                           
 19705                           ;incstack = 0
 19706   01796C  0EAA               	movlw	170
 19707   01796E  1805               	xorwf	PutDataInReceiveMailBox@data^0,w,c
 19708   017970  A4D8               	btfss	status,2,c
 19709   017972  0012               	return	
 19710                           
 19711                           ; BSR set to: 1
 19712                           ;communication.c: 243:         *M_Box_Eth_Recv_Ptr = data;
 19713   017974  EE20  F005         	lfsr	2,PutDataInReceiveMailBox@data
 19714   017978  C153  FFE1         	movff	_M_Box_Eth_Recv_Ptr,fsr1l
 19715   01797C  C154  FFE2         	movff	_M_Box_Eth_Recv_Ptr+1,fsr1h
 19716   017980  0E09               	movlw	9
 19717   017982                     u11411:
 19718   017982  CFDB FFE3          	movff	plusw2,plusw1
 19719   017986  06E8               	decf	wreg,f,c
 19720   017988  E2FC               	bc	u11411
 19721                           
 19722                           ; BSR set to: 1
 19723                           ;communication.c: 244:         M_Box_Eth_Recv_Ptr++;
 19724   01798A  0E0A               	movlw	10
 19725   01798C  2753               	addwf	_M_Box_Eth_Recv_Ptr& (0+255),f,b
 19726   01798E  0E00               	movlw	0
 19727   017990  2354               	addwfc	(_M_Box_Eth_Recv_Ptr+1)& (0+255),f,b
 19728                           
 19729                           ; BSR set to: 1
 19730                           ;communication.c: 245:         if(M_Box_Eth_Recv_Ptr >= &udpRecvBox[8]){
 19731   017992  0E68               	movlw	low _udpRecvBox
 19732   017994  6E0F               	movwf	??_PutDataInReceiveMailBox^0,c
 19733   017996  0E07               	movlw	high _udpRecvBox
 19734   017998  6E10               	movwf	(??_PutDataInReceiveMailBox+1)^0,c
 19735   01799A  0E50               	movlw	80
 19736   01799C  260F               	addwf	??_PutDataInReceiveMailBox^0,f,c
 19737   01799E  0E00               	movlw	0
 19738   0179A0  2210               	addwfc	(??_PutDataInReceiveMailBox+1)^0,f,c
 19739   0179A2  500F               	movf	??_PutDataInReceiveMailBox^0,w,c
 19740   0179A4  5D53               	subwf	_M_Box_Eth_Recv_Ptr& (0+255),w,b
 19741   0179A6  5010               	movf	(??_PutDataInReceiveMailBox+1)^0,w,c
 19742   0179A8  5954               	subwfb	(_M_Box_Eth_Recv_Ptr+1)& (0+255),w,b
 19743   0179AA  A0D8               	btfss	status,0,c
 19744   0179AC  0012               	return	
 19745                           
 19746                           ; BSR set to: 1
 19747                           ;communication.c: 246:             M_Box_Eth_Recv_Ptr = &udpRecvBox[0];
 19748   0179AE  0E68               	movlw	low _udpRecvBox
 19749   0179B0  6F53               	movwf	_M_Box_Eth_Recv_Ptr& (0+255),b
 19750   0179B2  0E07               	movlw	high _udpRecvBox
 19751   0179B4  6F54               	movwf	(_M_Box_Eth_Recv_Ptr+1)& (0+255),b
 19752                           
 19753                           ; BSR set to: 1
 19754   0179B6  0012               	return		;funcret
 19755   0179B8                     __end_of_PutDataInReceiveMailBox:
 19756                           	callstack 0
 19757                           
 19758 ;; *************** function _ETH_Flush *****************
 19759 ;; Defined at:
 19760 ;;		line 787 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 19761 ;; Parameters:    Size  Location     Type
 19762 ;;		None
 19763 ;; Auto vars:     Size  Location     Type
 19764 ;;		None
 19765 ;; Return value:  Size  Location     Type
 19766 ;;                  1    wreg      void 
 19767 ;; Registers used:
 19768 ;;		wreg, status,2, status,0
 19769 ;; Tracked objects:
 19770 ;;		On entry : 0/1
 19771 ;;		On exit  : 3F/E
 19772 ;;		Unchanged: 0/0
 19773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19776 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19777 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19778 ;;Total ram usage:        2 bytes
 19779 ;; Hardware stack levels used: 1
 19780 ;; Hardware stack levels required when called: 4
 19781 ;; This function calls:
 19782 ;;		Nothing
 19783 ;; This function is called by:
 19784 ;;		_UDPxDATAxRECV
 19785 ;;		_Network_Read
 19786 ;;		_ETH_Init
 19787 ;; This function uses a non-reentrant model
 19788 ;;
 19789                           
 19790                           	psect	text75
 19791   01751A                     __ptext75:
 19792                           	callstack 0
 19793   01751A                     _ETH_Flush:
 19794                           	callstack 23
 19795                           
 19796                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 789:     ethData.pktReady = 0;
 19797                           
 19798                           ; BSR set to: 1
 19799                           ;incstack = 0
 19800   01751A  0101               	movlb	1	; () banked
 19801   01751C  9324               	bcf	_ethData& (0+255),1,b	;volatile
 19802                           
 19803                           ; BSR set to: 1
 19804                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 791:     ECON2 = ECON2 | 0x40u;
 19805   01751E  010E               	movlb	14	; () banked
 19806   017520  51FE               	movf	254,w,b
 19807   017522  0940               	iorlw	64
 19808   017524  6FFE               	movwf	254,b	;volatile
 19809                           
 19810                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 797:     if (((nextPacketPointer - 
      +                          1) < ERXST) ||
 19811   017526  0EFF               	movlw	255
 19812   017528  0101               	movlb	1	; () banked
 19813   01752A  2545               	addwf	_nextPacketPointer& (0+255),w,b
 19814   01752C  6E05               	movwf	??_ETH_Flush^0,c
 19815   01752E  0EFF               	movlw	255
 19816   017530  2146               	addwfc	(_nextPacketPointer+1)& (0+255),w,b
 19817   017532  6E06               	movwf	(??_ETH_Flush+1)^0,c
 19818   017534  010E               	movlb	14	; () banked
 19819   017536  51E8               	movf	232,w,b	;volatile
 19820   017538  5C05               	subwf	??_ETH_Flush^0,w,c
 19821   01753A  51E9               	movf	233,w,b	;volatile
 19822   01753C  5806               	subwfb	(??_ETH_Flush+1)^0,w,c
 19823   01753E  A0D8               	btfss	status,0,c
 19824   017540  D00E               	goto	u11440
 19825                           
 19826                           ; BSR set to: 14
 19827   017542  0EFF               	movlw	255
 19828   017544  0101               	movlb	1	; () banked
 19829   017546  2545               	addwf	_nextPacketPointer& (0+255),w,b
 19830   017548  6E05               	movwf	??_ETH_Flush^0,c
 19831   01754A  0EFF               	movlw	255
 19832   01754C  2146               	addwfc	(_nextPacketPointer+1)& (0+255),w,b
 19833   01754E  6E06               	movwf	(??_ETH_Flush+1)^0,c
 19834   017550  5005               	movf	??_ETH_Flush^0,w,c
 19835   017552  010E               	movlb	14	; () banked
 19836   017554  5DEA               	subwf	234,w,b	;volatile
 19837   017556  5006               	movf	(??_ETH_Flush+1)^0,w,c
 19838   017558  59EB               	subwfb	235,w,b	;volatile
 19839   01755A  B0D8               	btfsc	status,0,c
 19840   01755C  D005               	goto	l13489
 19841   01755E                     u11440:
 19842                           
 19843                           ; BSR set to: 14
 19844                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 799:         ERXRDPT = ERXND;
 19845   01755E  CEEA FEEC          	movff	3818,3820	;volatile
 19846   017562  CEEB FEED          	movff	3819,3821	;volatile
 19847   017566  D00A               	goto	l13491
 19848   017568                     l13489:
 19849                           
 19850                           ; BSR set to: 14
 19851                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 801:         ERXRDPT = nextPacketPo
      +                          inter - 1;
 19852   017568  0EFF               	movlw	255
 19853   01756A  0101               	movlb	1	; () banked
 19854   01756C  2545               	addwf	_nextPacketPointer& (0+255),w,b
 19855   01756E  010E               	movlb	14	; () banked
 19856   017570  6FEC               	movwf	236,b	;volatile
 19857   017572  0EFF               	movlw	255
 19858   017574  0101               	movlb	1	; () banked
 19859   017576  2146               	addwfc	(_nextPacketPointer+1)& (0+255),w,b
 19860   017578  010E               	movlb	14	; () banked
 19861   01757A  6FED               	movwf	237,b	;volatile
 19862   01757C                     l13491:
 19863                           
 19864                           ; BSR set to: 14
 19865                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 803:     EIEbits.PKTIE = 1;
 19866   01757C  8DFB               	bsf	251,6,b	;volatile
 19867                           
 19868                           ; BSR set to: 14
 19869   01757E  0012               	return		;funcret
 19870   017580                     __end_of_ETH_Flush:
 19871                           	callstack 0
 19872                           
 19873 ;; *************** function _IPV4_GetDatagramLength *****************
 19874 ;; Defined at:
 19875 ;;		line 283 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
 19876 ;; Parameters:    Size  Location     Type
 19877 ;;		None
 19878 ;; Auto vars:     Size  Location     Type
 19879 ;;		None
 19880 ;; Return value:  Size  Location     Type
 19881 ;;                  2    4[COMRAM] unsigned short 
 19882 ;; Registers used:
 19883 ;;		wreg, status,2, status,0
 19884 ;; Tracked objects:
 19885 ;;		On entry : 3F/1
 19886 ;;		On exit  : 3F/1
 19887 ;;		Unchanged: 0/0
 19888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19889 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19892 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19893 ;;Total ram usage:        2 bytes
 19894 ;; Hardware stack levels used: 1
 19895 ;; Hardware stack levels required when called: 4
 19896 ;; This function calls:
 19897 ;;		Nothing
 19898 ;; This function is called by:
 19899 ;;		_UDP_Receive
 19900 ;; This function uses a non-reentrant model
 19901 ;;
 19902                           
 19903                           	psect	text76
 19904   0182EE                     __ptext76:
 19905                           	callstack 0
 19906   0182EE                     _IPV4_GetDatagramLength:
 19907                           	callstack 21
 19908                           
 19909                           ; BSR set to: 1
 19910                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 285:     return ((ipv4Header.length) - sizeof(
      +                          ipv4Header_t));
 19911                           
 19912                           ; BSR set to: 14
 19913                           ;incstack = 0
 19914   0182EE  0EEC               	movlw	236
 19915   0182F0  2570               	addwf	(_ipv4Header+2)& (0+255),w,b
 19916   0182F2  6E05               	movwf	?_IPV4_GetDatagramLength^0,c
 19917   0182F4  0EFF               	movlw	255
 19918   0182F6  2171               	addwfc	(_ipv4Header+3)& (0+255),w,b
 19919   0182F8  6E06               	movwf	(?_IPV4_GetDatagramLength+1)^0,c
 19920                           
 19921                           ; BSR set to: 1
 19922   0182FA  0012               	return		;funcret
 19923   0182FC                     __end_of_IPV4_GetDatagramLength:
 19924                           	callstack 0
 19925                           
 19926 ;; *************** function _ICMP_PortUnreachable *****************
 19927 ;; Defined at:
 19928 ;;		line 137 in file "mcc_generated_files/TCPIPLibrary/icmp.c"
 19929 ;; Parameters:    Size  Location     Type
 19930 ;;  srcIPAddress    4   20[BANK0 ] unsigned long 
 19931 ;;  destIPAddres    4   24[BANK0 ] unsigned long 
 19932 ;;  length          2   28[BANK0 ] unsigned short 
 19933 ;; Auto vars:     Size  Location     Type
 19934 ;;  cksm            2   30[BANK0 ] unsigned short 
 19935 ;;  ret             1   32[BANK0 ] enum E617
 19936 ;; Return value:  Size  Location     Type
 19937 ;;                  1    wreg      enum E617
 19938 ;; Registers used:
 19939 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19940 ;; Tracked objects:
 19941 ;;		On entry : 3F/0
 19942 ;;		On exit  : 0/0
 19943 ;;		Unchanged: 0/0
 19944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19945 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19946 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19948 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19949 ;;Total ram usage:       13 bytes
 19950 ;; Hardware stack levels used: 1
 19951 ;; Hardware stack levels required when called: 9
 19952 ;; This function calls:
 19953 ;;		_ETH_Copy
 19954 ;;		_ETH_Insert
 19955 ;;		_ETH_SaveRDPT
 19956 ;;		_ETH_SetReadPtr
 19957 ;;		_ETH_TxComputeChecksum
 19958 ;;		_ETH_Write16
 19959 ;;		_ETH_Write32
 19960 ;;		_IPV4_Send
 19961 ;;		_IPv4_Start
 19962 ;;		_Network_GetStartPosition
 19963 ;; This function is called by:
 19964 ;;		_UDP_Receive
 19965 ;; This function uses a non-reentrant model
 19966 ;;
 19967                           
 19968                           	psect	text77
 19969   0163D8                     __ptext77:
 19970                           	callstack 0
 19971   0163D8                     _ICMP_PortUnreachable:
 19972                           	callstack 16
 19973                           
 19974                           ; BSR set to: 0
 19975                           ;mcc_generated_files/TCPIPLibrary/icmp.c: 140:     uint16_t cksm = 0;
 19976                           
 19977                           ; BSR set to: 1
 19978                           ;incstack = 0
 19979   0163D8  0E00               	movlw	0
 19980   0163DA  6F7F               	movwf	(ICMP_PortUnreachable@cksm+1)& (0+255),b
 19981   0163DC  0E00               	movlw	0
 19982   0163DE  6F7E               	movwf	ICMP_PortUnreachable@cksm& (0+255),b
 19983                           
 19984                           ; BSR set to: 0
 19985                           ;mcc_generated_files/TCPIPLibrary/icmp.c: 142:     if(srcIPAddress!=(ip_database_info.ip
      +                          v4_myAddress))
 19986   0163E0  5174               	movf	ICMP_PortUnreachable@srcIPAddress& (0+255),w,b
 19987   0163E2  0101               	movlb	1	; () banked
 19988   0163E4  1900               	xorwf	_ip_database_info& (0+255),w,b
 19989   0163E6  E174               	bnz	l2532
 19990   0163E8  0100               	movlb	0	; () banked
 19991   0163EA  5175               	movf	(ICMP_PortUnreachable@srcIPAddress+1)& (0+255),w,b
 19992   0163EC  0101               	movlb	1	; () banked
 19993   0163EE  1901               	xorwf	(_ip_database_info+1)& (0+255),w,b
 19994   0163F0  E16F               	bnz	l2532
 19995   0163F2  0100               	movlb	0	; () banked
 19996   0163F4  5176               	movf	(ICMP_PortUnreachable@srcIPAddress+2)& (0+255),w,b
 19997   0163F6  0101               	movlb	1	; () banked
 19998   0163F8  1902               	xorwf	(_ip_database_info+2)& (0+255),w,b
 19999   0163FA  E16A               	bnz	l2532
 20000   0163FC  0100               	movlb	0	; () banked
 20001   0163FE  5177               	movf	(ICMP_PortUnreachable@srcIPAddress+3)& (0+255),w,b
 20002   016400  0101               	movlb	1	; () banked
 20003   016402  1903               	xorwf	(_ip_database_info+3)& (0+255),w,b
 20004   016404  A4D8               	btfss	status,2,c
 20005   016406  0012               	return	
 20006                           
 20007                           ; BSR set to: 1
 20008                           ;mcc_generated_files/TCPIPLibrary/icmp.c: 147:     ret = IPv4_Start(destIPAddress, ICMP_
      +                          TCPIP);
 20009   016408  C078  F060         	movff	ICMP_PortUnreachable@destIPAddress,IPv4_Start@destAddress
 20010   01640C  C079  F061         	movff	ICMP_PortUnreachable@destIPAddress+1,IPv4_Start@destAddress+1
 20011   016410  C07A  F062         	movff	ICMP_PortUnreachable@destIPAddress+2,IPv4_Start@destAddress+2
 20012   016414  C07B  F063         	movff	ICMP_PortUnreachable@destIPAddress+3,IPv4_Start@destAddress+3
 20013   016418  0E01               	movlw	1
 20014   01641A  0100               	movlb	0	; () banked
 20015   01641C  6F64               	movwf	IPv4_Start@protocol& (0+255),b
 20016   01641E  EC62  F0A4         	call	_IPv4_Start	;wreg free
 20017   016422  6F80               	movwf	ICMP_PortUnreachable@ret& (0+255),b
 20018                           
 20019                           ; BSR set to: 0
 20020                           ;mcc_generated_files/TCPIPLibrary/icmp.c: 148:     if(ret == SUCCESS)
 20021   016424  0580               	decf	ICMP_PortUnreachable@ret& (0+255),w,b
 20022   016426  A4D8               	btfss	status,2,c
 20023   016428  0012               	return	
 20024                           
 20025                           ; BSR set to: 0
 20026                           ;mcc_generated_files/TCPIPLibrary/icmp.c: 149:     {;mcc_generated_files/TCPIPLibrary/ic
      +                          mp.c: 150:         ETH_Write16(DEST_PORT_UNREACHABLE);
 20027   01642A  0E03               	movlw	3
 20028   01642C  6E06               	movwf	(ETH_Write16@data+1)^0,c
 20029   01642E  0E03               	movlw	3
 20030   016430  6E05               	movwf	ETH_Write16@data^0,c
 20031   016432  EC7E  F0C1         	call	_ETH_Write16	;wreg free
 20032                           
 20033                           ;mcc_generated_files/TCPIPLibrary/icmp.c: 151:         ETH_Write16(0);
 20034   016436  0E00               	movlw	0
 20035   016438  6E06               	movwf	(ETH_Write16@data+1)^0,c
 20036   01643A  0E00               	movlw	0
 20037   01643C  6E05               	movwf	ETH_Write16@data^0,c
 20038   01643E  EC7E  F0C1         	call	_ETH_Write16	;wreg free
 20039                           
 20040                           ;mcc_generated_files/TCPIPLibrary/icmp.c: 152:         ETH_Write32(0);
 20041   016442  0E00               	movlw	0
 20042   016444  6E05               	movwf	ETH_Write32@data^0,c
 20043   016446  0E00               	movlw	0
 20044   016448  6E06               	movwf	(ETH_Write32@data+1)^0,c
 20045   01644A  0E00               	movlw	0
 20046   01644C  6E07               	movwf	(ETH_Write32@data+2)^0,c
 20047   01644E  0E00               	movlw	0
 20048   016450  6E08               	movwf	(ETH_Write32@data+3)^0,c
 20049   016452  EC03  F0C1         	call	_ETH_Write32	;wreg free
 20050                           
 20051                           ;mcc_generated_files/TCPIPLibrary/icmp.c: 153:         ETH_SetReadPtr(Network_GetStartPo
      +                          sition());
 20052   016456  ECB7  F0C1         	call	_Network_GetStartPosition	;wreg free
 20053   01645A  C005  F007         	movff	?_Network_GetStartPosition,ETH_SetReadPtr@rdptr
 20054   01645E  C006  F008         	movff	?_Network_GetStartPosition+1,ETH_SetReadPtr@rdptr+1
 20055   016462  ECBC  F0C1         	call	_ETH_SetReadPtr	;wreg free
 20056                           
 20057                           ;mcc_generated_files/TCPIPLibrary/icmp.c: 154:         ETH_SaveRDPT();
 20058   016466  ECC6  F0C1         	call	_ETH_SaveRDPT	;wreg free
 20059                           
 20060                           ;mcc_generated_files/TCPIPLibrary/icmp.c: 155:         ETH_Copy(sizeof(ipv4Header_t) + l
      +                          ength);
 20061   01646A  0E14               	movlw	20
 20062   01646C  0100               	movlb	0	; () banked
 20063   01646E  257C               	addwf	ICMP_PortUnreachable@length& (0+255),w,b
 20064   016470  6E0B               	movwf	ETH_Copy@len^0,c
 20065   016472  0E00               	movlw	0
 20066   016474  217D               	addwfc	(ICMP_PortUnreachable@length+1)& (0+255),w,b
 20067   016476  6E0C               	movwf	(ETH_Copy@len+1)^0,c
 20068   016478  ECFD  F0B5         	call	_ETH_Copy	;wreg free
 20069                           
 20070                           ;mcc_generated_files/TCPIPLibrary/icmp.c: 156:         cksm = ETH_TxComputeChecksum(size
      +                          of(ethernetFrame_t) + sizeof(ipv4Header_t), sizeof(icmpHeader_t)+ sizeof(ipv4Header_t) +
      +                           length, 0);
 20071   01647C  0E00               	movlw	0
 20072   01647E  6E14               	movwf	(ETH_TxComputeChecksum@position+1)^0,c
 20073   016480  0E22               	movlw	34
 20074   016482  6E13               	movwf	ETH_TxComputeChecksum@position^0,c
 20075   016484  0E18               	movlw	24
 20076   016486  0100               	movlb	0	; () banked
 20077   016488  257C               	addwf	ICMP_PortUnreachable@length& (0+255),w,b
 20078   01648A  6E15               	movwf	ETH_TxComputeChecksum@len^0,c
 20079   01648C  0E00               	movlw	0
 20080   01648E  217D               	addwfc	(ICMP_PortUnreachable@length+1)& (0+255),w,b
 20081   016490  6E16               	movwf	(ETH_TxComputeChecksum@len+1)^0,c
 20082   016492  0E00               	movlw	0
 20083   016494  6E18               	movwf	(ETH_TxComputeChecksum@seed+1)^0,c
 20084   016496  0E00               	movlw	0
 20085   016498  6E17               	movwf	ETH_TxComputeChecksum@seed^0,c
 20086   01649A  EC78  F0B9         	call	_ETH_TxComputeChecksum	;wreg free
 20087   01649E  C013  F07E         	movff	?_ETH_TxComputeChecksum,ICMP_PortUnreachable@cksm
 20088   0164A2  C014  F07F         	movff	?_ETH_TxComputeChecksum+1,ICMP_PortUnreachable@cksm+1
 20089                           
 20090                           ;mcc_generated_files/TCPIPLibrary/icmp.c: 157:         ETH_Insert((char *)&cksm,sizeof(c
      +                          ksm),sizeof(ethernetFrame_t) + sizeof(ipv4Header_t) + ((size_t)(((char*)&((icmpHeader_t 
      +                          *)1)->checksum)-1)));
 20091   0164A6  0E7E               	movlw	low ICMP_PortUnreachable@cksm
 20092   0164A8  6E05               	movwf	ETH_Insert@data^0,c
 20093   0164AA  0E00               	movlw	0
 20094   0164AC  6E07               	movwf	(ETH_Insert@len+1)^0,c
 20095   0164AE  0E02               	movlw	2
 20096   0164B0  6E06               	movwf	ETH_Insert@len^0,c
 20097   0164B2  0E00               	movlw	0
 20098   0164B4  6E09               	movwf	(ETH_Insert@offset+1)^0,c
 20099   0164B6  0E24               	movlw	36
 20100   0164B8  6E08               	movwf	ETH_Insert@offset^0,c
 20101   0164BA  EC82  F0BB         	call	_ETH_Insert	;wreg free
 20102   0164BE  0E18               	movlw	24
 20103   0164C0  0100               	movlb	0	; () banked
 20104   0164C2  257C               	addwf	ICMP_PortUnreachable@length& (0+255),w,b
 20105   0164C4  6E21               	movwf	IPV4_Send@payloadLength^0,c
 20106   0164C6  0E00               	movlw	0
 20107   0164C8  217D               	addwfc	(ICMP_PortUnreachable@length+1)& (0+255),w,b
 20108   0164CA  6E22               	movwf	(IPV4_Send@payloadLength+1)^0,c
 20109   0164CC  ECFB  F0B8         	call	_IPV4_Send	;wreg free
 20110   0164D0                     l2532:
 20111   0164D0  0012               	return		;funcret
 20112   0164D2                     __end_of_ICMP_PortUnreachable:
 20113                           	callstack 0
 20114                           
 20115 ;; *************** function _Network_GetStartPosition *****************
 20116 ;; Defined at:
 20117 ;;		line 168 in file "mcc_generated_files/TCPIPLibrary/network.c"
 20118 ;; Parameters:    Size  Location     Type
 20119 ;;		None
 20120 ;; Auto vars:     Size  Location     Type
 20121 ;;		None
 20122 ;; Return value:  Size  Location     Type
 20123 ;;                  2    4[COMRAM] unsigned short 
 20124 ;; Registers used:
 20125 ;;		None
 20126 ;; Tracked objects:
 20127 ;;		On entry : 0/0
 20128 ;;		On exit  : 0/0
 20129 ;;		Unchanged: 0/0
 20130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20131 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20134 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20135 ;;Total ram usage:        2 bytes
 20136 ;; Hardware stack levels used: 1
 20137 ;; Hardware stack levels required when called: 4
 20138 ;; This function calls:
 20139 ;;		Nothing
 20140 ;; This function is called by:
 20141 ;;		_ICMP_PortUnreachable
 20142 ;; This function uses a non-reentrant model
 20143 ;;
 20144                           
 20145                           	psect	text78
 20146   01836E                     __ptext78:
 20147                           	callstack 0
 20148   01836E                     _Network_GetStartPosition:
 20149                           	callstack 20
 20150                           
 20151                           ;mcc_generated_files/TCPIPLibrary/network.c: 170:     return networkStartPosition;
 20152                           
 20153                           ;incstack = 0
 20154   01836E  C14B  F005         	movff	_networkStartPosition,?_Network_GetStartPosition
 20155   018372  C14C  F006         	movff	_networkStartPosition+1,?_Network_GetStartPosition+1
 20156   018376  0012               	return		;funcret
 20157   018378                     __end_of_Network_GetStartPosition:
 20158                           	callstack 0
 20159                           
 20160 ;; *************** function _ETH_SetReadPtr *****************
 20161 ;; Defined at:
 20162 ;;		line 1069 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 20163 ;; Parameters:    Size  Location     Type
 20164 ;;  rdptr           2    6[COMRAM] unsigned short 
 20165 ;; Auto vars:     Size  Location     Type
 20166 ;;		None
 20167 ;; Return value:  Size  Location     Type
 20168 ;;                  1    wreg      void 
 20169 ;; Registers used:
 20170 ;;		None
 20171 ;; Tracked objects:
 20172 ;;		On entry : 0/1
 20173 ;;		On exit  : 0/0
 20174 ;;		Unchanged: 0/0
 20175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20176 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20179 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20180 ;;Total ram usage:        2 bytes
 20181 ;; Hardware stack levels used: 1
 20182 ;; Hardware stack levels required when called: 4
 20183 ;; This function calls:
 20184 ;;		Nothing
 20185 ;; This function is called by:
 20186 ;;		_ICMP_PortUnreachable
 20187 ;;		_getHeaderLen
 20188 ;; This function uses a non-reentrant model
 20189 ;;
 20190                           
 20191                           	psect	text79
 20192   018378                     __ptext79:
 20193                           	callstack 0
 20194   018378                     _ETH_SetReadPtr:
 20195                           	callstack 21
 20196                           
 20197                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1069: void ETH_SetReadPtr(uint16_t 
      +                          rdptr);mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1070: {;mcc_generated_files/T
      +                          CPIPLibrary/ETHxxJ6x_driver.c: 1071:     ERDPT = rdptr;
 20198                           
 20199                           ;incstack = 0
 20200   018378  C007  FF7A         	movff	ETH_SetReadPtr@rdptr,3962	;volatile
 20201   01837C  C008  FF7B         	movff	ETH_SetReadPtr@rdptr+1,3963	;volatile
 20202   018380  0012               	return		;funcret
 20203   018382                     __end_of_ETH_SetReadPtr:
 20204                           	callstack 0
 20205                           
 20206 ;; *************** function _IPV4_PseudoHeaderChecksum *****************
 20207 ;; Defined at:
 20208 ;;		line 70 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
 20209 ;; Parameters:    Size  Location     Type
 20210 ;;  payloadLen      2    4[COMRAM] unsigned short 
 20211 ;; Auto vars:     Size  Location     Type
 20212 ;;  tmp            12   16[COMRAM] struct .
 20213 ;;  cksm            4   12[COMRAM] unsigned long 
 20214 ;;  len             1   11[COMRAM] unsigned char 
 20215 ;;  v               1   10[COMRAM] PTR unsigned short 
 20216 ;;		 -> IPV4_PseudoHeaderChecksum@tmp(12), 
 20217 ;; Return value:  Size  Location     Type
 20218 ;;                  2    4[COMRAM] unsigned short 
 20219 ;; Registers used:
 20220 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20221 ;; Tracked objects:
 20222 ;;		On entry : 3F/0
 20223 ;;		On exit  : 3F/0
 20224 ;;		Unchanged: 3F/0
 20225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20226 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20227 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20228 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20229 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20230 ;;Total ram usage:       24 bytes
 20231 ;; Hardware stack levels used: 1
 20232 ;; Hardware stack levels required when called: 4
 20233 ;; This function calls:
 20234 ;;		Nothing
 20235 ;; This function is called by:
 20236 ;;		_IPV4_Packet
 20237 ;; This function uses a non-reentrant model
 20238 ;;
 20239                           
 20240                           	psect	text80
 20241   016B46                     __ptext80:
 20242                           	callstack 0
 20243   016B46                     _IPV4_PseudoHeaderChecksum:
 20244                           	callstack 22
 20245                           
 20246                           ; BSR set to: 0
 20247                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 70: uint16_t IPV4_PseudoHeaderChecksum(uint16_
      +                          t payloadLen);mcc_generated_files/TCPIPLibrary/ipv4.c: 71: {;mcc_generated_files/TCPIPLi
      +                          brary/ipv4.c: 72:     ipv4_pseudo_header_t tmp;;mcc_generated_files/TCPIPLibrary/ipv4.c:
      +                           73:     uint8_t len;;mcc_generated_files/TCPIPLibrary/ipv4.c: 74:     uint32_t cksm = 0
      +                          ;
 20248                           
 20249                           ;incstack = 0
 20250   016B46  0E00               	movlw	0
 20251   016B48  6E0D               	movwf	IPV4_PseudoHeaderChecksum@cksm^0,c
 20252   016B4A  0E00               	movlw	0
 20253   016B4C  6E0E               	movwf	(IPV4_PseudoHeaderChecksum@cksm+1)^0,c
 20254   016B4E  0E00               	movlw	0
 20255   016B50  6E0F               	movwf	(IPV4_PseudoHeaderChecksum@cksm+2)^0,c
 20256   016B52  0E00               	movlw	0
 20257   016B54  6E10               	movwf	(IPV4_PseudoHeaderChecksum@cksm+3)^0,c
 20258                           
 20259                           ; BSR set to: 0
 20260                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 75:     uint16_t *v;;mcc_generated_files/TCPIP
      +                          Library/ipv4.c: 77:     tmp.srcIpAddress = ipv4Header.srcIpAddress;
 20261   016B56  C17A  F011         	movff	_ipv4Header+12,IPV4_PseudoHeaderChecksum@tmp
 20262   016B5A  C17B  F012         	movff	_ipv4Header+13,IPV4_PseudoHeaderChecksum@tmp+1
 20263   016B5E  C17C  F013         	movff	_ipv4Header+14,IPV4_PseudoHeaderChecksum@tmp+2
 20264   016B62  C17D  F014         	movff	_ipv4Header+15,IPV4_PseudoHeaderChecksum@tmp+3
 20265                           
 20266                           ; BSR set to: 0
 20267                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 78:     tmp.dstIpAddress = ipv4Header.dstIpAdd
      +                          ress;
 20268   016B66  C17E  F015         	movff	_ipv4Header+16,IPV4_PseudoHeaderChecksum@tmp+4
 20269   016B6A  C17F  F016         	movff	_ipv4Header+17,IPV4_PseudoHeaderChecksum@tmp+5
 20270   016B6E  C180  F017         	movff	_ipv4Header+18,IPV4_PseudoHeaderChecksum@tmp+6
 20271   016B72  C181  F018         	movff	_ipv4Header+19,IPV4_PseudoHeaderChecksum@tmp+7
 20272                           
 20273                           ; BSR set to: 0
 20274                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 79:     tmp.protocol = ipv4Header.protocol;
 20275   016B76  C177  F019         	movff	_ipv4Header+9,IPV4_PseudoHeaderChecksum@tmp+8
 20276                           
 20277                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 80:     tmp.z = 0;
 20278   016B7A  0E00               	movlw	0
 20279   016B7C  6E1A               	movwf	(IPV4_PseudoHeaderChecksum@tmp+9)^0,c
 20280                           
 20281                           ; BSR set to: 0
 20282                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 81:     tmp.length = payloadLen;
 20283   016B7E  C005  F01B         	movff	IPV4_PseudoHeaderChecksum@payloadLen,IPV4_PseudoHeaderChecksum@tmp+10
 20284   016B82  C006  F01C         	movff	IPV4_PseudoHeaderChecksum@payloadLen+1,IPV4_PseudoHeaderChecksum@tmp+11
 20285                           
 20286                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 83:     len = sizeof(tmp);
 20287   016B86  0E0C               	movlw	12
 20288   016B88  6E0C               	movwf	IPV4_PseudoHeaderChecksum@len^0,c
 20289                           
 20290                           ; BSR set to: 0
 20291                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 84:     len = (uint8_t)(len >> 1);
 20292   016B8A  90D8               	bcf	status,0,c
 20293   016B8C  300C               	rrcf	IPV4_PseudoHeaderChecksum@len^0,w,c
 20294   016B8E  6E0C               	movwf	IPV4_PseudoHeaderChecksum@len^0,c
 20295                           
 20296                           ; BSR set to: 0
 20297                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 86:     v = (uint16_t *) &tmp;
 20298   016B90  0E11               	movlw	low IPV4_PseudoHeaderChecksum@tmp
 20299   016B92  6E0B               	movwf	IPV4_PseudoHeaderChecksum@v^0,c
 20300                           
 20301                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 88:     while(len)
 20302   016B94  D012               	goto	l14017
 20303   016B96                     l14011:
 20304                           
 20305                           ; BSR set to: 0
 20306                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 89:     {;mcc_generated_files/TCPIPLibrary/ipv
      +                          4.c: 90:         cksm += *v;
 20307   016B96  500B               	movf	IPV4_PseudoHeaderChecksum@v^0,w,c
 20308   016B98  6ED9               	movwf	fsr2l,c
 20309   016B9A  6ADA               	clrf	fsr2h,c
 20310   016B9C  CFDE F007          	movff	postinc2,??_IPV4_PseudoHeaderChecksum
 20311   016BA0  CFDD F008          	movff	postdec2,??_IPV4_PseudoHeaderChecksum+1
 20312   016BA4  5007               	movf	??_IPV4_PseudoHeaderChecksum^0,w,c
 20313   016BA6  260D               	addwf	IPV4_PseudoHeaderChecksum@cksm^0,f,c
 20314   016BA8  5008               	movf	(??_IPV4_PseudoHeaderChecksum+1)^0,w,c
 20315   016BAA  220E               	addwfc	(IPV4_PseudoHeaderChecksum@cksm+1)^0,f,c
 20316   016BAC  0E00               	movlw	0
 20317   016BAE  220F               	addwfc	(IPV4_PseudoHeaderChecksum@cksm+2)^0,f,c
 20318   016BB0  0E00               	movlw	0
 20319   016BB2  2210               	addwfc	(IPV4_PseudoHeaderChecksum@cksm+3)^0,f,c
 20320                           
 20321                           ; BSR set to: 0
 20322                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 91:         len--;
 20323   016BB4  060C               	decf	IPV4_PseudoHeaderChecksum@len^0,f,c
 20324                           
 20325                           ; BSR set to: 0
 20326                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 92:         v++;
 20327   016BB6  0E02               	movlw	2
 20328   016BB8  260B               	addwf	IPV4_PseudoHeaderChecksum@v^0,f,c
 20329   016BBA                     l14017:
 20330                           
 20331                           ; BSR set to: 0
 20332                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 88:     while(len)
 20333   016BBA  500C               	movf	IPV4_PseudoHeaderChecksum@len^0,w,c
 20334   016BBC  A4D8               	btfss	status,2,c
 20335   016BBE  D7EB               	goto	l14011
 20336                           
 20337                           ; BSR set to: 0
 20338                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 96:     cksm = (cksm & 0x0FFFF) + (cksm>>16);
 20339   016BC0  0EFF               	movlw	255
 20340   016BC2  140D               	andwf	IPV4_PseudoHeaderChecksum@cksm^0,w,c
 20341   016BC4  6E07               	movwf	??_IPV4_PseudoHeaderChecksum^0,c
 20342   016BC6  0EFF               	movlw	255
 20343   016BC8  140E               	andwf	(IPV4_PseudoHeaderChecksum@cksm+1)^0,w,c
 20344   016BCA  6E08               	movwf	(??_IPV4_PseudoHeaderChecksum+1)^0,c
 20345   016BCC  0E00               	movlw	0
 20346   016BCE  140F               	andwf	(IPV4_PseudoHeaderChecksum@cksm+2)^0,w,c
 20347   016BD0  6E09               	movwf	(??_IPV4_PseudoHeaderChecksum+2)^0,c
 20348   016BD2  0E00               	movlw	0
 20349   016BD4  1410               	andwf	(IPV4_PseudoHeaderChecksum@cksm+3)^0,w,c
 20350   016BD6  6E0A               	movwf	(??_IPV4_PseudoHeaderChecksum+3)^0,c
 20351   016BD8  500F               	movf	(IPV4_PseudoHeaderChecksum@cksm+2)^0,w,c
 20352   016BDA  2407               	addwf	??_IPV4_PseudoHeaderChecksum^0,w,c
 20353   016BDC  6E0D               	movwf	IPV4_PseudoHeaderChecksum@cksm^0,c
 20354   016BDE  5010               	movf	(IPV4_PseudoHeaderChecksum@cksm+3)^0,w,c
 20355   016BE0  2008               	addwfc	(??_IPV4_PseudoHeaderChecksum+1)^0,w,c
 20356   016BE2  6E0E               	movwf	(IPV4_PseudoHeaderChecksum@cksm+1)^0,c
 20357   016BE4  0E00               	movlw	0
 20358   016BE6  2009               	addwfc	(??_IPV4_PseudoHeaderChecksum+2)^0,w,c
 20359   016BE8  6E0F               	movwf	(IPV4_PseudoHeaderChecksum@cksm+2)^0,c
 20360   016BEA  0E00               	movlw	0
 20361   016BEC  200A               	addwfc	(??_IPV4_PseudoHeaderChecksum+3)^0,w,c
 20362   016BEE  6E10               	movwf	(IPV4_PseudoHeaderChecksum@cksm+3)^0,c
 20363                           
 20364                           ; BSR set to: 0
 20365                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 99:     return cksm;
 20366   016BF0  C00D  F005         	movff	IPV4_PseudoHeaderChecksum@cksm,?_IPV4_PseudoHeaderChecksum
 20367   016BF4  C00E  F006         	movff	IPV4_PseudoHeaderChecksum@cksm+1,?_IPV4_PseudoHeaderChecksum+1
 20368                           
 20369                           ; BSR set to: 0
 20370   016BF8  0012               	return		;funcret
 20371   016BFA                     __end_of_IPV4_PseudoHeaderChecksum:
 20372                           	callstack 0
 20373                           
 20374 ;; *************** function _ICMP_Receive *****************
 20375 ;; Defined at:
 20376 ;;		line 58 in file "mcc_generated_files/TCPIPLibrary/icmp.c"
 20377 ;; Parameters:    Size  Location     Type
 20378 ;;  ipv4Hdr         2   37[BANK0 ] PTR struct .
 20379 ;;		 -> ipv4Header(20), 
 20380 ;; Auto vars:     Size  Location     Type
 20381 ;;  icmpHdr         4   45[BANK0 ] struct .
 20382 ;;  ret             1    0        enum E617
 20383 ;; Return value:  Size  Location     Type
 20384 ;;                  1    wreg      enum E617
 20385 ;; Registers used:
 20386 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20387 ;; Tracked objects:
 20388 ;;		On entry : 3F/0
 20389 ;;		On exit  : 3E/0
 20390 ;;		Unchanged: 0/0
 20391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20392 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20393 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20394 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20395 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20396 ;;Total ram usage:       12 bytes
 20397 ;; Hardware stack levels used: 1
 20398 ;; Hardware stack levels required when called: 10
 20399 ;; This function calls:
 20400 ;;		_ETH_Dump
 20401 ;;		_ETH_Read16
 20402 ;;		_ETH_ReadBlock
 20403 ;;		_ICMP_EchoReply
 20404 ;; This function is called by:
 20405 ;;		_IPV4_Packet
 20406 ;; This function uses a non-reentrant model
 20407 ;;
 20408                           
 20409                           	psect	text81
 20410   016776                     __ptext81:
 20411                           	callstack 0
 20412   016776                     _ICMP_Receive:
 20413                           	callstack 16
 20414                           
 20415                           ; BSR set to: 0
 20416                           ;mcc_generated_files/TCPIPLibrary/icmp.c: 62:     ETH_ReadBlock(&icmpHdr, sizeof(icmpHea
      +                          der_t));
 20417                           
 20418                           ; BSR set to: 0
 20419                           
 20420                           ; BSR set to: 0
 20421                           ;incstack = 0
 20422   016776  0E8D               	movlw	low ICMP_Receive@icmpHdr
 20423   016778  6E05               	movwf	ETH_ReadBlock@buffer^0,c
 20424   01677A  6A06               	clrf	(ETH_ReadBlock@buffer+1)^0,c
 20425   01677C  0E00               	movlw	0
 20426   01677E  6E08               	movwf	(ETH_ReadBlock@length+1)^0,c
 20427   016780  0E04               	movlw	4
 20428   016782  6E07               	movwf	ETH_ReadBlock@length^0,c
 20429   016784  EC8C  F0BC         	call	_ETH_ReadBlock	;wreg free
 20430                           
 20431                           ; BSR set to: 1
 20432                           ;mcc_generated_files/TCPIPLibrary/icmp.c: 64:     if(ipv4Hdr->dstIpAddress == 0xFFFFFFFF
      +                          )
 20433   016788  0100               	movlb	0	; () banked
 20434   01678A  EE20 F010          	lfsr	2,16
 20435   01678E  5185               	movf	ICMP_Receive@ipv4Hdr& (0+255),w,b
 20436   016790  26D9               	addwf	fsr2l,f,c
 20437   016792  5186               	movf	(ICMP_Receive@ipv4Hdr+1)& (0+255),w,b
 20438   016794  22DA               	addwfc	fsr2h,f,c
 20439   016796  28DE               	incf	postinc2,w,c
 20440   016798  E12F               	bnz	l13949
 20441   01679A  28DE               	incf	postinc2,w,c
 20442   01679C  E12D               	bnz	l13949
 20443   01679E  28DE               	incf	postinc2,w,c
 20444   0167A0  E12B               	bnz	l13949
 20445   0167A2  28DE               	incf	postinc2,w,c
 20446   0167A4  B4D8               	btfsc	status,2,c
 20447   0167A6  0012               	return	
 20448   0167A8  D027               	goto	l13949
 20449   0167AA                     l13937:
 20450                           
 20451                           ; BSR set to: 0
 20452   0167AA  C085  F074         	movff	ICMP_Receive@ipv4Hdr,ICMP_EchoReply@ipv4Hdr
 20453   0167AE  C086  F075         	movff	ICMP_Receive@ipv4Hdr+1,ICMP_EchoReply@ipv4Hdr+1
 20454   0167B2  ECD1  F0AD         	call	_ICMP_EchoReply	;wreg free
 20455                           
 20456                           ;mcc_generated_files/TCPIPLibrary/icmp.c: 73:         };mcc_generated_files/TCPIPLibrary
      +                          /icmp.c: 74:         break;
 20457   0167B6  0012               	return	
 20458   0167B8                     l13939:
 20459                           
 20460                           ; BSR set to: 0
 20461                           ;mcc_generated_files/TCPIPLibrary/icmp.c: 76:             ETH_Dump(4);
 20462   0167B8  0E00               	movlw	0
 20463   0167BA  6E06               	movwf	(ETH_Dump@length+1)^0,c
 20464   0167BC  0E04               	movlw	4
 20465   0167BE  6E05               	movwf	ETH_Dump@length^0,c
 20466   0167C0  ECD2  F0BE         	call	_ETH_Dump	;wreg free
 20467                           
 20468                           ; BSR set to: 1
 20469                           ;mcc_generated_files/TCPIPLibrary/icmp.c: 77:             ETH_ReadBlock(ipv4Hdr,sizeof(i
      +                          pv4Header_t));
 20470   0167C4  C085  F005         	movff	ICMP_Receive@ipv4Hdr,ETH_ReadBlock@buffer
 20471   0167C8  C086  F006         	movff	ICMP_Receive@ipv4Hdr+1,ETH_ReadBlock@buffer+1
 20472   0167CC  0E00               	movlw	0
 20473   0167CE  6E08               	movwf	(ETH_ReadBlock@length+1)^0,c
 20474   0167D0  0E14               	movlw	20
 20475   0167D2  6E07               	movwf	ETH_ReadBlock@length^0,c
 20476   0167D4  EC8C  F0BC         	call	_ETH_ReadBlock	;wreg free
 20477                           
 20478                           ; BSR set to: 1
 20479                           ;mcc_generated_files/TCPIPLibrary/icmp.c: 78:             if(5 == ipv4Hdr->ihl)
 20480   0167D8  C085  FFD9         	movff	ICMP_Receive@ipv4Hdr,fsr2l
 20481   0167DC  C086  FFDA         	movff	ICMP_Receive@ipv4Hdr+1,fsr2h
 20482   0167E0  50DF               	movf	223,w,c
 20483   0167E2  0B0F               	andlw	15
 20484   0167E4  0A05               	xorlw	5
 20485   0167E6  A4D8               	btfss	status,2,c
 20486   0167E8  0012               	return	
 20487                           
 20488                           ; BSR set to: 1
 20489                           ;mcc_generated_files/TCPIPLibrary/icmp.c: 79:             {;mcc_generated_files/TCPIPLib
      +                          rary/icmp.c: 80:                 portUnreachable = ETH_Read16();
 20490   0167EA  EC96  F0BE         	call	_ETH_Read16	;wreg free
 20491   0167EE  C005  F225         	movff	?_ETH_Read16,_portUnreachable
 20492   0167F2  C006  F226         	movff	?_ETH_Read16+1,_portUnreachable+1
 20493   0167F6  0012               	return	
 20494   0167F8                     l13949:
 20495                           
 20496                           ; BSR set to: 0
 20497   0167F8  518D               	movf	ICMP_Receive@icmpHdr& (0+255),w,b
 20498   0167FA  6F88               	movwf	(??_ICMP_Receive+1)& (0+255),b
 20499   0167FC  6B87               	clrf	??_ICMP_Receive& (0+255),b
 20500   0167FE  518E               	movf	(ICMP_Receive@icmpHdr+1)& (0+255),w,b
 20501   016800  6F89               	movwf	(??_ICMP_Receive+2)& (0+255),b
 20502   016802  6B8A               	clrf	(??_ICMP_Receive+3)& (0+255),b
 20503   016804  5187               	movf	??_ICMP_Receive& (0+255),w,b
 20504   016806  1189               	iorwf	(??_ICMP_Receive+2)& (0+255),w,b
 20505   016808  6F8B               	movwf	(??_ICMP_Receive+4)& (0+255),b
 20506   01680A  5188               	movf	(??_ICMP_Receive+1)& (0+255),w,b
 20507   01680C  118A               	iorwf	(??_ICMP_Receive+3)& (0+255),w,b
 20508   01680E  6F8C               	movwf	(??_ICMP_Receive+5)& (0+255),b
 20509                           
 20510                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 20511                           ; Switch size 1, requested type "simple"
 20512                           ; Number of cases is 2, Range of values is 3 to 8
 20513                           ; switch strategies available:
 20514                           ; Name         Instructions Cycles
 20515                           ; simple_byte            7     4 (average)
 20516                           ;	Chosen strategy is simple_byte
 20517   016810  518C               	movf	(??_ICMP_Receive+5)& (0+255),w,b
 20518   016812  0A03               	xorlw	3	; case 3
 20519   016814  B4D8               	btfsc	status,2,c
 20520   016816  D004               	goto	l16935
 20521   016818  0A0B               	xorlw	11	; case 8
 20522   01681A  A4D8               	btfss	status,2,c
 20523   01681C  0012               	return	
 20524   01681E  D005               	goto	l16937
 20525   016820                     l16935:
 20526                           
 20527                           ; BSR set to: 0
 20528                           ; Switch size 1, requested type "simple"
 20529                           ; Number of cases is 1, Range of values is 3 to 3
 20530                           ; switch strategies available:
 20531                           ; Name         Instructions Cycles
 20532                           ; simple_byte            4     3 (average)
 20533                           ;	Chosen strategy is simple_byte
 20534   016820  518B               	movf	(??_ICMP_Receive+4)& (0+255),w,b
 20535   016822  0A03               	xorlw	3	; case 3
 20536   016824  A4D8               	btfss	status,2,c
 20537   016826  0012               	return	
 20538   016828  D7C7               	goto	l13939
 20539   01682A                     l16937:
 20540                           
 20541                           ; BSR set to: 0
 20542                           ; Switch size 1, requested type "simple"
 20543                           ; Number of cases is 3, Range of values is 0 to 252
 20544                           ; switch strategies available:
 20545                           ; Name         Instructions Cycles
 20546                           ; simple_byte           10     6 (average)
 20547                           ;	Chosen strategy is simple_byte
 20548   01682A  518B               	movf	(??_ICMP_Receive+4)& (0+255),w,b
 20549   01682C  0A00               	xorlw	0	; case 0
 20550   01682E  B4D8               	btfsc	status,2,c
 20551   016830  D7BC               	goto	l13937
 20552   016832  0A2A               	xorlw	42	; case 42
 20553   016834  B4D8               	btfsc	status,2,c
 20554   016836  D7B9               	goto	l13937
 20555   016838  0AD6               	xorlw	214	; case 252
 20556   01683A  A4D8               	btfss	status,2,c
 20557   01683C  0012               	return	
 20558   01683E  D7B5               	goto	l13937
 20559   016840                     __end_of_ICMP_Receive:
 20560                           	callstack 0
 20561                           
 20562 ;; *************** function _ICMP_EchoReply *****************
 20563 ;; Defined at:
 20564 ;;		line 99 in file "mcc_generated_files/TCPIPLibrary/icmp.c"
 20565 ;; Parameters:    Size  Location     Type
 20566 ;;  ipv4Hdr         2   20[BANK0 ] PTR struct .
 20567 ;;		 -> ipv4Header(20), 
 20568 ;; Auto vars:     Size  Location     Type
 20569 ;;  ipv4PayloadL    2   34[BANK0 ] unsigned short 
 20570 ;;  icmp_cksm_st    2   30[BANK0 ] unsigned short 
 20571 ;;  cksm            2   32[BANK0 ] unsigned short 
 20572 ;;  sequence        2   28[BANK0 ] unsigned short 
 20573 ;;  identifier      2   26[BANK0 ] unsigned short 
 20574 ;;  ret             1   36[BANK0 ] enum E617
 20575 ;; Return value:  Size  Location     Type
 20576 ;;                  1    wreg      enum E617
 20577 ;; Registers used:
 20578 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20579 ;; Tracked objects:
 20580 ;;		On entry : 3F/0
 20581 ;;		On exit  : 3F/0
 20582 ;;		Unchanged: 0/0
 20583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20584 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20585 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20586 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20587 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20588 ;;Total ram usage:       17 bytes
 20589 ;; Hardware stack levels used: 1
 20590 ;; Hardware stack levels required when called: 9
 20591 ;; This function calls:
 20592 ;;		_ETH_Copy
 20593 ;;		_ETH_Insert
 20594 ;;		_ETH_Read16
 20595 ;;		_ETH_SaveRDPT
 20596 ;;		_ETH_TxComputeChecksum
 20597 ;;		_ETH_Write16
 20598 ;;		_IPV4_Send
 20599 ;;		_IPv4_Start
 20600 ;; This function is called by:
 20601 ;;		_ICMP_Receive
 20602 ;; This function uses a non-reentrant model
 20603 ;;
 20604                           
 20605                           	psect	text82
 20606   015BA2                     __ptext82:
 20607                           	callstack 0
 20608   015BA2                     _ICMP_EchoReply:
 20609                           	callstack 16
 20610                           
 20611                           ; BSR set to: 0
 20612                           ;mcc_generated_files/TCPIPLibrary/icmp.c: 102:     error_msg ret = ERROR;
 20613                           
 20614                           ;incstack = 0
 20615   015BA2  0E00               	movlw	0
 20616   015BA4  6F84               	movwf	ICMP_EchoReply@ret& (0+255),b
 20617                           
 20618                           ; BSR set to: 0
 20619                           ;mcc_generated_files/TCPIPLibrary/icmp.c: 103:     uint16_t identifier;;mcc_generated_fi
      +                          les/TCPIPLibrary/icmp.c: 104:     uint16_t sequence;;mcc_generated_files/TCPIPLibrary/ic
      +                          mp.c: 106:     identifier = ETH_Read16();
 20620   015BA6  EC96  F0BE         	call	_ETH_Read16	;wreg free
 20621   015BAA  C005  F07A         	movff	?_ETH_Read16,ICMP_EchoReply@identifier
 20622   015BAE  C006  F07B         	movff	?_ETH_Read16+1,ICMP_EchoReply@identifier+1
 20623                           
 20624                           ; BSR set to: 1
 20625                           ;mcc_generated_files/TCPIPLibrary/icmp.c: 107:     sequence = ETH_Read16();
 20626   015BB2  EC96  F0BE         	call	_ETH_Read16	;wreg free
 20627   015BB6  C005  F07C         	movff	?_ETH_Read16,ICMP_EchoReply@sequence
 20628   015BBA  C006  F07D         	movff	?_ETH_Read16+1,ICMP_EchoReply@sequence+1
 20629                           
 20630                           ; BSR set to: 1
 20631                           ;mcc_generated_files/TCPIPLibrary/icmp.c: 108:     ret = IPv4_Start(ipv4Hdr->srcIpAddres
      +                          s, ipv4Hdr->protocol);
 20632   015BBE  0100               	movlb	0	; () banked
 20633   015BC0  EE20 F00C          	lfsr	2,12
 20634   015BC4  5174               	movf	ICMP_EchoReply@ipv4Hdr& (0+255),w,b
 20635   015BC6  26D9               	addwf	fsr2l,f,c
 20636   015BC8  5175               	movf	(ICMP_EchoReply@ipv4Hdr+1)& (0+255),w,b
 20637   015BCA  22DA               	addwfc	fsr2h,f,c
 20638   015BCC  CFDE F060          	movff	postinc2,IPv4_Start@destAddress
 20639   015BD0  CFDE F061          	movff	postinc2,IPv4_Start@destAddress+1
 20640   015BD4  CFDE F062          	movff	postinc2,IPv4_Start@destAddress+2
 20641   015BD8  CFDE F063          	movff	postinc2,IPv4_Start@destAddress+3
 20642   015BDC  EE20 F009          	lfsr	2,9
 20643   015BE0  5174               	movf	ICMP_EchoReply@ipv4Hdr& (0+255),w,b
 20644   015BE2  26D9               	addwf	fsr2l,f,c
 20645   015BE4  5175               	movf	(ICMP_EchoReply@ipv4Hdr+1)& (0+255),w,b
 20646   015BE6  22DA               	addwfc	fsr2h,f,c
 20647   015BE8  50DF               	movf	indf2,w,c
 20648   015BEA  6F64               	movwf	IPv4_Start@protocol& (0+255),b
 20649   015BEC  EC62  F0A4         	call	_IPv4_Start	;wreg free
 20650   015BF0  6F84               	movwf	ICMP_EchoReply@ret& (0+255),b
 20651                           
 20652                           ; BSR set to: 0
 20653                           ;mcc_generated_files/TCPIPLibrary/icmp.c: 109:     if(ret == SUCCESS)
 20654   015BF2  0584               	decf	ICMP_EchoReply@ret& (0+255),w,b
 20655   015BF4  A4D8               	btfss	status,2,c
 20656   015BF6  D080               	goto	l13833
 20657                           
 20658                           ; BSR set to: 0
 20659                           ;mcc_generated_files/TCPIPLibrary/icmp.c: 110:     {;mcc_generated_files/TCPIPLibrary/ic
      +                          mp.c: 111:         uint16_t icmp_cksm_start;;mcc_generated_files/TCPIPLibrary/icmp.c: 11
      +                          2:         uint16_t ipv4PayloadLength = ipv4Hdr->length - sizeof(ipv4Header_t);
 20660   015BF8  EE20 F002          	lfsr	2,2
 20661   015BFC  5174               	movf	ICMP_EchoReply@ipv4Hdr& (0+255),w,b
 20662   015BFE  26D9               	addwf	fsr2l,f,c
 20663   015C00  5175               	movf	(ICMP_EchoReply@ipv4Hdr+1)& (0+255),w,b
 20664   015C02  22DA               	addwfc	fsr2h,f,c
 20665   015C04  CFDE F076          	movff	postinc2,??_ICMP_EchoReply
 20666   015C08  CFDD F077          	movff	postdec2,??_ICMP_EchoReply+1
 20667   015C0C  0EEC               	movlw	236
 20668   015C0E  2576               	addwf	??_ICMP_EchoReply& (0+255),w,b
 20669   015C10  6F82               	movwf	ICMP_EchoReply@ipv4PayloadLength& (0+255),b
 20670   015C12  0EFF               	movlw	255
 20671   015C14  2177               	addwfc	(??_ICMP_EchoReply+1)& (0+255),w,b
 20672   015C16  6F83               	movwf	(ICMP_EchoReply@ipv4PayloadLength+1)& (0+255),b
 20673                           
 20674                           ;mcc_generated_files/TCPIPLibrary/icmp.c: 114:         ipv4PayloadLength = ipv4Hdr->leng
      +                          th - (uint16_t)(ipv4Hdr->ihl << 2);
 20675   015C18  C074  FFD9         	movff	ICMP_EchoReply@ipv4Hdr,fsr2l
 20676   015C1C  C075  FFDA         	movff	ICMP_EchoReply@ipv4Hdr+1,fsr2h
 20677   015C20  50DF               	movf	223,w,c
 20678   015C22  0B0F               	andlw	15
 20679   015C24  6F76               	movwf	??_ICMP_EchoReply& (0+255),b
 20680   015C26  6B77               	clrf	(??_ICMP_EchoReply+1)& (0+255),b
 20681   015C28  90D8               	bcf	status,0,c
 20682   015C2A  3776               	rlcf	??_ICMP_EchoReply& (0+255),f,b
 20683   015C2C  3777               	rlcf	(??_ICMP_EchoReply+1)& (0+255),f,b
 20684   015C2E  90D8               	bcf	status,0,c
 20685   015C30  3776               	rlcf	??_ICMP_EchoReply& (0+255),f,b
 20686   015C32  3777               	rlcf	(??_ICMP_EchoReply+1)& (0+255),f,b
 20687   015C34  EE20 F002          	lfsr	2,2
 20688   015C38  5174               	movf	ICMP_EchoReply@ipv4Hdr& (0+255),w,b
 20689   015C3A  26D9               	addwf	fsr2l,f,c
 20690   015C3C  5175               	movf	(ICMP_EchoReply@ipv4Hdr+1)& (0+255),w,b
 20691   015C3E  22DA               	addwfc	fsr2h,f,c
 20692   015C40  CFDE F078          	movff	postinc2,??_ICMP_EchoReply+2
 20693   015C44  CFDD F079          	movff	postdec2,??_ICMP_EchoReply+3
 20694   015C48  5176               	movf	??_ICMP_EchoReply& (0+255),w,b
 20695   015C4A  5D78               	subwf	(??_ICMP_EchoReply+2)& (0+255),w,b
 20696   015C4C  6F82               	movwf	ICMP_EchoReply@ipv4PayloadLength& (0+255),b
 20697   015C4E  5177               	movf	(??_ICMP_EchoReply+1)& (0+255),w,b
 20698   015C50  5979               	subwfb	(??_ICMP_EchoReply+3)& (0+255),w,b
 20699   015C52  6F83               	movwf	(ICMP_EchoReply@ipv4PayloadLength+1)& (0+255),b
 20700                           
 20701                           ; BSR set to: 0
 20702                           ;mcc_generated_files/TCPIPLibrary/icmp.c: 116:         ETH_Write16(ECHO_REPLY);
 20703   015C54  0E00               	movlw	0
 20704   015C56  6E06               	movwf	(ETH_Write16@data+1)^0,c
 20705   015C58  0E00               	movlw	0
 20706   015C5A  6E05               	movwf	ETH_Write16@data^0,c
 20707   015C5C  EC7E  F0C1         	call	_ETH_Write16	;wreg free
 20708                           
 20709                           ;mcc_generated_files/TCPIPLibrary/icmp.c: 117:         ETH_Write16(0);
 20710   015C60  0E00               	movlw	0
 20711   015C62  6E06               	movwf	(ETH_Write16@data+1)^0,c
 20712   015C64  0E00               	movlw	0
 20713   015C66  6E05               	movwf	ETH_Write16@data^0,c
 20714   015C68  EC7E  F0C1         	call	_ETH_Write16	;wreg free
 20715                           
 20716                           ;mcc_generated_files/TCPIPLibrary/icmp.c: 119:         ETH_Write16(identifier);
 20717   015C6C  C07A  F005         	movff	ICMP_EchoReply@identifier,ETH_Write16@data
 20718   015C70  C07B  F006         	movff	ICMP_EchoReply@identifier+1,ETH_Write16@data+1
 20719   015C74  EC7E  F0C1         	call	_ETH_Write16	;wreg free
 20720                           
 20721                           ;mcc_generated_files/TCPIPLibrary/icmp.c: 120:         ETH_Write16(sequence);
 20722   015C78  C07C  F005         	movff	ICMP_EchoReply@sequence,ETH_Write16@data
 20723   015C7C  C07D  F006         	movff	ICMP_EchoReply@sequence+1,ETH_Write16@data+1
 20724   015C80  EC7E  F0C1         	call	_ETH_Write16	;wreg free
 20725                           
 20726                           ;mcc_generated_files/TCPIPLibrary/icmp.c: 121:         ETH_SaveRDPT();
 20727   015C84  ECC6  F0C1         	call	_ETH_SaveRDPT	;wreg free
 20728                           
 20729                           ;mcc_generated_files/TCPIPLibrary/icmp.c: 123:         ret = ETH_Copy(ipv4PayloadLength 
      +                          - sizeof(icmpHeader_t) - 4);
 20730   015C88  0EF8               	movlw	248
 20731   015C8A  0100               	movlb	0	; () banked
 20732   015C8C  2582               	addwf	ICMP_EchoReply@ipv4PayloadLength& (0+255),w,b
 20733   015C8E  6E0B               	movwf	ETH_Copy@len^0,c
 20734   015C90  0EFF               	movlw	255
 20735   015C92  2183               	addwfc	(ICMP_EchoReply@ipv4PayloadLength+1)& (0+255),w,b
 20736   015C94  6E0C               	movwf	(ETH_Copy@len+1)^0,c
 20737   015C96  ECFD  F0B5         	call	_ETH_Copy	;wreg free
 20738   015C9A  0100               	movlb	0	; () banked
 20739   015C9C  6F84               	movwf	ICMP_EchoReply@ret& (0+255),b
 20740                           
 20741                           ; BSR set to: 0
 20742                           ;mcc_generated_files/TCPIPLibrary/icmp.c: 124:         if(ret==SUCCESS)
 20743   015C9E  0584               	decf	ICMP_EchoReply@ret& (0+255),w,b
 20744   015CA0  A4D8               	btfss	status,2,c
 20745   015CA2  D02A               	goto	l13833
 20746                           
 20747                           ; BSR set to: 0
 20748                           ;mcc_generated_files/TCPIPLibrary/icmp.c: 128:             icmp_cksm_start = sizeof(ethe
      +                          rnetFrame_t) + sizeof(ipv4Header_t);
 20749   015CA4  0E00               	movlw	0
 20750   015CA6  6F7F               	movwf	(ICMP_EchoReply@icmp_cksm_start+1)& (0+255),b
 20751   015CA8  0E22               	movlw	34
 20752   015CAA  6F7E               	movwf	ICMP_EchoReply@icmp_cksm_start& (0+255),b
 20753                           
 20754                           ; BSR set to: 0
 20755                           ;mcc_generated_files/TCPIPLibrary/icmp.c: 129:             cksm = ETH_TxComputeChecksum(
      +                          icmp_cksm_start, ipv4PayloadLength, 0);
 20756   015CAC  0E00               	movlw	0
 20757   015CAE  6E14               	movwf	(ETH_TxComputeChecksum@position+1)^0,c
 20758   015CB0  0E22               	movlw	34
 20759   015CB2  6E13               	movwf	ETH_TxComputeChecksum@position^0,c
 20760   015CB4  C082  F015         	movff	ICMP_EchoReply@ipv4PayloadLength,ETH_TxComputeChecksum@len
 20761   015CB8  C083  F016         	movff	ICMP_EchoReply@ipv4PayloadLength+1,ETH_TxComputeChecksum@len+1
 20762   015CBC  0E00               	movlw	0
 20763   015CBE  6E18               	movwf	(ETH_TxComputeChecksum@seed+1)^0,c
 20764   015CC0  0E00               	movlw	0
 20765   015CC2  6E17               	movwf	ETH_TxComputeChecksum@seed^0,c
 20766   015CC4  EC78  F0B9         	call	_ETH_TxComputeChecksum	;wreg free
 20767   015CC8  C013  F080         	movff	?_ETH_TxComputeChecksum,ICMP_EchoReply@cksm
 20768   015CCC  C014  F081         	movff	?_ETH_TxComputeChecksum+1,ICMP_EchoReply@cksm+1
 20769                           
 20770                           ;mcc_generated_files/TCPIPLibrary/icmp.c: 130:             ETH_Insert((char *)&cksm,size
      +                          of(cksm),sizeof(ethernetFrame_t) + sizeof(ipv4Header_t) + ((size_t)(((char*)&((icmpHeade
      +                          r_t *)1)->checksum)-1)));
 20771   015CD0  0E80               	movlw	low ICMP_EchoReply@cksm
 20772   015CD2  6E05               	movwf	ETH_Insert@data^0,c
 20773   015CD4  0E00               	movlw	0
 20774   015CD6  6E07               	movwf	(ETH_Insert@len+1)^0,c
 20775   015CD8  0E02               	movlw	2
 20776   015CDA  6E06               	movwf	ETH_Insert@len^0,c
 20777   015CDC  0E00               	movlw	0
 20778   015CDE  6E09               	movwf	(ETH_Insert@offset+1)^0,c
 20779   015CE0  0E24               	movlw	36
 20780   015CE2  6E08               	movwf	ETH_Insert@offset^0,c
 20781   015CE4  EC82  F0BB         	call	_ETH_Insert	;wreg free
 20782                           
 20783                           ;mcc_generated_files/TCPIPLibrary/icmp.c: 131:             ret = IPV4_Send(ipv4PayloadLe
      +                          ngth);
 20784   015CE8  C082  F021         	movff	ICMP_EchoReply@ipv4PayloadLength,IPV4_Send@payloadLength
 20785   015CEC  C083  F022         	movff	ICMP_EchoReply@ipv4PayloadLength+1,IPV4_Send@payloadLength+1
 20786   015CF0  ECFB  F0B8         	call	_IPV4_Send	;wreg free
 20787   015CF4  0100               	movlb	0	; () banked
 20788   015CF6  6F84               	movwf	ICMP_EchoReply@ret& (0+255),b
 20789   015CF8                     l13833:
 20790                           
 20791                           ; BSR set to: 0
 20792                           ;mcc_generated_files/TCPIPLibrary/icmp.c: 134:     return ret;
 20793   015CF8  5184               	movf	ICMP_EchoReply@ret& (0+255),w,b
 20794                           
 20795                           ; BSR set to: 0
 20796   015CFA  0012               	return		;funcret
 20797   015CFC                     __end_of_ICMP_EchoReply:
 20798                           	callstack 0
 20799                           
 20800 ;; *************** function _IPv4_Start *****************
 20801 ;; Defined at:
 20802 ;;		line 207 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
 20803 ;; Parameters:    Size  Location     Type
 20804 ;;  destAddress     4    0[BANK0 ] unsigned long 
 20805 ;;  protocol        1    4[BANK0 ] enum E474
 20806 ;; Auto vars:     Size  Location     Type
 20807 ;;  targetAddres    4   13[BANK0 ] unsigned long 
 20808 ;;  destMacAddre    2   17[BANK0 ] PTR const struct .
 20809 ;;		 -> arpMap$macAddress(6), arpMap(104), broadcastMAC(6), NULL(0), 
 20810 ;;  ret             1   19[BANK0 ] enum E617
 20811 ;; Return value:  Size  Location     Type
 20812 ;;                  1    wreg      enum E617
 20813 ;; Registers used:
 20814 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20815 ;; Tracked objects:
 20816 ;;		On entry : 3F/0
 20817 ;;		On exit  : 3F/0
 20818 ;;		Unchanged: 0/0
 20819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20820 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20821 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20822 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20823 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20824 ;;Total ram usage:       20 bytes
 20825 ;; Hardware stack levels used: 1
 20826 ;; Hardware stack levels required when called: 8
 20827 ;; This function calls:
 20828 ;;		_ARPV4_Lookup
 20829 ;;		_ARPV4_Request
 20830 ;;		_ETH_Write16
 20831 ;;		_ETH_Write32
 20832 ;;		_ETH_Write8
 20833 ;;		_ETH_WriteStart
 20834 ;; This function is called by:
 20835 ;;		_ICMP_EchoReply
 20836 ;;		_ICMP_PortUnreachable
 20837 ;;		_UDP_Start
 20838 ;; This function uses a non-reentrant model
 20839 ;;
 20840                           
 20841                           	psect	text83
 20842   0148C4                     __ptext83:
 20843                           	callstack 0
 20844   0148C4                     _IPv4_Start:
 20845                           	callstack 20
 20846                           
 20847                           ; BSR set to: 0
 20848                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 207: error_msg IPv4_Start(uint32_t destAddress
      +                          , ipProtocolNumbers protocol);mcc_generated_files/TCPIPLibrary/ipv4.c: 208: {;mcc_genera
      +                          ted_files/TCPIPLibrary/ipv4.c: 209:     error_msg ret = ERROR;
 20849                           
 20850                           ; BSR set to: 0
 20851                           ;incstack = 0
 20852   0148C4  0E00               	movlw	0
 20853   0148C6  6F73               	movwf	IPv4_Start@ret& (0+255),b
 20854                           
 20855                           ; BSR set to: 0
 20856                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 211:     const mac48Address_t *destMacAddress;
      +                          ;mcc_generated_files/TCPIPLibrary/ipv4.c: 212:     uint32_t targetAddress;;mcc_generated
      +                          _files/TCPIPLibrary/ipv4.c: 215:     if((((ip_database_info.ipv4_myAddress) != 0) || (pr
      +                          otocol == UDP_TCPIP))
 20857   0148C8  0101               	movlb	1	; () banked
 20858   0148CA  5100               	movf	_ip_database_info& (0+255),w,b
 20859   0148CC  1101               	iorwf	(_ip_database_info+1)& (0+255),w,b
 20860   0148CE  1102               	iorwf	(_ip_database_info+2)& (0+255),w,b
 20861   0148D0  1103               	iorwf	(_ip_database_info+3)& (0+255),w,b
 20862   0148D2  A4D8               	btfss	status,2,c
 20863   0148D4  D005               	goto	u11540
 20864                           
 20865                           ; BSR set to: 1
 20866   0148D6  0E11               	movlw	17
 20867   0148D8  0100               	movlb	0	; () banked
 20868   0148DA  1964               	xorwf	IPv4_Start@protocol& (0+255),w,b
 20869   0148DC  A4D8               	btfss	status,2,c
 20870   0148DE  D0AF               	goto	l13561
 20871   0148E0                     u11540:
 20872   0148E0  0101               	movlb	1	; () banked
 20873   0148E2  0500               	decf	_ip_database_info& (0+255),w,b
 20874   0148E4  E106               	bnz	u11550
 20875   0148E6  0E7F               	movlw	127
 20876   0148E8  1903               	xorwf	(_ip_database_info+3)& (0+255),w,b
 20877   0148EA  1101               	iorwf	(_ip_database_info+1)& (0+255),w,b
 20878   0148EC  1102               	iorwf	(_ip_database_info+2)& (0+255),w,b
 20879   0148EE  B4D8               	btfsc	status,2,c
 20880   0148F0  D0A6               	goto	l13561
 20881   0148F2                     u11550:
 20882                           
 20883                           ; BSR set to: 1
 20884                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 217:     {;mcc_generated_files/TCPIPLibrary/ip
      +                          v4.c: 218:         if(((destAddress == 0xFFFFFFFF)
 20885   0148F2  0100               	movlb	0	; () banked
 20886   0148F4  2960               	incf	IPv4_Start@destAddress& (0+255),w,b
 20887   0148F6  E107               	bnz	u11560
 20888   0148F8  2961               	incf	(IPv4_Start@destAddress+1)& (0+255),w,b
 20889   0148FA  E105               	bnz	u11560
 20890   0148FC  2962               	incf	(IPv4_Start@destAddress+2)& (0+255),w,b
 20891   0148FE  E103               	bnz	u11560
 20892   014900  2963               	incf	(IPv4_Start@destAddress+3)& (0+255),w,b
 20893   014902  B4D8               	btfsc	status,2,c
 20894   014904  D09F               	goto	l13565
 20895   014906                     u11560:
 20896                           
 20897                           ; BSR set to: 0
 20898   014906  0E00               	movlw	0
 20899   014908  1160               	iorwf	IPv4_Start@destAddress& (0+255),w,b
 20900   01490A  6F65               	movwf	??_IPv4_Start& (0+255),b
 20901   01490C  0E00               	movlw	0
 20902   01490E  1161               	iorwf	(IPv4_Start@destAddress+1)& (0+255),w,b
 20903   014910  6F66               	movwf	(??_IPv4_Start+1)& (0+255),b
 20904   014912  0E00               	movlw	0
 20905   014914  1162               	iorwf	(IPv4_Start@destAddress+2)& (0+255),w,b
 20906   014916  6F67               	movwf	(??_IPv4_Start+2)& (0+255),b
 20907   014918  0EFF               	movlw	255
 20908   01491A  1163               	iorwf	(IPv4_Start@destAddress+3)& (0+255),w,b
 20909   01491C  6F68               	movwf	(??_IPv4_Start+3)& (0+255),b
 20910   01491E  2965               	incf	??_IPv4_Start& (0+255),w,b
 20911   014920  E107               	bnz	u11570
 20912   014922  2966               	incf	(??_IPv4_Start+1)& (0+255),w,b
 20913   014924  E105               	bnz	u11570
 20914   014926  2967               	incf	(??_IPv4_Start+2)& (0+255),w,b
 20915   014928  E103               	bnz	u11570
 20916   01492A  2968               	incf	(??_IPv4_Start+3)& (0+255),w,b
 20917   01492C  B4D8               	btfsc	status,2,c
 20918   01492E  D08A               	goto	l13565
 20919   014930                     u11570:
 20920                           
 20921                           ; BSR set to: 0
 20922   014930  0E00               	movlw	0
 20923   014932  1160               	iorwf	IPv4_Start@destAddress& (0+255),w,b
 20924   014934  6F65               	movwf	??_IPv4_Start& (0+255),b
 20925   014936  0E00               	movlw	0
 20926   014938  1161               	iorwf	(IPv4_Start@destAddress+1)& (0+255),w,b
 20927   01493A  6F66               	movwf	(??_IPv4_Start+1)& (0+255),b
 20928   01493C  0EFF               	movlw	255
 20929   01493E  1162               	iorwf	(IPv4_Start@destAddress+2)& (0+255),w,b
 20930   014940  6F67               	movwf	(??_IPv4_Start+2)& (0+255),b
 20931   014942  0EFF               	movlw	255
 20932   014944  1163               	iorwf	(IPv4_Start@destAddress+3)& (0+255),w,b
 20933   014946  6F68               	movwf	(??_IPv4_Start+3)& (0+255),b
 20934   014948  2965               	incf	??_IPv4_Start& (0+255),w,b
 20935   01494A  E107               	bnz	u11580
 20936   01494C  2966               	incf	(??_IPv4_Start+1)& (0+255),w,b
 20937   01494E  E105               	bnz	u11580
 20938   014950  2967               	incf	(??_IPv4_Start+2)& (0+255),w,b
 20939   014952  E103               	bnz	u11580
 20940   014954  2968               	incf	(??_IPv4_Start+3)& (0+255),w,b
 20941   014956  B4D8               	btfsc	status,2,c
 20942   014958  D075               	goto	l13565
 20943   01495A                     u11580:
 20944                           
 20945                           ; BSR set to: 0
 20946   01495A  0E00               	movlw	0
 20947   01495C  1160               	iorwf	IPv4_Start@destAddress& (0+255),w,b
 20948   01495E  6F65               	movwf	??_IPv4_Start& (0+255),b
 20949   014960  0EFF               	movlw	255
 20950   014962  1161               	iorwf	(IPv4_Start@destAddress+1)& (0+255),w,b
 20951   014964  6F66               	movwf	(??_IPv4_Start+1)& (0+255),b
 20952   014966  0EFF               	movlw	255
 20953   014968  1162               	iorwf	(IPv4_Start@destAddress+2)& (0+255),w,b
 20954   01496A  6F67               	movwf	(??_IPv4_Start+2)& (0+255),b
 20955   01496C  0EFF               	movlw	255
 20956   01496E  1163               	iorwf	(IPv4_Start@destAddress+3)& (0+255),w,b
 20957   014970  6F68               	movwf	(??_IPv4_Start+3)& (0+255),b
 20958   014972  2965               	incf	??_IPv4_Start& (0+255),w,b
 20959   014974  E107               	bnz	u11590
 20960   014976  2966               	incf	(??_IPv4_Start+1)& (0+255),w,b
 20961   014978  E105               	bnz	u11590
 20962   01497A  2967               	incf	(??_IPv4_Start+2)& (0+255),w,b
 20963   01497C  E103               	bnz	u11590
 20964   01497E  2968               	incf	(??_IPv4_Start+3)& (0+255),w,b
 20965   014980  B4D8               	btfsc	status,2,c
 20966   014982  D060               	goto	l13565
 20967   014984                     u11590:
 20968                           
 20969                           ; BSR set to: 0
 20970                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 222:         {;mcc_generated_files/TCPIPLibrar
      +                          y/ipv4.c: 223:             if( ((destAddress ^ (ip_database_info.ipv4_myAddress)) & (ip_
      +                          database_info.ipv4_subnetMask)) == 0)
 20971   014984  5160               	movf	IPv4_Start@destAddress& (0+255),w,b
 20972   014986  0101               	movlb	1	; () banked
 20973   014988  1900               	xorwf	_ip_database_info& (0+255),w,b
 20974   01498A  0100               	movlb	0	; () banked
 20975   01498C  6F65               	movwf	??_IPv4_Start& (0+255),b
 20976   01498E  5161               	movf	(IPv4_Start@destAddress+1)& (0+255),w,b
 20977   014990  0101               	movlb	1	; () banked
 20978   014992  1901               	xorwf	(_ip_database_info+1)& (0+255),w,b
 20979   014994  0100               	movlb	0	; () banked
 20980   014996  6F66               	movwf	(??_IPv4_Start+1)& (0+255),b
 20981   014998  5162               	movf	(IPv4_Start@destAddress+2)& (0+255),w,b
 20982   01499A  0101               	movlb	1	; () banked
 20983   01499C  1902               	xorwf	(_ip_database_info+2)& (0+255),w,b
 20984   01499E  0100               	movlb	0	; () banked
 20985   0149A0  6F67               	movwf	(??_IPv4_Start+2)& (0+255),b
 20986   0149A2  5163               	movf	(IPv4_Start@destAddress+3)& (0+255),w,b
 20987   0149A4  0101               	movlb	1	; () banked
 20988   0149A6  1903               	xorwf	(_ip_database_info+3)& (0+255),w,b
 20989   0149A8  0100               	movlb	0	; () banked
 20990   0149AA  6F68               	movwf	(??_IPv4_Start+3)& (0+255),b
 20991   0149AC  0101               	movlb	1	; () banked
 20992   0149AE  510C               	movf	(_ip_database_info+12)& (0+255),w,b
 20993   0149B0  0100               	movlb	0	; () banked
 20994   0149B2  1565               	andwf	??_IPv4_Start& (0+255),w,b
 20995   0149B4  6F69               	movwf	(??_IPv4_Start+4)& (0+255),b
 20996   0149B6  0101               	movlb	1	; () banked
 20997   0149B8  510D               	movf	(_ip_database_info+13)& (0+255),w,b
 20998   0149BA  0100               	movlb	0	; () banked
 20999   0149BC  1566               	andwf	(??_IPv4_Start+1)& (0+255),w,b
 21000   0149BE  6F6A               	movwf	(??_IPv4_Start+5)& (0+255),b
 21001   0149C0  0101               	movlb	1	; () banked
 21002   0149C2  510E               	movf	(_ip_database_info+14)& (0+255),w,b
 21003   0149C4  0100               	movlb	0	; () banked
 21004   0149C6  1567               	andwf	(??_IPv4_Start+2)& (0+255),w,b
 21005   0149C8  6F6B               	movwf	(??_IPv4_Start+6)& (0+255),b
 21006   0149CA  0101               	movlb	1	; () banked
 21007   0149CC  510F               	movf	(_ip_database_info+15)& (0+255),w,b
 21008   0149CE  0100               	movlb	0	; () banked
 21009   0149D0  1568               	andwf	(??_IPv4_Start+3)& (0+255),w,b
 21010   0149D2  6F6C               	movwf	(??_IPv4_Start+7)& (0+255),b
 21011   0149D4  5169               	movf	(??_IPv4_Start+4)& (0+255),w,b
 21012   0149D6  116A               	iorwf	(??_IPv4_Start+5)& (0+255),w,b
 21013   0149D8  116B               	iorwf	(??_IPv4_Start+6)& (0+255),w,b
 21014   0149DA  116C               	iorwf	(??_IPv4_Start+7)& (0+255),w,b
 21015   0149DC  A4D8               	btfss	status,2,c
 21016   0149DE  D009               	goto	l2690
 21017                           
 21018                           ; BSR set to: 0
 21019                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 224:             {;mcc_generated_files/TCPIPLi
      +                          brary/ipv4.c: 225:                 targetAddress = destAddress;
 21020   0149E0  C060  F06D         	movff	IPv4_Start@destAddress,IPv4_Start@targetAddress
 21021   0149E4  C061  F06E         	movff	IPv4_Start@destAddress+1,IPv4_Start@targetAddress+1
 21022   0149E8  C062  F06F         	movff	IPv4_Start@destAddress+2,IPv4_Start@targetAddress+2
 21023   0149EC  C063  F070         	movff	IPv4_Start@destAddress+3,IPv4_Start@targetAddress+3
 21024                           
 21025                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 226:             }
 21026   0149F0  D008               	goto	l13555
 21027   0149F2                     l2690:
 21028                           
 21029                           ; BSR set to: 0
 21030                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 228:             {;mcc_generated_files/TCPIPLi
      +                          brary/ipv4.c: 229:                 targetAddress = (ip_database_info.ipv4_router);
 21031   0149F2  C110  F06D         	movff	_ip_database_info+16,IPv4_Start@targetAddress
 21032   0149F6  C111  F06E         	movff	_ip_database_info+17,IPv4_Start@targetAddress+1
 21033   0149FA  C112  F06F         	movff	_ip_database_info+18,IPv4_Start@targetAddress+2
 21034   0149FE  C113  F070         	movff	_ip_database_info+19,IPv4_Start@targetAddress+3
 21035   014A02                     l13555:
 21036                           
 21037                           ; BSR set to: 0
 21038                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 231:             destMacAddress= ARPV4_Lookup(
      +                          targetAddress);
 21039   014A02  C06D  F005         	movff	IPv4_Start@targetAddress,ARPV4_Lookup@ip_address
 21040   014A06  C06E  F006         	movff	IPv4_Start@targetAddress+1,ARPV4_Lookup@ip_address+1
 21041   014A0A  C06F  F007         	movff	IPv4_Start@targetAddress+2,ARPV4_Lookup@ip_address+2
 21042   014A0E  C070  F008         	movff	IPv4_Start@targetAddress+3,ARPV4_Lookup@ip_address+3
 21043   014A12  EC36  F0BC         	call	_ARPV4_Lookup	;wreg free
 21044   014A16  C005  F071         	movff	?_ARPV4_Lookup,IPv4_Start@destMacAddress
 21045   014A1A  C006  F072         	movff	?_ARPV4_Lookup+1,IPv4_Start@destMacAddress+1
 21046                           
 21047                           ; BSR set to: 0
 21048                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 232:             if(destMacAddress == 0)
 21049   014A1E  5171               	movf	IPv4_Start@destMacAddress& (0+255),w,b
 21050   014A20  1172               	iorwf	(IPv4_Start@destMacAddress+1)& (0+255),w,b
 21051   014A22  A4D8               	btfss	status,2,c
 21052   014A24  D013               	goto	l13567
 21053                           
 21054                           ; BSR set to: 0
 21055                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 233:             {;mcc_generated_files/TCPIPLi
      +                          brary/ipv4.c: 234:                 ret = ARPV4_Request(targetAddress);
 21056   014A26  C06D  F01F         	movff	IPv4_Start@targetAddress,ARPV4_Request@destAddress
 21057   014A2A  C06E  F020         	movff	IPv4_Start@targetAddress+1,ARPV4_Request@destAddress+1
 21058   014A2E  C06F  F021         	movff	IPv4_Start@targetAddress+2,ARPV4_Request@destAddress+2
 21059   014A32  C070  F022         	movff	IPv4_Start@targetAddress+3,ARPV4_Request@destAddress+3
 21060   014A36  EC81  F0A6         	call	_ARPV4_Request	;wreg free
 21061   014A3A  0100               	movlb	0	; () banked
 21062   014A3C  6F73               	movwf	IPv4_Start@ret& (0+255),b
 21063   014A3E                     l13561:
 21064                           
 21065                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 235:                 return ret;
 21066   014A3E  0100               	movlb	0	; () banked
 21067   014A40  5173               	movf	IPv4_Start@ret& (0+255),w,b
 21068   014A42  0012               	return	
 21069   014A44                     l13565:
 21070                           
 21071                           ; BSR set to: 0
 21072                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 239:         {;mcc_generated_files/TCPIPLibrar
      +                          y/ipv4.c: 240:             destMacAddress = &broadcastMAC;
 21073   014A44  0E05               	movlw	low _broadcastMAC
 21074   014A46  6F71               	movwf	IPv4_Start@destMacAddress& (0+255),b
 21075   014A48  0EFE               	movlw	high _broadcastMAC
 21076   014A4A  6F72               	movwf	(IPv4_Start@destMacAddress+1)& (0+255),b
 21077   014A4C                     l13567:
 21078                           
 21079                           ; BSR set to: 0
 21080                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 242:         ret = ETH_WriteStart(destMacAddre
      +                          ss, 0x0800);
 21081   014A4C  C071  F017         	movff	IPv4_Start@destMacAddress,ETH_WriteStart@dest_mac
 21082   014A50  C072  F018         	movff	IPv4_Start@destMacAddress+1,ETH_WriteStart@dest_mac+1
 21083   014A54  0E08               	movlw	8
 21084   014A56  6E1A               	movwf	(ETH_WriteStart@type+1)^0,c
 21085   014A58  0E00               	movlw	0
 21086   014A5A  6E19               	movwf	ETH_WriteStart@type^0,c
 21087   014A5C  EC7F  F0A5         	call	_ETH_WriteStart	;wreg free
 21088   014A60  0100               	movlb	0	; () banked
 21089   014A62  6F73               	movwf	IPv4_Start@ret& (0+255),b
 21090                           
 21091                           ; BSR set to: 0
 21092                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 243:         if(ret == SUCCESS)
 21093   014A64  0573               	decf	IPv4_Start@ret& (0+255),w,b
 21094   014A66  A4D8               	btfss	status,2,c
 21095   014A68  D7EA               	goto	l13561
 21096                           
 21097                           ; BSR set to: 0
 21098                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 244:         {;mcc_generated_files/TCPIPLibrar
      +                          y/ipv4.c: 245:             ETH_Write16(0x4500);
 21099   014A6A  0E45               	movlw	69
 21100   014A6C  6E06               	movwf	(ETH_Write16@data+1)^0,c
 21101   014A6E  0E00               	movlw	0
 21102   014A70  6E05               	movwf	ETH_Write16@data^0,c
 21103   014A72  EC7E  F0C1         	call	_ETH_Write16	;wreg free
 21104                           
 21105                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 246:             ETH_Write16(0);
 21106   014A76  0E00               	movlw	0
 21107   014A78  6E06               	movwf	(ETH_Write16@data+1)^0,c
 21108   014A7A  0E00               	movlw	0
 21109   014A7C  6E05               	movwf	ETH_Write16@data^0,c
 21110   014A7E  EC7E  F0C1         	call	_ETH_Write16	;wreg free
 21111                           
 21112                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 247:             ETH_Write32(0xAA554000);
 21113   014A82  0E00               	movlw	0
 21114   014A84  6E05               	movwf	ETH_Write32@data^0,c
 21115   014A86  0E40               	movlw	64
 21116   014A88  6E06               	movwf	(ETH_Write32@data+1)^0,c
 21117   014A8A  0E55               	movlw	85
 21118   014A8C  6E07               	movwf	(ETH_Write32@data+2)^0,c
 21119   014A8E  0EAA               	movlw	170
 21120   014A90  6E08               	movwf	(ETH_Write32@data+3)^0,c
 21121   014A92  EC03  F0C1         	call	_ETH_Write32	;wreg free
 21122                           
 21123                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 248:             ETH_Write8(64u);
 21124   014A96  0E40               	movlw	64
 21125   014A98  ECC1  F0C1         	call	_ETH_Write8
 21126                           
 21127                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 249:             ETH_Write8(protocol);
 21128   014A9C  0100               	movlb	0	; () banked
 21129   014A9E  5164               	movf	IPv4_Start@protocol& (0+255),w,b
 21130   014AA0  ECC1  F0C1         	call	_ETH_Write8
 21131                           
 21132                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 250:             ETH_Write16(0);
 21133   014AA4  0E00               	movlw	0
 21134   014AA6  6E06               	movwf	(ETH_Write16@data+1)^0,c
 21135   014AA8  0E00               	movlw	0
 21136   014AAA  6E05               	movwf	ETH_Write16@data^0,c
 21137   014AAC  EC7E  F0C1         	call	_ETH_Write16	;wreg free
 21138                           
 21139                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 251:             ETH_Write32((ip_database_info
      +                          .ipv4_myAddress));
 21140   014AB0  C100  F005         	movff	_ip_database_info,ETH_Write32@data
 21141   014AB4  C101  F006         	movff	_ip_database_info+1,ETH_Write32@data+1
 21142   014AB8  C102  F007         	movff	_ip_database_info+2,ETH_Write32@data+2
 21143   014ABC  C103  F008         	movff	_ip_database_info+3,ETH_Write32@data+3
 21144   014AC0  EC03  F0C1         	call	_ETH_Write32	;wreg free
 21145                           
 21146                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 252:             ETH_Write32(destAddress);
 21147   014AC4  C060  F005         	movff	IPv4_Start@destAddress,ETH_Write32@data
 21148   014AC8  C061  F006         	movff	IPv4_Start@destAddress+1,ETH_Write32@data+1
 21149   014ACC  C062  F007         	movff	IPv4_Start@destAddress+2,ETH_Write32@data+2
 21150   014AD0  C063  F008         	movff	IPv4_Start@destAddress+3,ETH_Write32@data+3
 21151   014AD4  EC03  F0C1         	call	_ETH_Write32	;wreg free
 21152                           
 21153                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 255:             ipv4Header.srcIpAddress = (ip
      +                          _database_info.ipv4_myAddress);
 21154   014AD8  C100  F17A         	movff	_ip_database_info,_ipv4Header+12
 21155   014ADC  C101  F17B         	movff	_ip_database_info+1,_ipv4Header+13
 21156   014AE0  C102  F17C         	movff	_ip_database_info+2,_ipv4Header+14
 21157   014AE4  C103  F17D         	movff	_ip_database_info+3,_ipv4Header+15
 21158                           
 21159                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 256:             ipv4Header.dstIpAddress = des
      +                          tAddress;
 21160   014AE8  C060  F17E         	movff	IPv4_Start@destAddress,_ipv4Header+16
 21161   014AEC  C061  F17F         	movff	IPv4_Start@destAddress+1,_ipv4Header+17
 21162   014AF0  C062  F180         	movff	IPv4_Start@destAddress+2,_ipv4Header+18
 21163   014AF4  C063  F181         	movff	IPv4_Start@destAddress+3,_ipv4Header+19
 21164                           
 21165                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 257:             ipv4Header.protocol = protoco
      +                          l;
 21166   014AF8  C064  F177         	movff	IPv4_Start@protocol,_ipv4Header+9
 21167   014AFC  D7A0               	goto	l13561
 21168   014AFE                     __end_of_IPv4_Start:
 21169                           	callstack 0
 21170                           
 21171 ;; *************** function _ETH_Write8 *****************
 21172 ;; Defined at:
 21173 ;;		line 527 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 21174 ;; Parameters:    Size  Location     Type
 21175 ;;  data            1    wreg     unsigned char 
 21176 ;; Auto vars:     Size  Location     Type
 21177 ;;  data            1    4[COMRAM] unsigned char 
 21178 ;; Return value:  Size  Location     Type
 21179 ;;                  1    wreg      void 
 21180 ;; Registers used:
 21181 ;;		wreg, status,2, cstack
 21182 ;; Tracked objects:
 21183 ;;		On entry : 0/0
 21184 ;;		On exit  : 0/0
 21185 ;;		Unchanged: 0/0
 21186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21188 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21190 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21191 ;;Total ram usage:        1 bytes
 21192 ;; Hardware stack levels used: 1
 21193 ;; Hardware stack levels required when called: 5
 21194 ;; This function calls:
 21195 ;;		_ETH_EdataWrite
 21196 ;; This function is called by:
 21197 ;;		_IPv4_Start
 21198 ;; This function uses a non-reentrant model
 21199 ;;
 21200                           
 21201                           	psect	text84
 21202   018382                     __ptext84:
 21203                           	callstack 0
 21204   018382                     _ETH_Write8:
 21205                           	callstack 22
 21206                           
 21207                           ; BSR set to: 0
 21208                           ;incstack = 0
 21209                           ;ETH_Write8@data stored from wreg
 21210   018382  6E05               	movwf	ETH_Write8@data^0,c
 21211                           
 21212                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 527: void ETH_Write8(uint8_t data);
      +                          mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 528: {;mcc_generated_files/TCPIPLibr
      +                          ary/ETHxxJ6x_driver.c: 529:     ETH_EdataWrite(data);
 21213   018384  5005               	movf	ETH_Write8@data^0,w,c
 21214   018386  ECD8  F0C1         	call	_ETH_EdataWrite
 21215   01838A  0012               	return		;funcret
 21216   01838C                     __end_of_ETH_Write8:
 21217                           	callstack 0
 21218                           
 21219 ;; *************** function _ETH_Write32 *****************
 21220 ;; Defined at:
 21221 ;;		line 557 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 21222 ;; Parameters:    Size  Location     Type
 21223 ;;  data            4    4[COMRAM] unsigned long 
 21224 ;; Auto vars:     Size  Location     Type
 21225 ;;		None
 21226 ;; Return value:  Size  Location     Type
 21227 ;;                  1    wreg      void 
 21228 ;; Registers used:
 21229 ;;		wreg, status,2, cstack
 21230 ;; Tracked objects:
 21231 ;;		On entry : 0/0
 21232 ;;		On exit  : 0/0
 21233 ;;		Unchanged: 0/0
 21234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21235 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21238 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21239 ;;Total ram usage:        4 bytes
 21240 ;; Hardware stack levels used: 1
 21241 ;; Hardware stack levels required when called: 5
 21242 ;; This function calls:
 21243 ;;		_ETH_EdataWrite
 21244 ;; This function is called by:
 21245 ;;		_ICMP_PortUnreachable
 21246 ;;		_IPv4_Start
 21247 ;; This function uses a non-reentrant model
 21248 ;;
 21249                           
 21250                           	psect	text85
 21251   018206                     __ptext85:
 21252                           	callstack 0
 21253   018206                     _ETH_Write32:
 21254                           	callstack 22
 21255                           
 21256                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 557: void ETH_Write32(uint32_t data
      +                          );mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 558: {;mcc_generated_files/TCPIPLi
      +                          brary/ETHxxJ6x_driver.c: 559:     ETH_EdataWrite(data >> 24);
 21257                           
 21258                           ;incstack = 0
 21259   018206  5008               	movf	(ETH_Write32@data+3)^0,w,c
 21260   018208  ECD8  F0C1         	call	_ETH_EdataWrite
 21261                           
 21262                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 560:     ETH_EdataWrite(data >> 16)
      +                          ;
 21263   01820C  5007               	movf	(ETH_Write32@data+2)^0,w,c
 21264   01820E  ECD8  F0C1         	call	_ETH_EdataWrite
 21265                           
 21266                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 561:     ETH_EdataWrite(data >> 8);
 21267   018212  5006               	movf	(ETH_Write32@data+1)^0,w,c
 21268   018214  ECD8  F0C1         	call	_ETH_EdataWrite
 21269                           
 21270                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 562:     ETH_EdataWrite(data);
 21271   018218  5005               	movf	ETH_Write32@data^0,w,c
 21272   01821A  ECD8  F0C1         	call	_ETH_EdataWrite
 21273   01821E  0012               	return		;funcret
 21274   018220                     __end_of_ETH_Write32:
 21275                           	callstack 0
 21276                           
 21277 ;; *************** function _ETH_Write16 *****************
 21278 ;; Defined at:
 21279 ;;		line 536 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 21280 ;; Parameters:    Size  Location     Type
 21281 ;;  data            2    4[COMRAM] unsigned short 
 21282 ;; Auto vars:     Size  Location     Type
 21283 ;;		None
 21284 ;; Return value:  Size  Location     Type
 21285 ;;                  1    wreg      void 
 21286 ;; Registers used:
 21287 ;;		wreg, status,2, cstack
 21288 ;; Tracked objects:
 21289 ;;		On entry : 0/0
 21290 ;;		On exit  : 0/0
 21291 ;;		Unchanged: 0/0
 21292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21293 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21296 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21297 ;;Total ram usage:        2 bytes
 21298 ;; Hardware stack levels used: 1
 21299 ;; Hardware stack levels required when called: 5
 21300 ;; This function calls:
 21301 ;;		_ETH_EdataWrite
 21302 ;; This function is called by:
 21303 ;;		_ICMP_EchoReply
 21304 ;;		_ICMP_PortUnreachable
 21305 ;;		_UDP_Start
 21306 ;;		_IPv4_Start
 21307 ;; This function uses a non-reentrant model
 21308 ;;
 21309                           
 21310                           	psect	text86
 21311   0182FC                     __ptext86:
 21312                           	callstack 0
 21313   0182FC                     _ETH_Write16:
 21314                           	callstack 22
 21315                           
 21316                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 536: void ETH_Write16(uint16_t data
      +                          );mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 537: {;mcc_generated_files/TCPIPLi
      +                          brary/ETHxxJ6x_driver.c: 538:     ETH_EdataWrite(data >> 8);
 21317                           
 21318                           ;incstack = 0
 21319   0182FC  5006               	movf	(ETH_Write16@data+1)^0,w,c
 21320   0182FE  ECD8  F0C1         	call	_ETH_EdataWrite
 21321                           
 21322                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 539:     ETH_EdataWrite(data);
 21323   018302  5005               	movf	ETH_Write16@data^0,w,c
 21324   018304  ECD8  F0C1         	call	_ETH_EdataWrite
 21325   018308  0012               	return		;funcret
 21326   01830A                     __end_of_ETH_Write16:
 21327                           	callstack 0
 21328                           
 21329 ;; *************** function _ARPV4_Request *****************
 21330 ;; Defined at:
 21331 ;;		line 202 in file "mcc_generated_files/TCPIPLibrary/arpv4.c"
 21332 ;; Parameters:    Size  Location     Type
 21333 ;;  destAddress     4   30[COMRAM] unsigned long 
 21334 ;; Auto vars:     Size  Location     Type
 21335 ;;  header         28   57[COMRAM] struct .
 21336 ;;  ret             1   56[COMRAM] enum E782
 21337 ;; Return value:  Size  Location     Type
 21338 ;;                  1    wreg      enum E617
 21339 ;; Registers used:
 21340 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21341 ;; Tracked objects:
 21342 ;;		On entry : 3F/0
 21343 ;;		On exit  : 0/0
 21344 ;;		Unchanged: 0/0
 21345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21346 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21347 ;;      Locals:        29       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21348 ;;      Temps:         22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21349 ;;      Totals:        55       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21350 ;;Total ram usage:       55 bytes
 21351 ;; Hardware stack levels used: 1
 21352 ;; Hardware stack levels required when called: 7
 21353 ;; This function calls:
 21354 ;;		_ETH_Send
 21355 ;;		_ETH_WriteBlock
 21356 ;;		_ETH_WriteStart
 21357 ;;		_memcpy
 21358 ;; This function is called by:
 21359 ;;		_IPv4_Start
 21360 ;; This function uses a non-reentrant model
 21361 ;;
 21362                           
 21363                           	psect	text87
 21364   014D02                     __ptext87:
 21365                           	callstack 0
 21366   014D02                     _ARPV4_Request:
 21367                           	callstack 20
 21368                           
 21369                           ; BSR set to: 0
 21370                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 208:     arpHeader_t header;;mcc_generated_fi
      +                          les/TCPIPLibrary/arpv4.c: 209:     header.htype = ((((uint16_t)1 & (uint16_t)0xFF00) >> 
      +                          8) | (((uint16_t)1 & (uint16_t)0x00FF) << 8));
 21371                           
 21372                           ;incstack = 0
 21373   014D02  0E01               	movlw	1
 21374   014D04  6E3B               	movwf	(ARPV4_Request@header+1)^0,c
 21375   014D06  0E00               	movlw	0
 21376   014D08  6E3A               	movwf	ARPV4_Request@header^0,c
 21377                           
 21378                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 210:     header.ptype = ((((uint16_t)0x0800 &
      +                           (uint16_t)0xFF00) >> 8) | (((uint16_t)0x0800 & (uint16_t)0x00FF) << 8));
 21379   014D0A  0E00               	movlw	0
 21380   014D0C  6E3D               	movwf	(ARPV4_Request@header+3)^0,c
 21381   014D0E  0E08               	movlw	8
 21382   014D10  6E3C               	movwf	(ARPV4_Request@header+2)^0,c
 21383                           
 21384                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 211:     header.hlen = 6;
 21385   014D12  0E06               	movlw	6
 21386   014D14  6E3E               	movwf	(ARPV4_Request@header+4)^0,c
 21387                           
 21388                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 212:     header.plen = 4;
 21389   014D16  0E04               	movlw	4
 21390   014D18  6E3F               	movwf	(ARPV4_Request@header+5)^0,c
 21391                           
 21392                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 213:     header.oper = ((((uint16_t)1 & (uint
      +                          16_t)0xFF00) >> 8) | (((uint16_t)1 & (uint16_t)0x00FF) << 8));
 21393   014D1A  0E01               	movlw	1
 21394   014D1C  6E41               	movwf	(ARPV4_Request@header+7)^0,c
 21395   014D1E  0E00               	movlw	0
 21396   014D20  6E40               	movwf	(ARPV4_Request@header+6)^0,c
 21397                           
 21398                           ; BSR set to: 0
 21399                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 214:     memcpy((void*)&header.sha, (void*)&h
      +                          ostMacAddress, sizeof(mac48Address_t));
 21400   014D22  0E42               	movlw	low (ARPV4_Request@header+8)
 21401   014D24  6E05               	movwf	memcpy@d1^0,c
 21402   014D26  0EA7               	movlw	low _hostMacAddress
 21403   014D28  6E06               	movwf	memcpy@s1^0,c
 21404   014D2A  0E02               	movlw	high _hostMacAddress
 21405   014D2C  6E07               	movwf	(memcpy@s1+1)^0,c
 21406   014D2E  0E00               	movlw	0
 21407   014D30  6E09               	movwf	(memcpy@n+1)^0,c
 21408   014D32  0E06               	movlw	6
 21409   014D34  6E08               	movwf	memcpy@n^0,c
 21410   014D36  ECB4  F0BE         	call	_memcpy	;wreg free
 21411                           
 21412                           ; BSR set to: 0
 21413                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 215:     header.spa = ((((uint32_t)(ip_databa
      +                          se_info.ipv4_myAddress)&(uint32_t)0xff000000) >> 24) | (((uint32_t)(ip_database_info.ipv
      +                          4_myAddress)&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)(ip_database_info.ipv4_myAddress)
      +                          &(uint32_t)0x0000ff00) << 8) | (((uint32_t)(ip_database_info.ipv4_myAddress)&(uint32_t)0
      +                          x000000ff) << 24) );
 21414   014D3A  0EFF               	movlw	255
 21415   014D3C  0101               	movlb	1	; () banked
 21416   014D3E  1500               	andwf	_ip_database_info& (0+255),w,b
 21417   014D40  6E23               	movwf	??_ARPV4_Request^0,c
 21418   014D42  0E00               	movlw	0
 21419   014D44  1501               	andwf	(_ip_database_info+1)& (0+255),w,b
 21420   014D46  6E24               	movwf	(??_ARPV4_Request+1)^0,c
 21421   014D48  0E00               	movlw	0
 21422   014D4A  1502               	andwf	(_ip_database_info+2)& (0+255),w,b
 21423   014D4C  6E25               	movwf	(??_ARPV4_Request+2)^0,c
 21424   014D4E  0E00               	movlw	0
 21425   014D50  1503               	andwf	(_ip_database_info+3)& (0+255),w,b
 21426   014D52  6E26               	movwf	(??_ARPV4_Request+3)^0,c
 21427   014D54  C023  F026         	movff	??_ARPV4_Request,??_ARPV4_Request+3
 21428   014D58  6A25               	clrf	(??_ARPV4_Request+2)^0,c
 21429   014D5A  6A24               	clrf	(??_ARPV4_Request+1)^0,c
 21430   014D5C  6A23               	clrf	??_ARPV4_Request^0,c
 21431   014D5E  0E00               	movlw	0
 21432   014D60  1500               	andwf	_ip_database_info& (0+255),w,b
 21433   014D62  6E27               	movwf	(??_ARPV4_Request+4)^0,c
 21434   014D64  0EFF               	movlw	255
 21435   014D66  1501               	andwf	(_ip_database_info+1)& (0+255),w,b
 21436   014D68  6E28               	movwf	(??_ARPV4_Request+5)^0,c
 21437   014D6A  0E00               	movlw	0
 21438   014D6C  1502               	andwf	(_ip_database_info+2)& (0+255),w,b
 21439   014D6E  6E29               	movwf	(??_ARPV4_Request+6)^0,c
 21440   014D70  0E00               	movlw	0
 21441   014D72  1503               	andwf	(_ip_database_info+3)& (0+255),w,b
 21442   014D74  6E2A               	movwf	(??_ARPV4_Request+7)^0,c
 21443   014D76  C029  F02A         	movff	??_ARPV4_Request+6,??_ARPV4_Request+7
 21444   014D7A  C028  F029         	movff	??_ARPV4_Request+5,??_ARPV4_Request+6
 21445   014D7E  C027  F028         	movff	??_ARPV4_Request+4,??_ARPV4_Request+5
 21446   014D82  6A27               	clrf	(??_ARPV4_Request+4)^0,c
 21447   014D84  0E00               	movlw	0
 21448   014D86  1501               	andwf	(_ip_database_info+1)& (0+255),w,b
 21449   014D88  6E2B               	movwf	(??_ARPV4_Request+8)^0,c
 21450   014D8A  0EFF               	movlw	255
 21451   014D8C  1502               	andwf	(_ip_database_info+2)& (0+255),w,b
 21452   014D8E  6E2C               	movwf	(??_ARPV4_Request+9)^0,c
 21453   014D90  0E00               	movlw	0
 21454   014D92  1503               	andwf	(_ip_database_info+3)& (0+255),w,b
 21455   014D94  6E2D               	movwf	(??_ARPV4_Request+10)^0,c
 21456   014D96  5103               	movf	(_ip_database_info+3)& (0+255),w,b
 21457   014D98  102B               	iorwf	(??_ARPV4_Request+8)^0,w,c
 21458   014D9A  6E2E               	movwf	(??_ARPV4_Request+11)^0,c
 21459   014D9C  0E00               	movlw	0
 21460   014D9E  102C               	iorwf	(??_ARPV4_Request+9)^0,w,c
 21461   014DA0  6E2F               	movwf	(??_ARPV4_Request+12)^0,c
 21462   014DA2  0E00               	movlw	0
 21463   014DA4  102D               	iorwf	(??_ARPV4_Request+10)^0,w,c
 21464   014DA6  6E30               	movwf	(??_ARPV4_Request+13)^0,c
 21465   014DA8  502E               	movf	(??_ARPV4_Request+11)^0,w,c
 21466   014DAA  6E31               	movwf	(??_ARPV4_Request+14)^0,c
 21467   014DAC  502F               	movf	(??_ARPV4_Request+12)^0,w,c
 21468   014DAE  6E32               	movwf	(??_ARPV4_Request+15)^0,c
 21469   014DB0  5030               	movf	(??_ARPV4_Request+13)^0,w,c
 21470   014DB2  6E33               	movwf	(??_ARPV4_Request+16)^0,c
 21471   014DB4  6A34               	clrf	(??_ARPV4_Request+17)^0,c
 21472   014DB6  5027               	movf	(??_ARPV4_Request+4)^0,w,c
 21473   014DB8  1031               	iorwf	(??_ARPV4_Request+14)^0,w,c
 21474   014DBA  6E35               	movwf	(??_ARPV4_Request+18)^0,c
 21475   014DBC  5028               	movf	(??_ARPV4_Request+5)^0,w,c
 21476   014DBE  1032               	iorwf	(??_ARPV4_Request+15)^0,w,c
 21477   014DC0  6E36               	movwf	(??_ARPV4_Request+19)^0,c
 21478   014DC2  5029               	movf	(??_ARPV4_Request+6)^0,w,c
 21479   014DC4  1033               	iorwf	(??_ARPV4_Request+16)^0,w,c
 21480   014DC6  6E37               	movwf	(??_ARPV4_Request+20)^0,c
 21481   014DC8  502A               	movf	(??_ARPV4_Request+7)^0,w,c
 21482   014DCA  1034               	iorwf	(??_ARPV4_Request+17)^0,w,c
 21483   014DCC  6E38               	movwf	(??_ARPV4_Request+21)^0,c
 21484   014DCE  5023               	movf	??_ARPV4_Request^0,w,c
 21485   014DD0  1035               	iorwf	(??_ARPV4_Request+18)^0,w,c
 21486   014DD2  6E48               	movwf	(ARPV4_Request@header+14)^0,c
 21487   014DD4  5024               	movf	(??_ARPV4_Request+1)^0,w,c
 21488   014DD6  1036               	iorwf	(??_ARPV4_Request+19)^0,w,c
 21489   014DD8  6E49               	movwf	(ARPV4_Request@header+15)^0,c
 21490   014DDA  5025               	movf	(??_ARPV4_Request+2)^0,w,c
 21491   014DDC  1037               	iorwf	(??_ARPV4_Request+20)^0,w,c
 21492   014DDE  6E4A               	movwf	(ARPV4_Request@header+16)^0,c
 21493   014DE0  5026               	movf	(??_ARPV4_Request+3)^0,w,c
 21494   014DE2  1038               	iorwf	(??_ARPV4_Request+21)^0,w,c
 21495   014DE4  6E4B               	movwf	(ARPV4_Request@header+17)^0,c
 21496                           
 21497                           ; BSR set to: 1
 21498                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 216:     header.tpa= ((((uint32_t)destAddress
      +                          &(uint32_t)0xff000000) >> 24) | (((uint32_t)destAddress&(uint32_t)0x00ff0000) >> 8) | ((
      +                          (uint32_t)destAddress&(uint32_t)0x0000ff00) << 8) | (((uint32_t)destAddress&(uint32_t)0x
      +                          000000ff) << 24) );
 21499   014DE6  0EFF               	movlw	255
 21500   014DE8  141F               	andwf	ARPV4_Request@destAddress^0,w,c
 21501   014DEA  6E23               	movwf	??_ARPV4_Request^0,c
 21502   014DEC  0E00               	movlw	0
 21503   014DEE  1420               	andwf	(ARPV4_Request@destAddress+1)^0,w,c
 21504   014DF0  6E24               	movwf	(??_ARPV4_Request+1)^0,c
 21505   014DF2  0E00               	movlw	0
 21506   014DF4  1421               	andwf	(ARPV4_Request@destAddress+2)^0,w,c
 21507   014DF6  6E25               	movwf	(??_ARPV4_Request+2)^0,c
 21508   014DF8  0E00               	movlw	0
 21509   014DFA  1422               	andwf	(ARPV4_Request@destAddress+3)^0,w,c
 21510   014DFC  6E26               	movwf	(??_ARPV4_Request+3)^0,c
 21511   014DFE  C023  F026         	movff	??_ARPV4_Request,??_ARPV4_Request+3
 21512   014E02  6A25               	clrf	(??_ARPV4_Request+2)^0,c
 21513   014E04  6A24               	clrf	(??_ARPV4_Request+1)^0,c
 21514   014E06  6A23               	clrf	??_ARPV4_Request^0,c
 21515   014E08  0E00               	movlw	0
 21516   014E0A  141F               	andwf	ARPV4_Request@destAddress^0,w,c
 21517   014E0C  6E27               	movwf	(??_ARPV4_Request+4)^0,c
 21518   014E0E  0EFF               	movlw	255
 21519   014E10  1420               	andwf	(ARPV4_Request@destAddress+1)^0,w,c
 21520   014E12  6E28               	movwf	(??_ARPV4_Request+5)^0,c
 21521   014E14  0E00               	movlw	0
 21522   014E16  1421               	andwf	(ARPV4_Request@destAddress+2)^0,w,c
 21523   014E18  6E29               	movwf	(??_ARPV4_Request+6)^0,c
 21524   014E1A  0E00               	movlw	0
 21525   014E1C  1422               	andwf	(ARPV4_Request@destAddress+3)^0,w,c
 21526   014E1E  6E2A               	movwf	(??_ARPV4_Request+7)^0,c
 21527   014E20  C029  F02A         	movff	??_ARPV4_Request+6,??_ARPV4_Request+7
 21528   014E24  C028  F029         	movff	??_ARPV4_Request+5,??_ARPV4_Request+6
 21529   014E28  C027  F028         	movff	??_ARPV4_Request+4,??_ARPV4_Request+5
 21530   014E2C  6A27               	clrf	(??_ARPV4_Request+4)^0,c
 21531   014E2E  0E00               	movlw	0
 21532   014E30  1420               	andwf	(ARPV4_Request@destAddress+1)^0,w,c
 21533   014E32  6E2B               	movwf	(??_ARPV4_Request+8)^0,c
 21534   014E34  0EFF               	movlw	255
 21535   014E36  1421               	andwf	(ARPV4_Request@destAddress+2)^0,w,c
 21536   014E38  6E2C               	movwf	(??_ARPV4_Request+9)^0,c
 21537   014E3A  0E00               	movlw	0
 21538   014E3C  1422               	andwf	(ARPV4_Request@destAddress+3)^0,w,c
 21539   014E3E  6E2D               	movwf	(??_ARPV4_Request+10)^0,c
 21540   014E40  5022               	movf	(ARPV4_Request@destAddress+3)^0,w,c
 21541   014E42  102B               	iorwf	(??_ARPV4_Request+8)^0,w,c
 21542   014E44  6E2E               	movwf	(??_ARPV4_Request+11)^0,c
 21543   014E46  0E00               	movlw	0
 21544   014E48  102C               	iorwf	(??_ARPV4_Request+9)^0,w,c
 21545   014E4A  6E2F               	movwf	(??_ARPV4_Request+12)^0,c
 21546   014E4C  0E00               	movlw	0
 21547   014E4E  102D               	iorwf	(??_ARPV4_Request+10)^0,w,c
 21548   014E50  6E30               	movwf	(??_ARPV4_Request+13)^0,c
 21549   014E52  502E               	movf	(??_ARPV4_Request+11)^0,w,c
 21550   014E54  6E31               	movwf	(??_ARPV4_Request+14)^0,c
 21551   014E56  502F               	movf	(??_ARPV4_Request+12)^0,w,c
 21552   014E58  6E32               	movwf	(??_ARPV4_Request+15)^0,c
 21553   014E5A  5030               	movf	(??_ARPV4_Request+13)^0,w,c
 21554   014E5C  6E33               	movwf	(??_ARPV4_Request+16)^0,c
 21555   014E5E  6A34               	clrf	(??_ARPV4_Request+17)^0,c
 21556   014E60  5027               	movf	(??_ARPV4_Request+4)^0,w,c
 21557   014E62  1031               	iorwf	(??_ARPV4_Request+14)^0,w,c
 21558   014E64  6E35               	movwf	(??_ARPV4_Request+18)^0,c
 21559   014E66  5028               	movf	(??_ARPV4_Request+5)^0,w,c
 21560   014E68  1032               	iorwf	(??_ARPV4_Request+15)^0,w,c
 21561   014E6A  6E36               	movwf	(??_ARPV4_Request+19)^0,c
 21562   014E6C  5029               	movf	(??_ARPV4_Request+6)^0,w,c
 21563   014E6E  1033               	iorwf	(??_ARPV4_Request+16)^0,w,c
 21564   014E70  6E37               	movwf	(??_ARPV4_Request+20)^0,c
 21565   014E72  502A               	movf	(??_ARPV4_Request+7)^0,w,c
 21566   014E74  1034               	iorwf	(??_ARPV4_Request+17)^0,w,c
 21567   014E76  6E38               	movwf	(??_ARPV4_Request+21)^0,c
 21568   014E78  5023               	movf	??_ARPV4_Request^0,w,c
 21569   014E7A  1035               	iorwf	(??_ARPV4_Request+18)^0,w,c
 21570   014E7C  6E52               	movwf	(ARPV4_Request@header+24)^0,c
 21571   014E7E  5024               	movf	(??_ARPV4_Request+1)^0,w,c
 21572   014E80  1036               	iorwf	(??_ARPV4_Request+19)^0,w,c
 21573   014E82  6E53               	movwf	(ARPV4_Request@header+25)^0,c
 21574   014E84  5025               	movf	(??_ARPV4_Request+2)^0,w,c
 21575   014E86  1037               	iorwf	(??_ARPV4_Request+20)^0,w,c
 21576   014E88  6E54               	movwf	(ARPV4_Request@header+26)^0,c
 21577   014E8A  5026               	movf	(??_ARPV4_Request+3)^0,w,c
 21578   014E8C  1038               	iorwf	(??_ARPV4_Request+21)^0,w,c
 21579   014E8E  6E55               	movwf	(ARPV4_Request@header+27)^0,c
 21580                           
 21581                           ; BSR set to: 1
 21582                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 217:     header.tha.s.byte1 = 0;
 21583   014E90  0E00               	movlw	0
 21584   014E92  6E4C               	movwf	(ARPV4_Request@header+18)^0,c
 21585                           
 21586                           ; BSR set to: 1
 21587                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 218:     header.tha.s.byte2 = 0;
 21588   014E94  0E00               	movlw	0
 21589   014E96  6E4D               	movwf	(ARPV4_Request@header+19)^0,c
 21590                           
 21591                           ; BSR set to: 1
 21592                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 219:     header.tha.s.byte3 = 0;
 21593   014E98  0E00               	movlw	0
 21594   014E9A  6E4E               	movwf	(ARPV4_Request@header+20)^0,c
 21595                           
 21596                           ; BSR set to: 1
 21597                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 220:     header.tha.s.byte4 = 0;
 21598   014E9C  0E00               	movlw	0
 21599   014E9E  6E4F               	movwf	(ARPV4_Request@header+21)^0,c
 21600                           
 21601                           ; BSR set to: 1
 21602                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 221:     header.tha.s.byte5 = 0;
 21603   014EA0  0E00               	movlw	0
 21604   014EA2  6E50               	movwf	(ARPV4_Request@header+22)^0,c
 21605                           
 21606                           ; BSR set to: 1
 21607                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 222:     header.tha.s.byte6 = 0;
 21608   014EA4  0E00               	movlw	0
 21609   014EA6  6E51               	movwf	(ARPV4_Request@header+23)^0,c
 21610                           
 21611                           ; BSR set to: 1
 21612                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 224:     ret = ETH_WriteStart(&broadcastMAC,0
      +                          x0806);
 21613   014EA8  0E05               	movlw	low _broadcastMAC
 21614   014EAA  6E17               	movwf	ETH_WriteStart@dest_mac^0,c
 21615   014EAC  0EFE               	movlw	high _broadcastMAC
 21616   014EAE  6E18               	movwf	(ETH_WriteStart@dest_mac+1)^0,c
 21617   014EB0  0E08               	movlw	8
 21618   014EB2  6E1A               	movwf	(ETH_WriteStart@type+1)^0,c
 21619   014EB4  0E06               	movlw	6
 21620   014EB6  6E19               	movwf	ETH_WriteStart@type^0,c
 21621   014EB8  EC7F  F0A5         	call	_ETH_WriteStart	;wreg free
 21622   014EBC  6E39               	movwf	ARPV4_Request@ret^0,c
 21623                           
 21624                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 225:     if(ret == SUCCESS)
 21625   014EBE  0439               	decf	ARPV4_Request@ret^0,w,c
 21626   014EC0  A4D8               	btfss	status,2,c
 21627   014EC2  D011               	goto	l13259
 21628                           
 21629                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 226:     {;mcc_generated_files/TCPIPLibrary/a
      +                          rpv4.c: 227:         ETH_WriteBlock((char*)&header,sizeof(arpHeader_t));
 21630   014EC4  0E3A               	movlw	low ARPV4_Request@header
 21631   014EC6  6E05               	movwf	ETH_WriteBlock@buffer^0,c
 21632   014EC8  6A06               	clrf	(ETH_WriteBlock@buffer+1)^0,c
 21633   014ECA  0E00               	movlw	0
 21634   014ECC  6E08               	movwf	(ETH_WriteBlock@length+1)^0,c
 21635   014ECE  0E1C               	movlw	28
 21636   014ED0  6E07               	movwf	ETH_WriteBlock@length^0,c
 21637   014ED2  ECEF  F0BE         	call	_ETH_WriteBlock	;wreg free
 21638                           
 21639                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 228:         ret = ETH_Send();
 21640   014ED6  EC4A  F0B7         	call	_ETH_Send	;wreg free
 21641   014EDA  6E39               	movwf	ARPV4_Request@ret^0,c
 21642                           
 21643                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 229:         if(ret == SUCCESS)
 21644   014EDC  0439               	decf	ARPV4_Request@ret^0,w,c
 21645   014EDE  A4D8               	btfss	status,2,c
 21646   014EE0  D002               	goto	l13259
 21647                           
 21648                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 230:         {;mcc_generated_files/TCPIPLibra
      +                          ry/arpv4.c: 231:             return MAC_NOT_FOUND;
 21649   014EE2  0E05               	movlw	5
 21650   014EE4  0012               	return	
 21651   014EE6                     l13259:
 21652                           
 21653                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 234:     return ret;
 21654   014EE6  5039               	movf	ARPV4_Request@ret^0,w,c
 21655   014EE8  0012               	return		;funcret
 21656   014EEA                     __end_of_ARPV4_Request:
 21657                           	callstack 0
 21658                           
 21659 ;; *************** function _ARPV4_Lookup *****************
 21660 ;; Defined at:
 21661 ;;		line 242 in file "mcc_generated_files/TCPIPLibrary/arpv4.c"
 21662 ;; Parameters:    Size  Location     Type
 21663 ;;  ip_address      4    4[COMRAM] unsigned long 
 21664 ;; Auto vars:     Size  Location     Type
 21665 ;;  entry_pointe    2   12[COMRAM] PTR struct .
 21666 ;;		 -> arpMap(104), 
 21667 ;;  x               1   14[COMRAM] unsigned char 
 21668 ;; Return value:  Size  Location     Type
 21669 ;;                  2    4[COMRAM] PTR struct .
 21670 ;; Registers used:
 21671 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21672 ;; Tracked objects:
 21673 ;;		On entry : 3F/0
 21674 ;;		On exit  : 3F/0
 21675 ;;		Unchanged: 3F/0
 21676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21677 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21678 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21679 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21680 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21681 ;;Total ram usage:       11 bytes
 21682 ;; Hardware stack levels used: 1
 21683 ;; Hardware stack levels required when called: 4
 21684 ;; This function calls:
 21685 ;;		Nothing
 21686 ;; This function is called by:
 21687 ;;		_IPv4_Start
 21688 ;; This function uses a non-reentrant model
 21689 ;;
 21690                           
 21691                           	psect	text88
 21692   01786C                     __ptext88:
 21693                           	callstack 0
 21694   01786C                     _ARPV4_Lookup:
 21695                           	callstack 23
 21696                           
 21697                           ; BSR set to: 0
 21698                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 242: mac48Address_t* ARPV4_Lookup(uint32_t ip
      +                          _address);mcc_generated_files/TCPIPLibrary/arpv4.c: 243: {;mcc_generated_files/TCPIPLibr
      +                          ary/arpv4.c: 244:     arpMap_t *entry_pointer = arpMap;
 21699                           
 21700                           ;incstack = 0
 21701   01786C  0E00               	movlw	low _arpMap
 21702   01786E  6E0D               	movwf	ARPV4_Lookup@entry_pointer^0,c
 21703   017870  0E07               	movlw	high _arpMap
 21704   017872  6E0E               	movwf	(ARPV4_Lookup@entry_pointer+1)^0,c
 21705                           
 21706                           ; BSR set to: 0
 21707                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 245:     uint8_t x;;mcc_generated_files/TCPIP
      +                          Library/arpv4.c: 247:     for(x = 0; x < 8; x++)
 21708   017874  0E00               	movlw	0
 21709   017876  6E0F               	movwf	ARPV4_Lookup@x^0,c
 21710   017878                     l13211:
 21711                           
 21712                           ; BSR set to: 0
 21713                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 248:     {;mcc_generated_files/TCPIPLibrary/a
      +                          rpv4.c: 249:         if(entry_pointer->ipAddress == ip_address)
 21714   017878  EE20 F006          	lfsr	2,6
 21715   01787C  500D               	movf	ARPV4_Lookup@entry_pointer^0,w,c
 21716   01787E  26D9               	addwf	fsr2l,f,c
 21717   017880  500E               	movf	(ARPV4_Lookup@entry_pointer+1)^0,w,c
 21718   017882  22DA               	addwfc	fsr2h,f,c
 21719   017884  5005               	movf	ARPV4_Lookup@ip_address^0,w,c
 21720   017886  18DE               	xorwf	postinc2,w,c
 21721   017888  E10F               	bnz	l13217
 21722   01788A  5006               	movf	(ARPV4_Lookup@ip_address+1)^0,w,c
 21723   01788C  18DE               	xorwf	postinc2,w,c
 21724   01788E  E10C               	bnz	l13217
 21725   017890  5007               	movf	(ARPV4_Lookup@ip_address+2)^0,w,c
 21726   017892  18DE               	xorwf	postinc2,w,c
 21727   017894  E109               	bnz	l13217
 21728   017896  5008               	movf	(ARPV4_Lookup@ip_address+3)^0,w,c
 21729   017898  18DE               	xorwf	postinc2,w,c
 21730   01789A  A4D8               	btfss	status,2,c
 21731   01789C  D005               	goto	l13217
 21732                           
 21733                           ; BSR set to: 0
 21734                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 250:             return &entry_pointer->macAd
      +                          dress;
 21735   01789E  C00D  F005         	movff	ARPV4_Lookup@entry_pointer,?_ARPV4_Lookup
 21736   0178A2  C00E  F006         	movff	ARPV4_Lookup@entry_pointer+1,?_ARPV4_Lookup+1
 21737   0178A6  0012               	return	
 21738   0178A8                     l13217:
 21739                           
 21740                           ; BSR set to: 0
 21741                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 251:         entry_pointer ++;
 21742   0178A8  0E0D               	movlw	13
 21743   0178AA  260D               	addwf	ARPV4_Lookup@entry_pointer^0,f,c
 21744   0178AC  0E00               	movlw	0
 21745   0178AE  220E               	addwfc	(ARPV4_Lookup@entry_pointer+1)^0,f,c
 21746                           
 21747                           ; BSR set to: 0
 21748                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 252:     }
 21749   0178B0  2A0F               	incf	ARPV4_Lookup@x^0,f,c
 21750                           
 21751                           ; BSR set to: 0
 21752   0178B2  0E07               	movlw	7
 21753   0178B4  640F               	cpfsgt	ARPV4_Lookup@x^0,c
 21754   0178B6  D7E0               	goto	l13211
 21755                           
 21756                           ; BSR set to: 0
 21757                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 253:     return 0;
 21758   0178B8  0E00               	movlw	0
 21759   0178BA  6E05               	movwf	?_ARPV4_Lookup^0,c
 21760   0178BC  0E00               	movlw	0
 21761   0178BE  6E06               	movwf	(?_ARPV4_Lookup+1)^0,c
 21762                           
 21763                           ; BSR set to: 0
 21764   0178C0  0012               	return		;funcret
 21765   0178C2                     __end_of_ARPV4_Lookup:
 21766                           	callstack 0
 21767                           
 21768 ;; *************** function _IPV4_Send *****************
 21769 ;; Defined at:
 21770 ;;		line 263 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
 21771 ;; Parameters:    Size  Location     Type
 21772 ;;  payloadLengt    2   32[COMRAM] unsigned short 
 21773 ;; Auto vars:     Size  Location     Type
 21774 ;;  totalLength     2   41[COMRAM] unsigned short 
 21775 ;;  cksm            2   39[COMRAM] unsigned short 
 21776 ;;  ret             1   38[COMRAM] enum E617
 21777 ;; Return value:  Size  Location     Type
 21778 ;;                  1    wreg      enum E617
 21779 ;; Registers used:
 21780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21781 ;; Tracked objects:
 21782 ;;		On entry : 0/E
 21783 ;;		On exit  : 0/0
 21784 ;;		Unchanged: 0/0
 21785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21786 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21787 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21788 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21789 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21790 ;;Total ram usage:       11 bytes
 21791 ;; Hardware stack levels used: 1
 21792 ;; Hardware stack levels required when called: 7
 21793 ;; This function calls:
 21794 ;;		_ETH_Insert
 21795 ;;		_ETH_Send
 21796 ;;		_ETH_TxComputeChecksum
 21797 ;; This function is called by:
 21798 ;;		_ICMP_EchoReply
 21799 ;;		_ICMP_PortUnreachable
 21800 ;;		_UDP_Send
 21801 ;; This function uses a non-reentrant model
 21802 ;;
 21803                           
 21804                           	psect	text89
 21805   0171F6                     __ptext89:
 21806                           	callstack 0
 21807   0171F6                     _IPV4_Send:
 21808                           	callstack 21
 21809                           
 21810                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 263: error_msg IPV4_Send(uint16_t payloadLengt
      +                          h);mcc_generated_files/TCPIPLibrary/ipv4.c: 264: {;mcc_generated_files/TCPIPLibrary/ipv4
      +                          .c: 265:     uint16_t totalLength;;mcc_generated_files/TCPIPLibrary/ipv4.c: 266:     uin
      +                          t16_t cksm;;mcc_generated_files/TCPIPLibrary/ipv4.c: 267:     error_msg ret;;mcc_generat
      +                          ed_files/TCPIPLibrary/ipv4.c: 269:     totalLength = 20 + payloadLength;
 21811                           
 21812                           ; BSR set to: 0
 21813                           ;incstack = 0
 21814   0171F6  0E14               	movlw	20
 21815   0171F8  2421               	addwf	IPV4_Send@payloadLength^0,w,c
 21816   0171FA  6E2A               	movwf	IPV4_Send@totalLength^0,c
 21817   0171FC  0E00               	movlw	0
 21818   0171FE  2022               	addwfc	(IPV4_Send@payloadLength+1)^0,w,c
 21819   017200  6E2B               	movwf	(IPV4_Send@totalLength+1)^0,c
 21820                           
 21821                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 270:     totalLength = ((((uint16_t)totalLengt
      +                          h & (uint16_t)0xFF00) >> 8) | (((uint16_t)totalLength & (uint16_t)0x00FF) << 8));
 21822   017202  502A               	movf	IPV4_Send@totalLength^0,w,c
 21823   017204  6E24               	movwf	(??_IPV4_Send+1)^0,c
 21824   017206  6A23               	clrf	??_IPV4_Send^0,c
 21825   017208  502B               	movf	(IPV4_Send@totalLength+1)^0,w,c
 21826   01720A  6E25               	movwf	(??_IPV4_Send+2)^0,c
 21827   01720C  6A26               	clrf	(??_IPV4_Send+3)^0,c
 21828   01720E  5023               	movf	??_IPV4_Send^0,w,c
 21829   017210  1025               	iorwf	(??_IPV4_Send+2)^0,w,c
 21830   017212  6E2A               	movwf	IPV4_Send@totalLength^0,c
 21831   017214  5024               	movf	(??_IPV4_Send+1)^0,w,c
 21832   017216  1026               	iorwf	(??_IPV4_Send+3)^0,w,c
 21833   017218  6E2B               	movwf	(IPV4_Send@totalLength+1)^0,c
 21834                           
 21835                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 273:     ETH_Insert((char *)&totalLength, 2, s
      +                          izeof(ethernetFrame_t) + ((size_t)(((char*)&((ipv4Header_t *)1)->length)-1)));
 21836   01721A  0E2A               	movlw	low IPV4_Send@totalLength
 21837   01721C  6E05               	movwf	ETH_Insert@data^0,c
 21838   01721E  0E00               	movlw	0
 21839   017220  6E07               	movwf	(ETH_Insert@len+1)^0,c
 21840   017222  0E02               	movlw	2
 21841   017224  6E06               	movwf	ETH_Insert@len^0,c
 21842   017226  0E00               	movlw	0
 21843   017228  6E09               	movwf	(ETH_Insert@offset+1)^0,c
 21844   01722A  0E10               	movlw	16
 21845   01722C  6E08               	movwf	ETH_Insert@offset^0,c
 21846   01722E  EC82  F0BB         	call	_ETH_Insert	;wreg free
 21847                           
 21848                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 275:     cksm = ETH_TxComputeChecksum(sizeof(e
      +                          thernetFrame_t),sizeof(ipv4Header_t),0);
 21849   017232  0E00               	movlw	0
 21850   017234  6E14               	movwf	(ETH_TxComputeChecksum@position+1)^0,c
 21851   017236  0E0E               	movlw	14
 21852   017238  6E13               	movwf	ETH_TxComputeChecksum@position^0,c
 21853   01723A  0E00               	movlw	0
 21854   01723C  6E16               	movwf	(ETH_TxComputeChecksum@len+1)^0,c
 21855   01723E  0E14               	movlw	20
 21856   017240  6E15               	movwf	ETH_TxComputeChecksum@len^0,c
 21857   017242  0E00               	movlw	0
 21858   017244  6E18               	movwf	(ETH_TxComputeChecksum@seed+1)^0,c
 21859   017246  0E00               	movlw	0
 21860   017248  6E17               	movwf	ETH_TxComputeChecksum@seed^0,c
 21861   01724A  EC78  F0B9         	call	_ETH_TxComputeChecksum	;wreg free
 21862   01724E  C013  F028         	movff	?_ETH_TxComputeChecksum,IPV4_Send@cksm
 21863   017252  C014  F029         	movff	?_ETH_TxComputeChecksum+1,IPV4_Send@cksm+1
 21864                           
 21865                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 277:     ETH_Insert((char *)&cksm, 2, sizeof(e
      +                          thernetFrame_t) + ((size_t)(((char*)&((ipv4Header_t *)1)->headerCksm)-1)));
 21866   017256  0E28               	movlw	low IPV4_Send@cksm
 21867   017258  6E05               	movwf	ETH_Insert@data^0,c
 21868   01725A  0E00               	movlw	0
 21869   01725C  6E07               	movwf	(ETH_Insert@len+1)^0,c
 21870   01725E  0E02               	movlw	2
 21871   017260  6E06               	movwf	ETH_Insert@len^0,c
 21872   017262  0E00               	movlw	0
 21873   017264  6E09               	movwf	(ETH_Insert@offset+1)^0,c
 21874   017266  0E18               	movlw	24
 21875   017268  6E08               	movwf	ETH_Insert@offset^0,c
 21876   01726A  EC82  F0BB         	call	_ETH_Insert	;wreg free
 21877                           
 21878                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 278:     ret = ETH_Send();
 21879   01726E  EC4A  F0B7         	call	_ETH_Send	;wreg free
 21880   017272  6E27               	movwf	IPV4_Send@ret^0,c
 21881                           
 21882                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 280:     return ret;
 21883   017274  5027               	movf	IPV4_Send@ret^0,w,c
 21884   017276  0012               	return		;funcret
 21885   017278                     __end_of_IPV4_Send:
 21886                           	callstack 0
 21887                           
 21888 ;; *************** function _ETH_TxComputeChecksum *****************
 21889 ;; Defined at:
 21890 ;;		line 982 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 21891 ;; Parameters:    Size  Location     Type
 21892 ;;  position        2   18[COMRAM] unsigned short 
 21893 ;;  len             2   20[COMRAM] unsigned short 
 21894 ;;  seed            2   22[COMRAM] unsigned short 
 21895 ;; Auto vars:     Size  Location     Type
 21896 ;;  cksm            2   30[COMRAM] unsigned short 
 21897 ;;  rxptr           2   28[COMRAM] unsigned short 
 21898 ;; Return value:  Size  Location     Type
 21899 ;;                  2   18[COMRAM] unsigned short 
 21900 ;; Registers used:
 21901 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21902 ;; Tracked objects:
 21903 ;;		On entry : 0/E
 21904 ;;		On exit  : 30/0
 21905 ;;		Unchanged: 0/0
 21906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21907 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21908 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21909 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21910 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21911 ;;Total ram usage:       14 bytes
 21912 ;; Hardware stack levels used: 1
 21913 ;; Hardware stack levels required when called: 6
 21914 ;; This function calls:
 21915 ;;		_ETH_ComputeChecksum
 21916 ;; This function is called by:
 21917 ;;		_ICMP_EchoReply
 21918 ;;		_ICMP_PortUnreachable
 21919 ;;		_UDP_Send
 21920 ;;		_IPV4_Send
 21921 ;; This function uses a non-reentrant model
 21922 ;;
 21923                           
 21924                           	psect	text90
 21925   0172F0                     __ptext90:
 21926                           	callstack 0
 21927   0172F0                     _ETH_TxComputeChecksum:
 21928                           	callstack 21
 21929                           
 21930                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 982: uint16_t ETH_TxComputeChecksum
      +                          (uint16_t position, uint16_t len, uint16_t seed);mcc_generated_files/TCPIPLibrary/ETHxxJ
      +                          6x_driver.c: 983: {;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 984:     uint16_
      +                          t rxptr;;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 985:     uint16_t cksm;;mcc
      +                          _generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 988:     rxptr = ERDPT;
 21931                           
 21932                           ;incstack = 0
 21933   0172F0  CF7A F01D          	movff	3962,ETH_TxComputeChecksum@rxptr	;volatile
 21934   0172F4  CF7B F01E          	movff	3963,ETH_TxComputeChecksum@rxptr+1	;volatile
 21935                           
 21936                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 991:     ERDPT = pHead->packetStart
      +                           + position + 1;
 21937   0172F8  0101               	movlb	1	; () banked
 21938   0172FA  EE20 F002          	lfsr	2,2
 21939   0172FE  5149               	movf	_pHead& (0+255),w,b
 21940   017300  26D9               	addwf	fsr2l,f,c
 21941   017302  514A               	movf	(_pHead+1)& (0+255),w,b
 21942   017304  22DA               	addwfc	fsr2h,f,c
 21943   017306  CFDE F019          	movff	postinc2,??_ETH_TxComputeChecksum
 21944   01730A  CFDD F01A          	movff	postdec2,??_ETH_TxComputeChecksum+1
 21945   01730E  5013               	movf	ETH_TxComputeChecksum@position^0,w,c
 21946   017310  2619               	addwf	??_ETH_TxComputeChecksum^0,f,c
 21947   017312  5014               	movf	(ETH_TxComputeChecksum@position+1)^0,w,c
 21948   017314  221A               	addwfc	(??_ETH_TxComputeChecksum+1)^0,f,c
 21949   017316  0E01               	movlw	1
 21950   017318  2419               	addwf	??_ETH_TxComputeChecksum^0,w,c
 21951   01731A  6E7A               	movwf	122,c	;volatile
 21952   01731C  0E00               	movlw	0
 21953   01731E  201A               	addwfc	(??_ETH_TxComputeChecksum+1)^0,w,c
 21954   017320  6E7B               	movwf	123,c	;volatile
 21955                           
 21956                           ; BSR set to: 1
 21957                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 993:     cksm = ETH_ComputeChecksum
      +                          ( len, seed);
 21958   017322  C015  F005         	movff	ETH_TxComputeChecksum@len,ETH_ComputeChecksum@len
 21959   017326  C016  F006         	movff	ETH_TxComputeChecksum@len+1,ETH_ComputeChecksum@len+1
 21960   01732A  C017  F007         	movff	ETH_TxComputeChecksum@seed,ETH_ComputeChecksum@seed
 21961   01732E  C018  F008         	movff	ETH_TxComputeChecksum@seed+1,ETH_ComputeChecksum@seed+1
 21962   017332  EC84  F0B4         	call	_ETH_ComputeChecksum	;wreg free
 21963   017336  C005  F01F         	movff	?_ETH_ComputeChecksum,ETH_TxComputeChecksum@cksm
 21964   01733A  C006  F020         	movff	?_ETH_ComputeChecksum+1,ETH_TxComputeChecksum@cksm+1
 21965                           
 21966                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 996:     ERDPT = rxptr;
 21967   01733E  C01D  FF7A         	movff	ETH_TxComputeChecksum@rxptr,3962	;volatile
 21968   017342  C01E  FF7B         	movff	ETH_TxComputeChecksum@rxptr+1,3963	;volatile
 21969                           
 21970                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 998:     cksm = ((cksm & 0xFF00) >>
      +                           8) | ((cksm & 0x00FF) << 8);
 21971   017346  501F               	movf	ETH_TxComputeChecksum@cksm^0,w,c
 21972   017348  6E1A               	movwf	(??_ETH_TxComputeChecksum+1)^0,c
 21973   01734A  6A19               	clrf	??_ETH_TxComputeChecksum^0,c
 21974   01734C  5020               	movf	(ETH_TxComputeChecksum@cksm+1)^0,w,c
 21975   01734E  6E1B               	movwf	(??_ETH_TxComputeChecksum+2)^0,c
 21976   017350  6A1C               	clrf	(??_ETH_TxComputeChecksum+3)^0,c
 21977   017352  5019               	movf	??_ETH_TxComputeChecksum^0,w,c
 21978   017354  101B               	iorwf	(??_ETH_TxComputeChecksum+2)^0,w,c
 21979   017356  6E1F               	movwf	ETH_TxComputeChecksum@cksm^0,c
 21980   017358  501A               	movf	(??_ETH_TxComputeChecksum+1)^0,w,c
 21981   01735A  101C               	iorwf	(??_ETH_TxComputeChecksum+3)^0,w,c
 21982   01735C  6E20               	movwf	(ETH_TxComputeChecksum@cksm+1)^0,c
 21983                           
 21984                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1000:     return cksm;
 21985   01735E  C01F  F013         	movff	ETH_TxComputeChecksum@cksm,?_ETH_TxComputeChecksum
 21986   017362  C020  F014         	movff	ETH_TxComputeChecksum@cksm+1,?_ETH_TxComputeChecksum+1
 21987   017366  0012               	return		;funcret
 21988   017368                     __end_of_ETH_TxComputeChecksum:
 21989                           	callstack 0
 21990                           
 21991 ;; *************** function _ETH_Insert *****************
 21992 ;; Defined at:
 21993 ;;		line 758 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 21994 ;; Parameters:    Size  Location     Type
 21995 ;;  data            1    4[COMRAM] PTR unsigned char 
 21996 ;;		 -> IPV4_Send@cksm(2), IPV4_Send@totalLength(2), UDP_Send@cksm(2), UDP_Send@udpLength(2), 
 21997 ;;		 -> ICMP_PortUnreachable@cksm(2), ICMP_EchoReply@cksm(2), 
 21998 ;;  len             2    5[COMRAM] unsigned short 
 21999 ;;  offset          2    7[COMRAM] unsigned short 
 22000 ;; Auto vars:     Size  Location     Type
 22001 ;;  current_tx_p    2   11[COMRAM] unsigned short 
 22002 ;; Return value:  Size  Location     Type
 22003 ;;                  1    wreg      void 
 22004 ;; Registers used:
 22005 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22006 ;; Tracked objects:
 22007 ;;		On entry : 0/E
 22008 ;;		On exit  : 0/0
 22009 ;;		Unchanged: 0/0
 22010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22011 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22012 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22013 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22014 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22015 ;;Total ram usage:        9 bytes
 22016 ;; Hardware stack levels used: 1
 22017 ;; Hardware stack levels required when called: 5
 22018 ;; This function calls:
 22019 ;;		_ETH_EdataWrite
 22020 ;; This function is called by:
 22021 ;;		_ICMP_EchoReply
 22022 ;;		_ICMP_PortUnreachable
 22023 ;;		_UDP_Send
 22024 ;;		_IPV4_Send
 22025 ;; This function uses a non-reentrant model
 22026 ;;
 22027                           
 22028                           	psect	text91
 22029   017704                     __ptext91:
 22030                           	callstack 0
 22031   017704                     _ETH_Insert:
 22032                           	callstack 22
 22033                           
 22034                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 758: void ETH_Insert(char *data, ui
      +                          nt16_t len, uint16_t offset);mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 759: {;
      +                          mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 760:     uint16_t current_tx_ptr = E
      +                          WRPT;
 22035                           
 22036                           ;incstack = 0
 22037   017704  CEE2 F00C          	movff	3810,ETH_Insert@current_tx_ptr	;volatile
 22038   017708  CEE3 F00D          	movff	3811,ETH_Insert@current_tx_ptr+1	;volatile
 22039                           
 22040                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 761:     EWRPT = pHead->packetStart
      +                           + offset + 1;
 22041   01770C  0101               	movlb	1	; () banked
 22042   01770E  EE20 F002          	lfsr	2,2
 22043   017712  5149               	movf	_pHead& (0+255),w,b
 22044   017714  26D9               	addwf	fsr2l,f,c
 22045   017716  514A               	movf	(_pHead+1)& (0+255),w,b
 22046   017718  22DA               	addwfc	fsr2h,f,c
 22047   01771A  CFDE F00A          	movff	postinc2,??_ETH_Insert
 22048   01771E  CFDD F00B          	movff	postdec2,??_ETH_Insert+1
 22049   017722  5008               	movf	ETH_Insert@offset^0,w,c
 22050   017724  260A               	addwf	??_ETH_Insert^0,f,c
 22051   017726  5009               	movf	(ETH_Insert@offset+1)^0,w,c
 22052   017728  220B               	addwfc	(??_ETH_Insert+1)^0,f,c
 22053   01772A  0E01               	movlw	1
 22054   01772C  240A               	addwf	??_ETH_Insert^0,w,c
 22055   01772E  010E               	movlb	14	; () banked
 22056   017730  6FE2               	movwf	226,b	;volatile
 22057   017732  0E00               	movlw	0
 22058   017734  200B               	addwfc	(??_ETH_Insert+1)^0,w,c
 22059   017736  6FE3               	movwf	227,b	;volatile
 22060                           
 22061                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 762:     while(len--)
 22062   017738  D007               	goto	l13187
 22063   01773A                     l13183:
 22064                           
 22065                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 763:     {;mcc_generated_files/TCPI
      +                          PLibrary/ETHxxJ6x_driver.c: 764:         ETH_EdataWrite(*data++);
 22066   01773A  5005               	movf	ETH_Insert@data^0,w,c
 22067   01773C  6ED9               	movwf	fsr2l,c
 22068   01773E  6ADA               	clrf	fsr2h,c
 22069   017740  50DF               	movf	indf2,w,c
 22070   017742  ECD8  F0C1         	call	_ETH_EdataWrite
 22071   017746  2A05               	incf	ETH_Insert@data^0,f,c
 22072   017748                     l13187:
 22073                           
 22074                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 762:     while(len--)
 22075   017748  0606               	decf	ETH_Insert@len^0,f,c
 22076   01774A  A0D8               	btfss	status,0,c
 22077   01774C  0607               	decf	(ETH_Insert@len+1)^0,f,c
 22078   01774E  2806               	incf	ETH_Insert@len^0,w,c
 22079   017750  E1F4               	bnz	l13183
 22080   017752  2807               	incf	(ETH_Insert@len+1)^0,w,c
 22081   017754  A4D8               	btfss	status,2,c
 22082   017756  D7F1               	goto	l13183
 22083                           
 22084                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 766:     EWRPT = current_tx_ptr;
 22085   017758  C00C  FEE2         	movff	ETH_Insert@current_tx_ptr,3810	;volatile
 22086   01775C  C00D  FEE3         	movff	ETH_Insert@current_tx_ptr+1,3811	;volatile
 22087   017760  0012               	return		;funcret
 22088   017762                     __end_of_ETH_Insert:
 22089                           	callstack 0
 22090                           
 22091 ;; *************** function _ETH_SaveRDPT *****************
 22092 ;; Defined at:
 22093 ;;		line 1059 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 22094 ;; Parameters:    Size  Location     Type
 22095 ;;		None
 22096 ;; Auto vars:     Size  Location     Type
 22097 ;;		None
 22098 ;; Return value:  Size  Location     Type
 22099 ;;                  1    wreg      void 
 22100 ;; Registers used:
 22101 ;;		None
 22102 ;; Tracked objects:
 22103 ;;		On entry : 0/0
 22104 ;;		On exit  : 0/0
 22105 ;;		Unchanged: 0/0
 22106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22111 ;;Total ram usage:        0 bytes
 22112 ;; Hardware stack levels used: 1
 22113 ;; Hardware stack levels required when called: 4
 22114 ;; This function calls:
 22115 ;;		Nothing
 22116 ;; This function is called by:
 22117 ;;		_ICMP_EchoReply
 22118 ;;		_ICMP_PortUnreachable
 22119 ;; This function uses a non-reentrant model
 22120 ;;
 22121                           
 22122                           	psect	text92
 22123   01838C                     __ptext92:
 22124                           	callstack 0
 22125   01838C                     _ETH_SaveRDPT:
 22126                           	callstack 20
 22127                           
 22128                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1061:     ethData.saveRDPT = ERDPT;
 22129                           
 22130                           ;incstack = 0
 22131   01838C  CF7A F126          	movff	3962,_ethData+2	;volatile
 22132   018390  CF7B F127          	movff	3963,_ethData+3	;volatile
 22133   018394  0012               	return		;funcret
 22134   018396                     __end_of_ETH_SaveRDPT:
 22135                           	callstack 0
 22136                           
 22137 ;; *************** function _ETH_Read16 *****************
 22138 ;; Defined at:
 22139 ;;		line 439 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 22140 ;; Parameters:    Size  Location     Type
 22141 ;;		None
 22142 ;; Auto vars:     Size  Location     Type
 22143 ;;  ret             2    6[COMRAM] unsigned short 
 22144 ;; Return value:  Size  Location     Type
 22145 ;;                  2    4[COMRAM] unsigned short 
 22146 ;; Registers used:
 22147 ;;		wreg, status,2, status,0, cstack
 22148 ;; Tracked objects:
 22149 ;;		On entry : 3E/1
 22150 ;;		On exit  : 3F/1
 22151 ;;		Unchanged: 0/0
 22152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22153 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22154 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22156 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22157 ;;Total ram usage:        4 bytes
 22158 ;; Hardware stack levels used: 1
 22159 ;; Hardware stack levels required when called: 5
 22160 ;; This function calls:
 22161 ;;		_ETH_EdataRead
 22162 ;; This function is called by:
 22163 ;;		_ICMP_Receive
 22164 ;;		_ICMP_EchoReply
 22165 ;; This function uses a non-reentrant model
 22166 ;;
 22167                           
 22168                           	psect	text93
 22169   017D2C                     __ptext93:
 22170                           	callstack 0
 22171   017D2C                     _ETH_Read16:
 22172                           	callstack 19
 22173                           
 22174                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 441:     uint16_t ret = 0;
 22175                           
 22176                           ;incstack = 0
 22177   017D2C  0E00               	movlw	0
 22178   017D2E  6E08               	movwf	(ETH_Read16@ret+1)^0,c
 22179   017D30  0E00               	movlw	0
 22180   017D32  6E07               	movwf	ETH_Read16@ret^0,c
 22181                           
 22182                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 442:     if(rxPacketStatusVector.by
      +                          teCount >= sizeof(ret))
 22183   017D34  0101               	movlb	1	; () banked
 22184   017D36  512F               	movf	(_rxPacketStatusVector+1)& (0+255),w,b
 22185   017D38  E104               	bnz	u11450
 22186   017D3A  0E02               	movlw	2
 22187   017D3C  5D2E               	subwf	_rxPacketStatusVector& (0+255),w,b
 22188   017D3E  A0D8               	btfss	status,0,c
 22189   017D40  D00D               	goto	l2214
 22190   017D42                     u11450:
 22191                           
 22192                           ; BSR set to: 1
 22193                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 443:     {;mcc_generated_files/TCPI
      +                          PLibrary/ETHxxJ6x_driver.c: 444:         ((uint8_t *)&ret)[1] = ETH_EdataRead();
 22194   017D42  ECCB  F0C1         	call	_ETH_EdataRead	;wreg free
 22195   017D46  6E08               	movwf	(ETH_Read16@ret+1)^0,c
 22196                           
 22197                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 445:         ((uint8_t *)&ret)[0] =
      +                           ETH_EdataRead();
 22198   017D48  ECCB  F0C1         	call	_ETH_EdataRead	;wreg free
 22199   017D4C  6E07               	movwf	ETH_Read16@ret^0,c
 22200                           
 22201                           ; BSR set to: 14
 22202                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 446:         rxPacketStatusVector.b
      +                          yteCount -= sizeof(ret);
 22203   017D4E  0E02               	movlw	2
 22204   017D50  0101               	movlb	1	; () banked
 22205   017D52  5F2E               	subwf	_rxPacketStatusVector& (0+255),f,b
 22206   017D54  0E00               	movlw	0
 22207   017D56  5B2F               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
 22208                           
 22209                           ; BSR set to: 1
 22210                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 447:         ethData.error = 0;
 22211   017D58  9124               	bcf	_ethData& (0+255),0,b	;volatile
 22212                           
 22213                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 448:     }
 22214   017D5A  D001               	goto	l2215
 22215   017D5C                     l2214:
 22216                           
 22217                           ; BSR set to: 1
 22218                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 450:     {;mcc_generated_files/TCPI
      +                          PLibrary/ETHxxJ6x_driver.c: 451:         ethData.error = 1;
 22219   017D5C  8124               	bsf	_ethData& (0+255),0,b	;volatile
 22220   017D5E                     l2215:
 22221                           
 22222                           ; BSR set to: 1
 22223                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 453:     return ret;
 22224   017D5E  C007  F005         	movff	ETH_Read16@ret,?_ETH_Read16
 22225   017D62  C008  F006         	movff	ETH_Read16@ret+1,?_ETH_Read16+1
 22226                           
 22227                           ; BSR set to: 1
 22228   017D66  0012               	return		;funcret
 22229   017D68                     __end_of_ETH_Read16:
 22230                           	callstack 0
 22231                           
 22232 ;; *************** function _ETH_Copy *****************
 22233 ;; Defined at:
 22234 ;;		line 849 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 22235 ;; Parameters:    Size  Location     Type
 22236 ;;  len             2   10[COMRAM] unsigned short 
 22237 ;; Auto vars:     Size  Location     Type
 22238 ;;  tmp_len         2   14[COMRAM] unsigned short 
 22239 ;;  timer           2   12[COMRAM] unsigned short 
 22240 ;; Return value:  Size  Location     Type
 22241 ;;                  1    wreg      enum E5504
 22242 ;; Registers used:
 22243 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 22244 ;; Tracked objects:
 22245 ;;		On entry : 3F/0
 22246 ;;		On exit  : 0/0
 22247 ;;		Unchanged: 0/0
 22248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22249 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22250 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22252 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22253 ;;Total ram usage:        6 bytes
 22254 ;; Hardware stack levels used: 1
 22255 ;; Hardware stack levels required when called: 5
 22256 ;; This function calls:
 22257 ;;		___wmul
 22258 ;; This function is called by:
 22259 ;;		_ICMP_EchoReply
 22260 ;;		_ICMP_PortUnreachable
 22261 ;; This function uses a non-reentrant model
 22262 ;;
 22263                           
 22264                           	psect	text94
 22265   016BFA                     __ptext94:
 22266                           	callstack 0
 22267   016BFA                     _ETH_Copy:
 22268                           	callstack 19
 22269                           
 22270                           ; BSR set to: 0
 22271                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 849: error_msg ETH_Copy(uint16_t le
      +                          n);mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 850: {;mcc_generated_files/TCPIPL
      +                          ibrary/ETHxxJ6x_driver.c: 851:     uint16_t timer;;mcc_generated_files/TCPIPLibrary/ETHx
      +                          xJ6x_driver.c: 852:     uint16_t tmp_len;;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driv
      +                          er.c: 854:     timer = 2 * len;
 22272                           
 22273                           ; BSR set to: 1
 22274                           ;incstack = 0
 22275   016BFA  90D8               	bcf	status,0,c
 22276   016BFC  340B               	rlcf	ETH_Copy@len^0,w,c
 22277   016BFE  6E0D               	movwf	ETH_Copy@timer^0,c
 22278   016C00  340C               	rlcf	(ETH_Copy@len+1)^0,w,c
 22279   016C02  6E0E               	movwf	(ETH_Copy@timer+1)^0,c
 22280                           
 22281                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 855:     while(ECON1bits.DMAST!=0 &
      +                          & --timer) __nop();
 22282   016C04  D001               	goto	l2323
 22283   016C06                     l2324:
 22284   016C06  0000               	nop	
 22285   016C08                     l2323:
 22286   016C08  AAD2               	btfss	210,5,c	;volatile
 22287   016C0A  D007               	goto	u11470
 22288   016C0C  060D               	decf	ETH_Copy@timer^0,f,c
 22289   016C0E  A0D8               	btfss	status,0,c
 22290   016C10  060E               	decf	(ETH_Copy@timer+1)^0,f,c
 22291   016C12  500D               	movf	ETH_Copy@timer^0,w,c
 22292   016C14  100E               	iorwf	(ETH_Copy@timer+1)^0,w,c
 22293   016C16  A4D8               	btfss	status,2,c
 22294   016C18  D7F6               	goto	l2324
 22295   016C1A                     u11470:
 22296                           
 22297                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 856:     if(ECON1bits.DMAST==0)
 22298   016C1A  BAD2               	btfsc	210,5,c	;volatile
 22299   016C1C  D042               	goto	l2328
 22300                           
 22301                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 857:     {;mcc_generated_files/TCPI
      +                          PLibrary/ETHxxJ6x_driver.c: 858:         EDMADST = EWRPT;
 22302   016C1E  CEE2 FEF4          	movff	3810,3828	;volatile
 22303   016C22  CEE3 FEF5          	movff	3811,3829	;volatile
 22304                           
 22305                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 859:         EDMAST = ERDPT;
 22306   016C26  CF7A FEF0          	movff	3962,3824	;volatile
 22307   016C2A  CF7B FEF1          	movff	3963,3825	;volatile
 22308                           
 22309                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 861:         tmp_len = ERDPT + len;
 22310   016C2E  500B               	movf	ETH_Copy@len^0,w,c
 22311   016C30  247A               	addwf	122,w,c	;volatile
 22312   016C32  6E0F               	movwf	ETH_Copy@tmp_len^0,c
 22313   016C34  500C               	movf	(ETH_Copy@len+1)^0,w,c
 22314   016C36  207B               	addwfc	123,w,c	;volatile
 22315   016C38  6E10               	movwf	(ETH_Copy@tmp_len+1)^0,c
 22316                           
 22317                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 863:         if (tmp_len > ((((8192
      +                          ) - (((1518) + (7)) << 1)) - 1)) )
 22318   016C3A  0E16               	movlw	22
 22319   016C3C  5C0F               	subwf	ETH_Copy@tmp_len^0,w,c
 22320   016C3E  0E14               	movlw	20
 22321   016C40  5810               	subwfb	(ETH_Copy@tmp_len+1)^0,w,c
 22322   016C42  A0D8               	btfss	status,0,c
 22323   016C44  D006               	goto	l13515
 22324                           
 22325                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 864:         {;mcc_generated_files/
      +                          TCPIPLibrary/ETHxxJ6x_driver.c: 865:             tmp_len = tmp_len - ((((8192) - (((1518
      +                          ) + (7)) << 1)) - 1));
 22326   016C46  0EEB               	movlw	235
 22327   016C48  240F               	addwf	ETH_Copy@tmp_len^0,w,c
 22328   016C4A  6E0F               	movwf	ETH_Copy@tmp_len^0,c
 22329   016C4C  0EEB               	movlw	235
 22330   016C4E  2010               	addwfc	(ETH_Copy@tmp_len+1)^0,w,c
 22331   016C50  6E10               	movwf	(ETH_Copy@tmp_len+1)^0,c
 22332   016C52                     l13515:
 22333                           
 22334                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 869:         {;mcc_generated_files/
      +                          TCPIPLibrary/ETHxxJ6x_driver.c: 870:             EDMAND = tmp_len;
 22335                           
 22336                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 868:         }else
 22337                           
 22338                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 866:             EDMAND = (0) + tmp
      +                          _len;
 22339   016C52  C00F  FEF2         	movff	ETH_Copy@tmp_len,3826	;volatile
 22340   016C56  C010  FEF3         	movff	ETH_Copy@tmp_len+1,3827	;volatile
 22341                           
 22342                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 873:         ECON1bits.CSUMEN = 0;
 22343                           
 22344                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 871:         }
 22345   016C5A  98D2               	bcf	210,4,c	;volatile
 22346                           
 22347                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 874:         ECON1bits.DMAST = 1;
 22348   016C5C  8AD2               	bsf	210,5,c	;volatile
 22349                           
 22350                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 876:         timer = 40 * len;
 22351   016C5E  C00B  F005         	movff	ETH_Copy@len,___wmul@multiplier
 22352   016C62  C00C  F006         	movff	ETH_Copy@len+1,___wmul@multiplier+1
 22353   016C66  0E00               	movlw	0
 22354   016C68  6E08               	movwf	(___wmul@multiplicand+1)^0,c
 22355   016C6A  0E28               	movlw	40
 22356   016C6C  6E07               	movwf	___wmul@multiplicand^0,c
 22357   016C6E  EC79  F0C0         	call	___wmul	;wreg free
 22358   016C72  C005  F00D         	movff	?___wmul,ETH_Copy@timer
 22359   016C76  C006  F00E         	movff	?___wmul+1,ETH_Copy@timer+1
 22360                           
 22361                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 877:         while(ECON1bits.DMAST!
      +                          =0 && --timer) __nop();
 22362   016C7A  D001               	goto	l2331
 22363   016C7C                     l2332:
 22364   016C7C  0000               	nop	
 22365   016C7E                     l2331:
 22366   016C7E  AAD2               	btfss	210,5,c	;volatile
 22367   016C80  D007               	goto	u11510
 22368   016C82  060D               	decf	ETH_Copy@timer^0,f,c
 22369   016C84  A0D8               	btfss	status,0,c
 22370   016C86  060E               	decf	(ETH_Copy@timer+1)^0,f,c
 22371   016C88  500D               	movf	ETH_Copy@timer^0,w,c
 22372   016C8A  100E               	iorwf	(ETH_Copy@timer+1)^0,w,c
 22373   016C8C  A4D8               	btfss	status,2,c
 22374   016C8E  D7F6               	goto	l2332
 22375   016C90                     u11510:
 22376                           
 22377                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 878:         if(ECON1bits.DMAST == 
      +                          0)
 22378   016C90  BAD2               	btfsc	210,5,c	;volatile
 22379   016C92  D007               	goto	l2328
 22380                           
 22381                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 879:         {;mcc_generated_files/
      +                          TCPIPLibrary/ETHxxJ6x_driver.c: 880:             EWRPT += len;
 22382   016C94  500B               	movf	ETH_Copy@len^0,w,c	;volatile
 22383   016C96  010E               	movlb	14	; () banked
 22384   016C98  27E2               	addwf	226,f,b	;volatile
 22385   016C9A  500C               	movf	(ETH_Copy@len+1)^0,w,c	;volatile
 22386   016C9C  23E3               	addwfc	227,f,b	;volatile
 22387                           
 22388                           ; BSR set to: 14
 22389                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 881:             return SUCCESS;
 22390   016C9E  0E01               	movlw	1
 22391   016CA0  0012               	return	
 22392   016CA2                     l2328:
 22393   016CA2  00FF               	reset		;# 
 22394                           
 22395                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 886:     return DMA_TIMEOUT;
 22396   016CA4  0E0C               	movlw	12
 22397   016CA6  0012               	return		;funcret
 22398   016CA8                     __end_of_ETH_Copy:
 22399                           	callstack 0
 22400                           
 22401 ;; *************** function _ETH_Dump *****************
 22402 ;; Defined at:
 22403 ;;		line 773 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 22404 ;; Parameters:    Size  Location     Type
 22405 ;;  length          2    4[COMRAM] unsigned short 
 22406 ;; Auto vars:     Size  Location     Type
 22407 ;;		None
 22408 ;; Return value:  Size  Location     Type
 22409 ;;                  1    wreg      void 
 22410 ;; Registers used:
 22411 ;;		wreg, status,2, status,0
 22412 ;; Tracked objects:
 22413 ;;		On entry : 3F/0
 22414 ;;		On exit  : 3F/1
 22415 ;;		Unchanged: 0/0
 22416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22417 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22420 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22421 ;;Total ram usage:        2 bytes
 22422 ;; Hardware stack levels used: 1
 22423 ;; Hardware stack levels required when called: 4
 22424 ;; This function calls:
 22425 ;;		Nothing
 22426 ;; This function is called by:
 22427 ;;		_ICMP_Receive
 22428 ;;		_IPV4_Packet
 22429 ;; This function uses a non-reentrant model
 22430 ;;
 22431                           
 22432                           	psect	text95
 22433   017DA4                     __ptext95:
 22434                           	callstack 0
 22435   017DA4                     _ETH_Dump:
 22436                           	callstack 21
 22437                           
 22438                           ; BSR set to: 0
 22439                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 773: void ETH_Dump(uint16_t length)
      +                          ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 774: {;mcc_generated_files/TCPIPLib
      +                          rary/ETHxxJ6x_driver.c: 775:     length = (rxPacketStatusVector.byteCount <= length) ? r
      +                          xPacketStatusVector.byteCount : length;
 22440                           
 22441                           ;incstack = 0
 22442   017DA4  0101               	movlb	1	; () banked
 22443   017DA6  512E               	movf	_rxPacketStatusVector& (0+255),w,b
 22444   017DA8  5C05               	subwf	ETH_Dump@length^0,w,c
 22445   017DAA  512F               	movf	(_rxPacketStatusVector+1)& (0+255),w,b
 22446   017DAC  5806               	subwfb	(ETH_Dump@length+1)^0,w,c
 22447   017DAE  B0D8               	btfsc	status,0,c
 22448   017DB0  D005               	goto	l2309
 22449                           
 22450                           ; BSR set to: 1
 22451   017DB2  C005  F005         	movff	ETH_Dump@length,ETH_Dump@length
 22452   017DB6  C006  F006         	movff	ETH_Dump@length+1,ETH_Dump@length+1
 22453   017DBA  D004               	goto	l13791
 22454   017DBC                     l2309:
 22455                           
 22456                           ; BSR set to: 1
 22457   017DBC  C12E  F005         	movff	_rxPacketStatusVector,ETH_Dump@length
 22458   017DC0  C12F  F006         	movff	_rxPacketStatusVector+1,ETH_Dump@length+1
 22459   017DC4                     l13791:
 22460                           
 22461                           ; BSR set to: 1
 22462                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 776:     if (length)
 22463   017DC4  5005               	movf	ETH_Dump@length^0,w,c
 22464   017DC6  1006               	iorwf	(ETH_Dump@length+1)^0,w,c
 22465   017DC8  B4D8               	btfsc	status,2,c
 22466   017DCA  0012               	return	
 22467                           
 22468                           ; BSR set to: 1
 22469                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 777:     {;mcc_generated_files/TCPI
      +                          PLibrary/ETHxxJ6x_driver.c: 779:         ERDPT += length;
 22470   017DCC  5005               	movf	ETH_Dump@length^0,w,c	;volatile
 22471   017DCE  267A               	addwf	122,f,c	;volatile
 22472   017DD0  5006               	movf	(ETH_Dump@length+1)^0,w,c	;volatile
 22473   017DD2  227B               	addwfc	123,f,c	;volatile
 22474                           
 22475                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 780:         rxPacketStatusVector.b
      +                          yteCount -= length;
 22476   017DD4  5005               	movf	ETH_Dump@length^0,w,c
 22477   017DD6  5F2E               	subwf	_rxPacketStatusVector& (0+255),f,b
 22478   017DD8  5006               	movf	(ETH_Dump@length+1)^0,w,c
 22479   017DDA  5B2F               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
 22480                           
 22481                           ; BSR set to: 1
 22482   017DDC  0012               	return		;funcret
 22483   017DDE                     __end_of_ETH_Dump:
 22484                           	callstack 0
 22485                           
 22486 ;; *************** function _ETH_RxComputeChecksum *****************
 22487 ;; Defined at:
 22488 ;;		line 1009 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 22489 ;; Parameters:    Size  Location     Type
 22490 ;;  len             2   18[COMRAM] unsigned short 
 22491 ;;  seed            2   20[COMRAM] unsigned short 
 22492 ;; Auto vars:     Size  Location     Type
 22493 ;;  cksm            4   35[COMRAM] unsigned long 
 22494 ;;  rxptr           2   33[COMRAM] unsigned short 
 22495 ;; Return value:  Size  Location     Type
 22496 ;;                  2   18[COMRAM] unsigned short 
 22497 ;; Registers used:
 22498 ;;		wreg, status,2, status,0, cstack
 22499 ;; Tracked objects:
 22500 ;;		On entry : 3F/0
 22501 ;;		On exit  : 30/0
 22502 ;;		Unchanged: 0/0
 22503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22504 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22505 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22506 ;;      Temps:         11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22507 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22508 ;;Total ram usage:       21 bytes
 22509 ;; Hardware stack levels used: 1
 22510 ;; Hardware stack levels required when called: 6
 22511 ;; This function calls:
 22512 ;;		_ETH_ComputeChecksum
 22513 ;; This function is called by:
 22514 ;;		_IPV4_Packet
 22515 ;; This function uses a non-reentrant model
 22516 ;;
 22517                           
 22518                           	psect	text96
 22519   016F32                     __ptext96:
 22520                           	callstack 0
 22521   016F32                     _ETH_RxComputeChecksum:
 22522                           	callstack 20
 22523                           
 22524                           ; BSR set to: 0
 22525                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1009: uint16_t ETH_RxComputeChecksu
      +                          m(uint16_t len, uint16_t seed);mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1010:
      +                           {;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1011:     uint16_t rxptr;;mcc_gen
      +                          erated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1012:     uint32_t cksm;;mcc_generated_file
      +                          s/TCPIPLibrary/ETHxxJ6x_driver.c: 1015:     rxptr = ERDPT;
 22526                           
 22527                           ; BSR set to: 1
 22528                           ;incstack = 0
 22529   016F32  CF7A F022          	movff	3962,ETH_RxComputeChecksum@rxptr	;volatile
 22530   016F36  CF7B F023          	movff	3963,ETH_RxComputeChecksum@rxptr+1	;volatile
 22531                           
 22532                           ; BSR set to: 0
 22533                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1017:     cksm = ETH_ComputeChecksu
      +                          m( len, seed);
 22534   016F3A  C013  F005         	movff	ETH_RxComputeChecksum@len,ETH_ComputeChecksum@len
 22535   016F3E  C014  F006         	movff	ETH_RxComputeChecksum@len+1,ETH_ComputeChecksum@len+1
 22536   016F42  C015  F007         	movff	ETH_RxComputeChecksum@seed,ETH_ComputeChecksum@seed
 22537   016F46  C016  F008         	movff	ETH_RxComputeChecksum@seed+1,ETH_ComputeChecksum@seed+1
 22538   016F4A  EC84  F0B4         	call	_ETH_ComputeChecksum	;wreg free
 22539   016F4E  C005  F024         	movff	?_ETH_ComputeChecksum,ETH_RxComputeChecksum@cksm
 22540   016F52  C006  F025         	movff	?_ETH_ComputeChecksum+1,ETH_RxComputeChecksum@cksm+1
 22541   016F56  6A26               	clrf	(ETH_RxComputeChecksum@cksm+2)^0,c
 22542   016F58  6A27               	clrf	(ETH_RxComputeChecksum@cksm+3)^0,c
 22543                           
 22544                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1020:     ERDPT = rxptr;
 22545   016F5A  C022  FF7A         	movff	ETH_RxComputeChecksum@rxptr,3962	;volatile
 22546   016F5E  C023  FF7B         	movff	ETH_RxComputeChecksum@rxptr+1,3963	;volatile
 22547                           
 22548                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1023:     cksm = ((cksm & 0xFF00) >
      +                          > 8) | ((cksm & 0x00FF) << 8);
 22549   016F62  0EFF               	movlw	255
 22550   016F64  1424               	andwf	ETH_RxComputeChecksum@cksm^0,w,c
 22551   016F66  6E17               	movwf	??_ETH_RxComputeChecksum^0,c
 22552   016F68  0E00               	movlw	0
 22553   016F6A  1425               	andwf	(ETH_RxComputeChecksum@cksm+1)^0,w,c
 22554   016F6C  6E18               	movwf	(??_ETH_RxComputeChecksum+1)^0,c
 22555   016F6E  0E00               	movlw	0
 22556   016F70  1426               	andwf	(ETH_RxComputeChecksum@cksm+2)^0,w,c
 22557   016F72  6E19               	movwf	(??_ETH_RxComputeChecksum+2)^0,c
 22558   016F74  0E00               	movlw	0
 22559   016F76  1427               	andwf	(ETH_RxComputeChecksum@cksm+3)^0,w,c
 22560   016F78  6E1A               	movwf	(??_ETH_RxComputeChecksum+3)^0,c
 22561   016F7A  C019  F01A         	movff	??_ETH_RxComputeChecksum+2,??_ETH_RxComputeChecksum+3
 22562   016F7E  C018  F019         	movff	??_ETH_RxComputeChecksum+1,??_ETH_RxComputeChecksum+2
 22563   016F82  C017  F018         	movff	??_ETH_RxComputeChecksum,??_ETH_RxComputeChecksum+1
 22564   016F86  6A17               	clrf	??_ETH_RxComputeChecksum^0,c
 22565   016F88  0EFF               	movlw	255
 22566   016F8A  1425               	andwf	(ETH_RxComputeChecksum@cksm+1)^0,w,c
 22567   016F8C  6E1B               	movwf	(??_ETH_RxComputeChecksum+4)^0,c
 22568   016F8E  0E00               	movlw	0
 22569   016F90  1426               	andwf	(ETH_RxComputeChecksum@cksm+2)^0,w,c
 22570   016F92  6E1C               	movwf	(??_ETH_RxComputeChecksum+5)^0,c
 22571   016F94  0E00               	movlw	0
 22572   016F96  1427               	andwf	(ETH_RxComputeChecksum@cksm+3)^0,w,c
 22573   016F98  6E1D               	movwf	(??_ETH_RxComputeChecksum+6)^0,c
 22574   016F9A  501B               	movf	(??_ETH_RxComputeChecksum+4)^0,w,c
 22575   016F9C  6E1E               	movwf	(??_ETH_RxComputeChecksum+7)^0,c
 22576   016F9E  501C               	movf	(??_ETH_RxComputeChecksum+5)^0,w,c
 22577   016FA0  6E1F               	movwf	(??_ETH_RxComputeChecksum+8)^0,c
 22578   016FA2  501D               	movf	(??_ETH_RxComputeChecksum+6)^0,w,c
 22579   016FA4  6E20               	movwf	(??_ETH_RxComputeChecksum+9)^0,c
 22580   016FA6  6A21               	clrf	(??_ETH_RxComputeChecksum+10)^0,c
 22581   016FA8  5017               	movf	??_ETH_RxComputeChecksum^0,w,c
 22582   016FAA  101E               	iorwf	(??_ETH_RxComputeChecksum+7)^0,w,c
 22583   016FAC  6E24               	movwf	ETH_RxComputeChecksum@cksm^0,c
 22584   016FAE  5018               	movf	(??_ETH_RxComputeChecksum+1)^0,w,c
 22585   016FB0  101F               	iorwf	(??_ETH_RxComputeChecksum+8)^0,w,c
 22586   016FB2  6E25               	movwf	(ETH_RxComputeChecksum@cksm+1)^0,c
 22587   016FB4  5019               	movf	(??_ETH_RxComputeChecksum+2)^0,w,c
 22588   016FB6  1020               	iorwf	(??_ETH_RxComputeChecksum+9)^0,w,c
 22589   016FB8  6E26               	movwf	(ETH_RxComputeChecksum@cksm+2)^0,c
 22590   016FBA  501A               	movf	(??_ETH_RxComputeChecksum+3)^0,w,c
 22591   016FBC  1021               	iorwf	(??_ETH_RxComputeChecksum+10)^0,w,c
 22592   016FBE  6E27               	movwf	(ETH_RxComputeChecksum@cksm+3)^0,c
 22593                           
 22594                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1024:     return (uint16_t)cksm;
 22595   016FC0  C024  F013         	movff	ETH_RxComputeChecksum@cksm,?_ETH_RxComputeChecksum
 22596   016FC4  C025  F014         	movff	ETH_RxComputeChecksum@cksm+1,?_ETH_RxComputeChecksum+1
 22597   016FC8  0012               	return		;funcret
 22598   016FCA                     __end_of_ETH_RxComputeChecksum:
 22599                           	callstack 0
 22600                           
 22601 ;; *************** function _ETH_ComputeChecksum *****************
 22602 ;; Defined at:
 22603 ;;		line 938 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 22604 ;; Parameters:    Size  Location     Type
 22605 ;;  len             2    4[COMRAM] unsigned short 
 22606 ;;  seed            2    6[COMRAM] unsigned short 
 22607 ;; Auto vars:     Size  Location     Type
 22608 ;;  cksm            4   14[COMRAM] unsigned long 
 22609 ;;  v               2   12[COMRAM] unsigned short 
 22610 ;; Return value:  Size  Location     Type
 22611 ;;                  2    4[COMRAM] unsigned short 
 22612 ;; Registers used:
 22613 ;;		wreg, status,2, status,0, cstack
 22614 ;; Tracked objects:
 22615 ;;		On entry : 3E/1
 22616 ;;		On exit  : 30/0
 22617 ;;		Unchanged: 0/0
 22618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22619 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22620 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22621 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22622 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22623 ;;Total ram usage:       14 bytes
 22624 ;; Hardware stack levels used: 1
 22625 ;; Hardware stack levels required when called: 5
 22626 ;; This function calls:
 22627 ;;		_ETH_EdataRead
 22628 ;; This function is called by:
 22629 ;;		_ETH_TxComputeChecksum
 22630 ;;		_ETH_RxComputeChecksum
 22631 ;; This function uses a non-reentrant model
 22632 ;;
 22633                           
 22634                           	psect	text97
 22635   016908                     __ptext97:
 22636                           	callstack 0
 22637   016908                     _ETH_ComputeChecksum:
 22638                           	callstack 21
 22639                           
 22640                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 938: static uint16_t ETH_ComputeChe
      +                          cksum(uint16_t len, uint16_t seed);mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 9
      +                          39: {;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 940:     uint32_t cksm;;mcc_ge
      +                          nerated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 941:     uint16_t v;;mcc_generated_files/T
      +                          CPIPLibrary/ETHxxJ6x_driver.c: 943:     cksm = seed;
 22641                           
 22642                           ;incstack = 0
 22643   016908  C007  F00F         	movff	ETH_ComputeChecksum@seed,ETH_ComputeChecksum@cksm
 22644   01690C  C008  F010         	movff	ETH_ComputeChecksum@seed+1,ETH_ComputeChecksum@cksm+1
 22645   016910  6A11               	clrf	(ETH_ComputeChecksum@cksm+2)^0,c
 22646   016912  6A12               	clrf	(ETH_ComputeChecksum@cksm+3)^0,c
 22647                           
 22648                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 945:     while(len > 1)
 22649   016914  D016               	goto	l13005
 22650   016916                     l12995:
 22651                           
 22652                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 946:     {;mcc_generated_files/TCPI
      +                          PLibrary/ETHxxJ6x_driver.c: 947:         v = 0;
 22653   016916  0E00               	movlw	0
 22654   016918  6E0E               	movwf	(ETH_ComputeChecksum@v+1)^0,c
 22655   01691A  0E00               	movlw	0
 22656   01691C  6E0D               	movwf	ETH_ComputeChecksum@v^0,c
 22657                           
 22658                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 948:         ((char *)&v)[1] = ETH_
      +                          EdataRead();
 22659   01691E  ECCB  F0C1         	call	_ETH_EdataRead	;wreg free
 22660   016922  6E0E               	movwf	(ETH_ComputeChecksum@v+1)^0,c
 22661                           
 22662                           ; BSR set to: 14
 22663                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 949:         ((char *)&v)[0] = ETH_
      +                          EdataRead();
 22664   016924  ECCB  F0C1         	call	_ETH_EdataRead	;wreg free
 22665   016928  6E0D               	movwf	ETH_ComputeChecksum@v^0,c
 22666                           
 22667                           ; BSR set to: 14
 22668                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 950:         cksm += v;
 22669   01692A  500D               	movf	ETH_ComputeChecksum@v^0,w,c
 22670   01692C  260F               	addwf	ETH_ComputeChecksum@cksm^0,f,c
 22671   01692E  500E               	movf	(ETH_ComputeChecksum@v+1)^0,w,c
 22672   016930  2210               	addwfc	(ETH_ComputeChecksum@cksm+1)^0,f,c
 22673   016932  0E00               	movlw	0
 22674   016934  2211               	addwfc	(ETH_ComputeChecksum@cksm+2)^0,f,c
 22675   016936  0E00               	movlw	0
 22676   016938  2212               	addwfc	(ETH_ComputeChecksum@cksm+3)^0,f,c
 22677                           
 22678                           ; BSR set to: 14
 22679                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 951:         len -= 2;
 22680   01693A  0E02               	movlw	2
 22681   01693C  5E05               	subwf	ETH_ComputeChecksum@len^0,f,c
 22682   01693E  0E00               	movlw	0
 22683   016940  5A06               	subwfb	(ETH_ComputeChecksum@len+1)^0,f,c
 22684   016942                     l13005:
 22685                           
 22686                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 945:     while(len > 1)
 22687   016942  5006               	movf	(ETH_ComputeChecksum@len+1)^0,w,c
 22688   016944  E1E8               	bnz	l12995
 22689   016946  0E02               	movlw	2
 22690   016948  5C05               	subwf	ETH_ComputeChecksum@len^0,w,c
 22691   01694A  B0D8               	btfsc	status,0,c
 22692   01694C  D7E4               	goto	l12995
 22693                           
 22694                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 954:     if(len)
 22695   01694E  5005               	movf	ETH_ComputeChecksum@len^0,w,c
 22696   016950  1006               	iorwf	(ETH_ComputeChecksum@len+1)^0,w,c
 22697   016952  B4D8               	btfsc	status,2,c
 22698   016954  D02A               	goto	l2362
 22699                           
 22700                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 955:     {;mcc_generated_files/TCPI
      +                          PLibrary/ETHxxJ6x_driver.c: 956:         v = 0;
 22701   016956  0E00               	movlw	0
 22702   016958  6E0E               	movwf	(ETH_ComputeChecksum@v+1)^0,c
 22703   01695A  0E00               	movlw	0
 22704   01695C  6E0D               	movwf	ETH_ComputeChecksum@v^0,c
 22705                           
 22706                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 957:         ((char *)&v)[1] = ETH_
      +                          EdataRead();
 22707   01695E  ECCB  F0C1         	call	_ETH_EdataRead	;wreg free
 22708   016962  6E0E               	movwf	(ETH_ComputeChecksum@v+1)^0,c
 22709                           
 22710                           ; BSR set to: 14
 22711                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 958:         ((char *)&v)[0] = 0;
 22712   016964  0E00               	movlw	0
 22713   016966  6E0D               	movwf	ETH_ComputeChecksum@v^0,c
 22714                           
 22715                           ; BSR set to: 14
 22716                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 959:         cksm += v;
 22717   016968  500D               	movf	ETH_ComputeChecksum@v^0,w,c
 22718   01696A  260F               	addwf	ETH_ComputeChecksum@cksm^0,f,c
 22719   01696C  500E               	movf	(ETH_ComputeChecksum@v+1)^0,w,c
 22720   01696E  2210               	addwfc	(ETH_ComputeChecksum@cksm+1)^0,f,c
 22721   016970  0E00               	movlw	0
 22722   016972  2211               	addwfc	(ETH_ComputeChecksum@cksm+2)^0,f,c
 22723   016974  0E00               	movlw	0
 22724   016976  2212               	addwfc	(ETH_ComputeChecksum@cksm+3)^0,f,c
 22725   016978  D018               	goto	l2362
 22726   01697A                     l13017:
 22727                           
 22728                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 964:     {;mcc_generated_files/TCPI
      +                          PLibrary/ETHxxJ6x_driver.c: 965:         cksm = (cksm & 0x0FFFF) + (cksm>>16);
 22729   01697A  0EFF               	movlw	255
 22730   01697C  140F               	andwf	ETH_ComputeChecksum@cksm^0,w,c
 22731   01697E  6E09               	movwf	??_ETH_ComputeChecksum^0,c
 22732   016980  0EFF               	movlw	255
 22733   016982  1410               	andwf	(ETH_ComputeChecksum@cksm+1)^0,w,c
 22734   016984  6E0A               	movwf	(??_ETH_ComputeChecksum+1)^0,c
 22735   016986  0E00               	movlw	0
 22736   016988  1411               	andwf	(ETH_ComputeChecksum@cksm+2)^0,w,c
 22737   01698A  6E0B               	movwf	(??_ETH_ComputeChecksum+2)^0,c
 22738   01698C  0E00               	movlw	0
 22739   01698E  1412               	andwf	(ETH_ComputeChecksum@cksm+3)^0,w,c
 22740   016990  6E0C               	movwf	(??_ETH_ComputeChecksum+3)^0,c
 22741   016992  5011               	movf	(ETH_ComputeChecksum@cksm+2)^0,w,c
 22742   016994  2409               	addwf	??_ETH_ComputeChecksum^0,w,c
 22743   016996  6E0F               	movwf	ETH_ComputeChecksum@cksm^0,c
 22744   016998  5012               	movf	(ETH_ComputeChecksum@cksm+3)^0,w,c
 22745   01699A  200A               	addwfc	(??_ETH_ComputeChecksum+1)^0,w,c
 22746   01699C  6E10               	movwf	(ETH_ComputeChecksum@cksm+1)^0,c
 22747   01699E  0E00               	movlw	0
 22748   0169A0  200B               	addwfc	(??_ETH_ComputeChecksum+2)^0,w,c
 22749   0169A2  6E11               	movwf	(ETH_ComputeChecksum@cksm+2)^0,c
 22750   0169A4  0E00               	movlw	0
 22751   0169A6  200C               	addwfc	(??_ETH_ComputeChecksum+3)^0,w,c
 22752   0169A8  6E12               	movwf	(ETH_ComputeChecksum@cksm+3)^0,c
 22753   0169AA                     l2362:
 22754                           
 22755                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 963:     while(cksm >> 16)
 22756   0169AA  5011               	movf	(ETH_ComputeChecksum@cksm+2)^0,w,c
 22757   0169AC  1012               	iorwf	(ETH_ComputeChecksum@cksm+3)^0,w,c
 22758   0169AE  A4D8               	btfss	status,2,c
 22759   0169B0  D7E4               	goto	l13017
 22760                           
 22761                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 969:     cksm = ~cksm;
 22762   0169B2  1C0F               	comf	ETH_ComputeChecksum@cksm^0,w,c
 22763   0169B4  6E0F               	movwf	ETH_ComputeChecksum@cksm^0,c
 22764   0169B6  1C10               	comf	(ETH_ComputeChecksum@cksm+1)^0,w,c
 22765   0169B8  6E10               	movwf	(ETH_ComputeChecksum@cksm+1)^0,c
 22766   0169BA  1C11               	comf	(ETH_ComputeChecksum@cksm+2)^0,w,c
 22767   0169BC  6E11               	movwf	(ETH_ComputeChecksum@cksm+2)^0,c
 22768   0169BE  1C12               	comf	(ETH_ComputeChecksum@cksm+3)^0,w,c
 22769   0169C0  6E12               	movwf	(ETH_ComputeChecksum@cksm+3)^0,c
 22770                           
 22771                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 972:     return (uint16_t)cksm;
 22772   0169C2  C00F  F005         	movff	ETH_ComputeChecksum@cksm,?_ETH_ComputeChecksum
 22773   0169C6  C010  F006         	movff	ETH_ComputeChecksum@cksm+1,?_ETH_ComputeChecksum+1
 22774   0169CA  0012               	return		;funcret
 22775   0169CC                     __end_of_ETH_ComputeChecksum:
 22776                           	callstack 0
 22777                           
 22778 ;; *************** function _ETH_NextPacketUpdate *****************
 22779 ;; Defined at:
 22780 ;;		line 306 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 22781 ;; Parameters:    Size  Location     Type
 22782 ;;		None
 22783 ;; Auto vars:     Size  Location     Type
 22784 ;;		None
 22785 ;; Return value:  Size  Location     Type
 22786 ;;                  1    wreg      void 
 22787 ;; Registers used:
 22788 ;;		wreg, status,2, status,0, cstack
 22789 ;; Tracked objects:
 22790 ;;		On entry : 3F/1
 22791 ;;		On exit  : 3F/1
 22792 ;;		Unchanged: 0/0
 22793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22798 ;;Total ram usage:        0 bytes
 22799 ;; Hardware stack levels used: 1
 22800 ;; Hardware stack levels required when called: 5
 22801 ;; This function calls:
 22802 ;;		_ETH_EdataRead
 22803 ;; This function is called by:
 22804 ;;		_Network_Read
 22805 ;; This function uses a non-reentrant model
 22806 ;;
 22807                           
 22808                           	psect	text98
 22809   017BB8                     __ptext98:
 22810                           	callstack 0
 22811   017BB8                     _ETH_NextPacketUpdate:
 22812                           	callstack 22
 22813                           
 22814                           ; BSR set to: 1
 22815                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 309:     ERDPT = nextPacketPointer;
 22816                           
 22817                           ;incstack = 0
 22818   017BB8  C145  FF7A         	movff	_nextPacketPointer,3962	;volatile
 22819   017BBC  C146  FF7B         	movff	_nextPacketPointer+1,3963	;volatile
 22820                           
 22821                           ; BSR set to: 1
 22822                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 313:     ((char *) &nextPacketPoint
      +                          er)[0] = ETH_EdataRead();
 22823   017BC0  ECCB  F0C1         	call	_ETH_EdataRead	;wreg free
 22824   017BC4  0101               	movlb	1	; () banked
 22825   017BC6  6F45               	movwf	_nextPacketPointer& (0+255),b
 22826                           
 22827                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 314:     ((char *) &nextPacketPoint
      +                          er)[1] = ETH_EdataRead();
 22828   017BC8  ECCB  F0C1         	call	_ETH_EdataRead	;wreg free
 22829   017BCC  0101               	movlb	1	; () banked
 22830   017BCE  6F46               	movwf	(_nextPacketPointer+1)& (0+255),b
 22831                           
 22832                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 315:     ((char *) &rxPacketStatusV
      +                          ector)[0] = ETH_EdataRead();
 22833   017BD0  ECCB  F0C1         	call	_ETH_EdataRead	;wreg free
 22834   017BD4  0101               	movlb	1	; () banked
 22835   017BD6  6F2E               	movwf	_rxPacketStatusVector& (0+255),b
 22836                           
 22837                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 316:     ((char *) &rxPacketStatusV
      +                          ector)[1] = ETH_EdataRead();
 22838   017BD8  ECCB  F0C1         	call	_ETH_EdataRead	;wreg free
 22839   017BDC  0101               	movlb	1	; () banked
 22840   017BDE  6F2F               	movwf	(_rxPacketStatusVector+1)& (0+255),b
 22841                           
 22842                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 317:     ((char *) &rxPacketStatusV
      +                          ector)[2] = ETH_EdataRead();
 22843   017BE0  ECCB  F0C1         	call	_ETH_EdataRead	;wreg free
 22844   017BE4  0101               	movlb	1	; () banked
 22845   017BE6  6F30               	movwf	(_rxPacketStatusVector+2)& (0+255),b
 22846                           
 22847                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 318:     ((char *) &rxPacketStatusV
      +                          ector)[3] = ETH_EdataRead();
 22848   017BE8  ECCB  F0C1         	call	_ETH_EdataRead	;wreg free
 22849   017BEC  0101               	movlb	1	; () banked
 22850   017BEE  6F31               	movwf	(_rxPacketStatusVector+3)& (0+255),b
 22851                           
 22852                           ; BSR set to: 1
 22853                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 321:     rxPacketStatusVector.byteC
      +                          ount -= 4;
 22854   017BF0  0E04               	movlw	4
 22855   017BF2  5F2E               	subwf	_rxPacketStatusVector& (0+255),f,b
 22856   017BF4  0E00               	movlw	0
 22857   017BF6  5B2F               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
 22858                           
 22859                           ; BSR set to: 1
 22860   017BF8  0012               	return		;funcret
 22861   017BFA                     __end_of_ETH_NextPacketUpdate:
 22862                           	callstack 0
 22863                           
 22864 ;; *************** function _ARPV4_Packet *****************
 22865 ;; Defined at:
 22866 ;;		line 101 in file "mcc_generated_files/TCPIPLibrary/arpv4.c"
 22867 ;; Parameters:    Size  Location     Type
 22868 ;;		None
 22869 ;; Auto vars:     Size  Location     Type
 22870 ;;  x               1    7[BANK0 ] unsigned char 
 22871 ;;  arpPtr          2    4[BANK0 ] PTR struct .
 22872 ;;		 -> arpMap(104), 
 22873 ;;  x               1    6[BANK0 ] unsigned char 
 22874 ;;  header         28   10[BANK0 ] struct .
 22875 ;;  entryPointer    2    8[BANK0 ] PTR struct .
 22876 ;;		 -> arpMap(104), 
 22877 ;;  length          2    0[BANK0 ] unsigned short 
 22878 ;;  ret             1    3[BANK0 ] enum E782
 22879 ;;  mergeFlag       1    2[BANK0 ] _Bool 
 22880 ;; Return value:  Size  Location     Type
 22881 ;;                  1    wreg      enum E933
 22882 ;; Registers used:
 22883 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22884 ;; Tracked objects:
 22885 ;;		On entry : 0/0
 22886 ;;		On exit  : 0/0
 22887 ;;		Unchanged: 0/0
 22888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22890 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22891 ;;      Temps:         40       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22892 ;;      Totals:        40      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22893 ;;Total ram usage:       78 bytes
 22894 ;; Hardware stack levels used: 1
 22895 ;; Hardware stack levels required when called: 7
 22896 ;; This function calls:
 22897 ;;		_ETH_ReadBlock
 22898 ;;		_ETH_Send
 22899 ;;		_ETH_WriteBlock
 22900 ;;		_ETH_WriteStart
 22901 ;;		_memcpy
 22902 ;; This function is called by:
 22903 ;;		_Network_Read
 22904 ;; This function uses a non-reentrant model
 22905 ;;
 22906                           
 22907                           	psect	text99
 22908   011068                     __ptext99:
 22909                           	callstack 0
 22910   011068                     _ARPV4_Packet:
 22911                           	callstack 20
 22912                           
 22913                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 111:     length = ETH_ReadBlock((char*)&heade
      +                          r,sizeof(arpHeader_t));
 22914                           
 22915                           ; BSR set to: 1
 22916                           ;incstack = 0
 22917   011068  0E6A               	movlw	low ARPV4_Packet@header
 22918   01106A  6E05               	movwf	ETH_ReadBlock@buffer^0,c
 22919   01106C  6A06               	clrf	(ETH_ReadBlock@buffer+1)^0,c
 22920   01106E  0E00               	movlw	0
 22921   011070  6E08               	movwf	(ETH_ReadBlock@length+1)^0,c
 22922   011072  0E1C               	movlw	28
 22923   011074  6E07               	movwf	ETH_ReadBlock@length^0,c
 22924   011076  EC8C  F0BC         	call	_ETH_ReadBlock	;wreg free
 22925   01107A  C005  F060         	movff	?_ETH_ReadBlock,ARPV4_Packet@length
 22926   01107E  C006  F061         	movff	?_ETH_ReadBlock+1,ARPV4_Packet@length+1
 22927                           
 22928                           ; BSR set to: 1
 22929                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 112:     if(length == sizeof(arpHeader_t))
 22930   011082  0E1C               	movlw	28
 22931   011084  0100               	movlb	0	; () banked
 22932   011086  1960               	xorwf	ARPV4_Packet@length& (0+255),w,b
 22933   011088  1161               	iorwf	(ARPV4_Packet@length+1)& (0+255),w,b
 22934   01108A  A4D8               	btfss	status,2,c
 22935   01108C  0012               	return	
 22936                           
 22937                           ; BSR set to: 0
 22938                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 113:     {;mcc_generated_files/TCPIPLibrary/a
      +                          rpv4.c: 115:         mergeFlag = 0;
 22939   01108E  0E00               	movlw	0
 22940   011090  6F62               	movwf	ARPV4_Packet@mergeFlag& (0+255),b
 22941                           
 22942                           ; BSR set to: 0
 22943                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 116:         entryPointer = arpMap;
 22944   011092  0E00               	movlw	low _arpMap
 22945   011094  6F68               	movwf	ARPV4_Packet@entryPointer& (0+255),b
 22946   011096  0E07               	movlw	high _arpMap
 22947   011098  6F69               	movwf	(ARPV4_Packet@entryPointer+1)& (0+255),b
 22948                           
 22949                           ; BSR set to: 0
 22950                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 118:         if (((((uint16_t)header.htype & 
      +                          (uint16_t)0xFF00) >> 8) | (((uint16_t)header.htype & (uint16_t)0x00FF) << 8)) != 1) retu
      +                          rn ARP_WRONG_HARDWARE_ADDR_TYPE;
 22951   01109A  516A               	movf	ARPV4_Packet@header& (0+255),w,b
 22952   01109C  6E20               	movwf	(??_ARPV4_Packet+1)^0,c
 22953   01109E  6A1F               	clrf	??_ARPV4_Packet^0,c
 22954   0110A0  516B               	movf	(ARPV4_Packet@header+1)& (0+255),w,b
 22955   0110A2  6E21               	movwf	(??_ARPV4_Packet+2)^0,c
 22956   0110A4  6A22               	clrf	(??_ARPV4_Packet+3)^0,c
 22957   0110A6  501F               	movf	??_ARPV4_Packet^0,w,c
 22958   0110A8  1021               	iorwf	(??_ARPV4_Packet+2)^0,w,c
 22959   0110AA  6E23               	movwf	(??_ARPV4_Packet+4)^0,c
 22960   0110AC  5020               	movf	(??_ARPV4_Packet+1)^0,w,c
 22961   0110AE  1022               	iorwf	(??_ARPV4_Packet+3)^0,w,c
 22962   0110B0  6E24               	movwf	(??_ARPV4_Packet+5)^0,c
 22963   0110B2  0423               	decf	(??_ARPV4_Packet+4)^0,w,c
 22964   0110B4  1024               	iorwf	(??_ARPV4_Packet+5)^0,w,c
 22965   0110B6  A4D8               	btfss	status,2,c
 22966   0110B8  0012               	return	
 22967                           
 22968                           ; BSR set to: 0
 22969                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 119:         if (((((uint16_t)header.ptype & 
      +                          (uint16_t)0xFF00) >> 8) | (((uint16_t)header.ptype & (uint16_t)0x00FF) << 8)) != 0x0800)
      +                           return ARP_WRONG_PROTOCOL_TYPE;
 22970                           
 22971                           ; BSR set to: 0
 22972                           ;	Return value of _ARPV4_Packet is never used
 22973   0110BA  516C               	movf	(ARPV4_Packet@header+2)& (0+255),w,b
 22974   0110BC  6E20               	movwf	(??_ARPV4_Packet+1)^0,c
 22975   0110BE  6A1F               	clrf	??_ARPV4_Packet^0,c
 22976   0110C0  EE20  F06C         	lfsr	2,ARPV4_Packet@header+2
 22977   0110C4  CFDE F021          	movff	postinc2,??_ARPV4_Packet+2
 22978   0110C8  CFDD F022          	movff	postdec2,??_ARPV4_Packet+3
 22979   0110CC  C022  F021         	movff	??_ARPV4_Packet+3,??_ARPV4_Packet+2
 22980   0110D0  6A22               	clrf	(??_ARPV4_Packet+3)^0,c
 22981   0110D2  0EFF               	movlw	255
 22982   0110D4  1621               	andwf	(??_ARPV4_Packet+2)^0,f,c
 22983   0110D6  0E00               	movlw	0
 22984   0110D8  1622               	andwf	(??_ARPV4_Packet+3)^0,f,c
 22985   0110DA  501F               	movf	??_ARPV4_Packet^0,w,c
 22986   0110DC  1021               	iorwf	(??_ARPV4_Packet+2)^0,w,c
 22987   0110DE  6E23               	movwf	(??_ARPV4_Packet+4)^0,c
 22988   0110E0  5020               	movf	(??_ARPV4_Packet+1)^0,w,c
 22989   0110E2  1022               	iorwf	(??_ARPV4_Packet+3)^0,w,c
 22990   0110E4  6E24               	movwf	(??_ARPV4_Packet+5)^0,c
 22991   0110E6  0E08               	movlw	8
 22992   0110E8  1824               	xorwf	(??_ARPV4_Packet+5)^0,w,c
 22993   0110EA  1023               	iorwf	(??_ARPV4_Packet+4)^0,w,c
 22994   0110EC  A4D8               	btfss	status,2,c
 22995   0110EE  0012               	return	
 22996                           
 22997                           ; BSR set to: 0
 22998                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 120:         if (header.hlen != 6) return ARP
      +                          _WRONG_HARDWARE_ADDR_LEN;
 22999   0110F0  0E06               	movlw	6
 23000   0110F2  196E               	xorwf	(ARPV4_Packet@header+4)& (0+255),w,b
 23001   0110F4  A4D8               	btfss	status,2,c
 23002   0110F6  0012               	return	
 23003                           
 23004                           ; BSR set to: 0
 23005                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 121:         if (header.plen != 4) return ARP
      +                          _WRONG_PROTOCOL_LEN;
 23006   0110F8  0E04               	movlw	4
 23007   0110FA  196F               	xorwf	(ARPV4_Packet@header+5)& (0+255),w,b
 23008   0110FC  A4D8               	btfss	status,2,c
 23009   0110FE  0012               	return	
 23010                           
 23011                           ; BSR set to: 0
 23012                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 122:         for(uint8_t x=8; x > 0; x--)
 23013   011100  0E08               	movlw	8
 23014   011102  6F66               	movwf	ARPV4_Packet@x& (0+255),b
 23015   011104                     l14145:
 23016                           
 23017                           ; BSR set to: 0
 23018                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 123:         {;mcc_generated_files/TCPIPLibra
      +                          ry/arpv4.c: 124:             if( (((((uint32_t)header.spa&(uint32_t)0xff000000) >> 24) |
      +                           (((uint32_t)header.spa&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)header.spa&(uint32_t)0
      +                          x0000ff00) << 8) | (((uint32_t)header.spa&(uint32_t)0x000000ff) << 24) ) == entryPointer
      +                          ->ipAddress) && (header.ptype == entryPointer->protocolType))
 23019   011104  EE20 F006          	lfsr	2,6
 23020   011108  5168               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
 23021   01110A  26D9               	addwf	fsr2l,f,c
 23022   01110C  5169               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
 23023   01110E  22DA               	addwfc	fsr2h,f,c
 23024   011110  0EFF               	movlw	255
 23025   011112  1578               	andwf	(ARPV4_Packet@header+14)& (0+255),w,b
 23026   011114  6E23               	movwf	(??_ARPV4_Packet+4)^0,c
 23027   011116  0E00               	movlw	0
 23028   011118  1579               	andwf	(ARPV4_Packet@header+15)& (0+255),w,b
 23029   01111A  6E24               	movwf	(??_ARPV4_Packet+5)^0,c
 23030   01111C  0E00               	movlw	0
 23031   01111E  157A               	andwf	(ARPV4_Packet@header+16)& (0+255),w,b
 23032   011120  6E25               	movwf	(??_ARPV4_Packet+6)^0,c
 23033   011122  0E00               	movlw	0
 23034   011124  157B               	andwf	(ARPV4_Packet@header+17)& (0+255),w,b
 23035   011126  6E26               	movwf	(??_ARPV4_Packet+7)^0,c
 23036   011128  C023  F026         	movff	??_ARPV4_Packet+4,??_ARPV4_Packet+7
 23037   01112C  6A25               	clrf	(??_ARPV4_Packet+6)^0,c
 23038   01112E  6A24               	clrf	(??_ARPV4_Packet+5)^0,c
 23039   011130  6A23               	clrf	(??_ARPV4_Packet+4)^0,c
 23040   011132  EE10  F078         	lfsr	1,ARPV4_Packet@header+14
 23041   011136  0E00               	movlw	0
 23042   011138  14E6               	andwf	postinc1,w,c
 23043   01113A  6E27               	movwf	(??_ARPV4_Packet+8)^0,c
 23044   01113C  0EFF               	movlw	255
 23045   01113E  14E6               	andwf	postinc1,w,c
 23046   011140  6E28               	movwf	(??_ARPV4_Packet+9)^0,c
 23047   011142  0E00               	movlw	0
 23048   011144  14E6               	andwf	postinc1,w,c
 23049   011146  6E29               	movwf	(??_ARPV4_Packet+10)^0,c
 23050   011148  0E00               	movlw	0
 23051   01114A  14E6               	andwf	postinc1,w,c
 23052   01114C  6E2A               	movwf	(??_ARPV4_Packet+11)^0,c
 23053   01114E  C029  F02A         	movff	??_ARPV4_Packet+10,??_ARPV4_Packet+11
 23054   011152  C028  F029         	movff	??_ARPV4_Packet+9,??_ARPV4_Packet+10
 23055   011156  C027  F028         	movff	??_ARPV4_Packet+8,??_ARPV4_Packet+9
 23056   01115A  6A27               	clrf	(??_ARPV4_Packet+8)^0,c
 23057   01115C  C078  F02B         	movff	ARPV4_Packet@header+14,??_ARPV4_Packet+12
 23058   011160  C079  F02C         	movff	ARPV4_Packet@header+15,??_ARPV4_Packet+13
 23059   011164  C07A  F02D         	movff	ARPV4_Packet@header+16,??_ARPV4_Packet+14
 23060   011168  C07B  F02E         	movff	ARPV4_Packet@header+17,??_ARPV4_Packet+15
 23061   01116C  C02C  F02B         	movff	??_ARPV4_Packet+13,??_ARPV4_Packet+12
 23062   011170  C02D  F02C         	movff	??_ARPV4_Packet+14,??_ARPV4_Packet+13
 23063   011174  C02E  F02D         	movff	??_ARPV4_Packet+15,??_ARPV4_Packet+14
 23064   011178  6A2E               	clrf	(??_ARPV4_Packet+15)^0,c
 23065   01117A  0E00               	movlw	0
 23066   01117C  142B               	andwf	(??_ARPV4_Packet+12)^0,w,c
 23067   01117E  6E2F               	movwf	(??_ARPV4_Packet+16)^0,c
 23068   011180  0EFF               	movlw	255
 23069   011182  142C               	andwf	(??_ARPV4_Packet+13)^0,w,c
 23070   011184  6E30               	movwf	(??_ARPV4_Packet+17)^0,c
 23071   011186  0E00               	movlw	0
 23072   011188  142D               	andwf	(??_ARPV4_Packet+14)^0,w,c
 23073   01118A  6E31               	movwf	(??_ARPV4_Packet+18)^0,c
 23074   01118C  0E00               	movlw	0
 23075   01118E  142E               	andwf	(??_ARPV4_Packet+15)^0,w,c
 23076   011190  6E32               	movwf	(??_ARPV4_Packet+19)^0,c
 23077   011192  C078  F033         	movff	ARPV4_Packet@header+14,??_ARPV4_Packet+20
 23078   011196  C079  F034         	movff	ARPV4_Packet@header+15,??_ARPV4_Packet+21
 23079   01119A  C07A  F035         	movff	ARPV4_Packet@header+16,??_ARPV4_Packet+22
 23080   01119E  C07B  F036         	movff	ARPV4_Packet@header+17,??_ARPV4_Packet+23
 23081   0111A2  0E19               	movlw	25
 23082   0111A4  D005               	goto	u12160
 23083   0111A6                     u12165:
 23084   0111A6  90D8               	bcf	status,0,c
 23085   0111A8  3236               	rrcf	(??_ARPV4_Packet+23)^0,f,c
 23086   0111AA  3235               	rrcf	(??_ARPV4_Packet+22)^0,f,c
 23087   0111AC  3234               	rrcf	(??_ARPV4_Packet+21)^0,f,c
 23088   0111AE  3233               	rrcf	(??_ARPV4_Packet+20)^0,f,c
 23089   0111B0                     u12160:
 23090   0111B0  2EE8               	decfsz	wreg,f,c
 23091   0111B2  D7F9               	goto	u12165
 23092   0111B4  0EFF               	movlw	255
 23093   0111B6  1433               	andwf	(??_ARPV4_Packet+20)^0,w,c
 23094   0111B8  6E37               	movwf	(??_ARPV4_Packet+24)^0,c
 23095   0111BA  0E00               	movlw	0
 23096   0111BC  1434               	andwf	(??_ARPV4_Packet+21)^0,w,c
 23097   0111BE  6E38               	movwf	(??_ARPV4_Packet+25)^0,c
 23098   0111C0  0E00               	movlw	0
 23099   0111C2  1435               	andwf	(??_ARPV4_Packet+22)^0,w,c
 23100   0111C4  6E39               	movwf	(??_ARPV4_Packet+26)^0,c
 23101   0111C6  0E00               	movlw	0
 23102   0111C8  1436               	andwf	(??_ARPV4_Packet+23)^0,w,c
 23103   0111CA  6E3A               	movwf	(??_ARPV4_Packet+27)^0,c
 23104   0111CC  502F               	movf	(??_ARPV4_Packet+16)^0,w,c
 23105   0111CE  1037               	iorwf	(??_ARPV4_Packet+24)^0,w,c
 23106   0111D0  6E3B               	movwf	(??_ARPV4_Packet+28)^0,c
 23107   0111D2  5030               	movf	(??_ARPV4_Packet+17)^0,w,c
 23108   0111D4  1038               	iorwf	(??_ARPV4_Packet+25)^0,w,c
 23109   0111D6  6E3C               	movwf	(??_ARPV4_Packet+29)^0,c
 23110   0111D8  5031               	movf	(??_ARPV4_Packet+18)^0,w,c
 23111   0111DA  1039               	iorwf	(??_ARPV4_Packet+26)^0,w,c
 23112   0111DC  6E3D               	movwf	(??_ARPV4_Packet+30)^0,c
 23113   0111DE  5032               	movf	(??_ARPV4_Packet+19)^0,w,c
 23114   0111E0  103A               	iorwf	(??_ARPV4_Packet+27)^0,w,c
 23115   0111E2  6E3E               	movwf	(??_ARPV4_Packet+31)^0,c
 23116   0111E4  5027               	movf	(??_ARPV4_Packet+8)^0,w,c
 23117   0111E6  103B               	iorwf	(??_ARPV4_Packet+28)^0,w,c
 23118   0111E8  6E3F               	movwf	(??_ARPV4_Packet+32)^0,c
 23119   0111EA  5028               	movf	(??_ARPV4_Packet+9)^0,w,c
 23120   0111EC  103C               	iorwf	(??_ARPV4_Packet+29)^0,w,c
 23121   0111EE  6E40               	movwf	(??_ARPV4_Packet+33)^0,c
 23122   0111F0  5029               	movf	(??_ARPV4_Packet+10)^0,w,c
 23123   0111F2  103D               	iorwf	(??_ARPV4_Packet+30)^0,w,c
 23124   0111F4  6E41               	movwf	(??_ARPV4_Packet+34)^0,c
 23125   0111F6  502A               	movf	(??_ARPV4_Packet+11)^0,w,c
 23126   0111F8  103E               	iorwf	(??_ARPV4_Packet+31)^0,w,c
 23127   0111FA  6E42               	movwf	(??_ARPV4_Packet+35)^0,c
 23128   0111FC  5023               	movf	(??_ARPV4_Packet+4)^0,w,c
 23129   0111FE  103F               	iorwf	(??_ARPV4_Packet+32)^0,w,c
 23130   011200  6E43               	movwf	(??_ARPV4_Packet+36)^0,c
 23131   011202  5024               	movf	(??_ARPV4_Packet+5)^0,w,c
 23132   011204  1040               	iorwf	(??_ARPV4_Packet+33)^0,w,c
 23133   011206  6E44               	movwf	(??_ARPV4_Packet+37)^0,c
 23134   011208  5025               	movf	(??_ARPV4_Packet+6)^0,w,c
 23135   01120A  1041               	iorwf	(??_ARPV4_Packet+34)^0,w,c
 23136   01120C  6E45               	movwf	(??_ARPV4_Packet+38)^0,c
 23137   01120E  5026               	movf	(??_ARPV4_Packet+7)^0,w,c
 23138   011210  1042               	iorwf	(??_ARPV4_Packet+35)^0,w,c
 23139   011212  6E46               	movwf	(??_ARPV4_Packet+39)^0,c
 23140   011214  50DE               	movf	postinc2,w,c
 23141   011216  1843               	xorwf	(??_ARPV4_Packet+36)^0,w,c
 23142   011218  E12C               	bnz	l14155
 23143   01121A  50DE               	movf	postinc2,w,c
 23144   01121C  1844               	xorwf	(??_ARPV4_Packet+37)^0,w,c
 23145   01121E  E129               	bnz	l14155
 23146   011220  50DE               	movf	postinc2,w,c
 23147   011222  1845               	xorwf	(??_ARPV4_Packet+38)^0,w,c
 23148   011224  E126               	bnz	l14155
 23149   011226  50DE               	movf	postinc2,w,c
 23150   011228  1846               	xorwf	(??_ARPV4_Packet+39)^0,w,c
 23151   01122A  A4D8               	btfss	status,2,c
 23152   01122C  D022               	goto	l14155
 23153                           
 23154                           ; BSR set to: 0
 23155   01122E  EE20 F00A          	lfsr	2,10
 23156   011232  5168               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
 23157   011234  26D9               	addwf	fsr2l,f,c
 23158   011236  5169               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
 23159   011238  22DA               	addwfc	fsr2h,f,c
 23160   01123A  50DE               	movf	postinc2,w,c
 23161   01123C  196C               	xorwf	(ARPV4_Packet@header+2)& (0+255),w,b
 23162   01123E  E119               	bnz	l14155
 23163   011240  50DE               	movf	postinc2,w,c
 23164   011242  196D               	xorwf	(ARPV4_Packet@header+3)& (0+255),w,b
 23165   011244  A4D8               	btfss	status,2,c
 23166   011246  D015               	goto	l14155
 23167                           
 23168                           ; BSR set to: 0
 23169                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 125:             {;mcc_generated_files/TCPIPL
      +                          ibrary/arpv4.c: 126:                 entryPointer->age = 0;
 23170   011248  EE20 F00C          	lfsr	2,12
 23171   01124C  5168               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
 23172   01124E  26D9               	addwf	fsr2l,f,c
 23173   011250  5169               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
 23174   011252  22DA               	addwfc	fsr2h,f,c
 23175   011254  6ADF               	clrf	indf2,c
 23176                           
 23177                           ; BSR set to: 0
 23178                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 127:                 entryPointer->macAddress
      +                          .s = header.sha.s;
 23179   011256  EE20  F072         	lfsr	2,ARPV4_Packet@header+8
 23180   01125A  C068  FFE1         	movff	ARPV4_Packet@entryPointer,fsr1l
 23181   01125E  C069  FFE2         	movff	ARPV4_Packet@entryPointer+1,fsr1h
 23182   011262  0E05               	movlw	5
 23183   011264                     u12191:
 23184   011264  CFDB FFE3          	movff	plusw2,plusw1
 23185   011268  06E8               	decf	wreg,f,c
 23186   01126A  E2FC               	bc	u12191
 23187                           
 23188                           ; BSR set to: 0
 23189                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 128:                 mergeFlag = 1;
 23190   01126C  0E01               	movlw	1
 23191   01126E  6F62               	movwf	ARPV4_Packet@mergeFlag& (0+255),b
 23192                           
 23193                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 129:                 break;
 23194   011270  D008               	goto	u12200
 23195   011272                     l14155:
 23196                           
 23197                           ; BSR set to: 0
 23198                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 131:             entryPointer++;
 23199   011272  0E0D               	movlw	13
 23200   011274  2768               	addwf	ARPV4_Packet@entryPointer& (0+255),f,b
 23201   011276  0E00               	movlw	0
 23202   011278  2369               	addwfc	(ARPV4_Packet@entryPointer+1)& (0+255),f,b
 23203                           
 23204                           ; BSR set to: 0
 23205                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 132:         }
 23206   01127A  0766               	decf	ARPV4_Packet@x& (0+255),f,b
 23207                           
 23208                           ; BSR set to: 0
 23209   01127C  5166               	movf	ARPV4_Packet@x& (0+255),w,b
 23210   01127E  A4D8               	btfss	status,2,c
 23211   011280  D741               	goto	l14145
 23212   011282                     u12200:
 23213                           
 23214                           ; BSR set to: 0
 23215                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 134:         if((ip_database_info.ipv4_myAddr
      +                          ess) && ((ip_database_info.ipv4_myAddress) == ((((uint32_t)header.tpa&(uint32_t)0xff0000
      +                          00) >> 24) | (((uint32_t)header.tpa&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)header.tpa
      +                          &(uint32_t)0x0000ff00) << 8) | (((uint32_t)header.tpa&(uint32_t)0x000000ff) << 24) )))
 23216   011282  0101               	movlb	1	; () banked
 23217   011284  5100               	movf	_ip_database_info& (0+255),w,b
 23218   011286  1101               	iorwf	(_ip_database_info+1)& (0+255),w,b
 23219   011288  1102               	iorwf	(_ip_database_info+2)& (0+255),w,b
 23220   01128A  1103               	iorwf	(_ip_database_info+3)& (0+255),w,b
 23221   01128C  B4D8               	btfsc	status,2,c
 23222   01128E  0012               	return	
 23223                           
 23224                           ; BSR set to: 1
 23225   011290  0EFF               	movlw	255
 23226   011292  0100               	movlb	0	; () banked
 23227   011294  1582               	andwf	(ARPV4_Packet@header+24)& (0+255),w,b
 23228   011296  6E1F               	movwf	??_ARPV4_Packet^0,c
 23229   011298  0E00               	movlw	0
 23230   01129A  1583               	andwf	(ARPV4_Packet@header+25)& (0+255),w,b
 23231   01129C  6E20               	movwf	(??_ARPV4_Packet+1)^0,c
 23232   01129E  0E00               	movlw	0
 23233   0112A0  1584               	andwf	(ARPV4_Packet@header+26)& (0+255),w,b
 23234   0112A2  6E21               	movwf	(??_ARPV4_Packet+2)^0,c
 23235   0112A4  0E00               	movlw	0
 23236   0112A6  1585               	andwf	(ARPV4_Packet@header+27)& (0+255),w,b
 23237   0112A8  6E22               	movwf	(??_ARPV4_Packet+3)^0,c
 23238   0112AA  C01F  F022         	movff	??_ARPV4_Packet,??_ARPV4_Packet+3
 23239   0112AE  6A21               	clrf	(??_ARPV4_Packet+2)^0,c
 23240   0112B0  6A20               	clrf	(??_ARPV4_Packet+1)^0,c
 23241   0112B2  6A1F               	clrf	??_ARPV4_Packet^0,c
 23242   0112B4  EE20  F082         	lfsr	2,ARPV4_Packet@header+24
 23243   0112B8  0E00               	movlw	0
 23244   0112BA  14DE               	andwf	postinc2,w,c
 23245   0112BC  6E23               	movwf	(??_ARPV4_Packet+4)^0,c
 23246   0112BE  0EFF               	movlw	255
 23247   0112C0  14DE               	andwf	postinc2,w,c
 23248   0112C2  6E24               	movwf	(??_ARPV4_Packet+5)^0,c
 23249   0112C4  0E00               	movlw	0
 23250   0112C6  14DE               	andwf	postinc2,w,c
 23251   0112C8  6E25               	movwf	(??_ARPV4_Packet+6)^0,c
 23252   0112CA  0E00               	movlw	0
 23253   0112CC  14DE               	andwf	postinc2,w,c
 23254   0112CE  6E26               	movwf	(??_ARPV4_Packet+7)^0,c
 23255   0112D0  C025  F026         	movff	??_ARPV4_Packet+6,??_ARPV4_Packet+7
 23256   0112D4  C024  F025         	movff	??_ARPV4_Packet+5,??_ARPV4_Packet+6
 23257   0112D8  C023  F024         	movff	??_ARPV4_Packet+4,??_ARPV4_Packet+5
 23258   0112DC  6A23               	clrf	(??_ARPV4_Packet+4)^0,c
 23259   0112DE  C082  F027         	movff	ARPV4_Packet@header+24,??_ARPV4_Packet+8
 23260   0112E2  C083  F028         	movff	ARPV4_Packet@header+25,??_ARPV4_Packet+9
 23261   0112E6  C084  F029         	movff	ARPV4_Packet@header+26,??_ARPV4_Packet+10
 23262   0112EA  C085  F02A         	movff	ARPV4_Packet@header+27,??_ARPV4_Packet+11
 23263   0112EE  C028  F027         	movff	??_ARPV4_Packet+9,??_ARPV4_Packet+8
 23264   0112F2  C029  F028         	movff	??_ARPV4_Packet+10,??_ARPV4_Packet+9
 23265   0112F6  C02A  F029         	movff	??_ARPV4_Packet+11,??_ARPV4_Packet+10
 23266   0112FA  6A2A               	clrf	(??_ARPV4_Packet+11)^0,c
 23267   0112FC  0E00               	movlw	0
 23268   0112FE  1427               	andwf	(??_ARPV4_Packet+8)^0,w,c
 23269   011300  6E2B               	movwf	(??_ARPV4_Packet+12)^0,c
 23270   011302  0EFF               	movlw	255
 23271   011304  1428               	andwf	(??_ARPV4_Packet+9)^0,w,c
 23272   011306  6E2C               	movwf	(??_ARPV4_Packet+13)^0,c
 23273   011308  0E00               	movlw	0
 23274   01130A  1429               	andwf	(??_ARPV4_Packet+10)^0,w,c
 23275   01130C  6E2D               	movwf	(??_ARPV4_Packet+14)^0,c
 23276   01130E  0E00               	movlw	0
 23277   011310  142A               	andwf	(??_ARPV4_Packet+11)^0,w,c
 23278   011312  6E2E               	movwf	(??_ARPV4_Packet+15)^0,c
 23279   011314  C082  F02F         	movff	ARPV4_Packet@header+24,??_ARPV4_Packet+16
 23280   011318  C083  F030         	movff	ARPV4_Packet@header+25,??_ARPV4_Packet+17
 23281   01131C  C084  F031         	movff	ARPV4_Packet@header+26,??_ARPV4_Packet+18
 23282   011320  C085  F032         	movff	ARPV4_Packet@header+27,??_ARPV4_Packet+19
 23283   011324  0E19               	movlw	25
 23284   011326  D005               	goto	u12220
 23285   011328                     u12225:
 23286   011328  90D8               	bcf	status,0,c
 23287   01132A  3232               	rrcf	(??_ARPV4_Packet+19)^0,f,c
 23288   01132C  3231               	rrcf	(??_ARPV4_Packet+18)^0,f,c
 23289   01132E  3230               	rrcf	(??_ARPV4_Packet+17)^0,f,c
 23290   011330  322F               	rrcf	(??_ARPV4_Packet+16)^0,f,c
 23291   011332                     u12220:
 23292   011332  2EE8               	decfsz	wreg,f,c
 23293   011334  D7F9               	goto	u12225
 23294   011336  0EFF               	movlw	255
 23295   011338  142F               	andwf	(??_ARPV4_Packet+16)^0,w,c
 23296   01133A  6E33               	movwf	(??_ARPV4_Packet+20)^0,c
 23297   01133C  0E00               	movlw	0
 23298   01133E  1430               	andwf	(??_ARPV4_Packet+17)^0,w,c
 23299   011340  6E34               	movwf	(??_ARPV4_Packet+21)^0,c
 23300   011342  0E00               	movlw	0
 23301   011344  1431               	andwf	(??_ARPV4_Packet+18)^0,w,c
 23302   011346  6E35               	movwf	(??_ARPV4_Packet+22)^0,c
 23303   011348  0E00               	movlw	0
 23304   01134A  1432               	andwf	(??_ARPV4_Packet+19)^0,w,c
 23305   01134C  6E36               	movwf	(??_ARPV4_Packet+23)^0,c
 23306   01134E  502B               	movf	(??_ARPV4_Packet+12)^0,w,c
 23307   011350  1033               	iorwf	(??_ARPV4_Packet+20)^0,w,c
 23308   011352  6E37               	movwf	(??_ARPV4_Packet+24)^0,c
 23309   011354  502C               	movf	(??_ARPV4_Packet+13)^0,w,c
 23310   011356  1034               	iorwf	(??_ARPV4_Packet+21)^0,w,c
 23311   011358  6E38               	movwf	(??_ARPV4_Packet+25)^0,c
 23312   01135A  502D               	movf	(??_ARPV4_Packet+14)^0,w,c
 23313   01135C  1035               	iorwf	(??_ARPV4_Packet+22)^0,w,c
 23314   01135E  6E39               	movwf	(??_ARPV4_Packet+26)^0,c
 23315   011360  502E               	movf	(??_ARPV4_Packet+15)^0,w,c
 23316   011362  1036               	iorwf	(??_ARPV4_Packet+23)^0,w,c
 23317   011364  6E3A               	movwf	(??_ARPV4_Packet+27)^0,c
 23318   011366  5023               	movf	(??_ARPV4_Packet+4)^0,w,c
 23319   011368  1037               	iorwf	(??_ARPV4_Packet+24)^0,w,c
 23320   01136A  6E3B               	movwf	(??_ARPV4_Packet+28)^0,c
 23321   01136C  5024               	movf	(??_ARPV4_Packet+5)^0,w,c
 23322   01136E  1038               	iorwf	(??_ARPV4_Packet+25)^0,w,c
 23323   011370  6E3C               	movwf	(??_ARPV4_Packet+29)^0,c
 23324   011372  5025               	movf	(??_ARPV4_Packet+6)^0,w,c
 23325   011374  1039               	iorwf	(??_ARPV4_Packet+26)^0,w,c
 23326   011376  6E3D               	movwf	(??_ARPV4_Packet+30)^0,c
 23327   011378  5026               	movf	(??_ARPV4_Packet+7)^0,w,c
 23328   01137A  103A               	iorwf	(??_ARPV4_Packet+27)^0,w,c
 23329   01137C  6E3E               	movwf	(??_ARPV4_Packet+31)^0,c
 23330   01137E  501F               	movf	??_ARPV4_Packet^0,w,c
 23331   011380  103B               	iorwf	(??_ARPV4_Packet+28)^0,w,c
 23332   011382  6E3F               	movwf	(??_ARPV4_Packet+32)^0,c
 23333   011384  5020               	movf	(??_ARPV4_Packet+1)^0,w,c
 23334   011386  103C               	iorwf	(??_ARPV4_Packet+29)^0,w,c
 23335   011388  6E40               	movwf	(??_ARPV4_Packet+33)^0,c
 23336   01138A  5021               	movf	(??_ARPV4_Packet+2)^0,w,c
 23337   01138C  103D               	iorwf	(??_ARPV4_Packet+30)^0,w,c
 23338   01138E  6E41               	movwf	(??_ARPV4_Packet+34)^0,c
 23339   011390  5022               	movf	(??_ARPV4_Packet+3)^0,w,c
 23340   011392  103E               	iorwf	(??_ARPV4_Packet+31)^0,w,c
 23341   011394  6E42               	movwf	(??_ARPV4_Packet+35)^0,c
 23342   011396  0101               	movlb	1	; () banked
 23343   011398  5100               	movf	_ip_database_info& (0+255),w,b
 23344   01139A  183F               	xorwf	(??_ARPV4_Packet+32)^0,w,c
 23345   01139C  E109               	bnz	u12231
 23346   01139E  5101               	movf	(_ip_database_info+1)& (0+255),w,b
 23347   0113A0  1840               	xorwf	(??_ARPV4_Packet+33)^0,w,c
 23348   0113A2  E106               	bnz	u12231
 23349   0113A4  5102               	movf	(_ip_database_info+2)& (0+255),w,b
 23350   0113A6  1841               	xorwf	(??_ARPV4_Packet+34)^0,w,c
 23351   0113A8  E103               	bnz	u12231
 23352   0113AA  5103               	movf	(_ip_database_info+3)& (0+255),w,b
 23353   0113AC  1842               	xorwf	(??_ARPV4_Packet+35)^0,w,c
 23354   0113AE  A4D8               	btfss	status,2,c
 23355   0113B0                     u12231:
 23356   0113B0  0012               	return	
 23357                           
 23358                           ; BSR set to: 1
 23359                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 135:         {;mcc_generated_files/TCPIPLibra
      +                          ry/arpv4.c: 136:             if(!mergeFlag)
 23360   0113B2  0100               	movlb	0	; () banked
 23361   0113B4  5162               	movf	ARPV4_Packet@mergeFlag& (0+255),w,b
 23362   0113B6  A4D8               	btfss	status,2,c
 23363   0113B8  D0D2               	goto	l14191
 23364                           
 23365                           ; BSR set to: 0
 23366                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 137:             {;mcc_generated_files/TCPIPL
      +                          ibrary/arpv4.c: 139:                 entryPointer = arpMap;
 23367   0113BA  0E00               	movlw	low _arpMap
 23368   0113BC  6F68               	movwf	ARPV4_Packet@entryPointer& (0+255),b
 23369   0113BE  0E07               	movlw	high _arpMap
 23370   0113C0  6F69               	movwf	(ARPV4_Packet@entryPointer+1)& (0+255),b
 23371                           
 23372                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 140:                 arpMap_t *arpPtr = arpMa
      +                          p;
 23373   0113C2  0E00               	movlw	low _arpMap
 23374   0113C4  6F64               	movwf	ARPV4_Packet@arpPtr& (0+255),b
 23375   0113C6  0E07               	movlw	high _arpMap
 23376   0113C8  6F65               	movwf	(ARPV4_Packet@arpPtr+1)& (0+255),b
 23377                           
 23378                           ; BSR set to: 0
 23379                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 141:                 for(uint8_t x=8; x !=0; 
      +                          x--)
 23380   0113CA  0E08               	movlw	8
 23381   0113CC  6F67               	movwf	ARPV4_Packet@x_6263& (0+255),b
 23382   0113CE                     l14175:
 23383                           
 23384                           ; BSR set to: 0
 23385                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 142:                 {;mcc_generated_files/TC
      +                          PIPLibrary/arpv4.c: 143:                     if(entryPointer->age < arpPtr->age)
 23386   0113CE  EE20 F00C          	lfsr	2,12
 23387   0113D2  5164               	movf	ARPV4_Packet@arpPtr& (0+255),w,b
 23388   0113D4  26D9               	addwf	fsr2l,f,c
 23389   0113D6  5165               	movf	(ARPV4_Packet@arpPtr+1)& (0+255),w,b
 23390   0113D8  22DA               	addwfc	fsr2h,f,c
 23391   0113DA  EE10 F00C          	lfsr	1,12
 23392   0113DE  5168               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
 23393   0113E0  26E1               	addwf	fsr1l,f,c
 23394   0113E2  5169               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
 23395   0113E4  22E2               	addwfc	fsr1h,f,c
 23396   0113E6  50DE               	movf	postinc2,w,c
 23397   0113E8  5CE6               	subwf	postinc1,w,c
 23398   0113EA  B0D8               	btfsc	status,0,c
 23399   0113EC  D004               	goto	l2742
 23400                           
 23401                           ; BSR set to: 0
 23402                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 144:                     {;mcc_generated_file
      +                          s/TCPIPLibrary/arpv4.c: 145:                         entryPointer = arpPtr;
 23403   0113EE  C064  F068         	movff	ARPV4_Packet@arpPtr,ARPV4_Packet@entryPointer
 23404   0113F2  C065  F069         	movff	ARPV4_Packet@arpPtr+1,ARPV4_Packet@entryPointer+1
 23405   0113F6                     l2742:
 23406                           
 23407                           ; BSR set to: 0
 23408                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 148:                     arpPtr++;
 23409   0113F6  0E0D               	movlw	13
 23410   0113F8  2764               	addwf	ARPV4_Packet@arpPtr& (0+255),f,b
 23411   0113FA  0E00               	movlw	0
 23412   0113FC  2365               	addwfc	(ARPV4_Packet@arpPtr+1)& (0+255),f,b
 23413                           
 23414                           ; BSR set to: 0
 23415                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 149:                 }
 23416   0113FE  0767               	decf	ARPV4_Packet@x_6263& (0+255),f,b
 23417                           
 23418                           ; BSR set to: 0
 23419   011400  5167               	movf	ARPV4_Packet@x_6263& (0+255),w,b
 23420   011402  A4D8               	btfss	status,2,c
 23421   011404  D7E4               	goto	l14175
 23422                           
 23423                           ; BSR set to: 0
 23424                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 152:                 entryPointer->age = 0;
 23425   011406  EE20 F00C          	lfsr	2,12
 23426   01140A  5168               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
 23427   01140C  26D9               	addwf	fsr2l,f,c
 23428   01140E  5169               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
 23429   011410  22DA               	addwfc	fsr2h,f,c
 23430   011412  6ADF               	clrf	indf2,c
 23431                           
 23432                           ; BSR set to: 0
 23433                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 153:                 entryPointer->macAddress
      +                          .s = header.sha.s;
 23434   011414  EE20  F072         	lfsr	2,ARPV4_Packet@header+8
 23435   011418  C068  FFE1         	movff	ARPV4_Packet@entryPointer,fsr1l
 23436   01141C  C069  FFE2         	movff	ARPV4_Packet@entryPointer+1,fsr1h
 23437   011420  0E05               	movlw	5
 23438   011422                     u12271:
 23439   011422  CFDB FFE3          	movff	plusw2,plusw1
 23440   011426  06E8               	decf	wreg,f,c
 23441   011428  E2FC               	bc	u12271
 23442                           
 23443                           ; BSR set to: 0
 23444                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 154:                 entryPointer->ipAddress 
      +                          = ((((uint32_t)header.spa&(uint32_t)0xff000000) >> 24) | (((uint32_t)header.spa&(uint32_
      +                          t)0x00ff0000) >> 8) | (((uint32_t)header.spa&(uint32_t)0x0000ff00) << 8) | (((uint32_t)h
      +                          eader.spa&(uint32_t)0x000000ff) << 24) );
 23445   01142A  0EFF               	movlw	255
 23446   01142C  1578               	andwf	(ARPV4_Packet@header+14)& (0+255),w,b
 23447   01142E  6E1F               	movwf	??_ARPV4_Packet^0,c
 23448   011430  0E00               	movlw	0
 23449   011432  1579               	andwf	(ARPV4_Packet@header+15)& (0+255),w,b
 23450   011434  6E20               	movwf	(??_ARPV4_Packet+1)^0,c
 23451   011436  0E00               	movlw	0
 23452   011438  157A               	andwf	(ARPV4_Packet@header+16)& (0+255),w,b
 23453   01143A  6E21               	movwf	(??_ARPV4_Packet+2)^0,c
 23454   01143C  0E00               	movlw	0
 23455   01143E  157B               	andwf	(ARPV4_Packet@header+17)& (0+255),w,b
 23456   011440  6E22               	movwf	(??_ARPV4_Packet+3)^0,c
 23457   011442  C01F  F022         	movff	??_ARPV4_Packet,??_ARPV4_Packet+3
 23458   011446  6A21               	clrf	(??_ARPV4_Packet+2)^0,c
 23459   011448  6A20               	clrf	(??_ARPV4_Packet+1)^0,c
 23460   01144A  6A1F               	clrf	??_ARPV4_Packet^0,c
 23461   01144C  EE20  F078         	lfsr	2,ARPV4_Packet@header+14
 23462   011450  0E00               	movlw	0
 23463   011452  14DE               	andwf	postinc2,w,c
 23464   011454  6E23               	movwf	(??_ARPV4_Packet+4)^0,c
 23465   011456  0EFF               	movlw	255
 23466   011458  14DE               	andwf	postinc2,w,c
 23467   01145A  6E24               	movwf	(??_ARPV4_Packet+5)^0,c
 23468   01145C  0E00               	movlw	0
 23469   01145E  14DE               	andwf	postinc2,w,c
 23470   011460  6E25               	movwf	(??_ARPV4_Packet+6)^0,c
 23471   011462  0E00               	movlw	0
 23472   011464  14DE               	andwf	postinc2,w,c
 23473   011466  6E26               	movwf	(??_ARPV4_Packet+7)^0,c
 23474   011468  C025  F026         	movff	??_ARPV4_Packet+6,??_ARPV4_Packet+7
 23475   01146C  C024  F025         	movff	??_ARPV4_Packet+5,??_ARPV4_Packet+6
 23476   011470  C023  F024         	movff	??_ARPV4_Packet+4,??_ARPV4_Packet+5
 23477   011474  6A23               	clrf	(??_ARPV4_Packet+4)^0,c
 23478   011476  C078  F027         	movff	ARPV4_Packet@header+14,??_ARPV4_Packet+8
 23479   01147A  C079  F028         	movff	ARPV4_Packet@header+15,??_ARPV4_Packet+9
 23480   01147E  C07A  F029         	movff	ARPV4_Packet@header+16,??_ARPV4_Packet+10
 23481   011482  C07B  F02A         	movff	ARPV4_Packet@header+17,??_ARPV4_Packet+11
 23482   011486  C028  F027         	movff	??_ARPV4_Packet+9,??_ARPV4_Packet+8
 23483   01148A  C029  F028         	movff	??_ARPV4_Packet+10,??_ARPV4_Packet+9
 23484   01148E  C02A  F029         	movff	??_ARPV4_Packet+11,??_ARPV4_Packet+10
 23485   011492  6A2A               	clrf	(??_ARPV4_Packet+11)^0,c
 23486   011494  0E00               	movlw	0
 23487   011496  1427               	andwf	(??_ARPV4_Packet+8)^0,w,c
 23488   011498  6E2B               	movwf	(??_ARPV4_Packet+12)^0,c
 23489   01149A  0EFF               	movlw	255
 23490   01149C  1428               	andwf	(??_ARPV4_Packet+9)^0,w,c
 23491   01149E  6E2C               	movwf	(??_ARPV4_Packet+13)^0,c
 23492   0114A0  0E00               	movlw	0
 23493   0114A2  1429               	andwf	(??_ARPV4_Packet+10)^0,w,c
 23494   0114A4  6E2D               	movwf	(??_ARPV4_Packet+14)^0,c
 23495   0114A6  0E00               	movlw	0
 23496   0114A8  142A               	andwf	(??_ARPV4_Packet+11)^0,w,c
 23497   0114AA  6E2E               	movwf	(??_ARPV4_Packet+15)^0,c
 23498   0114AC  C078  F02F         	movff	ARPV4_Packet@header+14,??_ARPV4_Packet+16
 23499   0114B0  C079  F030         	movff	ARPV4_Packet@header+15,??_ARPV4_Packet+17
 23500   0114B4  C07A  F031         	movff	ARPV4_Packet@header+16,??_ARPV4_Packet+18
 23501   0114B8  C07B  F032         	movff	ARPV4_Packet@header+17,??_ARPV4_Packet+19
 23502   0114BC  0E19               	movlw	25
 23503   0114BE  D005               	goto	u12280
 23504   0114C0                     u12285:
 23505   0114C0  90D8               	bcf	status,0,c
 23506   0114C2  3232               	rrcf	(??_ARPV4_Packet+19)^0,f,c
 23507   0114C4  3231               	rrcf	(??_ARPV4_Packet+18)^0,f,c
 23508   0114C6  3230               	rrcf	(??_ARPV4_Packet+17)^0,f,c
 23509   0114C8  322F               	rrcf	(??_ARPV4_Packet+16)^0,f,c
 23510   0114CA                     u12280:
 23511   0114CA  2EE8               	decfsz	wreg,f,c
 23512   0114CC  D7F9               	goto	u12285
 23513   0114CE  0EFF               	movlw	255
 23514   0114D0  142F               	andwf	(??_ARPV4_Packet+16)^0,w,c
 23515   0114D2  6E33               	movwf	(??_ARPV4_Packet+20)^0,c
 23516   0114D4  0E00               	movlw	0
 23517   0114D6  1430               	andwf	(??_ARPV4_Packet+17)^0,w,c
 23518   0114D8  6E34               	movwf	(??_ARPV4_Packet+21)^0,c
 23519   0114DA  0E00               	movlw	0
 23520   0114DC  1431               	andwf	(??_ARPV4_Packet+18)^0,w,c
 23521   0114DE  6E35               	movwf	(??_ARPV4_Packet+22)^0,c
 23522   0114E0  0E00               	movlw	0
 23523   0114E2  1432               	andwf	(??_ARPV4_Packet+19)^0,w,c
 23524   0114E4  6E36               	movwf	(??_ARPV4_Packet+23)^0,c
 23525   0114E6  502B               	movf	(??_ARPV4_Packet+12)^0,w,c
 23526   0114E8  1033               	iorwf	(??_ARPV4_Packet+20)^0,w,c
 23527   0114EA  6E37               	movwf	(??_ARPV4_Packet+24)^0,c
 23528   0114EC  502C               	movf	(??_ARPV4_Packet+13)^0,w,c
 23529   0114EE  1034               	iorwf	(??_ARPV4_Packet+21)^0,w,c
 23530   0114F0  6E38               	movwf	(??_ARPV4_Packet+25)^0,c
 23531   0114F2  502D               	movf	(??_ARPV4_Packet+14)^0,w,c
 23532   0114F4  1035               	iorwf	(??_ARPV4_Packet+22)^0,w,c
 23533   0114F6  6E39               	movwf	(??_ARPV4_Packet+26)^0,c
 23534   0114F8  502E               	movf	(??_ARPV4_Packet+15)^0,w,c
 23535   0114FA  1036               	iorwf	(??_ARPV4_Packet+23)^0,w,c
 23536   0114FC  6E3A               	movwf	(??_ARPV4_Packet+27)^0,c
 23537   0114FE  5023               	movf	(??_ARPV4_Packet+4)^0,w,c
 23538   011500  1037               	iorwf	(??_ARPV4_Packet+24)^0,w,c
 23539   011502  6E3B               	movwf	(??_ARPV4_Packet+28)^0,c
 23540   011504  5024               	movf	(??_ARPV4_Packet+5)^0,w,c
 23541   011506  1038               	iorwf	(??_ARPV4_Packet+25)^0,w,c
 23542   011508  6E3C               	movwf	(??_ARPV4_Packet+29)^0,c
 23543   01150A  5025               	movf	(??_ARPV4_Packet+6)^0,w,c
 23544   01150C  1039               	iorwf	(??_ARPV4_Packet+26)^0,w,c
 23545   01150E  6E3D               	movwf	(??_ARPV4_Packet+30)^0,c
 23546   011510  5026               	movf	(??_ARPV4_Packet+7)^0,w,c
 23547   011512  103A               	iorwf	(??_ARPV4_Packet+27)^0,w,c
 23548   011514  6E3E               	movwf	(??_ARPV4_Packet+31)^0,c
 23549   011516  501F               	movf	??_ARPV4_Packet^0,w,c
 23550   011518  103B               	iorwf	(??_ARPV4_Packet+28)^0,w,c
 23551   01151A  6E3F               	movwf	(??_ARPV4_Packet+32)^0,c
 23552   01151C  5020               	movf	(??_ARPV4_Packet+1)^0,w,c
 23553   01151E  103C               	iorwf	(??_ARPV4_Packet+29)^0,w,c
 23554   011520  6E40               	movwf	(??_ARPV4_Packet+33)^0,c
 23555   011522  5021               	movf	(??_ARPV4_Packet+2)^0,w,c
 23556   011524  103D               	iorwf	(??_ARPV4_Packet+30)^0,w,c
 23557   011526  6E41               	movwf	(??_ARPV4_Packet+34)^0,c
 23558   011528  5022               	movf	(??_ARPV4_Packet+3)^0,w,c
 23559   01152A  103E               	iorwf	(??_ARPV4_Packet+31)^0,w,c
 23560   01152C  6E42               	movwf	(??_ARPV4_Packet+35)^0,c
 23561   01152E  EE20 F006          	lfsr	2,6
 23562   011532  5168               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
 23563   011534  26D9               	addwf	fsr2l,f,c
 23564   011536  5169               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
 23565   011538  22DA               	addwfc	fsr2h,f,c
 23566   01153A  C03F  FFDE         	movff	??_ARPV4_Packet+32,postinc2
 23567   01153E  C040  FFDE         	movff	??_ARPV4_Packet+33,postinc2
 23568   011542  C041  FFDE         	movff	??_ARPV4_Packet+34,postinc2
 23569   011546  C042  FFDE         	movff	??_ARPV4_Packet+35,postinc2
 23570                           
 23571                           ; BSR set to: 0
 23572                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 155:                 entryPointer->protocolTy
      +                          pe = header.ptype;
 23573   01154A  EE20 F00A          	lfsr	2,10
 23574   01154E  5168               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
 23575   011550  26D9               	addwf	fsr2l,f,c
 23576   011552  5169               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
 23577   011554  22DA               	addwfc	fsr2h,f,c
 23578   011556  C06C  FFDE         	movff	ARPV4_Packet@header+2,postinc2
 23579   01155A  C06D  FFDD         	movff	ARPV4_Packet@header+3,postdec2
 23580   01155E                     l14191:
 23581                           
 23582                           ; BSR set to: 0
 23583                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 157:             if(header.oper == ((((uint16
      +                          _t)1 & (uint16_t)0xFF00) >> 8) | (((uint16_t)1 & (uint16_t)0x00FF) << 8)))
 23584   01155E  0571               	decf	(ARPV4_Packet@header+7)& (0+255),w,b
 23585   011560  1170               	iorwf	(ARPV4_Packet@header+6)& (0+255),w,b
 23586   011562  A4D8               	btfss	status,2,c
 23587   011564  0012               	return	
 23588                           
 23589                           ; BSR set to: 0
 23590                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 158:             {;mcc_generated_files/TCPIPL
      +                          ibrary/arpv4.c: 159:                 ret = ETH_WriteStart(&header.sha ,0x0806);
 23591   011566  0E72               	movlw	low (ARPV4_Packet@header+8)
 23592   011568  6E17               	movwf	ETH_WriteStart@dest_mac^0,c
 23593   01156A  6A18               	clrf	(ETH_WriteStart@dest_mac+1)^0,c
 23594   01156C  0E08               	movlw	8
 23595   01156E  6E1A               	movwf	(ETH_WriteStart@type+1)^0,c
 23596   011570  0E06               	movlw	6
 23597   011572  6E19               	movwf	ETH_WriteStart@type^0,c
 23598   011574  EC7F  F0A5         	call	_ETH_WriteStart	;wreg free
 23599   011578  0100               	movlb	0	; () banked
 23600   01157A  6F63               	movwf	ARPV4_Packet@ret& (0+255),b
 23601                           
 23602                           ; BSR set to: 0
 23603                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 160:                 if(ret == SUCCESS)
 23604   01157C  0563               	decf	ARPV4_Packet@ret& (0+255),w,b
 23605   01157E  A4D8               	btfss	status,2,c
 23606   011580  0012               	return	
 23607                           
 23608                           ; BSR set to: 0
 23609                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 161:                 {;mcc_generated_files/TC
      +                          PIPLibrary/arpv4.c: 163:                     header.tha.s = header.sha.s;
 23610   011582  EE20  F072         	lfsr	2,ARPV4_Packet@header+8
 23611   011586  EE10  F07C         	lfsr	1,ARPV4_Packet@header+18
 23612   01158A  0E05               	movlw	5
 23613   01158C                     u12311:
 23614   01158C  CFDB FFE3          	movff	plusw2,plusw1
 23615   011590  06E8               	decf	wreg,f,c
 23616   011592  E2FC               	bc	u12311
 23617                           
 23618                           ; BSR set to: 0
 23619                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 164:                     memcpy((void*)&heade
      +                          r.sha.s, (void*)&hostMacAddress.s, sizeof(mac48Address_t));
 23620   011594  0E72               	movlw	low (ARPV4_Packet@header+8)
 23621   011596  6E05               	movwf	memcpy@d1^0,c
 23622   011598  0EA7               	movlw	low _hostMacAddress
 23623   01159A  6E06               	movwf	memcpy@s1^0,c
 23624   01159C  0E02               	movlw	high _hostMacAddress
 23625   01159E  6E07               	movwf	(memcpy@s1+1)^0,c
 23626   0115A0  0E00               	movlw	0
 23627   0115A2  6E09               	movwf	(memcpy@n+1)^0,c
 23628   0115A4  0E06               	movlw	6
 23629   0115A6  6E08               	movwf	memcpy@n^0,c
 23630   0115A8  ECB4  F0BE         	call	_memcpy	;wreg free
 23631                           
 23632                           ; BSR set to: 0
 23633                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 165:                     header.tpa = header.
      +                          spa;
 23634   0115AC  C078  F082         	movff	ARPV4_Packet@header+14,ARPV4_Packet@header+24
 23635   0115B0  C079  F083         	movff	ARPV4_Packet@header+15,ARPV4_Packet@header+25
 23636   0115B4  C07A  F084         	movff	ARPV4_Packet@header+16,ARPV4_Packet@header+26
 23637   0115B8  C07B  F085         	movff	ARPV4_Packet@header+17,ARPV4_Packet@header+27
 23638                           
 23639                           ; BSR set to: 0
 23640                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 166:                     header.spa = ((((uin
      +                          t32_t)(ip_database_info.ipv4_myAddress)&(uint32_t)0xff000000) >> 24) | (((uint32_t)(ip_d
      +                          atabase_info.ipv4_myAddress)&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)(ip_database_info
      +                          .ipv4_myAddress)&(uint32_t)0x0000ff00) << 8) | (((uint32_t)(ip_database_info.ipv4_myAddr
      +                          ess)&(uint32_t)0x000000ff) << 24) );
 23641   0115BC  0EFF               	movlw	255
 23642   0115BE  0101               	movlb	1	; () banked
 23643   0115C0  1500               	andwf	_ip_database_info& (0+255),w,b
 23644   0115C2  6E1F               	movwf	??_ARPV4_Packet^0,c
 23645   0115C4  0E00               	movlw	0
 23646   0115C6  1501               	andwf	(_ip_database_info+1)& (0+255),w,b
 23647   0115C8  6E20               	movwf	(??_ARPV4_Packet+1)^0,c
 23648   0115CA  0E00               	movlw	0
 23649   0115CC  1502               	andwf	(_ip_database_info+2)& (0+255),w,b
 23650   0115CE  6E21               	movwf	(??_ARPV4_Packet+2)^0,c
 23651   0115D0  0E00               	movlw	0
 23652   0115D2  1503               	andwf	(_ip_database_info+3)& (0+255),w,b
 23653   0115D4  6E22               	movwf	(??_ARPV4_Packet+3)^0,c
 23654   0115D6  C01F  F022         	movff	??_ARPV4_Packet,??_ARPV4_Packet+3
 23655   0115DA  6A21               	clrf	(??_ARPV4_Packet+2)^0,c
 23656   0115DC  6A20               	clrf	(??_ARPV4_Packet+1)^0,c
 23657   0115DE  6A1F               	clrf	??_ARPV4_Packet^0,c
 23658   0115E0  0E00               	movlw	0
 23659   0115E2  1500               	andwf	_ip_database_info& (0+255),w,b
 23660   0115E4  6E23               	movwf	(??_ARPV4_Packet+4)^0,c
 23661   0115E6  0EFF               	movlw	255
 23662   0115E8  1501               	andwf	(_ip_database_info+1)& (0+255),w,b
 23663   0115EA  6E24               	movwf	(??_ARPV4_Packet+5)^0,c
 23664   0115EC  0E00               	movlw	0
 23665   0115EE  1502               	andwf	(_ip_database_info+2)& (0+255),w,b
 23666   0115F0  6E25               	movwf	(??_ARPV4_Packet+6)^0,c
 23667   0115F2  0E00               	movlw	0
 23668   0115F4  1503               	andwf	(_ip_database_info+3)& (0+255),w,b
 23669   0115F6  6E26               	movwf	(??_ARPV4_Packet+7)^0,c
 23670   0115F8  C025  F026         	movff	??_ARPV4_Packet+6,??_ARPV4_Packet+7
 23671   0115FC  C024  F025         	movff	??_ARPV4_Packet+5,??_ARPV4_Packet+6
 23672   011600  C023  F024         	movff	??_ARPV4_Packet+4,??_ARPV4_Packet+5
 23673   011604  6A23               	clrf	(??_ARPV4_Packet+4)^0,c
 23674   011606  0E00               	movlw	0
 23675   011608  1501               	andwf	(_ip_database_info+1)& (0+255),w,b
 23676   01160A  6E27               	movwf	(??_ARPV4_Packet+8)^0,c
 23677   01160C  0EFF               	movlw	255
 23678   01160E  1502               	andwf	(_ip_database_info+2)& (0+255),w,b
 23679   011610  6E28               	movwf	(??_ARPV4_Packet+9)^0,c
 23680   011612  0E00               	movlw	0
 23681   011614  1503               	andwf	(_ip_database_info+3)& (0+255),w,b
 23682   011616  6E29               	movwf	(??_ARPV4_Packet+10)^0,c
 23683   011618  5103               	movf	(_ip_database_info+3)& (0+255),w,b
 23684   01161A  1027               	iorwf	(??_ARPV4_Packet+8)^0,w,c
 23685   01161C  6E2A               	movwf	(??_ARPV4_Packet+11)^0,c
 23686   01161E  0E00               	movlw	0
 23687   011620  1028               	iorwf	(??_ARPV4_Packet+9)^0,w,c
 23688   011622  6E2B               	movwf	(??_ARPV4_Packet+12)^0,c
 23689   011624  0E00               	movlw	0
 23690   011626  1029               	iorwf	(??_ARPV4_Packet+10)^0,w,c
 23691   011628  6E2C               	movwf	(??_ARPV4_Packet+13)^0,c
 23692   01162A  502A               	movf	(??_ARPV4_Packet+11)^0,w,c
 23693   01162C  6E2D               	movwf	(??_ARPV4_Packet+14)^0,c
 23694   01162E  502B               	movf	(??_ARPV4_Packet+12)^0,w,c
 23695   011630  6E2E               	movwf	(??_ARPV4_Packet+15)^0,c
 23696   011632  502C               	movf	(??_ARPV4_Packet+13)^0,w,c
 23697   011634  6E2F               	movwf	(??_ARPV4_Packet+16)^0,c
 23698   011636  6A30               	clrf	(??_ARPV4_Packet+17)^0,c
 23699   011638  5023               	movf	(??_ARPV4_Packet+4)^0,w,c
 23700   01163A  102D               	iorwf	(??_ARPV4_Packet+14)^0,w,c
 23701   01163C  6E31               	movwf	(??_ARPV4_Packet+18)^0,c
 23702   01163E  5024               	movf	(??_ARPV4_Packet+5)^0,w,c
 23703   011640  102E               	iorwf	(??_ARPV4_Packet+15)^0,w,c
 23704   011642  6E32               	movwf	(??_ARPV4_Packet+19)^0,c
 23705   011644  5025               	movf	(??_ARPV4_Packet+6)^0,w,c
 23706   011646  102F               	iorwf	(??_ARPV4_Packet+16)^0,w,c
 23707   011648  6E33               	movwf	(??_ARPV4_Packet+20)^0,c
 23708   01164A  5026               	movf	(??_ARPV4_Packet+7)^0,w,c
 23709   01164C  1030               	iorwf	(??_ARPV4_Packet+17)^0,w,c
 23710   01164E  6E34               	movwf	(??_ARPV4_Packet+21)^0,c
 23711   011650  501F               	movf	??_ARPV4_Packet^0,w,c
 23712   011652  1031               	iorwf	(??_ARPV4_Packet+18)^0,w,c
 23713   011654  0100               	movlb	0	; () banked
 23714   011656  6F78               	movwf	(ARPV4_Packet@header+14)& (0+255),b
 23715   011658  5020               	movf	(??_ARPV4_Packet+1)^0,w,c
 23716   01165A  1032               	iorwf	(??_ARPV4_Packet+19)^0,w,c
 23717   01165C  6F79               	movwf	(ARPV4_Packet@header+15)& (0+255),b
 23718   01165E  5021               	movf	(??_ARPV4_Packet+2)^0,w,c
 23719   011660  1033               	iorwf	(??_ARPV4_Packet+20)^0,w,c
 23720   011662  6F7A               	movwf	(ARPV4_Packet@header+16)& (0+255),b
 23721   011664  5022               	movf	(??_ARPV4_Packet+3)^0,w,c
 23722   011666  1034               	iorwf	(??_ARPV4_Packet+21)^0,w,c
 23723   011668  6F7B               	movwf	(ARPV4_Packet@header+17)& (0+255),b
 23724                           
 23725                           ; BSR set to: 0
 23726                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 167:                     header.oper = ((((ui
      +                          nt16_t)2 & (uint16_t)0xFF00) >> 8) | (((uint16_t)2 & (uint16_t)0x00FF) << 8));
 23727   01166A  0E02               	movlw	2
 23728   01166C  6F71               	movwf	(ARPV4_Packet@header+7)& (0+255),b
 23729   01166E  0E00               	movlw	0
 23730   011670  6F70               	movwf	(ARPV4_Packet@header+6)& (0+255),b
 23731                           
 23732                           ; BSR set to: 0
 23733                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 168:                     ETH_WriteBlock((char
      +                          *)&header,sizeof(header));
 23734   011672  0E6A               	movlw	low ARPV4_Packet@header
 23735   011674  6E05               	movwf	ETH_WriteBlock@buffer^0,c
 23736   011676  6A06               	clrf	(ETH_WriteBlock@buffer+1)^0,c
 23737   011678  0E00               	movlw	0
 23738   01167A  6E08               	movwf	(ETH_WriteBlock@length+1)^0,c
 23739   01167C  0E1C               	movlw	28
 23740   01167E  6E07               	movwf	ETH_WriteBlock@length^0,c
 23741   011680  ECEF  F0BE         	call	_ETH_WriteBlock	;wreg free
 23742   011684  EC4A  F0B7         	call	_ETH_Send	;wreg free
 23743   011688  0012               	return	
 23744   01168A                     __end_of_ARPV4_Packet:
 23745                           	callstack 0
 23746                           
 23747 ;; *************** function _memcpy *****************
 23748 ;; Defined at:
 23749 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
 23750 ;; Parameters:    Size  Location     Type
 23751 ;;  d1              1    4[COMRAM] PTR void 
 23752 ;;		 -> ARPV4_Request@header(28), header$sha(6), ARPV4_Packet@header(28), 
 23753 ;;  s1              2    5[COMRAM] PTR const void 
 23754 ;;		 -> hostMacAddress(6), 
 23755 ;;  n               2    7[COMRAM] unsigned int 
 23756 ;; Auto vars:     Size  Location     Type
 23757 ;;  s               2   10[COMRAM] PTR const unsigned char 
 23758 ;;		 -> hostMacAddress(6), 
 23759 ;;  d               1   12[COMRAM] PTR unsigned char 
 23760 ;;		 -> ARPV4_Request@header(28), header$sha(6), ARPV4_Packet@header(28), 
 23761 ;;  tmp             1    9[COMRAM] unsigned char 
 23762 ;; Return value:  Size  Location     Type
 23763 ;;                  1    wreg      PTR void 
 23764 ;; Registers used:
 23765 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23766 ;; Tracked objects:
 23767 ;;		On entry : 3F/0
 23768 ;;		On exit  : 3F/0
 23769 ;;		Unchanged: 3F/0
 23770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23771 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23772 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23774 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23775 ;;Total ram usage:        9 bytes
 23776 ;; Hardware stack levels used: 1
 23777 ;; Hardware stack levels required when called: 4
 23778 ;; This function calls:
 23779 ;;		Nothing
 23780 ;; This function is called by:
 23781 ;;		_ARPV4_Packet
 23782 ;;		_ARPV4_Request
 23783 ;; This function uses a non-reentrant model
 23784 ;;
 23785                           
 23786                           	psect	text100
 23787   017D68                     __ptext100:
 23788                           	callstack 0
 23789   017D68                     _memcpy:
 23790                           	callstack 22
 23791                           
 23792                           ; BSR set to: 0
 23793                           
 23794                           ;incstack = 0
 23795   017D68  C006  F00B         	movff	memcpy@s1,memcpy@s
 23796   017D6C  C007  F00C         	movff	memcpy@s1+1,memcpy@s+1
 23797   017D70  C005  F00D         	movff	memcpy@d1,memcpy@d
 23798   017D74  D00E               	goto	l13033
 23799   017D76                     l13027:
 23800                           
 23801                           ; BSR set to: 0
 23802   017D76  C00B  FFD9         	movff	memcpy@s,fsr2l
 23803   017D7A  C00C  FFDA         	movff	memcpy@s+1,fsr2h
 23804   017D7E  50DF               	movf	indf2,w,c
 23805   017D80  6E0A               	movwf	memcpy@tmp^0,c
 23806                           
 23807                           ; BSR set to: 0
 23808   017D82  4A0B               	infsnz	memcpy@s^0,f,c
 23809   017D84  2A0C               	incf	(memcpy@s+1)^0,f,c
 23810                           
 23811                           ; BSR set to: 0
 23812   017D86  500D               	movf	memcpy@d^0,w,c
 23813   017D88  6ED9               	movwf	fsr2l,c
 23814   017D8A  6ADA               	clrf	fsr2h,c
 23815   017D8C  C00A  FFDF         	movff	memcpy@tmp,indf2
 23816   017D90  2A0D               	incf	memcpy@d^0,f,c
 23817   017D92                     l13033:
 23818                           
 23819                           ; BSR set to: 0
 23820   017D92  0608               	decf	memcpy@n^0,f,c
 23821   017D94  A0D8               	btfss	status,0,c
 23822   017D96  0609               	decf	(memcpy@n+1)^0,f,c
 23823   017D98  2808               	incf	memcpy@n^0,w,c
 23824   017D9A  E1ED               	bnz	l13027
 23825   017D9C  2809               	incf	(memcpy@n+1)^0,w,c
 23826   017D9E  B4D8               	btfsc	status,2,c
 23827   017DA0  0012               	return	
 23828   017DA2  D7E9               	goto	l13027
 23829   017DA4                     __end_of_memcpy:
 23830                           	callstack 0
 23831                           
 23832 ;; *************** function _ETH_WriteStart *****************
 23833 ;; Defined at:
 23834 ;;		line 609 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 23835 ;; Parameters:    Size  Location     Type
 23836 ;;  dest_mac        2   22[COMRAM] PTR const struct .
 23837 ;;		 -> arpMap$macAddress(6), header$sha(6), ARPV4_Packet@header(28), arpMap(104), 
 23838 ;;		 -> broadcastMAC(6), NULL(0), 
 23839 ;;  type            2   24[COMRAM] unsigned short 
 23840 ;; Auto vars:     Size  Location     Type
 23841 ;;  ethPacket       2   28[COMRAM] PTR struct .
 23842 ;;		 -> txData(200), NULL(0), 
 23843 ;; Return value:  Size  Location     Type
 23844 ;;                  1    wreg      enum E5504
 23845 ;; Registers used:
 23846 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23847 ;; Tracked objects:
 23848 ;;		On entry : 3E/0
 23849 ;;		On exit  : 0/0
 23850 ;;		Unchanged: 0/0
 23851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23852 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23853 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23854 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23855 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23856 ;;Total ram usage:        8 bytes
 23857 ;; Hardware stack levels used: 1
 23858 ;; Hardware stack levels required when called: 6
 23859 ;; This function calls:
 23860 ;;		_ETH_EdataWrite
 23861 ;;		_ETH_NewPacket
 23862 ;;		_ETH_ResetByteCount
 23863 ;;		_ETH_Shift_Tx_Packets
 23864 ;; This function is called by:
 23865 ;;		_IPv4_Start
 23866 ;;		_ARPV4_Packet
 23867 ;;		_ARPV4_Request
 23868 ;; This function uses a non-reentrant model
 23869 ;;
 23870                           
 23871                           	psect	text101
 23872   014AFE                     __ptext101:
 23873                           	callstack 0
 23874   014AFE                     _ETH_WriteStart:
 23875                           	callstack 21
 23876                           
 23877                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 613:     if(!ethData.up)
 23878                           
 23879                           ; BSR set to: 0
 23880                           ;incstack = 0
 23881   014AFE  0101               	movlb	1	; () banked
 23882   014B00  B524               	btfsc	_ethData& (0+255),2,b	;volatile
 23883   014B02  D002               	goto	l12895
 23884                           
 23885                           ; BSR set to: 1
 23886                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 614:     {;mcc_generated_files/TCPI
      +                          PLibrary/ETHxxJ6x_driver.c: 615:         return LINK_NOT_FOUND;
 23887   014B04  0E02               	movlw	2
 23888   014B06  0012               	return	
 23889   014B08                     l12895:
 23890                           
 23891                           ; BSR set to: 1
 23892                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 619:     if( pHead != ((void*)0) )
 23893   014B08  5149               	movf	_pHead& (0+255),w,b
 23894   014B0A  114A               	iorwf	(_pHead+1)& (0+255),w,b
 23895   014B0C  B4D8               	btfsc	status,2,c
 23896   014B0E  D008               	goto	l12903
 23897                           
 23898                           ; BSR set to: 1
 23899                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 620:     {;mcc_generated_files/TCPI
      +                          PLibrary/ETHxxJ6x_driver.c: 621:         if( pHead->flags & (0x0001 << 0) )
 23900   014B10  C149  FFD9         	movff	_pHead,fsr2l
 23901   014B14  C14A  FFDA         	movff	_pHead+1,fsr2h
 23902   014B18  A0DF               	btfss	indf2,0,c
 23903   014B1A  D002               	goto	l12903
 23904   014B1C                     u10490:
 23905                           
 23906                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 622:         {;mcc_generated_files/
      +                          TCPIPLibrary/ETHxxJ6x_driver.c: 623:             return BUFFER_BUSY;
 23907   014B1C  0E03               	movlw	3
 23908   014B1E  0012               	return	
 23909   014B20                     l12903:
 23910                           
 23911                           ; BSR set to: 1
 23912                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 627:     if( EWRPT > ((((8192) - ((
      +                          (1518) + (7)) << 1))) + (((((1518) + (7)) << 1)) >> 1) ) )
 23913   014B20  0E0C               	movlw	12
 23914   014B22  010E               	movlb	14	; () banked
 23915   014B24  5DE2               	subwf	226,w,b	;volatile
 23916   014B26  0E1A               	movlw	26
 23917   014B28  59E3               	subwfb	227,w,b	;volatile
 23918   014B2A  A0D8               	btfss	status,0,c
 23919   014B2C  D00D               	goto	l12919
 23920                           
 23921                           ; BSR set to: 14
 23922                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 628:     {;mcc_generated_files/TCPI
      +                          PLibrary/ETHxxJ6x_driver.c: 632:         if(ECON1bits.TXRTS)
 23923   014B2E  A6D2               	btfss	210,3,c	;volatile
 23924   014B30  D002               	goto	l12911
 23925                           
 23926                           ; BSR set to: 14
 23927                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 633:         {;mcc_generated_files/
      +                          TCPIPLibrary/ETHxxJ6x_driver.c: 634:             return TX_LOGIC_NOT_IDLE;
 23928   014B32  0E04               	movlw	4
 23929   014B34  0012               	return	
 23930   014B36                     l12911:
 23931                           
 23932                           ; BSR set to: 14
 23933                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 638:         ETH_Shift_Tx_Packets()
      +                          ;
 23934   014B36  EC61  F0AC         	call	_ETH_Shift_Tx_Packets	;wreg free
 23935                           
 23936                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 641:         if( EWRPT > ((((8192) 
      +                          - (((1518) + (7)) << 1))) + (((((1518) + (7)) << 1)) >> 1) ) )
 23937   014B3A  0E0C               	movlw	12
 23938   014B3C  010E               	movlb	14	; () banked
 23939   014B3E  5DE2               	subwf	226,w,b	;volatile
 23940   014B40  0E1A               	movlw	26
 23941   014B42  59E3               	subwfb	227,w,b	;volatile
 23942   014B44  B0D8               	btfsc	status,0,c
 23943   014B46  D7EA               	goto	u10490
 23944   014B48                     l12919:
 23945                           
 23946                           ; BSR set to: 14
 23947                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 650:     ethPacket = (txPacket_t*)E
      +                          TH_NewPacket();
 23948   014B48  EC3B  F0A9         	call	_ETH_NewPacket	;wreg free
 23949   014B4C  C005  F01D         	movff	?_ETH_NewPacket,ETH_WriteStart@ethPacket
 23950   014B50  C006  F01E         	movff	?_ETH_NewPacket+1,ETH_WriteStart@ethPacket+1
 23951                           
 23952                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 652:     if( ethPacket == ((void*)0
      +                          ) )
 23953   014B54  501D               	movf	ETH_WriteStart@ethPacket^0,w,c
 23954   014B56  101E               	iorwf	(ETH_WriteStart@ethPacket+1)^0,w,c
 23955   014B58  B4D8               	btfsc	status,2,c
 23956   014B5A  D7E0               	goto	u10490
 23957   014B5C  C01D  FFD9         	movff	ETH_WriteStart@ethPacket,fsr2l
 23958   014B60  C01E  FFDA         	movff	ETH_WriteStart@ethPacket+1,fsr2h
 23959   014B64  CFDE F01B          	movff	postinc2,??_ETH_WriteStart
 23960   014B68  CFDD F01C          	movff	postdec2,??_ETH_WriteStart+1
 23961   014B6C  0E01               	movlw	1
 23962   014B6E  121B               	iorwf	??_ETH_WriteStart^0,f,c
 23963   014B70  0E00               	movlw	0
 23964   014B72  121C               	iorwf	(??_ETH_WriteStart+1)^0,f,c
 23965   014B74  C01D  FFD9         	movff	ETH_WriteStart@ethPacket,fsr2l
 23966   014B78  C01E  FFDA         	movff	ETH_WriteStart@ethPacket+1,fsr2h
 23967   014B7C  C01B  FFDE         	movff	??_ETH_WriteStart,postinc2
 23968   014B80  C01C  FFDD         	movff	??_ETH_WriteStart+1,postdec2
 23969                           
 23970                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 660:     EWRPT = ethPacket->packetS
      +                          tart;
 23971   014B84  EE20 F002          	lfsr	2,2
 23972   014B88  501D               	movf	ETH_WriteStart@ethPacket^0,w,c
 23973   014B8A  26D9               	addwf	fsr2l,f,c
 23974   014B8C  501E               	movf	(ETH_WriteStart@ethPacket+1)^0,w,c
 23975   014B8E  22DA               	addwfc	fsr2h,f,c
 23976   014B90  CFDE FEE2          	movff	postinc2,3810	;volatile
 23977   014B94  CFDD FEE3          	movff	postdec2,3811	;volatile
 23978                           
 23979                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 662:     ETH_ResetByteCount();
 23980   014B98  ECD0  F0C1         	call	_ETH_ResetByteCount	;wreg free
 23981                           
 23982                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 664:     ETH_EdataWrite(0x06);
 23983   014B9C  0E06               	movlw	6
 23984   014B9E  ECD8  F0C1         	call	_ETH_EdataWrite
 23985                           
 23986                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 665:     ETH_EdataWrite(dest_mac->m
      +                          ac_array[0]);
 23987   014BA2  C017  FFF6         	movff	ETH_WriteStart@dest_mac,tblptrl
 23988   014BA6  C018  FFF7         	movff	ETH_WriteStart@dest_mac+1,tblptrh
 23989   014BAA  0E00               	movlw	low (__mediumconst shr (0+16))
 23990   014BAC  6EF8               	movwf	tblptru,c
 23991   014BAE  0E0F               	movlw	(high __ramtop+-1)
 23992   014BB0  64F7               	cpfsgt	tblptrh,c
 23993   014BB2  D003               	bra	u10547
 23994   014BB4  0008               	tblrd		*
 23995   014BB6  50F5               	movf	tablat,w,c
 23996   014BB8  D005               	bra	u10540
 23997   014BBA                     u10547:
 23998   014BBA  CFF6 FFE9          	movff	tblptrl,fsr0l
 23999   014BBE  CFF7 FFEA          	movff	tblptrh,fsr0h
 24000   014BC2  50EF               	movf	indf0,w,c
 24001   014BC4                     u10540:
 24002   014BC4  ECD8  F0C1         	call	_ETH_EdataWrite
 24003                           
 24004                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 666:     ETH_EdataWrite(dest_mac->m
      +                          ac_array[1]);
 24005   014BC8  0E01               	movlw	1
 24006   014BCA  2417               	addwf	ETH_WriteStart@dest_mac^0,w,c
 24007   014BCC  6E1B               	movwf	??_ETH_WriteStart^0,c
 24008   014BCE  0E00               	movlw	0
 24009   014BD0  2018               	addwfc	(ETH_WriteStart@dest_mac+1)^0,w,c
 24010   014BD2  6E1C               	movwf	(??_ETH_WriteStart+1)^0,c
 24011   014BD4  C01B  FFF6         	movff	??_ETH_WriteStart,tblptrl
 24012   014BD8  C01C  FFF7         	movff	??_ETH_WriteStart+1,tblptrh
 24013   014BDC  0E00               	movlw	low (__mediumconst shr (0+16))
 24014   014BDE  6EF8               	movwf	tblptru,c
 24015   014BE0  0E0F               	movlw	(high __ramtop+-1)
 24016   014BE2  64F7               	cpfsgt	tblptrh,c
 24017   014BE4  D003               	bra	u10557
 24018   014BE6  0008               	tblrd		*
 24019   014BE8  50F5               	movf	tablat,w,c
 24020   014BEA  D005               	bra	u10550
 24021   014BEC                     u10557:
 24022   014BEC  CFF6 FFE9          	movff	tblptrl,fsr0l
 24023   014BF0  CFF7 FFEA          	movff	tblptrh,fsr0h
 24024   014BF4  50EF               	movf	indf0,w,c
 24025   014BF6                     u10550:
 24026   014BF6  ECD8  F0C1         	call	_ETH_EdataWrite
 24027                           
 24028                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 667:     ETH_EdataWrite(dest_mac->m
      +                          ac_array[2]);
 24029   014BFA  0E02               	movlw	2
 24030   014BFC  2417               	addwf	ETH_WriteStart@dest_mac^0,w,c
 24031   014BFE  6E1B               	movwf	??_ETH_WriteStart^0,c
 24032   014C00  0E00               	movlw	0
 24033   014C02  2018               	addwfc	(ETH_WriteStart@dest_mac+1)^0,w,c
 24034   014C04  6E1C               	movwf	(??_ETH_WriteStart+1)^0,c
 24035   014C06  C01B  FFF6         	movff	??_ETH_WriteStart,tblptrl
 24036   014C0A  C01C  FFF7         	movff	??_ETH_WriteStart+1,tblptrh
 24037   014C0E  0E00               	movlw	low (__mediumconst shr (0+16))
 24038   014C10  6EF8               	movwf	tblptru,c
 24039   014C12  0E0F               	movlw	(high __ramtop+-1)
 24040   014C14  64F7               	cpfsgt	tblptrh,c
 24041   014C16  D003               	bra	u10567
 24042   014C18  0008               	tblrd		*
 24043   014C1A  50F5               	movf	tablat,w,c
 24044   014C1C  D005               	bra	u10560
 24045   014C1E                     u10567:
 24046   014C1E  CFF6 FFE9          	movff	tblptrl,fsr0l
 24047   014C22  CFF7 FFEA          	movff	tblptrh,fsr0h
 24048   014C26  50EF               	movf	indf0,w,c
 24049   014C28                     u10560:
 24050   014C28  ECD8  F0C1         	call	_ETH_EdataWrite
 24051                           
 24052                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 668:     ETH_EdataWrite(dest_mac->m
      +                          ac_array[3]);
 24053   014C2C  0E03               	movlw	3
 24054   014C2E  2417               	addwf	ETH_WriteStart@dest_mac^0,w,c
 24055   014C30  6E1B               	movwf	??_ETH_WriteStart^0,c
 24056   014C32  0E00               	movlw	0
 24057   014C34  2018               	addwfc	(ETH_WriteStart@dest_mac+1)^0,w,c
 24058   014C36  6E1C               	movwf	(??_ETH_WriteStart+1)^0,c
 24059   014C38  C01B  FFF6         	movff	??_ETH_WriteStart,tblptrl
 24060   014C3C  C01C  FFF7         	movff	??_ETH_WriteStart+1,tblptrh
 24061   014C40  0E00               	movlw	low (__mediumconst shr (0+16))
 24062   014C42  6EF8               	movwf	tblptru,c
 24063   014C44  0E0F               	movlw	(high __ramtop+-1)
 24064   014C46  64F7               	cpfsgt	tblptrh,c
 24065   014C48  D003               	bra	u10577
 24066   014C4A  0008               	tblrd		*
 24067   014C4C  50F5               	movf	tablat,w,c
 24068   014C4E  D005               	bra	u10570
 24069   014C50                     u10577:
 24070   014C50  CFF6 FFE9          	movff	tblptrl,fsr0l
 24071   014C54  CFF7 FFEA          	movff	tblptrh,fsr0h
 24072   014C58  50EF               	movf	indf0,w,c
 24073   014C5A                     u10570:
 24074   014C5A  ECD8  F0C1         	call	_ETH_EdataWrite
 24075                           
 24076                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 669:     ETH_EdataWrite(dest_mac->m
      +                          ac_array[4]);
 24077   014C5E  0E04               	movlw	4
 24078   014C60  2417               	addwf	ETH_WriteStart@dest_mac^0,w,c
 24079   014C62  6E1B               	movwf	??_ETH_WriteStart^0,c
 24080   014C64  0E00               	movlw	0
 24081   014C66  2018               	addwfc	(ETH_WriteStart@dest_mac+1)^0,w,c
 24082   014C68  6E1C               	movwf	(??_ETH_WriteStart+1)^0,c
 24083   014C6A  C01B  FFF6         	movff	??_ETH_WriteStart,tblptrl
 24084   014C6E  C01C  FFF7         	movff	??_ETH_WriteStart+1,tblptrh
 24085   014C72  0E00               	movlw	low (__mediumconst shr (0+16))
 24086   014C74  6EF8               	movwf	tblptru,c
 24087   014C76  0E0F               	movlw	(high __ramtop+-1)
 24088   014C78  64F7               	cpfsgt	tblptrh,c
 24089   014C7A  D003               	bra	u10587
 24090   014C7C  0008               	tblrd		*
 24091   014C7E  50F5               	movf	tablat,w,c
 24092   014C80  D005               	bra	u10580
 24093   014C82                     u10587:
 24094   014C82  CFF6 FFE9          	movff	tblptrl,fsr0l
 24095   014C86  CFF7 FFEA          	movff	tblptrh,fsr0h
 24096   014C8A  50EF               	movf	indf0,w,c
 24097   014C8C                     u10580:
 24098   014C8C  ECD8  F0C1         	call	_ETH_EdataWrite
 24099                           
 24100                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 670:     ETH_EdataWrite(dest_mac->m
      +                          ac_array[5]);
 24101   014C90  0E05               	movlw	5
 24102   014C92  2417               	addwf	ETH_WriteStart@dest_mac^0,w,c
 24103   014C94  6E1B               	movwf	??_ETH_WriteStart^0,c
 24104   014C96  0E00               	movlw	0
 24105   014C98  2018               	addwfc	(ETH_WriteStart@dest_mac+1)^0,w,c
 24106   014C9A  6E1C               	movwf	(??_ETH_WriteStart+1)^0,c
 24107   014C9C  C01B  FFF6         	movff	??_ETH_WriteStart,tblptrl
 24108   014CA0  C01C  FFF7         	movff	??_ETH_WriteStart+1,tblptrh
 24109   014CA4  0E00               	movlw	low (__mediumconst shr (0+16))
 24110   014CA6  6EF8               	movwf	tblptru,c
 24111   014CA8  0E0F               	movlw	(high __ramtop+-1)
 24112   014CAA  64F7               	cpfsgt	tblptrh,c
 24113   014CAC  D003               	bra	u10597
 24114   014CAE  0008               	tblrd		*
 24115   014CB0  50F5               	movf	tablat,w,c
 24116   014CB2  D005               	bra	u10590
 24117   014CB4                     u10597:
 24118   014CB4  CFF6 FFE9          	movff	tblptrl,fsr0l
 24119   014CB8  CFF7 FFEA          	movff	tblptrh,fsr0h
 24120   014CBC  50EF               	movf	indf0,w,c
 24121   014CBE                     u10590:
 24122   014CBE  ECD8  F0C1         	call	_ETH_EdataWrite
 24123                           
 24124                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 672:     ETH_EdataWrite(MAADR1);
 24125   014CC2  010E               	movlb	14	; () banked
 24126   014CC4  5184               	movf	132,w,b	;volatile
 24127   014CC6  ECD8  F0C1         	call	_ETH_EdataWrite
 24128                           
 24129                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 673:     ETH_EdataWrite(MAADR2);
 24130   014CCA  010E               	movlb	14	; () banked
 24131   014CCC  5185               	movf	133,w,b	;volatile
 24132   014CCE  ECD8  F0C1         	call	_ETH_EdataWrite
 24133                           
 24134                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 674:     ETH_EdataWrite(MAADR3);
 24135   014CD2  010E               	movlb	14	; () banked
 24136   014CD4  5182               	movf	130,w,b	;volatile
 24137   014CD6  ECD8  F0C1         	call	_ETH_EdataWrite
 24138                           
 24139                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 675:     ETH_EdataWrite(MAADR4);
 24140   014CDA  010E               	movlb	14	; () banked
 24141   014CDC  5183               	movf	131,w,b	;volatile
 24142   014CDE  ECD8  F0C1         	call	_ETH_EdataWrite
 24143                           
 24144                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 676:     ETH_EdataWrite(MAADR5);
 24145   014CE2  010E               	movlb	14	; () banked
 24146   014CE4  5180               	movf	128,w,b	;volatile
 24147   014CE6  ECD8  F0C1         	call	_ETH_EdataWrite
 24148                           
 24149                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 677:     ETH_EdataWrite(MAADR6);
 24150   014CEA  010E               	movlb	14	; () banked
 24151   014CEC  5181               	movf	129,w,b	;volatile
 24152   014CEE  ECD8  F0C1         	call	_ETH_EdataWrite
 24153                           
 24154                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 678:     ETH_EdataWrite(((char *)&t
      +                          ype)[1]);
 24155   014CF2  501A               	movf	(ETH_WriteStart@type+1)^0,w,c
 24156   014CF4  ECD8  F0C1         	call	_ETH_EdataWrite
 24157                           
 24158                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 679:     ETH_EdataWrite(((char *)&t
      +                          ype)[0]);
 24159   014CF8  5019               	movf	ETH_WriteStart@type^0,w,c
 24160   014CFA  ECD8  F0C1         	call	_ETH_EdataWrite
 24161                           
 24162                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 681:     return SUCCESS;
 24163   014CFE  0E01               	movlw	1
 24164   014D00  0012               	return		;funcret
 24165   014D02                     __end_of_ETH_WriteStart:
 24166                           	callstack 0
 24167                           
 24168 ;; *************** function _ETH_NewPacket *****************
 24169 ;; Defined at:
 24170 ;;		line 1161 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 24171 ;; Parameters:    Size  Location     Type
 24172 ;;		None
 24173 ;; Auto vars:     Size  Location     Type
 24174 ;;  index           1    8[COMRAM] unsigned char 
 24175 ;; Return value:  Size  Location     Type
 24176 ;;                  2    4[COMRAM] PTR struct .
 24177 ;; Registers used:
 24178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24179 ;; Tracked objects:
 24180 ;;		On entry : 3F/E
 24181 ;;		On exit  : 38/0
 24182 ;;		Unchanged: 0/0
 24183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24184 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24185 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24186 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24187 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24188 ;;Total ram usage:        5 bytes
 24189 ;; Hardware stack levels used: 1
 24190 ;; Hardware stack levels required when called: 4
 24191 ;; This function calls:
 24192 ;;		Nothing
 24193 ;; This function is called by:
 24194 ;;		_ETH_WriteStart
 24195 ;; This function uses a non-reentrant model
 24196 ;;
 24197                           
 24198                           	psect	text102
 24199   015276                     __ptext102:
 24200                           	callstack 0
 24201   015276                     _ETH_NewPacket:
 24202                           	callstack 22
 24203                           
 24204                           ; BSR set to: 14
 24205                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1163:     uint8_t index = 0;
 24206                           
 24207                           ;incstack = 0
 24208   015276  0E00               	movlw	0
 24209   015278  6E09               	movwf	ETH_NewPacket@index^0,c
 24210                           
 24211                           ; BSR set to: 14
 24212                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1165:     if( ethListSize == (20) )
 24213   01527A  0E14               	movlw	20
 24214   01527C  0101               	movlb	1	; () banked
 24215   01527E  1968               	xorwf	_ethListSize& (0+255),w,b
 24216   015280  A4D8               	btfss	status,2,c
 24217   015282  D0C8               	goto	l12861
 24218   015284                     u10390:
 24219                           
 24220                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1166:     {;mcc_generated_files/TCP
      +                          IPLibrary/ETHxxJ6x_driver.c: 1167:         return ((void*)0);
 24221   015284  0E00               	movlw	0
 24222   015286  6E05               	movwf	?_ETH_NewPacket^0,c
 24223   015288  0E00               	movlw	0
 24224   01528A  6E06               	movwf	(?_ETH_NewPacket+1)^0,c
 24225   01528C  0012               	return	
 24226   01528E                     l12837:
 24227                           
 24228                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1171:     {;mcc_generated_files/TCP
      +                          IPLibrary/ETHxxJ6x_driver.c: 1172:         if( (_Bool)(txData[index].flags & (0x0001 << 
      +                          2)) == 0 )
 24229   01528E  5009               	movf	ETH_NewPacket@index^0,w,c
 24230   015290  0D0A               	mullw	10
 24231   015292  0E00               	movlw	low _txData
 24232   015294  24F3               	addwf	243,w,c
 24233   015296  6ED9               	movwf	fsr2l,c
 24234   015298  0E06               	movlw	high _txData
 24235   01529A  20F4               	addwfc	prodh,w,c
 24236   01529C  6EDA               	movwf	fsr2h,c
 24237   01529E  0106               	movlb	6	; () banked
 24238   0152A0  B4DF               	btfsc	indf2,2,c
 24239   0152A2  D0B7               	goto	l12859
 24240                           
 24241                           ; BSR set to: 6
 24242                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1173:         {;mcc_generated_files
      +                          /TCPIPLibrary/ETHxxJ6x_driver.c: 1174:             txData[index].flags = 0;
 24243   0152A4  5009               	movf	ETH_NewPacket@index^0,w,c
 24244   0152A6  0D0A               	mullw	10
 24245   0152A8  0E00               	movlw	low _txData
 24246   0152AA  24F3               	addwf	243,w,c
 24247   0152AC  6ED9               	movwf	fsr2l,c
 24248   0152AE  0E06               	movlw	high _txData
 24249   0152B0  20F4               	addwfc	prodh,w,c
 24250   0152B2  6EDA               	movwf	fsr2h,c
 24251   0152B4  6ADE               	clrf	postinc2,c
 24252   0152B6  6ADD               	clrf	postdec2,c
 24253                           
 24254                           ; BSR set to: 6
 24255                           
 24256                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1175:             do{ txData[index]
      +                          .flags = txData[index].flags | (0x0001 << 2); } while(0);
 24257   0152B8  5009               	movf	ETH_NewPacket@index^0,w,c
 24258   0152BA  0D0A               	mullw	10
 24259   0152BC  0E00               	movlw	low _txData
 24260   0152BE  24F3               	addwf	243,w,c
 24261   0152C0  6ED9               	movwf	fsr2l,c
 24262   0152C2  0E06               	movlw	high _txData
 24263   0152C4  20F4               	addwfc	prodh,w,c
 24264   0152C6  6EDA               	movwf	fsr2h,c
 24265   0152C8  CFDE F007          	movff	postinc2,??_ETH_NewPacket
 24266   0152CC  CFDD F008          	movff	postdec2,??_ETH_NewPacket+1
 24267   0152D0  0E04               	movlw	4
 24268   0152D2  1207               	iorwf	??_ETH_NewPacket^0,f,c
 24269   0152D4  0E00               	movlw	0
 24270   0152D6  1208               	iorwf	(??_ETH_NewPacket+1)^0,f,c
 24271   0152D8  5009               	movf	ETH_NewPacket@index^0,w,c
 24272   0152DA  0D0A               	mullw	10
 24273   0152DC  0E00               	movlw	low _txData
 24274   0152DE  24F3               	addwf	243,w,c
 24275   0152E0  6ED9               	movwf	fsr2l,c
 24276   0152E2  0E06               	movlw	high _txData
 24277   0152E4  20F4               	addwfc	prodh,w,c
 24278   0152E6  6EDA               	movwf	fsr2h,c
 24279   0152E8  C007  FFDE         	movff	??_ETH_NewPacket,postinc2
 24280   0152EC  C008  FFDD         	movff	??_ETH_NewPacket+1,postdec2
 24281                           
 24282                           ; BSR set to: 6
 24283                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1177:             txData[index].pac
      +                          ketEnd = ((8192)-1);
 24284   0152F0  5009               	movf	ETH_NewPacket@index^0,w,c
 24285   0152F2  0D0A               	mullw	10
 24286   0152F4  0E04               	movlw	low (_txData+4)
 24287   0152F6  24F3               	addwf	243,w,c
 24288   0152F8  6ED9               	movwf	fsr2l,c
 24289   0152FA  0E06               	movlw	high (_txData+4)
 24290   0152FC  20F4               	addwfc	prodh,w,c
 24291   0152FE  6EDA               	movwf	fsr2h,c
 24292   015300  0EFF               	movlw	255
 24293   015302  6EDE               	movwf	postinc2,c
 24294   015304  0E1F               	movlw	31
 24295   015306  6EDD               	movwf	postdec2,c
 24296                           
 24297                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1179:             txData[index].pre
      +                          vPacket = ((void*)0);
 24298   015308  5009               	movf	ETH_NewPacket@index^0,w,c
 24299   01530A  0D0A               	mullw	10
 24300   01530C  0E06               	movlw	low (_txData+6)
 24301   01530E  24F3               	addwf	243,w,c
 24302   015310  6ED9               	movwf	fsr2l,c
 24303   015312  0E06               	movlw	high (_txData+6)
 24304   015314  20F4               	addwfc	prodh,w,c
 24305   015316  6EDA               	movwf	fsr2h,c
 24306   015318  6ADE               	clrf	postinc2,c
 24307   01531A  6ADD               	clrf	postdec2,c
 24308                           
 24309                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1180:             txData[index].nex
      +                          tPacket = pHead;
 24310   01531C  5009               	movf	ETH_NewPacket@index^0,w,c
 24311   01531E  0D0A               	mullw	10
 24312   015320  0E08               	movlw	low (_txData+8)
 24313   015322  24F3               	addwf	243,w,c
 24314   015324  6ED9               	movwf	fsr2l,c
 24315   015326  0E06               	movlw	high (_txData+8)
 24316   015328  20F4               	addwfc	prodh,w,c
 24317   01532A  6EDA               	movwf	fsr2h,c
 24318   01532C  C149  FFDE         	movff	_pHead,postinc2
 24319   015330  C14A  FFDD         	movff	_pHead+1,postdec2
 24320                           
 24321                           ; BSR set to: 6
 24322                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1182:             if( pHead != ((vo
      +                          id*)0) )
 24323   015334  0101               	movlb	1	; () banked
 24324   015336  5149               	movf	_pHead& (0+255),w,b
 24325   015338  114A               	iorwf	(_pHead+1)& (0+255),w,b
 24326   01533A  B4D8               	btfsc	status,2,c
 24327   01533C  D043               	goto	l12847
 24328                           
 24329                           ; BSR set to: 1
 24330                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1183:             {;mcc_generated_f
      +                          iles/TCPIPLibrary/ETHxxJ6x_driver.c: 1184:                 pHead->prevPacket = &txData[i
      +                          ndex];
 24331   01533E  5009               	movf	ETH_NewPacket@index^0,w,c
 24332   015340  0D0A               	mullw	10
 24333   015342  0E00               	movlw	low _txData
 24334   015344  24F3               	addwf	243,w,c
 24335   015346  6E07               	movwf	??_ETH_NewPacket^0,c
 24336   015348  0E06               	movlw	high _txData
 24337   01534A  20F4               	addwfc	prodh,w,c
 24338   01534C  6E08               	movwf	(??_ETH_NewPacket+1)^0,c
 24339   01534E  EE20 F006          	lfsr	2,6
 24340   015352  5149               	movf	_pHead& (0+255),w,b
 24341   015354  26D9               	addwf	fsr2l,f,c
 24342   015356  514A               	movf	(_pHead+1)& (0+255),w,b
 24343   015358  22DA               	addwfc	fsr2h,f,c
 24344   01535A  C007  FFDE         	movff	??_ETH_NewPacket,postinc2
 24345   01535E  C008  FFDD         	movff	??_ETH_NewPacket+1,postdec2
 24346                           
 24347                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1185:                 txData[index]
      +                          .packetStart = pHead->packetEnd + (7);
 24348   015362  EE20 F004          	lfsr	2,4
 24349   015366  5149               	movf	_pHead& (0+255),w,b
 24350   015368  26D9               	addwf	fsr2l,f,c
 24351   01536A  514A               	movf	(_pHead+1)& (0+255),w,b
 24352   01536C  22DA               	addwfc	fsr2h,f,c
 24353   01536E  CFDE F007          	movff	postinc2,??_ETH_NewPacket
 24354   015372  CFDD F008          	movff	postdec2,??_ETH_NewPacket+1
 24355   015376  0E07               	movlw	7
 24356   015378  2607               	addwf	??_ETH_NewPacket^0,f,c
 24357   01537A  0E00               	movlw	0
 24358   01537C  2208               	addwfc	(??_ETH_NewPacket+1)^0,f,c
 24359   01537E  5009               	movf	ETH_NewPacket@index^0,w,c
 24360   015380  0D0A               	mullw	10
 24361   015382  0E02               	movlw	low (_txData+2)
 24362   015384  24F3               	addwf	243,w,c
 24363   015386  6ED9               	movwf	fsr2l,c
 24364   015388  0E06               	movlw	high (_txData+2)
 24365   01538A  20F4               	addwfc	prodh,w,c
 24366   01538C  6EDA               	movwf	fsr2h,c
 24367   01538E  C007  FFDE         	movff	??_ETH_NewPacket,postinc2
 24368   015392  C008  FFDD         	movff	??_ETH_NewPacket+1,postdec2
 24369                           
 24370                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1188:                 if( txData[in
      +                          dex].packetStart & 0x0001 )
 24371   015396  5009               	movf	ETH_NewPacket@index^0,w,c
 24372   015398  0D0A               	mullw	10
 24373   01539A  0E02               	movlw	low (_txData+2)
 24374   01539C  24F3               	addwf	243,w,c
 24375   01539E  6ED9               	movwf	fsr2l,c
 24376   0153A0  0E06               	movlw	high (_txData+2)
 24377   0153A2  20F4               	addwfc	prodh,w,c
 24378   0153A4  6EDA               	movwf	fsr2h,c
 24379   0153A6  0106               	movlb	6	; () banked
 24380   0153A8  A0DF               	btfss	indf2,0,c
 24381   0153AA  D020               	goto	l12851
 24382                           
 24383                           ; BSR set to: 6
 24384                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1189:                 {;mcc_generat
      +                          ed_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1191:                     ++ txData[index].pack
      +                          etStart;
 24385   0153AC  5009               	movf	ETH_NewPacket@index^0,w,c
 24386   0153AE  0D0A               	mullw	10
 24387   0153B0  0E02               	movlw	low (_txData+2)
 24388   0153B2  24F3               	addwf	243,w,c
 24389   0153B4  6ED9               	movwf	fsr2l,c
 24390   0153B6  0E06               	movlw	high (_txData+2)
 24391   0153B8  20F4               	addwfc	prodh,w,c
 24392   0153BA  6EDA               	movwf	fsr2h,c
 24393   0153BC  2ADE               	incf	postinc2,f,c
 24394   0153BE  0E00               	movlw	0
 24395   0153C0  22DD               	addwfc	postdec2,f,c
 24396   0153C2  D014               	goto	l12851
 24397   0153C4                     l12847:
 24398                           
 24399                           ; BSR set to: 1
 24400                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1195:             {;mcc_generated_f
      +                          iles/TCPIPLibrary/ETHxxJ6x_driver.c: 1196:                 txData[index].packetStart = (
      +                          (8192) - (((1518) + (7)) << 1));
 24401   0153C4  5009               	movf	ETH_NewPacket@index^0,w,c
 24402   0153C6  0D0A               	mullw	10
 24403   0153C8  0E02               	movlw	low (_txData+2)
 24404   0153CA  24F3               	addwf	243,w,c
 24405   0153CC  6ED9               	movwf	fsr2l,c
 24406   0153CE  0E06               	movlw	high (_txData+2)
 24407   0153D0  20F4               	addwfc	prodh,w,c
 24408   0153D2  6EDA               	movwf	fsr2h,c
 24409   0153D4  0E16               	movlw	22
 24410   0153D6  6EDE               	movwf	postinc2,c
 24411   0153D8  0E14               	movlw	20
 24412   0153DA  6EDD               	movwf	postdec2,c
 24413                           
 24414                           ; BSR set to: 1
 24415                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1197:                 pTail = (txPa
      +                          cket_t*)&txData[index];
 24416   0153DC  5009               	movf	ETH_NewPacket@index^0,w,c
 24417   0153DE  0D0A               	mullw	10
 24418   0153E0  0E00               	movlw	low _txData
 24419   0153E2  24F3               	addwf	243,w,c
 24420   0153E4  6F47               	movwf	_pTail& (0+255),b
 24421   0153E6  0E06               	movlw	high _txData
 24422   0153E8  20F4               	addwfc	prodh,w,c
 24423   0153EA  6F48               	movwf	(_pTail+1)& (0+255),b
 24424   0153EC                     l12851:
 24425                           
 24426                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1200:             pHead = (txPacket
      +                          _t*)&txData[index];
 24427   0153EC  5009               	movf	ETH_NewPacket@index^0,w,c
 24428   0153EE  0D0A               	mullw	10
 24429   0153F0  0E00               	movlw	low _txData
 24430   0153F2  24F3               	addwf	243,w,c
 24431   0153F4  0101               	movlb	1	; () banked
 24432   0153F6  6F49               	movwf	_pHead& (0+255),b
 24433   0153F8  0E06               	movlw	high _txData
 24434   0153FA  20F4               	addwfc	prodh,w,c
 24435   0153FC  6F4A               	movwf	(_pHead+1)& (0+255),b
 24436                           
 24437                           ; BSR set to: 1
 24438                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1202:             ethListSize ++;
 24439   0153FE  2B68               	incf	_ethListSize& (0+255),f,b
 24440                           
 24441                           ; BSR set to: 1
 24442                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1203:             return &txData[in
      +                          dex];
 24443   015400  5009               	movf	ETH_NewPacket@index^0,w,c
 24444   015402  0D0A               	mullw	10
 24445   015404  0E00               	movlw	low _txData
 24446   015406  24F3               	addwf	243,w,c
 24447   015408  6E05               	movwf	?_ETH_NewPacket^0,c
 24448   01540A  0E06               	movlw	high _txData
 24449   01540C  20F4               	addwfc	prodh,w,c
 24450   01540E  6E06               	movwf	(?_ETH_NewPacket+1)^0,c
 24451   015410  0012               	return	
 24452   015412                     l12859:
 24453                           
 24454                           ; BSR set to: 6
 24455                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1205:         index ++;
 24456   015412  2A09               	incf	ETH_NewPacket@index^0,f,c
 24457   015414                     l12861:
 24458                           
 24459                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1170:     while( index < (20) )
 24460   015414  0E13               	movlw	19
 24461   015416  6409               	cpfsgt	ETH_NewPacket@index^0,c
 24462   015418  D73A               	goto	l12837
 24463   01541A  D734               	goto	u10390
 24464   01541C                     __end_of_ETH_NewPacket:
 24465                           	callstack 0
 24466                           
 24467 ;; *************** function _ETH_WriteBlock *****************
 24468 ;; Defined at:
 24469 ;;		line 583 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 24470 ;; Parameters:    Size  Location     Type
 24471 ;;  buffer          2    4[COMRAM] PTR const unsigned char 
 24472 ;;		 -> ARPV4_Request@header(28), ARPV4_Packet@header(28), udpTransBox(80), NULL(0), 
 24473 ;;  length          2    6[COMRAM] unsigned short 
 24474 ;; Auto vars:     Size  Location     Type
 24475 ;;  p               2    8[COMRAM] PTR const unsigned char 
 24476 ;;		 -> ARPV4_Request@header(28), ARPV4_Packet@header(28), udpTransBox(80), NULL(0), 
 24477 ;; Return value:  Size  Location     Type
 24478 ;;                  2    4[COMRAM] unsigned short 
 24479 ;; Registers used:
 24480 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24481 ;; Tracked objects:
 24482 ;;		On entry : 0/1
 24483 ;;		On exit  : 0/0
 24484 ;;		Unchanged: 0/0
 24485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24486 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24487 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24489 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24490 ;;Total ram usage:        6 bytes
 24491 ;; Hardware stack levels used: 1
 24492 ;; Hardware stack levels required when called: 5
 24493 ;; This function calls:
 24494 ;;		_ETH_EdataWrite
 24495 ;; This function is called by:
 24496 ;;		_PROCESSxETHxDATA
 24497 ;;		_ARPV4_Packet
 24498 ;;		_ARPV4_Request
 24499 ;; This function uses a non-reentrant model
 24500 ;;
 24501                           
 24502                           	psect	text103
 24503   017DDE                     __ptext103:
 24504                           	callstack 0
 24505   017DDE                     _ETH_WriteBlock:
 24506                           	callstack 21
 24507                           
 24508                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 583: uint16_t ETH_WriteBlock(const 
      +                          char *buffer, uint16_t length);mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 584: 
      +                          {;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 585:     const char *p = buffer;
 24509                           
 24510                           ;incstack = 0
 24511   017DDE  C005  F009         	movff	ETH_WriteBlock@buffer,ETH_WriteBlock@p
 24512   017DE2  C006  F00A         	movff	ETH_WriteBlock@buffer+1,ETH_WriteBlock@p+1
 24513                           
 24514                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 586:     while(length-- && (EWRPT <
      +                           ((8192)-1)))
 24515   017DE6  D009               	goto	l12883
 24516   017DE8                     l12879:
 24517                           
 24518                           ; BSR set to: 14
 24519                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 587:     {;mcc_generated_files/TCPI
      +                          PLibrary/ETHxxJ6x_driver.c: 588:         ETH_EdataWrite(*p++);
 24520   017DE8  C009  FFD9         	movff	ETH_WriteBlock@p,fsr2l
 24521   017DEC  C00A  FFDA         	movff	ETH_WriteBlock@p+1,fsr2h
 24522   017DF0  50DF               	movf	indf2,w,c
 24523   017DF2  ECD8  F0C1         	call	_ETH_EdataWrite
 24524   017DF6  4A09               	infsnz	ETH_WriteBlock@p^0,f,c
 24525   017DF8  2A0A               	incf	(ETH_WriteBlock@p+1)^0,f,c
 24526   017DFA                     l12883:
 24527                           
 24528                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 586:     while(length-- && (EWRPT <
      +                           ((8192)-1)))
 24529   017DFA  0607               	decf	ETH_WriteBlock@length^0,f,c
 24530   017DFC  A0D8               	btfss	status,0,c
 24531   017DFE  0608               	decf	(ETH_WriteBlock@length+1)^0,f,c
 24532   017E00  2807               	incf	ETH_WriteBlock@length^0,w,c
 24533   017E02  E103               	bnz	u10450
 24534   017E04  2808               	incf	(ETH_WriteBlock@length+1)^0,w,c
 24535   017E06  B4D8               	btfsc	status,2,c
 24536   017E08  0012               	return	
 24537   017E0A                     u10450:
 24538   017E0A  010E               	movlb	14	; () banked
 24539   017E0C  29E2               	incf	226,w,b	;volatile
 24540   017E0E  0E1F               	movlw	31
 24541   017E10  59E3               	subwfb	227,w,b	;volatile
 24542   017E12  B0D8               	btfsc	status,0,c
 24543   017E14  0012               	return	
 24544   017E16  D7E8               	goto	l12879
 24545   017E18                     __end_of_ETH_WriteBlock:
 24546                           	callstack 0
 24547                           
 24548 ;; *************** function _ETH_EdataWrite *****************
 24549 ;; Defined at:
 24550 ;;		line 114 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 24551 ;; Parameters:    Size  Location     Type
 24552 ;;  d               1    wreg     unsigned char 
 24553 ;; Auto vars:     Size  Location     Type
 24554 ;;  d               1    0[COMRAM] unsigned char 
 24555 ;; Return value:  Size  Location     Type
 24556 ;;                  1    wreg      void 
 24557 ;; Registers used:
 24558 ;;		wreg
 24559 ;; Tracked objects:
 24560 ;;		On entry : 0/0
 24561 ;;		On exit  : 0/0
 24562 ;;		Unchanged: 0/0
 24563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24568 ;;Total ram usage:        0 bytes
 24569 ;; Hardware stack levels used: 1
 24570 ;; Hardware stack levels required when called: 4
 24571 ;; This function calls:
 24572 ;;		Nothing
 24573 ;; This function is called by:
 24574 ;;		_ETH_Write8
 24575 ;;		_ETH_Write16
 24576 ;;		_ETH_Write32
 24577 ;;		_ETH_WriteBlock
 24578 ;;		_ETH_WriteStart
 24579 ;;		_ETH_Insert
 24580 ;; This function uses a non-reentrant model
 24581 ;;
 24582                           
 24583                           	psect	text104
 24584   0183B0                     __ptext104:
 24585                           	callstack 0
 24586   0183B0                     _ETH_EdataWrite:
 24587                           	callstack 22
 24588                           
 24589                           ;incstack = 0
 24590   0183B0  CFE8 FF61          	movff	wreg,3937	;# 
 24591   0183B4  0012               	return		;funcret
 24592   0183B6                     __end_of_ETH_EdataWrite:
 24593                           	callstack 0
 24594                           
 24595 ;; *************** function _ETH_Send *****************
 24596 ;; Defined at:
 24597 ;;		line 697 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 24598 ;; Parameters:    Size  Location     Type
 24599 ;;		None
 24600 ;; Auto vars:     Size  Location     Type
 24601 ;;  packetEnd       2   12[COMRAM] unsigned short 
 24602 ;; Return value:  Size  Location     Type
 24603 ;;                  1    wreg      enum E5504
 24604 ;; Registers used:
 24605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24606 ;; Tracked objects:
 24607 ;;		On entry : 0/1
 24608 ;;		On exit  : 0/0
 24609 ;;		Unchanged: 0/0
 24610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24612 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24613 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24614 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24615 ;;Total ram usage:        6 bytes
 24616 ;; Hardware stack levels used: 1
 24617 ;; Hardware stack levels required when called: 5
 24618 ;; This function calls:
 24619 ;;		_ETH_SendQueued
 24620 ;; This function is called by:
 24621 ;;		_IPV4_Send
 24622 ;;		_ARPV4_Packet
 24623 ;;		_ARPV4_Request
 24624 ;; This function uses a non-reentrant model
 24625 ;;
 24626                           
 24627                           	psect	text105
 24628   016E94                     __ptext105:
 24629                           	callstack 0
 24630   016E94                     _ETH_Send:
 24631                           	callstack 21
 24632                           
 24633                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 699:     uint16_t packetEnd = EWRPT
      +                           - 1;
 24634                           
 24635                           ;incstack = 0
 24636   016E94  0EFF               	movlw	255
 24637   016E96  010E               	movlb	14	; () banked
 24638   016E98  25E2               	addwf	226,w,b	;volatile
 24639   016E9A  6E0D               	movwf	ETH_Send@packetEnd^0,c
 24640   016E9C  0EFF               	movlw	255
 24641   016E9E  21E3               	addwfc	227,w,b	;volatile
 24642   016EA0  6E0E               	movwf	(ETH_Send@packetEnd+1)^0,c
 24643                           
 24644                           ; BSR set to: 14
 24645                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 701:     if( !ethData.up )
 24646   016EA2  0101               	movlb	1	; () banked
 24647   016EA4  B524               	btfsc	_ethData& (0+255),2,b	;volatile
 24648   016EA6  D002               	goto	l12973
 24649                           
 24650                           ; BSR set to: 1
 24651                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 702:     {;mcc_generated_files/TCPI
      +                          PLibrary/ETHxxJ6x_driver.c: 703:         return LINK_NOT_FOUND;
 24652   016EA8  0E02               	movlw	2
 24653   016EAA  0012               	return	
 24654   016EAC                     l12973:
 24655                           
 24656                           ; BSR set to: 1
 24657                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 706:     if( ethListSize == 0 )
 24658   016EAC  5168               	movf	_ethListSize& (0+255),w,b
 24659   016EAE  A4D8               	btfss	status,2,c
 24660   016EB0  D002               	goto	l12979
 24661                           
 24662                           ; BSR set to: 1
 24663                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 707:     {;mcc_generated_files/TCPI
      +                          PLibrary/ETHxxJ6x_driver.c: 708:         return BUFFER_BUSY;
 24664   016EB2  0E03               	movlw	3
 24665   016EB4  0012               	return	
 24666   016EB6                     l12979:
 24667                           
 24668                           ; BSR set to: 1
 24669   016EB6  C149  FFD9         	movff	_pHead,fsr2l
 24670   016EBA  C14A  FFDA         	movff	_pHead+1,fsr2h
 24671   016EBE  CFDE F009          	movff	postinc2,??_ETH_Send
 24672   016EC2  CFDD F00A          	movff	postdec2,??_ETH_Send+1
 24673   016EC6  0EFE               	movlw	254
 24674   016EC8  1409               	andwf	??_ETH_Send^0,w,c
 24675   016ECA  6E0B               	movwf	(??_ETH_Send+2)^0,c
 24676   016ECC  0EFF               	movlw	255
 24677   016ECE  140A               	andwf	(??_ETH_Send+1)^0,w,c
 24678   016ED0  6E0C               	movwf	(??_ETH_Send+3)^0,c
 24679   016ED2  C149  FFD9         	movff	_pHead,fsr2l
 24680   016ED6  C14A  FFDA         	movff	_pHead+1,fsr2h
 24681   016EDA  C00B  FFDE         	movff	??_ETH_Send+2,postinc2
 24682   016EDE  C00C  FFDD         	movff	??_ETH_Send+3,postdec2
 24683                           
 24684                           ; BSR set to: 1
 24685                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 712:     pHead->packetEnd = packetE
      +                          nd;
 24686   016EE2  EE20 F004          	lfsr	2,4
 24687   016EE6  5149               	movf	_pHead& (0+255),w,b
 24688   016EE8  26D9               	addwf	fsr2l,f,c
 24689   016EEA  514A               	movf	(_pHead+1)& (0+255),w,b
 24690   016EEC  22DA               	addwfc	fsr2h,f,c
 24691   016EEE  C00D  FFDE         	movff	ETH_Send@packetEnd,postinc2
 24692   016EF2  C00E  FFDD         	movff	ETH_Send@packetEnd+1,postdec2
 24693                           
 24694                           ; BSR set to: 1
 24695                           
 24696                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 713:     do{ pHead->flags = pHead->
      +                          flags | (0x0001 << 1); } while(0);
 24697   016EF6  C149  FFD9         	movff	_pHead,fsr2l
 24698   016EFA  C14A  FFDA         	movff	_pHead+1,fsr2h
 24699   016EFE  CFDE F009          	movff	postinc2,??_ETH_Send
 24700   016F02  CFDD F00A          	movff	postdec2,??_ETH_Send+1
 24701   016F06  0E02               	movlw	2
 24702   016F08  1209               	iorwf	??_ETH_Send^0,f,c
 24703   016F0A  0E00               	movlw	0
 24704   016F0C  120A               	iorwf	(??_ETH_Send+1)^0,f,c
 24705   016F0E  C149  FFD9         	movff	_pHead,fsr2l
 24706   016F12  C14A  FFDA         	movff	_pHead+1,fsr2h
 24707   016F16  C009  FFDE         	movff	??_ETH_Send,postinc2
 24708   016F1A  C00A  FFDD         	movff	??_ETH_Send+1,postdec2
 24709                           
 24710                           ; BSR set to: 1
 24711                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 716:     if( (ECON1bits.TXRTS) || (
      +                          ethListSize > 1) )
 24712   016F1E  B6D2               	btfsc	210,3,c	;volatile
 24713   016F20  D003               	goto	u10630
 24714                           
 24715                           ; BSR set to: 1
 24716   016F22  0E01               	movlw	1
 24717   016F24  6568               	cpfsgt	_ethListSize& (0+255),b
 24718   016F26  D002               	goto	l12989
 24719   016F28                     u10630:
 24720                           
 24721                           ; BSR set to: 1
 24722                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 717:     {;mcc_generated_files/TCPI
      +                          PLibrary/ETHxxJ6x_driver.c: 718:         return TX_QUEUED;
 24723   016F28  0E12               	movlw	18
 24724   016F2A  0012               	return	
 24725   016F2C                     l12989:
 24726                           
 24727                           ; BSR set to: 1
 24728                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 721:     return ETH_SendQueued();
 24729   016F2C  ECED  F0B9         	call	_ETH_SendQueued	;wreg free
 24730   016F30  0012               	return		;funcret
 24731   016F32                     __end_of_ETH_Send:
 24732                           	callstack 0
 24733                           
 24734 ;; *************** function _ETH_ReadBlock *****************
 24735 ;; Defined at:
 24736 ;;		line 507 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 24737 ;; Parameters:    Size  Location     Type
 24738 ;;  buffer          2    4[COMRAM] PTR void 
 24739 ;;		 -> ARPV4_Packet@header(28), ICMP_Receive@icmpHdr(4), Network_Read@header(14), udpReceivedData(10), 
 24740 ;;		 -> udpHeader(8), ipv4Header(20), 
 24741 ;;  length          2    6[COMRAM] unsigned short 
 24742 ;; Auto vars:     Size  Location     Type
 24743 ;;  p               2   10[COMRAM] PTR unsigned char 
 24744 ;;		 -> ARPV4_Packet@header(28), ICMP_Receive@icmpHdr(4), Network_Read@header(14), udpReceivedData(10), 
 24745 ;;		 -> udpHeader(8), ipv4Header(20), 
 24746 ;;  len             2    8[COMRAM] unsigned short 
 24747 ;; Return value:  Size  Location     Type
 24748 ;;                  2    4[COMRAM] unsigned short 
 24749 ;; Registers used:
 24750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24751 ;; Tracked objects:
 24752 ;;		On entry : 0/1
 24753 ;;		On exit  : 3F/1
 24754 ;;		Unchanged: 0/0
 24755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24756 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24757 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24759 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24760 ;;Total ram usage:        8 bytes
 24761 ;; Hardware stack levels used: 1
 24762 ;; Hardware stack levels required when called: 5
 24763 ;; This function calls:
 24764 ;;		_ETH_EdataRead
 24765 ;; This function is called by:
 24766 ;;		_UDPxDATAxRECV
 24767 ;;		_Network_Read
 24768 ;;		_ICMP_Receive
 24769 ;;		_UDP_Receive
 24770 ;;		_IPV4_Packet
 24771 ;;		_ARPV4_Packet
 24772 ;; This function uses a non-reentrant model
 24773 ;;
 24774                           
 24775                           	psect	text106
 24776   017918                     __ptext106:
 24777                           	callstack 0
 24778   017918                     _ETH_ReadBlock:
 24779                           	callstack 19
 24780                           
 24781                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 507: uint16_t ETH_ReadBlock(void *b
      +                          uffer, uint16_t length);mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 508: {;mcc_g
      +                          enerated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 509:     uint16_t len = 0;
 24782                           
 24783                           ;incstack = 0
 24784   017918  0E00               	movlw	0
 24785   01791A  6E0A               	movwf	(ETH_ReadBlock@len+1)^0,c
 24786   01791C  0E00               	movlw	0
 24787   01791E  6E09               	movwf	ETH_ReadBlock@len^0,c
 24788                           
 24789                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 510:     char *p = buffer;
 24790   017920  C005  F00B         	movff	ETH_ReadBlock@buffer,ETH_ReadBlock@p
 24791   017924  C006  F00C         	movff	ETH_ReadBlock@buffer+1,ETH_ReadBlock@p+1
 24792                           
 24793                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 511:     while(rxPacketStatusVector
      +                          .byteCount && length)
 24794   017928  D013               	goto	l13469
 24795   01792A                     l13457:
 24796                           
 24797                           ; BSR set to: 1
 24798                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 512:     {;mcc_generated_files/TCPI
      +                          PLibrary/ETHxxJ6x_driver.c: 513:         *p++ = ETH_EdataRead();
 24799   01792A  ECCB  F0C1         	call	_ETH_EdataRead	;wreg free
 24800   01792E  C00B  FFD9         	movff	ETH_ReadBlock@p,fsr2l
 24801   017932  C00C  FFDA         	movff	ETH_ReadBlock@p+1,fsr2h
 24802   017936  6EDF               	movwf	indf2,c
 24803                           
 24804                           ; BSR set to: 14
 24805   017938  4A0B               	infsnz	ETH_ReadBlock@p^0,f,c
 24806   01793A  2A0C               	incf	(ETH_ReadBlock@p+1)^0,f,c
 24807                           
 24808                           ; BSR set to: 14
 24809                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 514:         len ++;
 24810   01793C  4A09               	infsnz	ETH_ReadBlock@len^0,f,c
 24811   01793E  2A0A               	incf	(ETH_ReadBlock@len+1)^0,f,c
 24812                           
 24813                           ; BSR set to: 14
 24814                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 515:         length --;
 24815   017940  0607               	decf	ETH_ReadBlock@length^0,f,c
 24816   017942  A0D8               	btfss	status,0,c
 24817   017944  0608               	decf	(ETH_ReadBlock@length+1)^0,f,c
 24818                           
 24819                           ; BSR set to: 14
 24820                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 516:         rxPacketStatusVector.b
      +                          yteCount --;
 24821   017946  0101               	movlb	1	; () banked
 24822   017948  072E               	decf	_rxPacketStatusVector& (0+255),f,b
 24823   01794A  A0D8               	btfss	status,0,c
 24824   01794C  072F               	decf	(_rxPacketStatusVector+1)& (0+255),f,b
 24825                           
 24826                           ; BSR set to: 1
 24827                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 517:         ethData.error = 0;
 24828   01794E  9124               	bcf	_ethData& (0+255),0,b	;volatile
 24829   017950                     l13469:
 24830                           
 24831                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 511:     while(rxPacketStatusVector
      +                          .byteCount && length)
 24832   017950  0101               	movlb	1	; () banked
 24833   017952  512E               	movf	_rxPacketStatusVector& (0+255),w,b
 24834   017954  112F               	iorwf	(_rxPacketStatusVector+1)& (0+255),w,b
 24835   017956  B4D8               	btfsc	status,2,c
 24836   017958  D004               	goto	u11390
 24837                           
 24838                           ; BSR set to: 1
 24839   01795A  5007               	movf	ETH_ReadBlock@length^0,w,c
 24840   01795C  1008               	iorwf	(ETH_ReadBlock@length+1)^0,w,c
 24841   01795E  A4D8               	btfss	status,2,c
 24842   017960  D7E4               	goto	l13457
 24843   017962                     u11390:
 24844                           
 24845                           ; BSR set to: 1
 24846                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 519:     return len;
 24847   017962  C009  F005         	movff	ETH_ReadBlock@len,?_ETH_ReadBlock
 24848   017966  C00A  F006         	movff	ETH_ReadBlock@len+1,?_ETH_ReadBlock+1
 24849                           
 24850                           ; BSR set to: 1
 24851   01796A  0012               	return		;funcret
 24852   01796C                     __end_of_ETH_ReadBlock:
 24853                           	callstack 0
 24854                           
 24855 ;; *************** function _ETH_EdataRead *****************
 24856 ;; Defined at:
 24857 ;;		line 108 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 24858 ;; Parameters:    Size  Location     Type
 24859 ;;		None
 24860 ;; Auto vars:     Size  Location     Type
 24861 ;;		None
 24862 ;; Return value:  Size  Location     Type
 24863 ;;                  1    wreg      unsigned char 
 24864 ;; Registers used:
 24865 ;;		wreg, status,2
 24866 ;; Tracked objects:
 24867 ;;		On entry : 0/1
 24868 ;;		On exit  : 3F/E
 24869 ;;		Unchanged: 0/0
 24870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24875 ;;Total ram usage:        0 bytes
 24876 ;; Hardware stack levels used: 1
 24877 ;; Hardware stack levels required when called: 4
 24878 ;; This function calls:
 24879 ;;		Nothing
 24880 ;; This function is called by:
 24881 ;;		_ETH_NextPacketUpdate
 24882 ;;		_ETH_Read8
 24883 ;;		_ETH_Read16
 24884 ;;		_ETH_ReadBlock
 24885 ;;		_ETH_ComputeChecksum
 24886 ;; This function uses a non-reentrant model
 24887 ;;
 24888                           
 24889                           	psect	text107
 24890   018396                     __ptext107:
 24891                           	callstack 0
 24892   018396                     _ETH_EdataRead:
 24893                           	callstack 21
 24894                           
 24895                           ; BSR set to: 1
 24896                           ;incstack = 0
 24897   018396  CF61 FE7E          	movff	3937,_errataTemp	;# 
 24898                           
 24899                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 111:     return (uint8_t) errataTem
      +                          p;
 24900   01839A  010E               	movlb	14	; () banked
 24901   01839C  517E               	movf	126,w,b
 24902                           
 24903                           ; BSR set to: 14
 24904   01839E  0012               	return		;funcret
 24905   0183A0                     __end_of_ETH_EdataRead:
 24906                           	callstack 0
 24907                           
 24908 ;; *************** function _ETH_EventHandler *****************
 24909 ;; Defined at:
 24910 ;;		line 255 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 24911 ;; Parameters:    Size  Location     Type
 24912 ;;		None
 24913 ;; Auto vars:     Size  Location     Type
 24914 ;;		None
 24915 ;; Return value:  Size  Location     Type
 24916 ;;                  1    wreg      void 
 24917 ;; Registers used:
 24918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24919 ;; Tracked objects:
 24920 ;;		On entry : 0/1
 24921 ;;		On exit  : 0/0
 24922 ;;		Unchanged: 0/0
 24923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24928 ;;Total ram usage:        0 bytes
 24929 ;; Hardware stack levels used: 1
 24930 ;; Hardware stack levels required when called: 7
 24931 ;; This function calls:
 24932 ;;		_ETH_CheckLinkUp
 24933 ;;		_ETH_RemovePacket
 24934 ;;		_ETH_SendQueued
 24935 ;;		_ETH_Shift_Tx_Packets
 24936 ;;		_PHY_Read
 24937 ;; This function is called by:
 24938 ;;		_Network_Manage
 24939 ;; This function uses a non-reentrant model
 24940 ;;
 24941                           
 24942                           	psect	text108
 24943   017762                     __ptext108:
 24944                           	callstack 0
 24945   017762                     _ETH_EventHandler:
 24946                           	callstack 21
 24947                           
 24948                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 258:     PIR2bits.ETHIF = 0;
 24949                           
 24950                           ; BSR set to: 14
 24951                           ;incstack = 0
 24952   017762  9AA1               	bcf	161,5,c	;volatile
 24953                           
 24954                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 260:    if (EIRbits.LINKIF)
 24955   017764  A860               	btfss	96,4,c	;volatile
 24956   017766  D007               	goto	l14739
 24957                           
 24958                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 261:     {;mcc_generated_files/TCPI
      +                          PLibrary/ETHxxJ6x_driver.c: 262:         PHY_Read(PHIR);
 24959   017768  0E13               	movlw	19
 24960   01776A  EC23  F0BB         	call	_PHY_Read
 24961                           
 24962                           ; BSR set to: 14
 24963                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 264:         ethData.linkChange = 1
      +                          ;
 24964   01776E  0101               	movlb	1	; () banked
 24965   017770  8924               	bsf	_ethData& (0+255),4,b	;volatile
 24966                           
 24967                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 266:         ETH_CheckLinkUp();
 24968   017772  EC15  F0C0         	call	_ETH_CheckLinkUp	;wreg free
 24969   017776                     l14739:
 24970                           
 24971                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 269:     if(EIRbits.RXERIF)
 24972   017776  B060               	btfsc	96,0,c	;volatile
 24973                           
 24974                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 270:     {;mcc_generated_files/TCPI
      +                          PLibrary/ETHxxJ6x_driver.c: 271:         EIRbits.RXERIF = 0;
 24975   017778  9060               	bcf	96,0,c	;volatile
 24976                           
 24977                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 274:     if (EIRbits.TXERIF)
 24978                           
 24979                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 272:     }
 24980   01777A  B260               	btfsc	96,1,c	;volatile
 24981                           
 24982                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 275:     {;mcc_generated_files/TCPI
      +                          PLibrary/ETHxxJ6x_driver.c: 276:         EIRbits.TXERIF = 0;
 24983   01777C  9260               	bcf	96,1,c	;volatile
 24984                           
 24985                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 279:     if(EIRbits.TXIF)
 24986                           
 24987                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 277:     }
 24988   01777E  A660               	btfss	96,3,c	;volatile
 24989   017780  D015               	goto	l14757
 24990                           
 24991                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 280:     {;mcc_generated_files/TCPI
      +                          PLibrary/ETHxxJ6x_driver.c: 281:         EIRbits.TXIF = 0;
 24992   017782  9660               	bcf	96,3,c	;volatile
 24993                           
 24994                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 282:         ETH_RemovePacket(pTail
      +                          );
 24995   017784  C147  F005         	movff	_pTail,ETH_RemovePacket@pPacket
 24996   017788  C148  F006         	movff	_pTail+1,ETH_RemovePacket@pPacket+1
 24997   01778C  ECE6  F0B4         	call	_ETH_RemovePacket	;wreg free
 24998                           
 24999                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 283:         if( ethListSize > 0 )
 25000   017790  0101               	movlb	1	; () banked
 25001   017792  5168               	movf	_ethListSize& (0+255),w,b
 25002   017794  B4D8               	btfsc	status,2,c
 25003   017796  D00A               	goto	l14757
 25004                           
 25005                           ; BSR set to: 1
 25006                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 284:         {;mcc_generated_files/
      +                          TCPIPLibrary/ETHxxJ6x_driver.c: 285:             if( EWRPT > ((((8192) - (((1518) + (7))
      +                           << 1))) + (((((1518) + (7)) << 1)) >> 1) ) )
 25007   017798  0E0C               	movlw	12
 25008   01779A  010E               	movlb	14	; () banked
 25009   01779C  5DE2               	subwf	226,w,b	;volatile
 25010   01779E  0E1A               	movlw	26
 25011   0177A0  59E3               	subwfb	227,w,b	;volatile
 25012   0177A2  B0D8               	btfsc	status,0,c
 25013                           
 25014                           ; BSR set to: 14
 25015                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 286:             {;mcc_generated_fi
      +                          les/TCPIPLibrary/ETHxxJ6x_driver.c: 288:                 ETH_Shift_Tx_Packets();
 25016   0177A4  EC61  F0AC         	call	_ETH_Shift_Tx_Packets	;wreg free
 25017                           
 25018                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 292:             ETH_SendQueued();
 25019   0177A8  ECED  F0B9         	call	_ETH_SendQueued	;wreg free
 25020   0177AC                     l14757:
 25021                           
 25022                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 296:     if (EIRbits.PKTIF)
 25023   0177AC  AC60               	btfss	96,6,c	;volatile
 25024   0177AE  0012               	return	
 25025                           
 25026                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 297:     {;mcc_generated_files/TCPI
      +                          PLibrary/ETHxxJ6x_driver.c: 298:         if(ethData.pktReady == 0)
 25027   0177B0  0101               	movlb	1	; () banked
 25028   0177B2  B324               	btfsc	_ethData& (0+255),1,b	;volatile
 25029   0177B4  0012               	return	
 25030                           
 25031                           ; BSR set to: 1
 25032                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 299:         {;mcc_generated_files/
      +                          TCPIPLibrary/ETHxxJ6x_driver.c: 300:             ethData.pktReady = 1;
 25033   0177B6  8324               	bsf	_ethData& (0+255),1,b	;volatile
 25034                           
 25035                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 301:             EIEbits.PKTIE = 0;
 25036   0177B8  010E               	movlb	14	; () banked
 25037   0177BA  9DFB               	bcf	251,6,b	;volatile
 25038   0177BC  0012               	return		;funcret
 25039   0177BE                     __end_of_ETH_EventHandler:
 25040                           	callstack 0
 25041                           
 25042 ;; *************** function _ETH_Shift_Tx_Packets *****************
 25043 ;; Defined at:
 25044 ;;		line 894 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 25045 ;; Parameters:    Size  Location     Type
 25046 ;;		None
 25047 ;; Auto vars:     Size  Location     Type
 25048 ;;  pElem           2   20[COMRAM] PTR struct .
 25049 ;;		 -> txData(200), NULL(0), 
 25050 ;;  shiftOffset     2   14[COMRAM] unsigned short 
 25051 ;;  len             2   18[COMRAM] unsigned short 
 25052 ;;  timer           2   16[COMRAM] unsigned short 
 25053 ;; Return value:  Size  Location     Type
 25054 ;;                  1    wreg      enum E5504
 25055 ;; Registers used:
 25056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25057 ;; Tracked objects:
 25058 ;;		On entry : 3F/E
 25059 ;;		On exit  : 0/0
 25060 ;;		Unchanged: 0/0
 25061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25063 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25064 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25065 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25066 ;;Total ram usage:       12 bytes
 25067 ;; Hardware stack levels used: 1
 25068 ;; Hardware stack levels required when called: 5
 25069 ;; This function calls:
 25070 ;;		___wmul
 25071 ;; This function is called by:
 25072 ;;		_ETH_EventHandler
 25073 ;;		_ETH_WriteStart
 25074 ;; This function uses a non-reentrant model
 25075 ;;
 25076                           
 25077                           	psect	text109
 25078   0158C2                     __ptext109:
 25079                           	callstack 0
 25080   0158C2                     _ETH_Shift_Tx_Packets:
 25081                           	callstack 21
 25082                           
 25083                           ; BSR set to: 14
 25084                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 896:     uint16_t timer;;mcc_genera
      +                          ted_files/TCPIPLibrary/ETHxxJ6x_driver.c: 897:     uint16_t len = pHead->packetEnd - pTa
      +                          il->packetStart;
 25085                           
 25086                           ;incstack = 0
 25087   0158C2  0101               	movlb	1	; () banked
 25088   0158C4  EE20 F002          	lfsr	2,2
 25089   0158C8  5147               	movf	_pTail& (0+255),w,b
 25090   0158CA  26D9               	addwf	fsr2l,f,c
 25091   0158CC  5148               	movf	(_pTail+1)& (0+255),w,b
 25092   0158CE  22DA               	addwfc	fsr2h,f,c
 25093   0158D0  CFDE F00B          	movff	postinc2,??_ETH_Shift_Tx_Packets
 25094   0158D4  CFDD F00C          	movff	postdec2,??_ETH_Shift_Tx_Packets+1
 25095   0158D8  EE20 F004          	lfsr	2,4
 25096   0158DC  5149               	movf	_pHead& (0+255),w,b
 25097   0158DE  26D9               	addwf	fsr2l,f,c
 25098   0158E0  514A               	movf	(_pHead+1)& (0+255),w,b
 25099   0158E2  22DA               	addwfc	fsr2h,f,c
 25100   0158E4  CFDE F00D          	movff	postinc2,??_ETH_Shift_Tx_Packets+2
 25101   0158E8  CFDD F00E          	movff	postdec2,??_ETH_Shift_Tx_Packets+3
 25102   0158EC  500B               	movf	??_ETH_Shift_Tx_Packets^0,w,c
 25103   0158EE  5C0D               	subwf	(??_ETH_Shift_Tx_Packets+2)^0,w,c
 25104   0158F0  6E13               	movwf	ETH_Shift_Tx_Packets@len^0,c
 25105   0158F2  500C               	movf	(??_ETH_Shift_Tx_Packets+1)^0,w,c
 25106   0158F4  580E               	subwfb	(??_ETH_Shift_Tx_Packets+3)^0,w,c
 25107   0158F6  6E14               	movwf	(ETH_Shift_Tx_Packets@len+1)^0,c
 25108                           
 25109                           ; BSR set to: 1
 25110                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 899:     timer = 2 * len;
 25111   0158F8  90D8               	bcf	status,0,c
 25112   0158FA  3413               	rlcf	ETH_Shift_Tx_Packets@len^0,w,c
 25113   0158FC  6E11               	movwf	ETH_Shift_Tx_Packets@timer^0,c
 25114   0158FE  3414               	rlcf	(ETH_Shift_Tx_Packets@len+1)^0,w,c
 25115   015900  6E12               	movwf	(ETH_Shift_Tx_Packets@timer+1)^0,c
 25116                           
 25117                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 900:     while(ECON1bits.DMAST!=0 &
      +                          & --timer) __nop();
 25118   015902  D001               	goto	l2340
 25119   015904                     l2341:
 25120   015904  0000               	nop	
 25121   015906                     l2340:
 25122   015906  AAD2               	btfss	210,5,c	;volatile
 25123   015908  D007               	goto	u10320
 25124   01590A  0611               	decf	ETH_Shift_Tx_Packets@timer^0,f,c
 25125   01590C  A0D8               	btfss	status,0,c
 25126   01590E  0612               	decf	(ETH_Shift_Tx_Packets@timer+1)^0,f,c
 25127   015910  5011               	movf	ETH_Shift_Tx_Packets@timer^0,w,c
 25128   015912  1012               	iorwf	(ETH_Shift_Tx_Packets@timer+1)^0,w,c
 25129   015914  A4D8               	btfss	status,2,c
 25130   015916  D7F6               	goto	l2341
 25131   015918                     u10320:
 25132                           
 25133                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 901:     if(ECON1bits.DMAST==0)
 25134   015918  BAD2               	btfsc	210,5,c	;volatile
 25135   01591A  D08D               	goto	l2345
 25136                           
 25137                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 902:     {;mcc_generated_files/TCPI
      +                          PLibrary/ETHxxJ6x_driver.c: 903:         EDMADST = ((8192) - (((1518) + (7)) << 1));
 25138   01591C  0E14               	movlw	20
 25139   01591E  010E               	movlb	14	; () banked
 25140   015920  6FF5               	movwf	245,b	;volatile
 25141   015922  0E16               	movlw	22
 25142   015924  6FF4               	movwf	244,b	;volatile
 25143                           
 25144                           ; BSR set to: 14
 25145                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 905:         EDMAST = pTail->packet
      +                          Start;
 25146   015926  0101               	movlb	1	; () banked
 25147   015928  EE20 F002          	lfsr	2,2
 25148   01592C  5147               	movf	_pTail& (0+255),w,b
 25149   01592E  26D9               	addwf	fsr2l,f,c
 25150   015930  5148               	movf	(_pTail+1)& (0+255),w,b
 25151   015932  22DA               	addwfc	fsr2h,f,c
 25152   015934  CFDE FEF0          	movff	postinc2,3824	;volatile
 25153   015938  CFDD FEF1          	movff	postdec2,3825	;volatile
 25154                           
 25155                           ; BSR set to: 1
 25156                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 906:         EDMAND = pHead->packet
      +                          End;
 25157   01593C  EE20 F004          	lfsr	2,4
 25158   015940  5149               	movf	_pHead& (0+255),w,b
 25159   015942  26D9               	addwf	fsr2l,f,c
 25160   015944  514A               	movf	(_pHead+1)& (0+255),w,b
 25161   015946  22DA               	addwfc	fsr2h,f,c
 25162   015948  CFDE FEF2          	movff	postinc2,3826	;volatile
 25163   01594C  CFDD FEF3          	movff	postdec2,3827	;volatile
 25164                           
 25165                           ; BSR set to: 1
 25166                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 908:         ECON1bits.CSUMEN = 0;
 25167   015950  98D2               	bcf	210,4,c	;volatile
 25168                           
 25169                           ; BSR set to: 1
 25170                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 909:         ECON1bits.DMAST = 1;
 25171   015952  8AD2               	bsf	210,5,c	;volatile
 25172                           
 25173                           ; BSR set to: 1
 25174                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 911:         timer = 40 * len;
 25175   015954  C013  F005         	movff	ETH_Shift_Tx_Packets@len,___wmul@multiplier
 25176   015958  C014  F006         	movff	ETH_Shift_Tx_Packets@len+1,___wmul@multiplier+1
 25177   01595C  0E00               	movlw	0
 25178   01595E  6E08               	movwf	(___wmul@multiplicand+1)^0,c
 25179   015960  0E28               	movlw	40
 25180   015962  6E07               	movwf	___wmul@multiplicand^0,c
 25181   015964  EC79  F0C0         	call	___wmul	;wreg free
 25182   015968  C005  F011         	movff	?___wmul,ETH_Shift_Tx_Packets@timer
 25183   01596C  C006  F012         	movff	?___wmul+1,ETH_Shift_Tx_Packets@timer+1
 25184                           
 25185                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 912:         while(ECON1bits.DMAST!
      +                          =0 && --timer) __nop();
 25186   015970  D001               	goto	l2346
 25187   015972                     l2347:
 25188   015972  0000               	nop	
 25189   015974                     l2346:
 25190   015974  AAD2               	btfss	210,5,c	;volatile
 25191   015976  D007               	goto	u10350
 25192   015978  0611               	decf	ETH_Shift_Tx_Packets@timer^0,f,c
 25193   01597A  A0D8               	btfss	status,0,c
 25194   01597C  0612               	decf	(ETH_Shift_Tx_Packets@timer+1)^0,f,c
 25195   01597E  5011               	movf	ETH_Shift_Tx_Packets@timer^0,w,c
 25196   015980  1012               	iorwf	(ETH_Shift_Tx_Packets@timer+1)^0,w,c
 25197   015982  A4D8               	btfss	status,2,c
 25198   015984  D7F6               	goto	l2347
 25199   015986                     u10350:
 25200                           
 25201                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 913:         if(ECON1bits.DMAST == 
      +                          0)
 25202   015986  BAD2               	btfsc	210,5,c	;volatile
 25203   015988  D056               	goto	l2345
 25204                           
 25205                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 914:         {;mcc_generated_files/
      +                          TCPIPLibrary/ETHxxJ6x_driver.c: 916:             txPacket_t *pElem = pHead;
 25206   01598A  C149  F015         	movff	_pHead,ETH_Shift_Tx_Packets@pElem
 25207   01598E  C14A  F016         	movff	_pHead+1,ETH_Shift_Tx_Packets@pElem+1
 25208                           
 25209                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 917:             uint16_t shiftOffs
      +                          et = pTail->packetStart;
 25210   015992  0101               	movlb	1	; () banked
 25211   015994  EE20 F002          	lfsr	2,2
 25212   015998  5147               	movf	_pTail& (0+255),w,b
 25213   01599A  26D9               	addwf	fsr2l,f,c
 25214   01599C  5148               	movf	(_pTail+1)& (0+255),w,b
 25215   01599E  22DA               	addwfc	fsr2h,f,c
 25216   0159A0  CFDE F00F          	movff	postinc2,ETH_Shift_Tx_Packets@shiftOffset
 25217   0159A4  CFDD F010          	movff	postdec2,ETH_Shift_Tx_Packets@shiftOffset+1
 25218                           
 25219                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 919:             while( pElem != ((
      +                          void*)0) )
 25220   0159A8  D03A               	goto	l12803
 25221   0159AA                     l12801:
 25222                           
 25223                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 920:             {;mcc_generated_fi
      +                          les/TCPIPLibrary/ETHxxJ6x_driver.c: 921:                 pElem->packetStart = pElem->pac
      +                          ketStart - shiftOffset;
 25224   0159AA  EE20 F002          	lfsr	2,2
 25225   0159AE  5015               	movf	ETH_Shift_Tx_Packets@pElem^0,w,c
 25226   0159B0  26D9               	addwf	fsr2l,f,c
 25227   0159B2  5016               	movf	(ETH_Shift_Tx_Packets@pElem+1)^0,w,c
 25228   0159B4  22DA               	addwfc	fsr2h,f,c
 25229   0159B6  CFDE F00B          	movff	postinc2,??_ETH_Shift_Tx_Packets
 25230   0159BA  CFDD F00C          	movff	postdec2,??_ETH_Shift_Tx_Packets+1
 25231   0159BE  500F               	movf	ETH_Shift_Tx_Packets@shiftOffset^0,w,c
 25232   0159C0  5E0B               	subwf	??_ETH_Shift_Tx_Packets^0,f,c
 25233   0159C2  5010               	movf	(ETH_Shift_Tx_Packets@shiftOffset+1)^0,w,c
 25234   0159C4  5A0C               	subwfb	(??_ETH_Shift_Tx_Packets+1)^0,f,c
 25235   0159C6  EE20 F002          	lfsr	2,2
 25236   0159CA  5015               	movf	ETH_Shift_Tx_Packets@pElem^0,w,c
 25237   0159CC  26D9               	addwf	fsr2l,f,c
 25238   0159CE  5016               	movf	(ETH_Shift_Tx_Packets@pElem+1)^0,w,c
 25239   0159D0  22DA               	addwfc	fsr2h,f,c
 25240   0159D2  C00B  FFDE         	movff	??_ETH_Shift_Tx_Packets,postinc2
 25241   0159D6  C00C  FFDD         	movff	??_ETH_Shift_Tx_Packets+1,postdec2
 25242                           
 25243                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 922:                 pElem->packetE
      +                          nd = pElem->packetEnd - shiftOffset;
 25244   0159DA  EE20 F004          	lfsr	2,4
 25245   0159DE  5015               	movf	ETH_Shift_Tx_Packets@pElem^0,w,c
 25246   0159E0  26D9               	addwf	fsr2l,f,c
 25247   0159E2  5016               	movf	(ETH_Shift_Tx_Packets@pElem+1)^0,w,c
 25248   0159E4  22DA               	addwfc	fsr2h,f,c
 25249   0159E6  CFDE F00B          	movff	postinc2,??_ETH_Shift_Tx_Packets
 25250   0159EA  CFDD F00C          	movff	postdec2,??_ETH_Shift_Tx_Packets+1
 25251   0159EE  500F               	movf	ETH_Shift_Tx_Packets@shiftOffset^0,w,c
 25252   0159F0  5E0B               	subwf	??_ETH_Shift_Tx_Packets^0,f,c
 25253   0159F2  5010               	movf	(ETH_Shift_Tx_Packets@shiftOffset+1)^0,w,c
 25254   0159F4  5A0C               	subwfb	(??_ETH_Shift_Tx_Packets+1)^0,f,c
 25255   0159F6  EE20 F004          	lfsr	2,4
 25256   0159FA  5015               	movf	ETH_Shift_Tx_Packets@pElem^0,w,c
 25257   0159FC  26D9               	addwf	fsr2l,f,c
 25258   0159FE  5016               	movf	(ETH_Shift_Tx_Packets@pElem+1)^0,w,c
 25259   015A00  22DA               	addwfc	fsr2h,f,c
 25260   015A02  C00B  FFDE         	movff	??_ETH_Shift_Tx_Packets,postinc2
 25261   015A06  C00C  FFDD         	movff	??_ETH_Shift_Tx_Packets+1,postdec2
 25262                           
 25263                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 923:                 pElem = pElem-
      +                          >nextPacket;
 25264   015A0A  EE20 F008          	lfsr	2,8
 25265   015A0E  5015               	movf	ETH_Shift_Tx_Packets@pElem^0,w,c
 25266   015A10  26D9               	addwf	fsr2l,f,c
 25267   015A12  5016               	movf	(ETH_Shift_Tx_Packets@pElem+1)^0,w,c
 25268   015A14  22DA               	addwfc	fsr2h,f,c
 25269   015A16  CFDE F015          	movff	postinc2,ETH_Shift_Tx_Packets@pElem
 25270   015A1A  CFDD F016          	movff	postdec2,ETH_Shift_Tx_Packets@pElem+1
 25271   015A1E                     l12803:
 25272                           
 25273                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 919:             while( pElem != ((
      +                          void*)0) )
 25274   015A1E  5015               	movf	ETH_Shift_Tx_Packets@pElem^0,w,c
 25275   015A20  1016               	iorwf	(ETH_Shift_Tx_Packets@pElem+1)^0,w,c
 25276   015A22  A4D8               	btfss	status,2,c
 25277   015A24  D7C2               	goto	l12801
 25278                           
 25279                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 927:             EWRPT = ((8192) - 
      +                          (((1518) + (7)) << 1)) + len;
 25280   015A26  0E16               	movlw	22
 25281   015A28  2413               	addwf	ETH_Shift_Tx_Packets@len^0,w,c
 25282   015A2A  010E               	movlb	14	; () banked
 25283   015A2C  6FE2               	movwf	226,b	;volatile
 25284   015A2E  0E14               	movlw	20
 25285   015A30  2014               	addwfc	(ETH_Shift_Tx_Packets@len+1)^0,w,c
 25286   015A32  6FE3               	movwf	227,b	;volatile
 25287   015A34  0012               	return	
 25288   015A36                     l2345:
 25289   015A36  00FF               	reset		;# 
 25290                           
 25291                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 934:     return DMA_TIMEOUT;;	Retur
      +                          n value of _ETH_Shift_Tx_Packets is never used
 25292   015A38  0012               	return		;funcret
 25293   015A3A                     __end_of_ETH_Shift_Tx_Packets:
 25294                           	callstack 0
 25295                           
 25296 ;; *************** function ___wmul *****************
 25297 ;; Defined at:
 25298 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
 25299 ;; Parameters:    Size  Location     Type
 25300 ;;  multiplier      2    4[COMRAM] unsigned int 
 25301 ;;  multiplicand    2    6[COMRAM] unsigned int 
 25302 ;; Auto vars:     Size  Location     Type
 25303 ;;  product         2    8[COMRAM] unsigned int 
 25304 ;; Return value:  Size  Location     Type
 25305 ;;                  2    4[COMRAM] unsigned int 
 25306 ;; Registers used:
 25307 ;;		wreg, status,2, status,0, prodl, prodh
 25308 ;; Tracked objects:
 25309 ;;		On entry : 0/1
 25310 ;;		On exit  : 0/0
 25311 ;;		Unchanged: 0/0
 25312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25313 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25314 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25316 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25317 ;;Total ram usage:        6 bytes
 25318 ;; Hardware stack levels used: 1
 25319 ;; Hardware stack levels required when called: 4
 25320 ;; This function calls:
 25321 ;;		Nothing
 25322 ;; This function is called by:
 25323 ;;		_ETH_Copy
 25324 ;;		_ETH_Shift_Tx_Packets
 25325 ;;		_read_prec_or_width
 25326 ;; This function uses a non-reentrant model
 25327 ;;
 25328                           
 25329                           	psect	text110
 25330   0180F2                     __ptext110:
 25331                           	callstack 0
 25332   0180F2                     ___wmul:
 25333                           	callstack 19
 25334                           
 25335                           ;incstack = 0
 25336   0180F2  5005               	movf	___wmul@multiplier^0,w,c
 25337   0180F4  0207               	mulwf	___wmul@multiplicand^0,c
 25338   0180F6  CFF3 F009          	movff	prodl,___wmul@product
 25339   0180FA  CFF4 F00A          	movff	prodh,___wmul@product+1
 25340   0180FE  5005               	movf	___wmul@multiplier^0,w,c
 25341   018100  0208               	mulwf	(___wmul@multiplicand+1)^0,c
 25342   018102  50F3               	movf	243,w,c
 25343   018104  260A               	addwf	(___wmul@product+1)^0,f,c
 25344   018106  5006               	movf	(___wmul@multiplier+1)^0,w,c
 25345   018108  0207               	mulwf	___wmul@multiplicand^0,c
 25346   01810A  50F3               	movf	243,w,c
 25347   01810C  260A               	addwf	(___wmul@product+1)^0,f,c
 25348   01810E  C009  F005         	movff	___wmul@product,?___wmul
 25349   018112  C00A  F006         	movff	___wmul@product+1,?___wmul+1
 25350   018116  0012               	return		;funcret
 25351   018118                     __end_of___wmul:
 25352                           	callstack 0
 25353                           
 25354 ;; *************** function _ETH_SendQueued *****************
 25355 ;; Defined at:
 25356 ;;		line 729 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 25357 ;; Parameters:    Size  Location     Type
 25358 ;;		None
 25359 ;; Auto vars:     Size  Location     Type
 25360 ;;		None
 25361 ;; Return value:  Size  Location     Type
 25362 ;;                  1    wreg      enum E5504
 25363 ;; Registers used:
 25364 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25365 ;; Tracked objects:
 25366 ;;		On entry : 0/1
 25367 ;;		On exit  : 0/0
 25368 ;;		Unchanged: 0/0
 25369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25372 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25373 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25374 ;;Total ram usage:        4 bytes
 25375 ;; Hardware stack levels used: 1
 25376 ;; Hardware stack levels required when called: 4
 25377 ;; This function calls:
 25378 ;;		Nothing
 25379 ;; This function is called by:
 25380 ;;		_ETH_EventHandler
 25381 ;;		_ETH_Send
 25382 ;; This function uses a non-reentrant model
 25383 ;;
 25384                           
 25385                           	psect	text111
 25386   0173DA                     __ptext111:
 25387                           	callstack 0
 25388   0173DA                     _ETH_SendQueued:
 25389                           	callstack 21
 25390                           
 25391                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 731:     if( pHead->flags & (0x0001
      +                           << 1) )
 25392                           
 25393                           ;incstack = 0
 25394   0173DA  C149  FFD9         	movff	_pHead,fsr2l
 25395   0173DE  C14A  FFDA         	movff	_pHead+1,fsr2h
 25396   0173E2  0101               	movlb	1	; () banked
 25397   0173E4  A2DF               	btfss	indf2,1,c
 25398   0173E6  D02F               	goto	l12825
 25399                           
 25400                           ; BSR set to: 1
 25401   0173E8  C149  FFD9         	movff	_pHead,fsr2l
 25402   0173EC  C14A  FFDA         	movff	_pHead+1,fsr2h
 25403   0173F0  CFDE F005          	movff	postinc2,??_ETH_SendQueued
 25404   0173F4  CFDD F006          	movff	postdec2,??_ETH_SendQueued+1
 25405   0173F8  0EFD               	movlw	253
 25406   0173FA  1405               	andwf	??_ETH_SendQueued^0,w,c
 25407   0173FC  6E07               	movwf	(??_ETH_SendQueued+2)^0,c
 25408   0173FE  0EFF               	movlw	255
 25409   017400  1406               	andwf	(??_ETH_SendQueued+1)^0,w,c
 25410   017402  6E08               	movwf	(??_ETH_SendQueued+3)^0,c
 25411   017404  C149  FFD9         	movff	_pHead,fsr2l
 25412   017408  C14A  FFDA         	movff	_pHead+1,fsr2h
 25413   01740C  C007  FFDE         	movff	??_ETH_SendQueued+2,postinc2
 25414   017410  C008  FFDD         	movff	??_ETH_SendQueued+3,postdec2
 25415                           
 25416                           ; BSR set to: 1
 25417                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 737:         ETXST = pTail->packetS
      +                          tart;
 25418   017414  EE20 F002          	lfsr	2,2
 25419   017418  5147               	movf	_pTail& (0+255),w,b
 25420   01741A  26D9               	addwf	fsr2l,f,c
 25421   01741C  5148               	movf	(_pTail+1)& (0+255),w,b
 25422   01741E  22DA               	addwfc	fsr2h,f,c
 25423   017420  CFDE FEE4          	movff	postinc2,3812	;volatile
 25424   017424  CFDD FEE5          	movff	postdec2,3813	;volatile
 25425                           
 25426                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 738:         ETXND = pTail->packetE
      +                          nd;
 25427   017428  EE20 F004          	lfsr	2,4
 25428   01742C  5147               	movf	_pTail& (0+255),w,b
 25429   01742E  26D9               	addwf	fsr2l,f,c
 25430   017430  5148               	movf	(_pTail+1)& (0+255),w,b
 25431   017432  22DA               	addwfc	fsr2h,f,c
 25432   017434  CFDE FEE6          	movff	postinc2,3814	;volatile
 25433   017438  CFDD FEE7          	movff	postdec2,3815	;volatile
 25434                           
 25435                           ; BSR set to: 1
 25436                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 740:         __nop(); __nop();
 25437   01743C  0000               	nop	
 25438   01743E  0000               	nop	
 25439                           
 25440                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 741:         ECON1bits.TXRTS = 1;
 25441   017440  86D2               	bsf	210,3,c	;volatile
 25442                           
 25443                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 743:         return SUCCESS;
 25444   017442  0E01               	movlw	1
 25445   017444  0012               	return	
 25446   017446                     l12825:
 25447                           
 25448                           ; BSR set to: 1
 25449                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 746:     {;mcc_generated_files/TCPI
      +                          PLibrary/ETHxxJ6x_driver.c: 747:         return BUFFER_BUSY;
 25450   017446  0E03               	movlw	3
 25451   017448  0012               	return		;funcret
 25452   01744A                     __end_of_ETH_SendQueued:
 25453                           	callstack 0
 25454                           
 25455 ;; *************** function _ETH_RemovePacket *****************
 25456 ;; Defined at:
 25457 ;;		line 1216 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 25458 ;; Parameters:    Size  Location     Type
 25459 ;;  pPacket         2    4[COMRAM] PTR struct .
 25460 ;;		 -> txData(200), NULL(0), 
 25461 ;; Auto vars:     Size  Location     Type
 25462 ;;		None
 25463 ;; Return value:  Size  Location     Type
 25464 ;;                  1    wreg      void 
 25465 ;; Registers used:
 25466 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25467 ;; Tracked objects:
 25468 ;;		On entry : 0/1
 25469 ;;		On exit  : 0/0
 25470 ;;		Unchanged: 0/0
 25471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25472 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25474 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25475 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25476 ;;Total ram usage:        4 bytes
 25477 ;; Hardware stack levels used: 1
 25478 ;; Hardware stack levels required when called: 4
 25479 ;; This function calls:
 25480 ;;		Nothing
 25481 ;; This function is called by:
 25482 ;;		_ETH_EventHandler
 25483 ;; This function uses a non-reentrant model
 25484 ;;
 25485                           
 25486                           	psect	text112
 25487   0169CC                     __ptext112:
 25488                           	callstack 0
 25489   0169CC                     _ETH_RemovePacket:
 25490                           	callstack 23
 25491                           
 25492                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1216: void ETH_RemovePacket(txPacke
      +                          t_t* pPacket);mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1217: {;mcc_generated_
      +                          files/TCPIPLibrary/ETHxxJ6x_driver.c: 1222:     if( (pPacket == ((void*)0)) || (ethListS
      +                          ize == 0) )
 25493                           
 25494                           ;incstack = 0
 25495   0169CC  5005               	movf	ETH_RemovePacket@pPacket^0,w,c
 25496   0169CE  1006               	iorwf	(ETH_RemovePacket@pPacket+1)^0,w,c
 25497   0169D0  B4D8               	btfsc	status,2,c
 25498   0169D2  0012               	return	
 25499   0169D4  0101               	movlb	1	; () banked
 25500   0169D6  5168               	movf	_ethListSize& (0+255),w,b
 25501   0169D8  B4D8               	btfsc	status,2,c
 25502   0169DA  0012               	return	
 25503                           
 25504                           ; BSR set to: 1
 25505                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1243:     if( pPacket->nextPacket =
      +                          = ((void*)0) )
 25506   0169DC  EE20 F008          	lfsr	2,8
 25507   0169E0  5005               	movf	ETH_RemovePacket@pPacket^0,w,c
 25508   0169E2  26D9               	addwf	fsr2l,f,c
 25509   0169E4  5006               	movf	(ETH_RemovePacket@pPacket+1)^0,w,c
 25510   0169E6  22DA               	addwfc	fsr2h,f,c
 25511   0169E8  50DE               	movf	postinc2,w,c
 25512   0169EA  10DE               	iorwf	postinc2,w,c
 25513   0169EC  A4D8               	btfss	status,2,c
 25514   0169EE  D016               	goto	l2445
 25515                           
 25516                           ; BSR set to: 1
 25517                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1244:     {;mcc_generated_files/TCP
      +                          IPLibrary/ETHxxJ6x_driver.c: 1245:         pTail = pPacket->prevPacket;
 25518   0169F0  EE20 F006          	lfsr	2,6
 25519   0169F4  5005               	movf	ETH_RemovePacket@pPacket^0,w,c
 25520   0169F6  26D9               	addwf	fsr2l,f,c
 25521   0169F8  5006               	movf	(ETH_RemovePacket@pPacket+1)^0,w,c
 25522   0169FA  22DA               	addwfc	fsr2h,f,c
 25523   0169FC  CFDE F147          	movff	postinc2,_pTail
 25524   016A00  CFDD F148          	movff	postdec2,_pTail+1
 25525                           
 25526                           ; BSR set to: 1
 25527                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1246:         if( pTail != ((void*)
      +                          0) )
 25528   016A04  5147               	movf	_pTail& (0+255),w,b
 25529   016A06  1148               	iorwf	(_pTail+1)& (0+255),w,b
 25530   016A08  B4D8               	btfsc	status,2,c
 25531   016A0A  D008               	goto	l2445
 25532                           
 25533                           ; BSR set to: 1
 25534                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1247:         {;mcc_generated_files
      +                          /TCPIPLibrary/ETHxxJ6x_driver.c: 1248:             pTail->nextPacket = ((void*)0);
 25535   016A0C  EE20 F008          	lfsr	2,8
 25536   016A10  5147               	movf	_pTail& (0+255),w,b
 25537   016A12  26D9               	addwf	fsr2l,f,c
 25538   016A14  5148               	movf	(_pTail+1)& (0+255),w,b
 25539   016A16  22DA               	addwfc	fsr2h,f,c
 25540   016A18  6ADE               	clrf	postinc2,c
 25541   016A1A  6ADD               	clrf	postdec2,c
 25542   016A1C                     l2445:
 25543                           
 25544                           ; BSR set to: 1
 25545                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1252:     if( pPacket->prevPacket =
      +                          = ((void*)0) )
 25546   016A1C  EE20 F006          	lfsr	2,6
 25547   016A20  5005               	movf	ETH_RemovePacket@pPacket^0,w,c
 25548   016A22  26D9               	addwf	fsr2l,f,c
 25549   016A24  5006               	movf	(ETH_RemovePacket@pPacket+1)^0,w,c
 25550   016A26  22DA               	addwfc	fsr2h,f,c
 25551   016A28  50DE               	movf	postinc2,w,c
 25552   016A2A  10DE               	iorwf	postinc2,w,c
 25553   016A2C  A4D8               	btfss	status,2,c
 25554   016A2E  D016               	goto	l14349
 25555                           
 25556                           ; BSR set to: 1
 25557                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1253:     {;mcc_generated_files/TCP
      +                          IPLibrary/ETHxxJ6x_driver.c: 1254:         pHead = pPacket->nextPacket;
 25558   016A30  EE20 F008          	lfsr	2,8
 25559   016A34  5005               	movf	ETH_RemovePacket@pPacket^0,w,c
 25560   016A36  26D9               	addwf	fsr2l,f,c
 25561   016A38  5006               	movf	(ETH_RemovePacket@pPacket+1)^0,w,c
 25562   016A3A  22DA               	addwfc	fsr2h,f,c
 25563   016A3C  CFDE F149          	movff	postinc2,_pHead
 25564   016A40  CFDD F14A          	movff	postdec2,_pHead+1
 25565                           
 25566                           ; BSR set to: 1
 25567                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1255:         if( pHead != ((void*)
      +                          0) )
 25568   016A44  5149               	movf	_pHead& (0+255),w,b
 25569   016A46  114A               	iorwf	(_pHead+1)& (0+255),w,b
 25570   016A48  B4D8               	btfsc	status,2,c
 25571   016A4A  D008               	goto	l14349
 25572                           
 25573                           ; BSR set to: 1
 25574                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1256:         {;mcc_generated_files
      +                          /TCPIPLibrary/ETHxxJ6x_driver.c: 1257:             pHead->prevPacket = ((void*)0);
 25575   016A4C  EE20 F006          	lfsr	2,6
 25576   016A50  5149               	movf	_pHead& (0+255),w,b
 25577   016A52  26D9               	addwf	fsr2l,f,c
 25578   016A54  514A               	movf	(_pHead+1)& (0+255),w,b
 25579   016A56  22DA               	addwfc	fsr2h,f,c
 25580   016A58  6ADE               	clrf	postinc2,c
 25581   016A5A  6ADD               	clrf	postdec2,c
 25582   016A5C                     l14349:
 25583                           
 25584                           ; BSR set to: 1
 25585                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1262:     pPacket->flags = 0;
 25586   016A5C  C005  FFD9         	movff	ETH_RemovePacket@pPacket,fsr2l
 25587   016A60  C006  FFDA         	movff	ETH_RemovePacket@pPacket+1,fsr2h
 25588   016A64  6ADE               	clrf	postinc2,c
 25589   016A66  6ADD               	clrf	postdec2,c
 25590                           
 25591                           ; BSR set to: 1
 25592                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1263:     pPacket->prevPacket = ((v
      +                          oid*)0);
 25593   016A68  EE20 F006          	lfsr	2,6
 25594   016A6C  5005               	movf	ETH_RemovePacket@pPacket^0,w,c
 25595   016A6E  26D9               	addwf	fsr2l,f,c
 25596   016A70  5006               	movf	(ETH_RemovePacket@pPacket+1)^0,w,c
 25597   016A72  22DA               	addwfc	fsr2h,f,c
 25598   016A74  6ADE               	clrf	postinc2,c
 25599   016A76  6ADD               	clrf	postdec2,c
 25600                           
 25601                           ; BSR set to: 1
 25602                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1264:     pPacket->nextPacket = ((v
      +                          oid*)0);
 25603   016A78  EE20 F008          	lfsr	2,8
 25604   016A7C  5005               	movf	ETH_RemovePacket@pPacket^0,w,c
 25605   016A7E  26D9               	addwf	fsr2l,f,c
 25606   016A80  5006               	movf	(ETH_RemovePacket@pPacket+1)^0,w,c
 25607   016A82  22DA               	addwfc	fsr2h,f,c
 25608   016A84  6ADE               	clrf	postinc2,c
 25609   016A86  6ADD               	clrf	postdec2,c
 25610                           
 25611                           ; BSR set to: 1
 25612                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1266:     ethListSize --;
 25613   016A88  0768               	decf	_ethListSize& (0+255),f,b
 25614   016A8A  0012               	return		;funcret
 25615   016A8C                     __end_of_ETH_RemovePacket:
 25616                           	callstack 0
 25617                           
 25618 ;; *************** function _ETH_CheckLinkUp *****************
 25619 ;; Defined at:
 25620 ;;		line 235 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 25621 ;; Parameters:    Size  Location     Type
 25622 ;;		None
 25623 ;; Auto vars:     Size  Location     Type
 25624 ;;  value           4   15[COMRAM] unsigned long 
 25625 ;; Return value:  Size  Location     Type
 25626 ;;                  1    wreg      _Bool 
 25627 ;; Registers used:
 25628 ;;		wreg, status,2, status,0, cstack
 25629 ;; Tracked objects:
 25630 ;;		On entry : 0/1
 25631 ;;		On exit  : 3F/1
 25632 ;;		Unchanged: 0/0
 25633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25635 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25637 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25638 ;;Total ram usage:        4 bytes
 25639 ;; Hardware stack levels used: 1
 25640 ;; Hardware stack levels required when called: 6
 25641 ;; This function calls:
 25642 ;;		_PHY_Read
 25643 ;; This function is called by:
 25644 ;;		_PROCESSxETHxDATA
 25645 ;;		_Network_WaitForLink
 25646 ;;		_ETH_Init
 25647 ;;		_ETH_EventHandler
 25648 ;; This function uses a non-reentrant model
 25649 ;;
 25650                           
 25651                           	psect	text113
 25652   01802A                     __ptext113:
 25653                           	callstack 0
 25654   01802A                     _ETH_CheckLinkUp:
 25655                           	callstack 21
 25656                           
 25657                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 237:     uint32_t value;;mcc_genera
      +                          ted_files/TCPIPLibrary/ETHxxJ6x_driver.c: 239:     value = (uint32_t)PHY_Read(PHSTAT2);
 25658                           
 25659                           ;incstack = 0
 25660   01802A  0E11               	movlw	17
 25661   01802C  EC23  F0BB         	call	_PHY_Read
 25662   018030  C007  F010         	movff	?_PHY_Read,ETH_CheckLinkUp@value
 25663   018034  C008  F011         	movff	?_PHY_Read+1,ETH_CheckLinkUp@value+1
 25664   018038  C009  F012         	movff	?_PHY_Read+2,ETH_CheckLinkUp@value+2
 25665   01803C  C00A  F013         	movff	?_PHY_Read+3,ETH_CheckLinkUp@value+3
 25666                           
 25667                           ; BSR set to: 14
 25668                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 240:     if(value & 0x0400)
 25669   018040  A411               	btfss	(ETH_CheckLinkUp@value+1)^0,2,c
 25670   018042  D004               	goto	l2163
 25671                           
 25672                           ; BSR set to: 14
 25673                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 241:     {;mcc_generated_files/TCPI
      +                          PLibrary/ETHxxJ6x_driver.c: 242:         ethData.up = 1;
 25674   018044  0101               	movlb	1	; () banked
 25675   018046  8524               	bsf	_ethData& (0+255),2,b	;volatile
 25676                           
 25677                           ; BSR set to: 1
 25678                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 243:         return 1;
 25679   018048  0E01               	movlw	1
 25680   01804A  0012               	return	
 25681   01804C                     l2163:
 25682                           
 25683                           ; BSR set to: 14
 25684                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 246:     {;mcc_generated_files/TCPI
      +                          PLibrary/ETHxxJ6x_driver.c: 247:         ethData.up = 0;
 25685   01804C  0101               	movlb	1	; () banked
 25686   01804E  9524               	bcf	_ethData& (0+255),2,b	;volatile
 25687                           
 25688                           ; BSR set to: 1
 25689                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 248:         return 0;
 25690   018050  0E00               	movlw	0
 25691                           
 25692                           ; BSR set to: 1
 25693   018052  0012               	return		;funcret
 25694   018054                     __end_of_ETH_CheckLinkUp:
 25695                           	callstack 0
 25696                           
 25697 ;; *************** function _PHY_Read *****************
 25698 ;; Defined at:
 25699 ;;		line 390 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 25700 ;; Parameters:    Size  Location     Type
 25701 ;;  reg             1    wreg     enum E5740
 25702 ;; Auto vars:     Size  Location     Type
 25703 ;;  reg             1   10[COMRAM] enum E5740
 25704 ;;  ret             4   11[COMRAM] long 
 25705 ;; Return value:  Size  Location     Type
 25706 ;;                  4    6[COMRAM] long 
 25707 ;; Registers used:
 25708 ;;		wreg, status,2, status,0, cstack
 25709 ;; Tracked objects:
 25710 ;;		On entry : 0/1
 25711 ;;		On exit  : 3F/E
 25712 ;;		Unchanged: 0/0
 25713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25714 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25715 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25717 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25718 ;;Total ram usage:        9 bytes
 25719 ;; Hardware stack levels used: 1
 25720 ;; Hardware stack levels required when called: 5
 25721 ;; This function calls:
 25722 ;;		_PHY_WaitForBusy
 25723 ;; This function is called by:
 25724 ;;		_ETH_CheckLinkUp
 25725 ;;		_ETH_EventHandler
 25726 ;; This function uses a non-reentrant model
 25727 ;;
 25728                           
 25729                           	psect	text114
 25730   017646                     __ptext114:
 25731                           	callstack 0
 25732   017646                     _PHY_Read:
 25733                           	callstack 21
 25734                           
 25735                           ; BSR set to: 1
 25736                           ;incstack = 0
 25737                           ;PHY_Read@reg stored from wreg
 25738   017646  6E0B               	movwf	PHY_Read@reg^0,c
 25739                           
 25740                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 393:     if(PHY_WaitForBusy() == NO
      +                          ERROR)
 25741   017648  ECA6  F0BF         	call	_PHY_WaitForBusy	;wreg free
 25742   01764C  0900               	iorlw	0
 25743   01764E  A4D8               	btfss	status,2,c
 25744   017650  D01D               	goto	l2202
 25745                           
 25746                           ; BSR set to: 14
 25747                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 394:     {;mcc_generated_files/TCPI
      +                          PLibrary/ETHxxJ6x_driver.c: 395:         MIREGADR = reg;
 25748   017652  C00B  FEB4         	movff	PHY_Read@reg,3764	;volatile
 25749                           
 25750                           ; BSR set to: 14
 25751                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 396:         MICMD = 0;
 25752   017656  0E00               	movlw	0
 25753   017658  6FB2               	movwf	178,b	;volatile
 25754                           
 25755                           ; BSR set to: 14
 25756                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 397:         MICMDbits.MIIRD = 1;
 25757   01765A  81B2               	bsf	178,0,b	;volatile
 25758                           
 25759                           ; BSR set to: 14
 25760                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 398:         __nop(); __nop();
 25761   01765C  0000               	nop	
 25762   01765E  0000               	nop	
 25763                           
 25764                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 399:         if(PHY_WaitForBusy() =
      +                          = BUSY_TIMEOUT)
 25765   017660  ECA6  F0BF         	call	_PHY_WaitForBusy	;wreg free
 25766   017664  0AFF               	xorlw	255
 25767   017666  A4D8               	btfss	status,2,c
 25768   017668  D009               	goto	l2203
 25769                           
 25770                           ; BSR set to: 14
 25771                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 400:         {;mcc_generated_files/
      +                          TCPIPLibrary/ETHxxJ6x_driver.c: 401:             ret = READ_FAIL;
 25772   01766A  0EFD               	movlw	253
 25773   01766C  6E0C               	movwf	PHY_Read@ret^0,c
 25774   01766E  0EFF               	movlw	255
 25775   017670  6E0D               	movwf	(PHY_Read@ret+1)^0,c
 25776   017672  0EFF               	movlw	255
 25777   017674  6E0E               	movwf	(PHY_Read@ret+2)^0,c
 25778   017676  0EFF               	movlw	255
 25779   017678  6E0F               	movwf	(PHY_Read@ret+3)^0,c
 25780                           
 25781                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 402:         }
 25782   01767A  D00C               	goto	l2205
 25783   01767C                     l2203:
 25784                           
 25785                           ; BSR set to: 14
 25786                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 404:         {;mcc_generated_files/
      +                          TCPIPLibrary/ETHxxJ6x_driver.c: 405:             MICMDbits.MIIRD = 0;
 25787   01767C  91B2               	bcf	178,0,b	;volatile
 25788                           
 25789                           ; BSR set to: 14
 25790                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 406:             ret = MIRD;
 25791   01767E  CEB8 F00C          	movff	3768,PHY_Read@ret	;volatile
 25792   017682  CEB9 F00D          	movff	3769,PHY_Read@ret+1	;volatile
 25793   017686  6A0E               	clrf	(PHY_Read@ret+2)^0,c
 25794   017688  6A0F               	clrf	(PHY_Read@ret+3)^0,c
 25795   01768A  D004               	goto	l2205
 25796   01768C                     l2202:
 25797                           
 25798                           ; BSR set to: 14
 25799                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 410:     {;mcc_generated_files/TCPI
      +                          PLibrary/ETHxxJ6x_driver.c: 411:         ret = BUSY_TIMEOUT;
 25800   01768C  680C               	setf	PHY_Read@ret^0,c
 25801   01768E  680D               	setf	(PHY_Read@ret+1)^0,c
 25802   017690  680E               	setf	(PHY_Read@ret+2)^0,c
 25803   017692  680F               	setf	(PHY_Read@ret+3)^0,c
 25804   017694                     l2205:
 25805                           
 25806                           ; BSR set to: 14
 25807                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 413:     return ret;
 25808   017694  C00C  F007         	movff	PHY_Read@ret,?_PHY_Read
 25809   017698  C00D  F008         	movff	PHY_Read@ret+1,?_PHY_Read+1
 25810   01769C  C00E  F009         	movff	PHY_Read@ret+2,?_PHY_Read+2
 25811   0176A0  C00F  F00A         	movff	PHY_Read@ret+3,?_PHY_Read+3
 25812                           
 25813                           ; BSR set to: 14
 25814   0176A4  0012               	return		;funcret
 25815   0176A6                     __end_of_PHY_Read:
 25816                           	callstack 0
 25817                           
 25818 ;; *************** function _PHY_WaitForBusy *****************
 25819 ;; Defined at:
 25820 ;;		line 338 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 25821 ;; Parameters:    Size  Location     Type
 25822 ;;		None
 25823 ;; Auto vars:     Size  Location     Type
 25824 ;;  timeout         1    5[COMRAM] unsigned char 
 25825 ;;  ret             1    4[COMRAM] enum E5749
 25826 ;; Return value:  Size  Location     Type
 25827 ;;                  1    wreg      enum E5749
 25828 ;; Registers used:
 25829 ;;		wreg, status,2, status,0
 25830 ;; Tracked objects:
 25831 ;;		On entry : 0/E
 25832 ;;		On exit  : 3F/E
 25833 ;;		Unchanged: 0/0
 25834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25836 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25838 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25839 ;;Total ram usage:        2 bytes
 25840 ;; Hardware stack levels used: 1
 25841 ;; Hardware stack levels required when called: 4
 25842 ;; This function calls:
 25843 ;;		Nothing
 25844 ;; This function is called by:
 25845 ;;		_PHY_Write
 25846 ;;		_PHY_Read
 25847 ;; This function uses a non-reentrant model
 25848 ;;
 25849                           
 25850                           	psect	text115
 25851   017F4C                     __ptext115:
 25852                           	callstack 0
 25853   017F4C                     _PHY_WaitForBusy:
 25854                           	callstack 21
 25855                           
 25856                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 340:     phyError_t ret = NOERROR;
 25857                           
 25858                           ; BSR set to: 14
 25859                           ;incstack = 0
 25860   017F4C  0E00               	movlw	0
 25861   017F4E  6E05               	movwf	PHY_WaitForBusy@ret^0,c
 25862                           
 25863                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 341:     uint8_t timeout;;mcc_gener
      +                          ated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 343:     for(timeout = 0; timeout < 10;timeou
      +                          t++) __nop();
 25864   017F50  0E00               	movlw	0
 25865   017F52  6E06               	movwf	PHY_WaitForBusy@timeout^0,c
 25866   017F54                     l2188:
 25867   017F54  0000               	nop	
 25868   017F56  2A06               	incf	PHY_WaitForBusy@timeout^0,f,c
 25869   017F58  0E09               	movlw	9
 25870   017F5A  6406               	cpfsgt	PHY_WaitForBusy@timeout^0,c
 25871   017F5C  D7FB               	goto	l2188
 25872                           
 25873                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 344:     timeout = 90;
 25874   017F5E  0E5A               	movlw	90
 25875   017F60  6E06               	movwf	PHY_WaitForBusy@timeout^0,c
 25876                           
 25877                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 345:     while(MISTATbits.BUSY && -
      +                          -timeout) __nop();
 25878   017F62  D001               	goto	l2190
 25879   017F64                     l2191:
 25880                           
 25881                           ; BSR set to: 14
 25882   017F64  0000               	nop	
 25883   017F66                     l2190:
 25884   017F66  010E               	movlb	14	; () banked
 25885   017F68  A18A               	btfss	138,0,b	;volatile
 25886   017F6A  D002               	goto	l13765
 25887                           
 25888                           ; BSR set to: 14
 25889   017F6C  2E06               	decfsz	PHY_WaitForBusy@timeout^0,f,c
 25890   017F6E  D7FA               	goto	l2191
 25891   017F70                     l13765:
 25892                           
 25893                           ; BSR set to: 14
 25894                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 347:     if(timeout == 0) ret = BUS
      +                          Y_TIMEOUT;
 25895   017F70  5006               	movf	PHY_WaitForBusy@timeout^0,w,c
 25896   017F72  B4D8               	btfsc	status,2,c
 25897                           
 25898                           ; BSR set to: 14
 25899   017F74  6805               	setf	PHY_WaitForBusy@ret^0,c
 25900                           
 25901                           ; BSR set to: 14
 25902                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 348:     return ret;
 25903   017F76  5005               	movf	PHY_WaitForBusy@ret^0,w,c
 25904                           
 25905                           ; BSR set to: 14
 25906   017F78  0012               	return		;funcret
 25907   017F7A                     __end_of_PHY_WaitForBusy:
 25908                           	callstack 0
 25909                           
 25910 ;; *************** function _ARPV4_Update *****************
 25911 ;; Defined at:
 25912 ;;		line 187 in file "mcc_generated_files/TCPIPLibrary/arpv4.c"
 25913 ;; Parameters:    Size  Location     Type
 25914 ;;		None
 25915 ;; Auto vars:     Size  Location     Type
 25916 ;;  x               1    6[COMRAM] unsigned char 
 25917 ;;  entryPointer    2    4[COMRAM] PTR struct .
 25918 ;;		 -> arpMap(104), 
 25919 ;; Return value:  Size  Location     Type
 25920 ;;                  1    wreg      void 
 25921 ;; Registers used:
 25922 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25923 ;; Tracked objects:
 25924 ;;		On entry : 3F/0
 25925 ;;		On exit  : 3F/0
 25926 ;;		Unchanged: 3F/0
 25927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25929 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25931 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25932 ;;Total ram usage:        3 bytes
 25933 ;; Hardware stack levels used: 1
 25934 ;; Hardware stack levels required when called: 4
 25935 ;; This function calls:
 25936 ;;		Nothing
 25937 ;; This function is called by:
 25938 ;;		_Network_Manage
 25939 ;; This function uses a non-reentrant model
 25940 ;;
 25941                           
 25942                           	psect	text116
 25943   017FD4                     __ptext116:
 25944                           	callstack 0
 25945   017FD4                     _ARPV4_Update:
 25946                           	callstack 24
 25947                           
 25948                           ; BSR set to: 0
 25949                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 189:     arpMap_t *entryPointer = arpMap;
 25950                           
 25951                           ; BSR set to: 14
 25952                           ;incstack = 0
 25953   017FD4  0E00               	movlw	low _arpMap
 25954   017FD6  6E05               	movwf	ARPV4_Update@entryPointer^0,c
 25955   017FD8  0E07               	movlw	high _arpMap
 25956   017FDA  6E06               	movwf	(ARPV4_Update@entryPointer+1)^0,c
 25957                           
 25958                           ; BSR set to: 0
 25959                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 190:     for(uint8_t x=0; x < 8; x++)
 25960   017FDC  0E00               	movlw	0
 25961   017FDE  6E07               	movwf	ARPV4_Update@x^0,c
 25962   017FE0                     l14817:
 25963                           
 25964                           ; BSR set to: 0
 25965                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 191:     {;mcc_generated_files/TCPIPLibrary/a
      +                          rpv4.c: 192:         entryPointer->age ++;
 25966   017FE0  EE20 F00C          	lfsr	2,12
 25967   017FE4  5005               	movf	ARPV4_Update@entryPointer^0,w,c
 25968   017FE6  26D9               	addwf	fsr2l,f,c
 25969   017FE8  5006               	movf	(ARPV4_Update@entryPointer+1)^0,w,c
 25970   017FEA  22DA               	addwfc	fsr2h,f,c
 25971   017FEC  2ADF               	incf	indf2,f,c
 25972                           
 25973                           ; BSR set to: 0
 25974                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 193:         entryPointer ++;
 25975   017FEE  0E0D               	movlw	13
 25976   017FF0  2605               	addwf	ARPV4_Update@entryPointer^0,f,c
 25977   017FF2  0E00               	movlw	0
 25978   017FF4  2206               	addwfc	(ARPV4_Update@entryPointer+1)^0,f,c
 25979                           
 25980                           ; BSR set to: 0
 25981                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 194:     }
 25982   017FF6  2A07               	incf	ARPV4_Update@x^0,f,c
 25983                           
 25984                           ; BSR set to: 0
 25985   017FF8  0E07               	movlw	7
 25986   017FFA  6407               	cpfsgt	ARPV4_Update@x^0,c
 25987   017FFC  D7F1               	goto	l14817
 25988   017FFE  0012               	return	
 25989   018000                     __end_of_ARPV4_Update:
 25990                           	callstack 0
 25991                           
 25992 ;; *************** function _GetDataFromSendMailBox *****************
 25993 ;; Defined at:
 25994 ;;		line 302 in file "communication.c"
 25995 ;; Parameters:    Size  Location     Type
 25996 ;;		None
 25997 ;; Auto vars:     Size  Location     Type
 25998 ;;  data            2    8[COMRAM] PTR struct .
 25999 ;;		 -> udpTransBox(80), NULL(0), 
 26000 ;; Return value:  Size  Location     Type
 26001 ;;                  2    4[COMRAM] PTR struct .
 26002 ;; Registers used:
 26003 ;;		wreg, status,2, status,0
 26004 ;; Tracked objects:
 26005 ;;		On entry : 3F/1
 26006 ;;		On exit  : 3F/1
 26007 ;;		Unchanged: 0/0
 26008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26009 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26010 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26011 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26012 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26013 ;;Total ram usage:        6 bytes
 26014 ;; Hardware stack levels used: 1
 26015 ;; Hardware stack levels required when called: 4
 26016 ;; This function calls:
 26017 ;;		Nothing
 26018 ;; This function is called by:
 26019 ;;		_PROCESSxETHxDATA
 26020 ;; This function uses a non-reentrant model
 26021 ;;
 26022                           
 26023                           	psect	text117
 26024   0179B8                     __ptext117:
 26025                           	callstack 0
 26026   0179B8                     _GetDataFromSendMailBox:
 26027                           	callstack 25
 26028                           
 26029                           ; BSR set to: 1
 26030                           ;communication.c: 304:     udpTrans_t *data;;communication.c: 306:     if (M_Box_Eth_Sen
      +                          d_Ptr != M_Box_Eth_Send_Ptr_prev){
 26031                           
 26032                           ; BSR set to: 0
 26033                           ;incstack = 0
 26034   0179B8  514D               	movf	_M_Box_Eth_Send_Ptr_prev& (0+255),w,b
 26035   0179BA  194F               	xorwf	_M_Box_Eth_Send_Ptr& (0+255),w,b
 26036   0179BC  E104               	bnz	u13730
 26037   0179BE  514E               	movf	(_M_Box_Eth_Send_Ptr_prev+1)& (0+255),w,b
 26038   0179C0  1950               	xorwf	(_M_Box_Eth_Send_Ptr+1)& (0+255),w,b
 26039   0179C2  B4D8               	btfsc	status,2,c
 26040   0179C4  D01A               	goto	l1858
 26041   0179C6                     u13730:
 26042                           
 26043                           ; BSR set to: 1
 26044                           ;communication.c: 310:         data = M_Box_Eth_Send_Ptr_prev;
 26045   0179C6  C14D  F009         	movff	_M_Box_Eth_Send_Ptr_prev,GetDataFromSendMailBox@data
 26046   0179CA  C14E  F00A         	movff	_M_Box_Eth_Send_Ptr_prev+1,GetDataFromSendMailBox@data+1
 26047                           
 26048                           ;communication.c: 312:         M_Box_Eth_Send_Ptr_prev++;
 26049   0179CE  0E0A               	movlw	10
 26050   0179D0  274D               	addwf	_M_Box_Eth_Send_Ptr_prev& (0+255),f,b
 26051   0179D2  0E00               	movlw	0
 26052   0179D4  234E               	addwfc	(_M_Box_Eth_Send_Ptr_prev+1)& (0+255),f,b
 26053                           
 26054                           ;communication.c: 314:         if(M_Box_Eth_Send_Ptr_prev >= &udpTransBox[8]){
 26055   0179D6  0E00               	movlw	low _udpTransBox
 26056   0179D8  6E07               	movwf	??_GetDataFromSendMailBox^0,c
 26057   0179DA  0E08               	movlw	high _udpTransBox
 26058   0179DC  6E08               	movwf	(??_GetDataFromSendMailBox+1)^0,c
 26059   0179DE  0E50               	movlw	80
 26060   0179E0  2607               	addwf	??_GetDataFromSendMailBox^0,f,c
 26061   0179E2  0E00               	movlw	0
 26062   0179E4  2208               	addwfc	(??_GetDataFromSendMailBox+1)^0,f,c
 26063   0179E6  5007               	movf	??_GetDataFromSendMailBox^0,w,c
 26064   0179E8  5D4D               	subwf	_M_Box_Eth_Send_Ptr_prev& (0+255),w,b
 26065   0179EA  5008               	movf	(??_GetDataFromSendMailBox+1)^0,w,c
 26066   0179EC  594E               	subwfb	(_M_Box_Eth_Send_Ptr_prev+1)& (0+255),w,b
 26067   0179EE  A0D8               	btfss	status,0,c
 26068   0179F0  D004               	goto	l1858
 26069                           
 26070                           ; BSR set to: 1
 26071                           ;communication.c: 316:             M_Box_Eth_Send_Ptr_prev = &udpTransBox[0];
 26072   0179F2  0E00               	movlw	low _udpTransBox
 26073   0179F4  6F4D               	movwf	_M_Box_Eth_Send_Ptr_prev& (0+255),b
 26074   0179F6  0E08               	movlw	high _udpTransBox
 26075   0179F8  6F4E               	movwf	(_M_Box_Eth_Send_Ptr_prev+1)& (0+255),b
 26076   0179FA                     l1858:
 26077                           
 26078                           ; BSR set to: 1
 26079                           ;communication.c: 320:     return (data);
 26080   0179FA  C009  F005         	movff	GetDataFromSendMailBox@data,?_GetDataFromSendMailBox
 26081   0179FE  C00A  F006         	movff	GetDataFromSendMailBox@data+1,?_GetDataFromSendMailBox+1
 26082                           
 26083                           ; BSR set to: 1
 26084   017A02  0012               	return		;funcret
 26085   017A04                     __end_of_GetDataFromSendMailBox:
 26086                           	callstack 0
 26087                           
 26088 ;; *************** function _GETxDATAxFROMxRECEIVExMAILxBOX *****************
 26089 ;; Defined at:
 26090 ;;		line 259 in file "communication.c"
 26091 ;; Parameters:    Size  Location     Type
 26092 ;;		None
 26093 ;; Auto vars:     Size  Location     Type
 26094 ;;  data            2    8[COMRAM] PTR struct .
 26095 ;;		 -> udpRecvBox(80), NULL(0), 
 26096 ;; Return value:  Size  Location     Type
 26097 ;;                  2    4[COMRAM] PTR struct .
 26098 ;; Registers used:
 26099 ;;		wreg, status,2, status,0
 26100 ;; Tracked objects:
 26101 ;;		On entry : 3F/1
 26102 ;;		On exit  : 3F/1
 26103 ;;		Unchanged: 0/0
 26104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26105 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26106 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26107 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26108 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26109 ;;Total ram usage:        6 bytes
 26110 ;; Hardware stack levels used: 1
 26111 ;; Hardware stack levels required when called: 4
 26112 ;; This function calls:
 26113 ;;		Nothing
 26114 ;; This function is called by:
 26115 ;;		_PROCESSxETHxDATA
 26116 ;;		_main
 26117 ;; This function uses a non-reentrant model
 26118 ;;
 26119                           
 26120                           	psect	text118
 26121   017A04                     __ptext118:
 26122                           	callstack 0
 26123   017A04                     _GETxDATAxFROMxRECEIVExMAILxBOX:
 26124                           	callstack 25
 26125                           
 26126                           ; BSR set to: 1
 26127                           ;communication.c: 261:     udpTrans_t *data;;communication.c: 263:     if (M_Box_Eth_Rec
      +                          v_Ptr != M_Box_Eth_Recv_Ptr_prev){
 26128                           
 26129                           ; BSR set to: 1
 26130                           ;incstack = 0
 26131   017A04  5151               	movf	_M_Box_Eth_Recv_Ptr_prev& (0+255),w,b
 26132   017A06  1953               	xorwf	_M_Box_Eth_Recv_Ptr& (0+255),w,b
 26133   017A08  E104               	bnz	u13700
 26134   017A0A  5152               	movf	(_M_Box_Eth_Recv_Ptr_prev+1)& (0+255),w,b
 26135   017A0C  1954               	xorwf	(_M_Box_Eth_Recv_Ptr+1)& (0+255),w,b
 26136   017A0E  B4D8               	btfsc	status,2,c
 26137   017A10  D01A               	goto	l1848
 26138   017A12                     u13700:
 26139                           
 26140                           ; BSR set to: 1
 26141                           ;communication.c: 265:         data = M_Box_Eth_Recv_Ptr_prev;
 26142   017A12  C151  F009         	movff	_M_Box_Eth_Recv_Ptr_prev,GETxDATAxFROMxRECEIVExMAILxBOX@data
 26143   017A16  C152  F00A         	movff	_M_Box_Eth_Recv_Ptr_prev+1,GETxDATAxFROMxRECEIVExMAILxBOX@data+1
 26144                           
 26145                           ;communication.c: 268:         M_Box_Eth_Recv_Ptr_prev++;
 26146   017A1A  0E0A               	movlw	10
 26147   017A1C  2751               	addwf	_M_Box_Eth_Recv_Ptr_prev& (0+255),f,b
 26148   017A1E  0E00               	movlw	0
 26149   017A20  2352               	addwfc	(_M_Box_Eth_Recv_Ptr_prev+1)& (0+255),f,b
 26150                           
 26151                           ;communication.c: 269:         if(M_Box_Eth_Recv_Ptr_prev >= &udpRecvBox[8]){
 26152   017A22  0E68               	movlw	low _udpRecvBox
 26153   017A24  6E07               	movwf	??_GETxDATAxFROMxRECEIVExMAILxBOX^0,c
 26154   017A26  0E07               	movlw	high _udpRecvBox
 26155   017A28  6E08               	movwf	(??_GETxDATAxFROMxRECEIVExMAILxBOX+1)^0,c
 26156   017A2A  0E50               	movlw	80
 26157   017A2C  2607               	addwf	??_GETxDATAxFROMxRECEIVExMAILxBOX^0,f,c
 26158   017A2E  0E00               	movlw	0
 26159   017A30  2208               	addwfc	(??_GETxDATAxFROMxRECEIVExMAILxBOX+1)^0,f,c
 26160   017A32  5007               	movf	??_GETxDATAxFROMxRECEIVExMAILxBOX^0,w,c
 26161   017A34  5D51               	subwf	_M_Box_Eth_Recv_Ptr_prev& (0+255),w,b
 26162   017A36  5008               	movf	(??_GETxDATAxFROMxRECEIVExMAILxBOX+1)^0,w,c
 26163   017A38  5952               	subwfb	(_M_Box_Eth_Recv_Ptr_prev+1)& (0+255),w,b
 26164   017A3A  A0D8               	btfss	status,0,c
 26165   017A3C  D004               	goto	l1848
 26166                           
 26167                           ; BSR set to: 1
 26168                           ;communication.c: 270:             M_Box_Eth_Recv_Ptr_prev = &udpRecvBox[0];
 26169   017A3E  0E68               	movlw	low _udpRecvBox
 26170   017A40  6F51               	movwf	_M_Box_Eth_Recv_Ptr_prev& (0+255),b
 26171   017A42  0E07               	movlw	high _udpRecvBox
 26172   017A44  6F52               	movwf	(_M_Box_Eth_Recv_Ptr_prev+1)& (0+255),b
 26173   017A46                     l1848:
 26174                           
 26175                           ; BSR set to: 1
 26176                           ;communication.c: 273:     return (data);
 26177   017A46  C009  F005         	movff	GETxDATAxFROMxRECEIVExMAILxBOX@data,?_GETxDATAxFROMxRECEIVExMAILxBOX
 26178   017A4A  C00A  F006         	movff	GETxDATAxFROMxRECEIVExMAILxBOX@data+1,?_GETxDATAxFROMxRECEIVExMAILxBOX+1
 26179                           
 26180                           ; BSR set to: 1
 26181   017A4E  0012               	return		;funcret
 26182   017A50                     __end_of_GETxDATAxFROMxRECEIVExMAILxBOX:
 26183                           	callstack 0
 26184                           
 26185 ;; *************** function _ETH_TxReset *****************
 26186 ;; Defined at:
 26187 ;;		line 684 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 26188 ;; Parameters:    Size  Location     Type
 26189 ;;		None
 26190 ;; Auto vars:     Size  Location     Type
 26191 ;;		None
 26192 ;; Return value:  Size  Location     Type
 26193 ;;                  1    wreg      void 
 26194 ;; Registers used:
 26195 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26196 ;; Tracked objects:
 26197 ;;		On entry : 3F/1
 26198 ;;		On exit  : 30/0
 26199 ;;		Unchanged: 0/0
 26200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26205 ;;Total ram usage:        0 bytes
 26206 ;; Hardware stack levels used: 1
 26207 ;; Hardware stack levels required when called: 5
 26208 ;; This function calls:
 26209 ;;		_ETH_PacketListReset
 26210 ;;		_ETH_ResetByteCount
 26211 ;; This function is called by:
 26212 ;;		_PROCESSxETHxDATA
 26213 ;; This function uses a non-reentrant model
 26214 ;;
 26215                           
 26216                           	psect	text119
 26217   0181B4                     __ptext119:
 26218                           	callstack 0
 26219   0181B4                     _ETH_TxReset:
 26220                           	callstack 24
 26221                           
 26222                           ; BSR set to: 1
 26223                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 686:     ETH_ResetByteCount();
 26224                           
 26225                           ; BSR set to: 1
 26226                           ;incstack = 0
 26227   0181B4  ECD0  F0C1         	call	_ETH_ResetByteCount	;wreg free
 26228                           
 26229                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 687:     ETXST = ((8192) - (((1518)
      +                           + (7)) << 1));
 26230   0181B8  0E14               	movlw	20
 26231   0181BA  010E               	movlb	14	; () banked
 26232   0181BC  6FE5               	movwf	229,b	;volatile
 26233   0181BE  0E16               	movlw	22
 26234   0181C0  6FE4               	movwf	228,b	;volatile
 26235                           
 26236                           ; BSR set to: 14
 26237                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 688:     EWRPT = ((8192) - (((1518)
      +                           + (7)) << 1));
 26238   0181C2  0E14               	movlw	20
 26239   0181C4  6FE3               	movwf	227,b	;volatile
 26240   0181C6  0E16               	movlw	22
 26241   0181C8  6FE2               	movwf	226,b	;volatile
 26242                           
 26243                           ; BSR set to: 14
 26244                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 690:     ETH_PacketListReset();
 26245   0181CA  EC4D  F0BD         	call	_ETH_PacketListReset	;wreg free
 26246   0181CE  0012               	return		;funcret
 26247   0181D0                     __end_of_ETH_TxReset:
 26248                           	callstack 0
 26249                           
 26250 ;; *************** function _ETH_ResetByteCount *****************
 26251 ;; Defined at:
 26252 ;;		line 1105 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 26253 ;; Parameters:    Size  Location     Type
 26254 ;;		None
 26255 ;; Auto vars:     Size  Location     Type
 26256 ;;		None
 26257 ;; Return value:  Size  Location     Type
 26258 ;;                  1    wreg      void 
 26259 ;; Registers used:
 26260 ;;		None
 26261 ;; Tracked objects:
 26262 ;;		On entry : 38/0
 26263 ;;		On exit  : 38/0
 26264 ;;		Unchanged: 38/0
 26265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26270 ;;Total ram usage:        0 bytes
 26271 ;; Hardware stack levels used: 1
 26272 ;; Hardware stack levels required when called: 4
 26273 ;; This function calls:
 26274 ;;		Nothing
 26275 ;; This function is called by:
 26276 ;;		_ETH_WriteStart
 26277 ;;		_ETH_TxReset
 26278 ;;		_UDP_Start
 26279 ;; This function uses a non-reentrant model
 26280 ;;
 26281                           
 26282                           	psect	text120
 26283   0183A0                     __ptext120:
 26284                           	callstack 0
 26285   0183A0                     _ETH_ResetByteCount:
 26286                           	callstack 22
 26287                           
 26288                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1107:     ethData.saveWRPT = EWRPT;
 26289                           
 26290                           ;incstack = 0
 26291   0183A0  CEE2 F128          	movff	3810,_ethData+4	;volatile
 26292   0183A4  CEE3 F129          	movff	3811,_ethData+5	;volatile
 26293   0183A8  0012               	return		;funcret
 26294   0183AA                     __end_of_ETH_ResetByteCount:
 26295                           	callstack 0
 26296                           
 26297 ;; *************** function _ETH_PacketListReset *****************
 26298 ;; Defined at:
 26299 ;;		line 1140 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 26300 ;; Parameters:    Size  Location     Type
 26301 ;;		None
 26302 ;; Auto vars:     Size  Location     Type
 26303 ;;  index           2    6[COMRAM] unsigned short 
 26304 ;;  ptr             2    4[COMRAM] PTR unsigned char 
 26305 ;;		 -> txData(200), 
 26306 ;; Return value:  Size  Location     Type
 26307 ;;                  1    wreg      void 
 26308 ;; Registers used:
 26309 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26310 ;; Tracked objects:
 26311 ;;		On entry : 30/1
 26312 ;;		On exit  : 30/0
 26313 ;;		Unchanged: 0/0
 26314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26316 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26318 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26319 ;;Total ram usage:        4 bytes
 26320 ;; Hardware stack levels used: 1
 26321 ;; Hardware stack levels required when called: 4
 26322 ;; This function calls:
 26323 ;;		Nothing
 26324 ;; This function is called by:
 26325 ;;		_ETH_Init
 26326 ;;		_ETH_TxReset
 26327 ;; This function uses a non-reentrant model
 26328 ;;
 26329                           
 26330                           	psect	text121
 26331   017A9A                     __ptext121:
 26332                           	callstack 0
 26333   017A9A                     _ETH_PacketListReset:
 26334                           	callstack 23
 26335                           
 26336                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1142:     uint16_t index = 0;
 26337                           
 26338                           ;incstack = 0
 26339   017A9A  0E00               	movlw	0
 26340   017A9C  6E08               	movwf	(ETH_PacketListReset@index+1)^0,c
 26341   017A9E  0E00               	movlw	0
 26342   017AA0  6E07               	movwf	ETH_PacketListReset@index^0,c
 26343                           
 26344                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1143:     uint8_t* ptr = (uint8_t*)
      +                          txData;
 26345   017AA2  0E00               	movlw	low _txData
 26346   017AA4  6E05               	movwf	ETH_PacketListReset@ptr^0,c
 26347   017AA6  0E06               	movlw	high _txData
 26348   017AA8  6E06               	movwf	(ETH_PacketListReset@ptr+1)^0,c
 26349                           
 26350                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1144:     ethListSize = 0;
 26351   017AAA  0E00               	movlw	0
 26352   017AAC  0101               	movlb	1	; () banked
 26353   017AAE  6F68               	movwf	_ethListSize& (0+255),b
 26354                           
 26355                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1146:     pHead = ((void*)0);
 26356   017AB0  0E00               	movlw	0
 26357   017AB2  6F49               	movwf	_pHead& (0+255),b
 26358   017AB4  0E00               	movlw	0
 26359   017AB6  6F4A               	movwf	(_pHead+1)& (0+255),b
 26360                           
 26361                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1147:     pTail = ((void*)0);
 26362   017AB8  0E00               	movlw	0
 26363   017ABA  6F47               	movwf	_pTail& (0+255),b
 26364   017ABC  0E00               	movlw	0
 26365   017ABE  6F48               	movwf	(_pTail+1)& (0+255),b
 26366                           
 26367                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1149:     while( index < ((20) * si
      +                          zeof(txPacket_t)) )
 26368   017AC0  D009               	goto	l14309
 26369   017AC2                     l14305:
 26370                           
 26371                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1150:     {;mcc_generated_files/TCP
      +                          IPLibrary/ETHxxJ6x_driver.c: 1151:         ptr[index] = 0;
 26372   017AC2  5007               	movf	ETH_PacketListReset@index^0,w,c
 26373   017AC4  2405               	addwf	ETH_PacketListReset@ptr^0,w,c
 26374   017AC6  6ED9               	movwf	fsr2l,c
 26375   017AC8  5008               	movf	(ETH_PacketListReset@index+1)^0,w,c
 26376   017ACA  2006               	addwfc	(ETH_PacketListReset@ptr+1)^0,w,c
 26377   017ACC  6EDA               	movwf	fsr2h,c
 26378   017ACE  6ADF               	clrf	indf2,c
 26379                           
 26380                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1152:         index++;
 26381   017AD0  4A07               	infsnz	ETH_PacketListReset@index^0,f,c
 26382   017AD2  2A08               	incf	(ETH_PacketListReset@index+1)^0,f,c
 26383   017AD4                     l14309:
 26384                           
 26385                           ;mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c: 1149:     while( index < ((20) * si
      +                          zeof(txPacket_t)) )
 26386   017AD4  5008               	movf	(ETH_PacketListReset@index+1)^0,w,c
 26387   017AD6  E105               	bnz	u12480
 26388   017AD8  0EC8               	movlw	200
 26389   017ADA  5C07               	subwf	ETH_PacketListReset@index^0,w,c
 26390   017ADC  B0D8               	btfsc	status,0,c
 26391   017ADE  0012               	return	
 26392   017AE0  D7F0               	goto	l14305
 26393   017AE2                     u12480:
 26394   017AE2  0012               	return		;funcret
 26395   017AE4                     __end_of_ETH_PacketListReset:
 26396                           	callstack 0
 26397                           
 26398 ;; *************** function _CheckDataInSendMailBox *****************
 26399 ;; Defined at:
 26400 ;;		line 330 in file "communication.c"
 26401 ;; Parameters:    Size  Location     Type
 26402 ;;		None
 26403 ;; Auto vars:     Size  Location     Type
 26404 ;;		None
 26405 ;; Return value:  Size  Location     Type
 26406 ;;                  1    wreg      _Bool 
 26407 ;; Registers used:
 26408 ;;		wreg, status,2, status,0
 26409 ;; Tracked objects:
 26410 ;;		On entry : 3F/1
 26411 ;;		On exit  : 3F/1
 26412 ;;		Unchanged: 0/0
 26413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26418 ;;Total ram usage:        0 bytes
 26419 ;; Hardware stack levels used: 1
 26420 ;; Hardware stack levels required when called: 4
 26421 ;; This function calls:
 26422 ;;		Nothing
 26423 ;; This function is called by:
 26424 ;;		_PROCESSxETHxDATA
 26425 ;; This function uses a non-reentrant model
 26426 ;;
 26427                           
 26428                           	psect	text122
 26429   018266                     __ptext122:
 26430                           	callstack 0
 26431   018266                     _CheckDataInSendMailBox:
 26432                           	callstack 25
 26433                           
 26434                           ; BSR set to: 1
 26435                           ;communication.c: 332:     if (M_Box_Eth_Send_Ptr != M_Box_Eth_Send_Ptr_prev){
 26436                           
 26437                           ;incstack = 0
 26438   018266  514D               	movf	_M_Box_Eth_Send_Ptr_prev& (0+255),w,b
 26439   018268  194F               	xorwf	_M_Box_Eth_Send_Ptr& (0+255),w,b
 26440   01826A  E104               	bnz	u13720
 26441   01826C  514E               	movf	(_M_Box_Eth_Send_Ptr_prev+1)& (0+255),w,b
 26442   01826E  1950               	xorwf	(_M_Box_Eth_Send_Ptr+1)& (0+255),w,b
 26443   018270  B4D8               	btfsc	status,2,c
 26444   018272  D002               	goto	l15319
 26445   018274                     u13720:
 26446                           
 26447                           ; BSR set to: 1
 26448                           ;communication.c: 334:         return(1);
 26449   018274  0E01               	movlw	1
 26450   018276  0012               	return	
 26451   018278                     l15319:
 26452                           
 26453                           ; BSR set to: 1
 26454                           ;communication.c: 337:         return (0);
 26455   018278  0E00               	movlw	0
 26456                           
 26457                           ; BSR set to: 1
 26458   01827A  0012               	return		;funcret
 26459   01827C                     __end_of_CheckDataInSendMailBox:
 26460                           	callstack 0
 26461                           
 26462 ;; *************** function _CHECKxDATAxINxRECEIVExMAILxBOX *****************
 26463 ;; Defined at:
 26464 ;;		line 284 in file "communication.c"
 26465 ;; Parameters:    Size  Location     Type
 26466 ;;		None
 26467 ;; Auto vars:     Size  Location     Type
 26468 ;;		None
 26469 ;; Return value:  Size  Location     Type
 26470 ;;                  1    wreg      _Bool 
 26471 ;; Registers used:
 26472 ;;		wreg, status,2, status,0
 26473 ;; Tracked objects:
 26474 ;;		On entry : 3C/2
 26475 ;;		On exit  : 3F/1
 26476 ;;		Unchanged: 0/0
 26477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26482 ;;Total ram usage:        0 bytes
 26483 ;; Hardware stack levels used: 1
 26484 ;; Hardware stack levels required when called: 4
 26485 ;; This function calls:
 26486 ;;		Nothing
 26487 ;; This function is called by:
 26488 ;;		_PROCESSxETHxDATA
 26489 ;;		_main
 26490 ;; This function uses a non-reentrant model
 26491 ;;
 26492                           
 26493                           	psect	text123
 26494   018238                     __ptext123:
 26495                           	callstack 0
 26496   018238                     _CHECKxDATAxINxRECEIVExMAILxBOX:
 26497                           	callstack 25
 26498                           
 26499                           ;communication.c: 286:     if (M_Box_Eth_Recv_Ptr != M_Box_Eth_Recv_Ptr_prev){
 26500                           
 26501                           ; BSR set to: 1
 26502                           ;incstack = 0
 26503   018238  0101               	movlb	1	; () banked
 26504   01823A  5151               	movf	_M_Box_Eth_Recv_Ptr_prev& (0+255),w,b
 26505   01823C  1953               	xorwf	_M_Box_Eth_Recv_Ptr& (0+255),w,b
 26506   01823E  E104               	bnz	u13680
 26507   018240  5152               	movf	(_M_Box_Eth_Recv_Ptr_prev+1)& (0+255),w,b
 26508   018242  1954               	xorwf	(_M_Box_Eth_Recv_Ptr+1)& (0+255),w,b
 26509   018244  B4D8               	btfsc	status,2,c
 26510   018246  D002               	goto	l15279
 26511   018248                     u13680:
 26512                           
 26513                           ; BSR set to: 1
 26514                           ;communication.c: 288:         return (1);
 26515   018248  0E01               	movlw	1
 26516   01824A  0012               	return	
 26517   01824C                     l15279:
 26518                           
 26519                           ; BSR set to: 1
 26520                           ;communication.c: 291:         return (0);
 26521   01824C  0E00               	movlw	0
 26522                           
 26523                           ; BSR set to: 1
 26524   01824E  0012               	return		;funcret
 26525   018250                     __end_of_CHECKxDATAxINxRECEIVExMAILxBOX:
 26526                           	callstack 0
 26527                           
 26528 ;; *************** function _MILLIESxINIT *****************
 26529 ;; Defined at:
 26530 ;;		line 32 in file "milisecond_counter.c"
 26531 ;; Parameters:    Size  Location     Type
 26532 ;;		None
 26533 ;; Auto vars:     Size  Location     Type
 26534 ;;		None
 26535 ;; Return value:  Size  Location     Type
 26536 ;;                  1    wreg      void 
 26537 ;; Registers used:
 26538 ;;		wreg, status,2, status,0, cstack
 26539 ;; Tracked objects:
 26540 ;;		On entry : 0/0
 26541 ;;		On exit  : 0/0
 26542 ;;		Unchanged: 0/0
 26543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26548 ;;Total ram usage:        0 bytes
 26549 ;; Hardware stack levels used: 1
 26550 ;; Hardware stack levels required when called: 5
 26551 ;; This function calls:
 26552 ;;		_SETxMILLISECONDxUPDATExHANDLER
 26553 ;;		_TMR1_SetInterruptHandler
 26554 ;; This function is called by:
 26555 ;;		_main
 26556 ;; This function uses a non-reentrant model
 26557 ;;
 26558                           
 26559                           	psect	text124
 26560   01813A                     __ptext124:
 26561                           	callstack 0
 26562   01813A                     _MILLIESxINIT:
 26563                           	callstack 25
 26564                           
 26565                           ;milisecond_counter.c: 34:     TMR1_SetInterruptHandler(MILLISECOND_HANDLER);
 26566                           
 26567                           ; BSR set to: 1
 26568                           ;incstack = 0
 26569   01813A  0E1C               	movlw	low _MILLISECOND_HANDLER
 26570   01813C  6E05               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
 26571   01813E  0E7F               	movlw	high _MILLISECOND_HANDLER
 26572   018140  6E06               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
 26573   018142  0E01               	movlw	low (_MILLISECOND_HANDLER shr (0+16))
 26574   018144  6E07               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+2)^0,c
 26575   018146  EC85  F0C1         	call	_TMR1_SetInterruptHandler	;wreg free
 26576                           
 26577                           ;milisecond_counter.c: 35:     SETxMILLISECONDxUPDATExHANDLER(Millisecond_DefaultUpdateH
      +                          andler);
 26578   01814A  0EC4               	movlw	low _Millisecond_DefaultUpdateHandler
 26579   01814C  6E05               	movwf	SETxMILLISECONDxUPDATExHANDLER@InterruptHandler^0,c
 26580   01814E  0E83               	movlw	high _Millisecond_DefaultUpdateHandler
 26581   018150  6E06               	movwf	(SETxMILLISECONDxUPDATExHANDLER@InterruptHandler+1)^0,c
 26582   018152  0E01               	movlw	low (_Millisecond_DefaultUpdateHandler shr (0+16))
 26583   018154  6E07               	movwf	(SETxMILLISECONDxUPDATExHANDLER@InterruptHandler+2)^0,c
 26584   018156  EC8C  F0C1         	call	_SETxMILLISECONDxUPDATExHANDLER	;wreg free
 26585   01815A  0012               	return		;funcret
 26586   01815C                     __end_of_MILLIESxINIT:
 26587                           	callstack 0
 26588                           
 26589 ;; *************** function _TMR1_SetInterruptHandler *****************
 26590 ;; Defined at:
 26591 ;;		line 159 in file "mcc_generated_files/tmr1.c"
 26592 ;; Parameters:    Size  Location     Type
 26593 ;;  InterruptHan    3    4[COMRAM] PTR FTN()void 
 26594 ;;		 -> MILLISECOND_HANDLER(1), TMR1_DefaultInterruptHandler(1), 
 26595 ;; Auto vars:     Size  Location     Type
 26596 ;;		None
 26597 ;; Return value:  Size  Location     Type
 26598 ;;                  1    wreg      void 
 26599 ;; Registers used:
 26600 ;;		wreg, status,2, status,0
 26601 ;; Tracked objects:
 26602 ;;		On entry : 0/0
 26603 ;;		On exit  : 0/0
 26604 ;;		Unchanged: 0/0
 26605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26606 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26609 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26610 ;;Total ram usage:        3 bytes
 26611 ;; Hardware stack levels used: 1
 26612 ;; Hardware stack levels required when called: 4
 26613 ;; This function calls:
 26614 ;;		Nothing
 26615 ;; This function is called by:
 26616 ;;		_TMR1_Initialize
 26617 ;;		_MILLIESxINIT
 26618 ;; This function uses a non-reentrant model
 26619 ;;
 26620                           
 26621                           	psect	text125
 26622   01830A                     __ptext125:
 26623                           	callstack 0
 26624   01830A                     _TMR1_SetInterruptHandler:
 26625                           	callstack 24
 26626                           
 26627                           ;mcc_generated_files/tmr1.c: 160:     TMR1_InterruptHandler = InterruptHandler;
 26628                           
 26629                           ;incstack = 0
 26630   01830A  C005  F2F3         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
 26631   01830E  C006  F2F4         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
 26632   018312  C007  F2F5         	movff	TMR1_SetInterruptHandler@InterruptHandler+2,_TMR1_InterruptHandler+2
 26633   018316  0012               	return		;funcret
 26634   018318                     __end_of_TMR1_SetInterruptHandler:
 26635                           	callstack 0
 26636                           
 26637 ;; *************** function _SETxMILLISECONDxUPDATExHANDLER *****************
 26638 ;; Defined at:
 26639 ;;		line 67 in file "milisecond_counter.c"
 26640 ;; Parameters:    Size  Location     Type
 26641 ;;  InterruptHan    3    4[COMRAM] PTR FTN()void 
 26642 ;;		 -> Millisecond_DefaultUpdateHandler(1), UpdateTick(1), 
 26643 ;; Auto vars:     Size  Location     Type
 26644 ;;		None
 26645 ;; Return value:  Size  Location     Type
 26646 ;;                  1    wreg      void 
 26647 ;; Registers used:
 26648 ;;		wreg, status,2, status,0
 26649 ;; Tracked objects:
 26650 ;;		On entry : 0/0
 26651 ;;		On exit  : 0/0
 26652 ;;		Unchanged: 0/0
 26653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26654 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26657 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26658 ;;Total ram usage:        3 bytes
 26659 ;; Hardware stack levels used: 1
 26660 ;; Hardware stack levels required when called: 4
 26661 ;; This function calls:
 26662 ;;		Nothing
 26663 ;; This function is called by:
 26664 ;;		_main
 26665 ;;		_MILLIESxINIT
 26666 ;; This function uses a non-reentrant model
 26667 ;;
 26668                           
 26669                           	psect	text126
 26670   018318                     __ptext126:
 26671                           	callstack 0
 26672   018318                     _SETxMILLISECONDxUPDATExHANDLER:
 26673                           	callstack 26
 26674                           
 26675                           ;milisecond_counter.c: 68:     Millisecond_Update_Handler = InterruptHandler;
 26676                           
 26677                           ;incstack = 0
 26678   018318  C005  F138         	movff	SETxMILLISECONDxUPDATExHANDLER@InterruptHandler,_Millisecond_Update_Handler
 26679   01831C  C006  F139         	movff	SETxMILLISECONDxUPDATExHANDLER@InterruptHandler+1,_Millisecond_Update_Handler+1
 26680   018320  C007  F13A         	movff	SETxMILLISECONDxUPDATExHANDLER@InterruptHandler+2,_Millisecond_Update_Handler+2
 26681   018324  0012               	return		;funcret
 26682   018326                     __end_of_SETxMILLISECONDxUPDATExHANDLER:
 26683                           	callstack 0
 26684                           
 26685 ;; *************** function _INITxSTATION *****************
 26686 ;; Defined at:
 26687 ;;		line 15 in file "mainstation.c"
 26688 ;; Parameters:    Size  Location     Type
 26689 ;;		None
 26690 ;; Auto vars:     Size  Location     Type
 26691 ;;		None
 26692 ;; Return value:  Size  Location     Type
 26693 ;;                  1    wreg      void 
 26694 ;; Registers used:
 26695 ;;		wreg, status,2, status,0, cstack
 26696 ;; Tracked objects:
 26697 ;;		On entry : 3F/1
 26698 ;;		On exit  : 3F/3
 26699 ;;		Unchanged: 0/0
 26700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26705 ;;Total ram usage:        0 bytes
 26706 ;; Hardware stack levels used: 1
 26707 ;; Hardware stack levels required when called: 5
 26708 ;; This function calls:
 26709 ;;		_INITxPATHWAYxSTATION
 26710 ;; This function is called by:
 26711 ;;		_main
 26712 ;; This function uses a non-reentrant model
 26713 ;;
 26714                           
 26715                           	psect	text127
 26716   0155B6                     __ptext127:
 26717                           	callstack 0
 26718   0155B6                     _INITxSTATION:
 26719                           	callstack 25
 26720                           
 26721                           ; BSR set to: 1
 26722                           ;mainstation.c: 17:     INITxPATHWAYxSTATION(&top, &bot);
 26723                           
 26724                           ;incstack = 0
 26725   0155B6  0E4C               	movlw	low _top
 26726   0155B8  6E05               	movwf	INITxPATHWAYxSTATION@reftop^0,c
 26727   0155BA  0E03               	movlw	high _top
 26728   0155BC  6E06               	movwf	(INITxPATHWAYxSTATION@reftop+1)^0,c
 26729   0155BE  0E00               	movlw	low _bot
 26730   0155C0  6E07               	movwf	INITxPATHWAYxSTATION@refbot^0,c
 26731   0155C2  0E03               	movlw	high _bot
 26732   0155C4  6E08               	movwf	(INITxPATHWAYxSTATION@refbot+1)^0,c
 26733   0155C6  EC3E  F0C1         	call	_INITxPATHWAYxSTATION	;wreg free
 26734                           
 26735                           ; BSR set to: 1
 26736                           ;mainstation.c: 18:     top.name = MAIN_STATION_TOP;
 26737   0155CA  0E0A               	movlw	10
 26738   0155CC  0103               	movlb	3	; () banked
 26739   0155CE  6F4C               	movwf	_top& (0+255),b
 26740                           
 26741                           ; BSR set to: 3
 26742                           ;mainstation.c: 19:     top.AppState = INIT;
 26743   0155D0  0E69               	movlw	105
 26744   0155D2  6F4D               	movwf	(_top+1)& (0+255),b
 26745                           
 26746                           ; BSR set to: 3
 26747                           ;mainstation.c: 20:     top.getFreightLeaveStation = &HALL_BLK_13;
 26748   0155D4  0EBB               	movlw	low _HALL_BLK_13
 26749   0155D6  6F4E               	movwf	(_top+2)& (0+255),b
 26750   0155D8  0E02               	movlw	high _HALL_BLK_13
 26751   0155DA  6F4F               	movwf	(_top+3)& (0+255),b
 26752                           
 26753                           ; BSR set to: 3
 26754                           ;mainstation.c: 21:     top.getFreightEnterStation = &HALL_BLK_9B;
 26755   0155DC  0EA6               	movlw	low _HALL_BLK_9B
 26756   0155DE  6F50               	movwf	(_top+4)& (0+255),b
 26757   0155E0  0E03               	movlw	high _HALL_BLK_9B
 26758   0155E2  6F51               	movwf	(_top+5)& (0+255),b
 26759                           
 26760                           ; BSR set to: 3
 26761                           ;mainstation.c: 22:     top.setOccBlkIn = &OCC_TO_9B;
 26762   0155E4  0EED               	movlw	low _OCC_TO_9B
 26763   0155E6  6F52               	movwf	(_top+6)& (0+255),b
 26764   0155E8  0E02               	movlw	high _OCC_TO_9B
 26765   0155EA  6F53               	movwf	(_top+7)& (0+255),b
 26766                           
 26767                           ; BSR set to: 3
 26768                           ;mainstation.c: 23:     top.getOccBlkIn = &OCC_FR_9B;
 26769   0155EC  0E0E               	movlw	low _OCC_FR_9B
 26770   0155EE  6F54               	movwf	(_top+8)& (0+255),b
 26771   0155F0  0E04               	movlw	high _OCC_FR_9B
 26772   0155F2  6F55               	movwf	(_top+9)& (0+255),b
 26773                           
 26774                           ; BSR set to: 3
 26775                           ;mainstation.c: 24:     top.getOccBlkOut = &OCC_FR_BLK13;
 26776   0155F4  0EC4               	movlw	low _OCC_FR_BLK13
 26777   0155F6  6F56               	movwf	(_top+10)& (0+255),b
 26778   0155F8  0E04               	movlw	high _OCC_FR_BLK13
 26779   0155FA  6F57               	movwf	(_top+11)& (0+255),b
 26780                           
 26781                           ; BSR set to: 3
 26782                           ;mainstation.c: 25:     top.setPath = &WS_TOP;
 26783   0155FC  0E7A               	movlw	low _WS_TOP
 26784   0155FE  6F58               	movwf	(_top+12)& (0+255),b
 26785   015600  0E05               	movlw	high _WS_TOP
 26786   015602  6F59               	movwf	(_top+13)& (0+255),b
 26787                           
 26788                           ; BSR set to: 3
 26789                           ;mainstation.c: 26:     top.prevPath = 0;
 26790   015604  0E00               	movlw	0
 26791   015606  6F5A               	movwf	(_top+14)& (0+255),b
 26792                           
 26793                           ; BSR set to: 3
 26794                           ;mainstation.c: 27:     top.newPath = 0;
 26795   015608  0E00               	movlw	0
 26796   01560A  6F5B               	movwf	(_top+15)& (0+255),b
 26797                           
 26798                           ; BSR set to: 3
 26799                           ;mainstation.c: 28:     top.setSignal = &SIG_TOP;
 26800   01560C  0E32               	movlw	low _SIG_TOP
 26801   01560E  6F5C               	movwf	(_top+16)& (0+255),b
 26802   015610  0E05               	movlw	high _SIG_TOP
 26803   015612  6F5D               	movwf	(_top+17)& (0+255),b
 26804                           
 26805                           ; BSR set to: 3
 26806                           ;mainstation.c: 29:     top.setSignalTime = 0;
 26807   015614  0E00               	movlw	0
 26808   015616  6F5E               	movwf	(_top+18)& (0+255),b
 26809   015618  0E00               	movlw	0
 26810   01561A  6F5F               	movwf	(_top+19)& (0+255),b
 26811   01561C  0E00               	movlw	0
 26812   01561E  6F60               	movwf	(_top+20)& (0+255),b
 26813   015620  0E00               	movlw	0
 26814   015622  6F61               	movwf	(_top+21)& (0+255),b
 26815                           
 26816                           ; BSR set to: 3
 26817                           ;mainstation.c: 31:     top.stnTrack1.stnName = STNTRACK1;
 26818   015624  0E51               	movlw	81
 26819   015626  6F62               	movwf	(_top+22)& (0+255),b
 26820                           
 26821                           ; BSR set to: 3
 26822                           ;mainstation.c: 32:     top.stnTrack1.trackNr = TRACK10;
 26823   015628  0EA2               	movlw	162
 26824   01562A  6F67               	movwf	(_top+27)& (0+255),b
 26825                           
 26826                           ; BSR set to: 3
 26827                           ;mainstation.c: 33:     top.stnTrack1.stnState = STN_IDLE;
 26828   01562C  0E78               	movlw	120
 26829   01562E  6F63               	movwf	(_top+23)& (0+255),b
 26830                           
 26831                           ; BSR set to: 3
 26832                           ;mainstation.c: 34:     top.stnTrack1.stnSequence = SEQ_IDLE;
 26833   015630  0E79               	movlw	121
 26834   015632  6F64               	movwf	(_top+24)& (0+255),b
 26835                           
 26836                           ; BSR set to: 3
 26837                           ;mainstation.c: 35:     top.stnTrack1.setOccStn = &OCC_TO_STN_10;
 26838   015634  0EE1               	movlw	low _OCC_TO_STN_10
 26839   015636  6F70               	movwf	(_top+36)& (0+255),b
 26840   015638  0E02               	movlw	high _OCC_TO_STN_10
 26841   01563A  6F71               	movwf	(_top+37)& (0+255),b
 26842                           
 26843                           ; BSR set to: 3
 26844                           ;mainstation.c: 36:     top.stnTrack1.getOccStn = &OCC_FR_STN_10;
 26845   01563C  0E7E               	movlw	low _OCC_FR_STN_10
 26846   01563E  6F72               	movwf	(_top+38)& (0+255),b
 26847   015640  0E04               	movlw	high _OCC_FR_STN_10
 26848   015642  6F73               	movwf	(_top+39)& (0+255),b
 26849                           
 26850                           ; BSR set to: 3
 26851                           ;mainstation.c: 38:     top.stnTrack2.stnName = STNTRACK2;
 26852   015644  0E52               	movlw	82
 26853   015646  6F74               	movwf	(_top+40)& (0+255),b
 26854                           
 26855                           ; BSR set to: 3
 26856                           ;mainstation.c: 39:     top.stnTrack2.trackNr = TRACK11;
 26857   015648  0EA3               	movlw	163
 26858   01564A  6F79               	movwf	(_top+45)& (0+255),b
 26859                           
 26860                           ; BSR set to: 3
 26861                           ;mainstation.c: 40:     top.stnTrack2.stnState = STN_IDLE;
 26862   01564C  0E78               	movlw	120
 26863   01564E  6F75               	movwf	(_top+41)& (0+255),b
 26864                           
 26865                           ; BSR set to: 3
 26866                           ;mainstation.c: 41:     top.stnTrack2.stnSequence = SEQ_IDLE;
 26867   015650  0E79               	movlw	121
 26868   015652  6F76               	movwf	(_top+42)& (0+255),b
 26869                           
 26870                           ; BSR set to: 3
 26871                           ;mainstation.c: 42:     top.stnTrack2.setOccStn = &OCC_TO_STN_11;
 26872   015654  0EDE               	movlw	low _OCC_TO_STN_11
 26873   015656  6F82               	movwf	(_top+54)& (0+255),b
 26874   015658  0E02               	movlw	high _OCC_TO_STN_11
 26875   01565A  6F83               	movwf	(_top+55)& (0+255),b
 26876                           
 26877                           ; BSR set to: 3
 26878                           ;mainstation.c: 43:     top.stnTrack2.getOccStn = &OCC_FR_STN_11;
 26879   01565C  0E70               	movlw	low _OCC_FR_STN_11
 26880   01565E  6F84               	movwf	(_top+56)& (0+255),b
 26881   015660  0E04               	movlw	high _OCC_FR_STN_11
 26882   015662  6F85               	movwf	(_top+57)& (0+255),b
 26883                           
 26884                           ; BSR set to: 3
 26885                           ;mainstation.c: 45:     top.stnTrack3.stnName = STNTRACK3;
 26886   015664  0E53               	movlw	83
 26887   015666  6F86               	movwf	(_top+58)& (0+255),b
 26888                           
 26889                           ; BSR set to: 3
 26890                           ;mainstation.c: 46:     top.stnTrack3.trackNr = TRACK12;
 26891   015668  0EA4               	movlw	164
 26892   01566A  6F8B               	movwf	(_top+63)& (0+255),b
 26893                           
 26894                           ; BSR set to: 3
 26895                           ;mainstation.c: 47:     top.stnTrack3.stnState = STN_IDLE;
 26896   01566C  0E78               	movlw	120
 26897   01566E  6F87               	movwf	(_top+59)& (0+255),b
 26898                           
 26899                           ; BSR set to: 3
 26900                           ;mainstation.c: 48:     top.stnTrack3.stnSequence = SEQ_IDLE;
 26901   015670  0E79               	movlw	121
 26902   015672  6F88               	movwf	(_top+60)& (0+255),b
 26903                           
 26904                           ; BSR set to: 3
 26905                           ;mainstation.c: 49:     top.stnTrack3.setOccStn = &OCC_TO_STN_12;
 26906   015674  0EDB               	movlw	low _OCC_TO_STN_12
 26907   015676  6F94               	movwf	(_top+72)& (0+255),b
 26908   015678  0E02               	movlw	high _OCC_TO_STN_12
 26909   01567A  6F95               	movwf	(_top+73)& (0+255),b
 26910                           
 26911                           ; BSR set to: 3
 26912                           ;mainstation.c: 50:     top.stnTrack3.getOccStn = &OCC_FR_STN_12;
 26913   01567C  0E62               	movlw	low _OCC_FR_STN_12
 26914   01567E  6F96               	movwf	(_top+74)& (0+255),b
 26915   015680  0E04               	movlw	high _OCC_FR_STN_12
 26916   015682  6F97               	movwf	(_top+75)& (0+255),b
 26917                           
 26918                           ; BSR set to: 3
 26919                           ;mainstation.c: 52:     bot.name = MAIN_STATION_BOT;
 26920   015684  0E14               	movlw	20
 26921   015686  6F00               	movwf	_bot& (0+255),b
 26922                           
 26923                           ; BSR set to: 3
 26924                           ;mainstation.c: 53:     bot.AppState = INIT;
 26925   015688  0E69               	movlw	105
 26926   01568A  6F01               	movwf	(_bot+1)& (0+255),b
 26927                           
 26928                           ; BSR set to: 3
 26929                           ;mainstation.c: 54:     bot.getFreightLeaveStation = &HALL_BLK_4A;
 26930   01568C  0E98               	movlw	low _HALL_BLK_4A
 26931   01568E  6F02               	movwf	(_bot+2)& (0+255),b
 26932   015690  0E03               	movlw	high _HALL_BLK_4A
 26933   015692  6F03               	movwf	(_bot+3)& (0+255),b
 26934                           
 26935                           ; BSR set to: 3
 26936                           ;mainstation.c: 55:     bot.getFreightEnterStation = &HALL_BLK_21A;
 26937   015694  0EEC               	movlw	low _HALL_BLK_21A
 26938   015696  6F04               	movwf	(_bot+4)& (0+255),b
 26939   015698  0E03               	movlw	high _HALL_BLK_21A
 26940   01569A  6F05               	movwf	(_bot+5)& (0+255),b
 26941                           
 26942                           ; BSR set to: 3
 26943                           ;mainstation.c: 56:     bot.setOccBlkIn = &OCC_TO_21B;
 26944   01569C  0EF0               	movlw	low _OCC_TO_21B
 26945   01569E  6F06               	movwf	(_bot+6)& (0+255),b
 26946   0156A0  0E02               	movlw	high _OCC_TO_21B
 26947   0156A2  6F07               	movwf	(_bot+7)& (0+255),b
 26948                           
 26949                           ; BSR set to: 3
 26950                           ;mainstation.c: 57:     bot.getOccBlkIn = &OCC_FR_21B;
 26951   0156A4  0E00               	movlw	low _OCC_FR_21B
 26952   0156A6  6F08               	movwf	(_bot+8)& (0+255),b
 26953   0156A8  0E04               	movlw	high _OCC_FR_21B
 26954   0156AA  6F09               	movwf	(_bot+9)& (0+255),b
 26955                           
 26956                           ; BSR set to: 3
 26957                           ;mainstation.c: 58:     bot.getOccBlkOut = &OCC_FR_BLK4;
 26958   0156AC  0EB6               	movlw	low _OCC_FR_BLK4
 26959   0156AE  6F0A               	movwf	(_bot+10)& (0+255),b
 26960   0156B0  0E04               	movlw	high _OCC_FR_BLK4
 26961   0156B2  6F0B               	movwf	(_bot+11)& (0+255),b
 26962                           
 26963                           ; BSR set to: 3
 26964                           ;mainstation.c: 59:     bot.setPath = &WS_BOT;
 26965   0156B4  0E68               	movlw	low _WS_BOT
 26966   0156B6  6F0C               	movwf	(_bot+12)& (0+255),b
 26967   0156B8  0E05               	movlw	high _WS_BOT
 26968   0156BA  6F0D               	movwf	(_bot+13)& (0+255),b
 26969                           
 26970                           ; BSR set to: 3
 26971                           ;mainstation.c: 60:     bot.prevPath = 0;
 26972   0156BC  0E00               	movlw	0
 26973   0156BE  6F0E               	movwf	(_bot+14)& (0+255),b
 26974                           
 26975                           ; BSR set to: 3
 26976                           ;mainstation.c: 61:     bot.newPath = 0;
 26977   0156C0  0E00               	movlw	0
 26978   0156C2  6F0F               	movwf	(_bot+15)& (0+255),b
 26979                           
 26980                           ; BSR set to: 3
 26981                           ;mainstation.c: 62:     bot.setSignal = &SIG_BOT;
 26982   0156C4  0E20               	movlw	low _SIG_BOT
 26983   0156C6  6F10               	movwf	(_bot+16)& (0+255),b
 26984   0156C8  0E05               	movlw	high _SIG_BOT
 26985   0156CA  6F11               	movwf	(_bot+17)& (0+255),b
 26986                           
 26987                           ; BSR set to: 3
 26988                           ;mainstation.c: 63:     bot.setSignalTime = 0;
 26989   0156CC  0E00               	movlw	0
 26990   0156CE  6F12               	movwf	(_bot+18)& (0+255),b
 26991   0156D0  0E00               	movlw	0
 26992   0156D2  6F13               	movwf	(_bot+19)& (0+255),b
 26993   0156D4  0E00               	movlw	0
 26994   0156D6  6F14               	movwf	(_bot+20)& (0+255),b
 26995   0156D8  0E00               	movlw	0
 26996   0156DA  6F15               	movwf	(_bot+21)& (0+255),b
 26997                           
 26998                           ; BSR set to: 3
 26999                           ;mainstation.c: 65:     bot.stnTrack1.stnName = STNTRACK1;
 27000   0156DC  0E51               	movlw	81
 27001   0156DE  6F16               	movwf	(_bot+22)& (0+255),b
 27002                           
 27003                           ; BSR set to: 3
 27004                           ;mainstation.c: 66:     bot.stnTrack1.trackNr = TRACK1;
 27005   0156E0  0E9F               	movlw	159
 27006   0156E2  6F1B               	movwf	(_bot+27)& (0+255),b
 27007                           
 27008                           ; BSR set to: 3
 27009                           ;mainstation.c: 67:     bot.stnTrack1.stnState = STN_IDLE;
 27010   0156E4  0E78               	movlw	120
 27011   0156E6  6F17               	movwf	(_bot+23)& (0+255),b
 27012                           
 27013                           ; BSR set to: 3
 27014                           ;mainstation.c: 68:     bot.stnTrack1.stnSequence = SEQ_IDLE;
 27015   0156E8  0E79               	movlw	121
 27016   0156EA  6F18               	movwf	(_bot+24)& (0+255),b
 27017                           
 27018                           ; BSR set to: 3
 27019                           ;mainstation.c: 69:     bot.stnTrack1.setOccStn = &OCC_TO_STN_1;
 27020   0156EC  0EEA               	movlw	low _OCC_TO_STN_1
 27021   0156EE  6F24               	movwf	(_bot+36)& (0+255),b
 27022   0156F0  0E02               	movlw	high _OCC_TO_STN_1
 27023   0156F2  6F25               	movwf	(_bot+37)& (0+255),b
 27024                           
 27025                           ; BSR set to: 3
 27026                           ;mainstation.c: 70:     bot.stnTrack1.getOccStn = &OCC_FR_STN_1;
 27027   0156F4  0EA8               	movlw	low _OCC_FR_STN_1
 27028   0156F6  6F26               	movwf	(_bot+38)& (0+255),b
 27029   0156F8  0E04               	movlw	high _OCC_FR_STN_1
 27030   0156FA  6F27               	movwf	(_bot+39)& (0+255),b
 27031                           
 27032                           ; BSR set to: 3
 27033                           ;mainstation.c: 72:     bot.stnTrack2.stnName = STNTRACK2;
 27034   0156FC  0E52               	movlw	82
 27035   0156FE  6F28               	movwf	(_bot+40)& (0+255),b
 27036                           
 27037                           ; BSR set to: 3
 27038                           ;mainstation.c: 73:     bot.stnTrack2.trackNr = TRACK2;
 27039   015700  0EA0               	movlw	160
 27040   015702  6F2D               	movwf	(_bot+45)& (0+255),b
 27041                           
 27042                           ; BSR set to: 3
 27043                           ;mainstation.c: 74:     bot.stnTrack2.stnState = STN_IDLE;
 27044   015704  0E78               	movlw	120
 27045   015706  6F29               	movwf	(_bot+41)& (0+255),b
 27046                           
 27047                           ; BSR set to: 3
 27048                           ;mainstation.c: 75:     bot.stnTrack2.stnSequence = SEQ_IDLE;
 27049   015708  0E79               	movlw	121
 27050   01570A  6F2A               	movwf	(_bot+42)& (0+255),b
 27051                           
 27052                           ; BSR set to: 3
 27053                           ;mainstation.c: 76:     bot.stnTrack2.setOccStn = &OCC_TO_STN_2;
 27054   01570C  0EE7               	movlw	low _OCC_TO_STN_2
 27055   01570E  6F36               	movwf	(_bot+54)& (0+255),b
 27056   015710  0E02               	movlw	high _OCC_TO_STN_2
 27057   015712  6F37               	movwf	(_bot+55)& (0+255),b
 27058                           
 27059                           ; BSR set to: 3
 27060                           ;mainstation.c: 77:     bot.stnTrack2.getOccStn = &OCC_FR_STN_2;
 27061   015714  0E9A               	movlw	low _OCC_FR_STN_2
 27062   015716  6F38               	movwf	(_bot+56)& (0+255),b
 27063   015718  0E04               	movlw	high _OCC_FR_STN_2
 27064   01571A  6F39               	movwf	(_bot+57)& (0+255),b
 27065                           
 27066                           ; BSR set to: 3
 27067                           ;mainstation.c: 79:     bot.stnTrack3.stnName = STNTRACK3;
 27068   01571C  0E53               	movlw	83
 27069   01571E  6F3A               	movwf	(_bot+58)& (0+255),b
 27070                           
 27071                           ; BSR set to: 3
 27072                           ;mainstation.c: 80:     bot.stnTrack3.trackNr = TRACK3;
 27073   015720  0EA1               	movlw	161
 27074   015722  6F3F               	movwf	(_bot+63)& (0+255),b
 27075                           
 27076                           ; BSR set to: 3
 27077                           ;mainstation.c: 81:     bot.stnTrack3.stnState = STN_IDLE;
 27078   015724  0E78               	movlw	120
 27079   015726  6F3B               	movwf	(_bot+59)& (0+255),b
 27080                           
 27081                           ; BSR set to: 3
 27082                           ;mainstation.c: 82:     bot.stnTrack3.stnSequence = SEQ_IDLE;
 27083   015728  0E79               	movlw	121
 27084   01572A  6F3C               	movwf	(_bot+60)& (0+255),b
 27085                           
 27086                           ; BSR set to: 3
 27087                           ;mainstation.c: 83:     bot.stnTrack3.setOccStn = &OCC_TO_STN_3;
 27088   01572C  0EE4               	movlw	low _OCC_TO_STN_3
 27089   01572E  6F48               	movwf	(_bot+72)& (0+255),b
 27090   015730  0E02               	movlw	high _OCC_TO_STN_3
 27091   015732  6F49               	movwf	(_bot+73)& (0+255),b
 27092                           
 27093                           ; BSR set to: 3
 27094                           ;mainstation.c: 84:     bot.stnTrack3.getOccStn = &OCC_FR_STN_3;
 27095   015734  0E8C               	movlw	low _OCC_FR_STN_3
 27096   015736  6F4A               	movwf	(_bot+74)& (0+255),b
 27097   015738  0E04               	movlw	high _OCC_FR_STN_3
 27098   01573A  6F4B               	movwf	(_bot+75)& (0+255),b
 27099                           
 27100                           ; BSR set to: 3
 27101   01573C  0012               	return		;funcret
 27102   01573E                     __end_of_INITxSTATION:
 27103                           	callstack 0
 27104                           
 27105 ;; *************** function _INITxPATHWAYxSTATION *****************
 27106 ;; Defined at:
 27107 ;;		line 15 in file "pathway.c"
 27108 ;; Parameters:    Size  Location     Type
 27109 ;;  reftop          2    4[COMRAM] PTR struct .
 27110 ;;		 -> top(76), 
 27111 ;;  refbot          2    6[COMRAM] PTR struct .
 27112 ;;		 -> bot(76), 
 27113 ;; Auto vars:     Size  Location     Type
 27114 ;;		None
 27115 ;; Return value:  Size  Location     Type
 27116 ;;                  1    wreg      void 
 27117 ;; Registers used:
 27118 ;;		wreg, status,2, status,0
 27119 ;; Tracked objects:
 27120 ;;		On entry : 3F/1
 27121 ;;		On exit  : 3F/1
 27122 ;;		Unchanged: 3F/0
 27123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27124 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27127 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27128 ;;Total ram usage:        4 bytes
 27129 ;; Hardware stack levels used: 1
 27130 ;; Hardware stack levels required when called: 4
 27131 ;; This function calls:
 27132 ;;		Nothing
 27133 ;; This function is called by:
 27134 ;;		_INITxSTATION
 27135 ;; This function uses a non-reentrant model
 27136 ;;
 27137                           
 27138                           	psect	text128
 27139   01827C                     __ptext128:
 27140                           	callstack 0
 27141   01827C                     _INITxPATHWAYxSTATION:
 27142                           	callstack 25
 27143                           
 27144                           ; BSR set to: 1
 27145                           ;pathway.c: 15: void INITxPATHWAYxSTATION(STATION *reftop, STATION *refbot);pathway.c: 1
      +                          5:                 *self->setPath->port2_ptr |= pin2;;pathway.c: 15:     CREATExTASKxSTA
      +                          TUSxMESSAGE(self->name,;pathway.c: 16: {;pathway.c: 16:             };pathway.c: 16:    
      +                                   SET_PATH_WAY,;pathway.c: 17:     refTOP = reftop;;pathway.c: 17:             el
      +                          se if(path == TRACK3 || path == TRACK11){;pathway.c: 17:             self->name,
 27146                           
 27147                           ; BSR set to: 3
 27148                           ;incstack = 0
 27149   01827C  C005  F161         	movff	INITxPATHWAYxSTATION@reftop,_refTOP
 27150   018280  C006  F162         	movff	INITxPATHWAYxSTATION@reftop+1,_refTOP+1
 27151                           
 27152                           ;pathway.c: 18:     refBOT = refbot;;pathway.c: 18:                 *self->setPath->port
      +                          2_ptr &= ~pin2;;pathway.c: 18:             path);
 27153   018284  C007  F15F         	movff	INITxPATHWAYxSTATION@refbot,_refBOT
 27154   018288  C008  F160         	movff	INITxPATHWAYxSTATION@refbot+1,_refBOT+1
 27155                           
 27156                           ; BSR set to: 1
 27157   01828C  0012               	return		;funcret
 27158   01828E                     __end_of_INITxPATHWAYxSTATION:
 27159                           	callstack 0
 27160                           
 27161 ;; *************** function _INITxRANDxNUMBER *****************
 27162 ;; Defined at:
 27163 ;;		line 7 in file "rand.c"
 27164 ;; Parameters:    Size  Location     Type
 27165 ;;		None
 27166 ;; Auto vars:     Size  Location     Type
 27167 ;;		None
 27168 ;; Return value:  Size  Location     Type
 27169 ;;                  1    wreg      void 
 27170 ;; Registers used:
 27171 ;;		wreg, status,2, status,0, cstack
 27172 ;; Tracked objects:
 27173 ;;		On entry : 3F/2
 27174 ;;		On exit  : 3F/1
 27175 ;;		Unchanged: 0/0
 27176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27181 ;;Total ram usage:        0 bytes
 27182 ;; Hardware stack levels used: 1
 27183 ;; Hardware stack levels required when called: 6
 27184 ;; This function calls:
 27185 ;;		_rand
 27186 ;; This function is called by:
 27187 ;;		_main
 27188 ;; This function uses a non-reentrant model
 27189 ;;
 27190                           
 27191                           	psect	text129
 27192   017E88                     __ptext129:
 27193                           	callstack 0
 27194   017E88                     _INITxRANDxNUMBER:
 27195                           	callstack 24
 27196                           
 27197                           ; BSR set to: 2
 27198                           ;rand.c: 8:     RandomNumber = rand();
 27199                           
 27200                           ; BSR set to: 1
 27201                           ;incstack = 0
 27202   017E88  EC25  F0BA         	call	_rand	;wreg free
 27203   017E8C  C011  F13F         	movff	?_rand,_RandomNumber
 27204   017E90  C012  F140         	movff	?_rand+1,_RandomNumber+1
 27205                           
 27206                           ;rand.c: 9:     RandomNumber = rand();
 27207   017E94  EC25  F0BA         	call	_rand	;wreg free
 27208   017E98  C011  F13F         	movff	?_rand,_RandomNumber
 27209   017E9C  C012  F140         	movff	?_rand+1,_RandomNumber+1
 27210                           
 27211                           ;rand.c: 10:     RandomNumber = rand();
 27212   017EA0  EC25  F0BA         	call	_rand	;wreg free
 27213   017EA4  C011  F13F         	movff	?_rand,_RandomNumber
 27214   017EA8  C012  F140         	movff	?_rand+1,_RandomNumber+1
 27215                           
 27216                           ;rand.c: 11:     RandomNumber = rand();
 27217   017EAC  EC25  F0BA         	call	_rand	;wreg free
 27218   017EB0  C011  F13F         	movff	?_rand,_RandomNumber
 27219   017EB4  C012  F140         	movff	?_rand+1,_RandomNumber+1
 27220                           
 27221                           ; BSR set to: 1
 27222   017EB8  0012               	return		;funcret
 27223   017EBA                     __end_of_INITxRANDxNUMBER:
 27224                           	callstack 0
 27225                           
 27226 ;; *************** function _rand *****************
 27227 ;; Defined at:
 27228 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\rand.c"
 27229 ;; Parameters:    Size  Location     Type
 27230 ;;		None
 27231 ;; Auto vars:     Size  Location     Type
 27232 ;;		None
 27233 ;; Return value:  Size  Location     Type
 27234 ;;                  2   16[COMRAM] int 
 27235 ;; Registers used:
 27236 ;;		wreg, status,2, status,0, cstack
 27237 ;; Tracked objects:
 27238 ;;		On entry : 0/1
 27239 ;;		On exit  : 3F/1
 27240 ;;		Unchanged: 0/0
 27241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27242 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27244 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27245 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27246 ;;Total ram usage:        6 bytes
 27247 ;; Hardware stack levels used: 1
 27248 ;; Hardware stack levels required when called: 5
 27249 ;; This function calls:
 27250 ;;		___lmul
 27251 ;; This function is called by:
 27252 ;;		_INITxRANDxNUMBER
 27253 ;;		_GETxRANDOMxNUMBER
 27254 ;; This function uses a non-reentrant model
 27255 ;;
 27256                           
 27257                           	psect	text130
 27258   01744A                     __ptext130:
 27259                           	callstack 0
 27260   01744A                     _rand:
 27261                           	callstack 23
 27262                           
 27263                           ; BSR set to: 1
 27264                           ;incstack = 0
 27265   01744A  C18A  F005         	movff	_seed,___lmul@multiplier
 27266   01744E  C18B  F006         	movff	_seed+1,___lmul@multiplier+1
 27267   017452  C18C  F007         	movff	_seed+2,___lmul@multiplier+2
 27268   017456  C18D  F008         	movff	_seed+3,___lmul@multiplier+3
 27269   01745A  0E2D               	movlw	45
 27270   01745C  6E09               	movwf	___lmul@multiplicand^0,c
 27271   01745E  0E7F               	movlw	127
 27272   017460  6E0A               	movwf	(___lmul@multiplicand+1)^0,c
 27273   017462  0E95               	movlw	149
 27274   017464  6E0B               	movwf	(___lmul@multiplicand+2)^0,c
 27275   017466  0E4C               	movlw	76
 27276   017468  6E0C               	movwf	(___lmul@multiplicand+3)^0,c
 27277   01746A  EC61  F0BC         	call	___lmul	;wreg free
 27278   01746E  0E01               	movlw	1
 27279   017470  2405               	addwf	?___lmul^0,w,c
 27280   017472  0101               	movlb	1	; () banked
 27281   017474  6F8A               	movwf	_seed& (0+255),b
 27282   017476  0E00               	movlw	0
 27283   017478  2006               	addwfc	(?___lmul+1)^0,w,c
 27284   01747A  6F8B               	movwf	(_seed+1)& (0+255),b
 27285   01747C  0E00               	movlw	0
 27286   01747E  2007               	addwfc	(?___lmul+2)^0,w,c
 27287   017480  6F8C               	movwf	(_seed+2)& (0+255),b
 27288   017482  0E00               	movlw	0
 27289   017484  2008               	addwfc	(?___lmul+3)^0,w,c
 27290   017486  6F8D               	movwf	(_seed+3)& (0+255),b
 27291                           
 27292                           ; BSR set to: 1
 27293   017488  C18A  F013         	movff	_seed,??_rand
 27294   01748C  C18B  F014         	movff	_seed+1,??_rand+1
 27295   017490  C18C  F015         	movff	_seed+2,??_rand+2
 27296   017494  C18D  F016         	movff	_seed+3,??_rand+3
 27297   017498  0E12               	movlw	18
 27298   01749A  D005               	goto	u12560
 27299   01749C                     u12565:
 27300   01749C  90D8               	bcf	status,0,c
 27301   01749E  3216               	rrcf	(??_rand+3)^0,f,c
 27302   0174A0  3215               	rrcf	(??_rand+2)^0,f,c
 27303   0174A2  3214               	rrcf	(??_rand+1)^0,f,c
 27304   0174A4  3213               	rrcf	??_rand^0,f,c
 27305   0174A6                     u12560:
 27306   0174A6  2EE8               	decfsz	wreg,f,c
 27307   0174A8  D7F9               	goto	u12565
 27308   0174AA  C013  F011         	movff	??_rand,?_rand
 27309   0174AE  C014  F012         	movff	??_rand+1,?_rand+1
 27310                           
 27311                           ; BSR set to: 1
 27312   0174B2  0012               	return		;funcret
 27313   0174B4                     __end_of_rand:
 27314                           	callstack 0
 27315                           
 27316 ;; *************** function ___lmul *****************
 27317 ;; Defined at:
 27318 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul32.c"
 27319 ;; Parameters:    Size  Location     Type
 27320 ;;  multiplier      4    4[COMRAM] unsigned long 
 27321 ;;  multiplicand    4    8[COMRAM] unsigned long 
 27322 ;; Auto vars:     Size  Location     Type
 27323 ;;  product         4   12[COMRAM] unsigned long 
 27324 ;; Return value:  Size  Location     Type
 27325 ;;                  4    4[COMRAM] unsigned long 
 27326 ;; Registers used:
 27327 ;;		wreg, status,2, status,0
 27328 ;; Tracked objects:
 27329 ;;		On entry : 0/1
 27330 ;;		On exit  : 0/0
 27331 ;;		Unchanged: 0/0
 27332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27333 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27334 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27336 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27337 ;;Total ram usage:       12 bytes
 27338 ;; Hardware stack levels used: 1
 27339 ;; Hardware stack levels required when called: 4
 27340 ;; This function calls:
 27341 ;;		Nothing
 27342 ;; This function is called by:
 27343 ;;		_rand
 27344 ;;		___secs_to_tm
 27345 ;; This function uses a non-reentrant model
 27346 ;;
 27347                           
 27348                           	psect	text131
 27349   0178C2                     __ptext131:
 27350                           	callstack 0
 27351   0178C2                     ___lmul:
 27352                           	callstack 23
 27353                           
 27354                           ; BSR set to: 1
 27355                           ;incstack = 0
 27356   0178C2  0E00               	movlw	0
 27357   0178C4  6E0D               	movwf	___lmul@product^0,c
 27358   0178C6  0E00               	movlw	0
 27359   0178C8  6E0E               	movwf	(___lmul@product+1)^0,c
 27360   0178CA  0E00               	movlw	0
 27361   0178CC  6E0F               	movwf	(___lmul@product+2)^0,c
 27362   0178CE  0E00               	movlw	0
 27363   0178D0  6E10               	movwf	(___lmul@product+3)^0,c
 27364   0178D2                     l14041:
 27365   0178D2  A005               	btfss	___lmul@multiplier^0,0,c
 27366   0178D4  D008               	goto	l14045
 27367   0178D6  5009               	movf	___lmul@multiplicand^0,w,c
 27368   0178D8  260D               	addwf	___lmul@product^0,f,c
 27369   0178DA  500A               	movf	(___lmul@multiplicand+1)^0,w,c
 27370   0178DC  220E               	addwfc	(___lmul@product+1)^0,f,c
 27371   0178DE  500B               	movf	(___lmul@multiplicand+2)^0,w,c
 27372   0178E0  220F               	addwfc	(___lmul@product+2)^0,f,c
 27373   0178E2  500C               	movf	(___lmul@multiplicand+3)^0,w,c
 27374   0178E4  2210               	addwfc	(___lmul@product+3)^0,f,c
 27375   0178E6                     l14045:
 27376   0178E6  90D8               	bcf	status,0,c
 27377   0178E8  3609               	rlcf	___lmul@multiplicand^0,f,c
 27378   0178EA  360A               	rlcf	(___lmul@multiplicand+1)^0,f,c
 27379   0178EC  360B               	rlcf	(___lmul@multiplicand+2)^0,f,c
 27380   0178EE  360C               	rlcf	(___lmul@multiplicand+3)^0,f,c
 27381   0178F0  90D8               	bcf	status,0,c
 27382   0178F2  3208               	rrcf	(___lmul@multiplier+3)^0,f,c
 27383   0178F4  3207               	rrcf	(___lmul@multiplier+2)^0,f,c
 27384   0178F6  3206               	rrcf	(___lmul@multiplier+1)^0,f,c
 27385   0178F8  3205               	rrcf	___lmul@multiplier^0,f,c
 27386   0178FA  5005               	movf	___lmul@multiplier^0,w,c
 27387   0178FC  1006               	iorwf	(___lmul@multiplier+1)^0,w,c
 27388   0178FE  1007               	iorwf	(___lmul@multiplier+2)^0,w,c
 27389   017900  1008               	iorwf	(___lmul@multiplier+3)^0,w,c
 27390   017902  A4D8               	btfss	status,2,c
 27391   017904  D7E6               	goto	l14041
 27392   017906  C00D  F005         	movff	___lmul@product,?___lmul
 27393   01790A  C00E  F006         	movff	___lmul@product+1,?___lmul+1
 27394   01790E  C00F  F007         	movff	___lmul@product+2,?___lmul+2
 27395   017912  C010  F008         	movff	___lmul@product+3,?___lmul+3
 27396   017916  0012               	return		;funcret
 27397   017918                     __end_of___lmul:
 27398                           	callstack 0
 27399                           
 27400 ;; *************** function _INITxMOUNTAINxSTATION *****************
 27401 ;; Defined at:
 27402 ;;		line 18 in file "mountaintrack.c"
 27403 ;; Parameters:    Size  Location     Type
 27404 ;;		None
 27405 ;; Auto vars:     Size  Location     Type
 27406 ;;		None
 27407 ;; Return value:  Size  Location     Type
 27408 ;;                  1    wreg      void 
 27409 ;; Registers used:
 27410 ;;		wreg, status,2, status,0, cstack
 27411 ;; Tracked objects:
 27412 ;;		On entry : 3F/3
 27413 ;;		On exit  : 3F/2
 27414 ;;		Unchanged: 0/0
 27415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27420 ;;Total ram usage:        0 bytes
 27421 ;; Hardware stack levels used: 1
 27422 ;; Hardware stack levels required when called: 5
 27423 ;; This function calls:
 27424 ;;		_INITxPATHWAYxMNTSTATION
 27425 ;; This function is called by:
 27426 ;;		_main
 27427 ;; This function uses a non-reentrant model
 27428 ;;
 27429                           
 27430                           	psect	text132
 27431   0165C0                     __ptext132:
 27432                           	callstack 0
 27433   0165C0                     _INITxMOUNTAINxSTATION:
 27434                           	callstack 25
 27435                           
 27436                           ; BSR set to: 3
 27437                           ;mountaintrack.c: 20:     INITxPATHWAYxMNTSTATION(&waldsee, &waldberg);
 27438                           
 27439                           ;incstack = 0
 27440   0165C0  0E5D               	movlw	low _waldsee
 27441   0165C2  6E05               	movwf	INITxPATHWAYxMNTSTATION@refwaldsee^0,c
 27442   0165C4  0E02               	movlw	high _waldsee
 27443   0165C6  6E06               	movwf	(INITxPATHWAYxMNTSTATION@refwaldsee+1)^0,c
 27444   0165C8  0E27               	movlw	low _waldberg
 27445   0165CA  6E07               	movwf	INITxPATHWAYxMNTSTATION@refwaldberg^0,c
 27446   0165CC  0E02               	movlw	high _waldberg
 27447   0165CE  6E08               	movwf	(INITxPATHWAYxMNTSTATION@refwaldberg+1)^0,c
 27448   0165D0  EC47  F0C1         	call	_INITxPATHWAYxMNTSTATION	;wreg free
 27449                           
 27450                           ; BSR set to: 3
 27451                           ;mountaintrack.c: 21:     setT4ToAmpT6 = &REL_T4;
 27452   0165D4  0ED2               	movlw	low _REL_T4
 27453   0165D6  0101               	movlb	1	; () banked
 27454   0165D8  6F59               	movwf	_setT4ToAmpT6& (0+255),b
 27455   0165DA  0E02               	movlw	high _REL_T4
 27456   0165DC  6F5A               	movwf	(_setT4ToAmpT6+1)& (0+255),b
 27457                           
 27458                           ; BSR set to: 1
 27459                           ;mountaintrack.c: 22:     setT5ToAmpT3 = &REL_T5;
 27460   0165DE  0ECF               	movlw	low _REL_T5
 27461   0165E0  6F57               	movwf	_setT5ToAmpT3& (0+255),b
 27462   0165E2  0E02               	movlw	high _REL_T5
 27463   0165E4  6F58               	movwf	(_setT5ToAmpT3+1)& (0+255),b
 27464                           
 27465                           ; BSR set to: 1
 27466                           ;mountaintrack.c: 25:     waldsee.name = WALDSEE;
 27467   0165E6  0E1E               	movlw	30
 27468   0165E8  0102               	movlb	2	; () banked
 27469   0165EA  6F5D               	movwf	_waldsee& (0+255),b
 27470                           
 27471                           ; BSR set to: 2
 27472                           ;mountaintrack.c: 26:     waldsee.AppState = INIT;
 27473   0165EC  0E69               	movlw	105
 27474   0165EE  6F5E               	movwf	(_waldsee+1)& (0+255),b
 27475                           
 27476                           ; BSR set to: 2
 27477                           ;mountaintrack.c: 27:     waldsee.LastState = STN_IDLE;
 27478   0165F0  0E78               	movlw	120
 27479   0165F2  6F61               	movwf	(_waldsee+4)& (0+255),b
 27480                           
 27481                           ; BSR set to: 2
 27482                           ;mountaintrack.c: 28:     waldsee.getTrainEnterSiebwaldeStn = &HALL_BLK_T4;
 27483   0165F4  0EDE               	movlw	low _HALL_BLK_T4
 27484   0165F6  6F63               	movwf	(_waldsee+6)& (0+255),b
 27485   0165F8  0E03               	movlw	high _HALL_BLK_T4
 27486   0165FA  6F64               	movwf	(_waldsee+7)& (0+255),b
 27487                           
 27488                           ; BSR set to: 2
 27489                           ;mountaintrack.c: 29:     waldsee.setOccAmpOut = &OCC_TO_T3;
 27490   0165FC  0ED5               	movlw	low _OCC_TO_T3
 27491   0165FE  6F65               	movwf	(_waldsee+8)& (0+255),b
 27492   016600  0E02               	movlw	high _OCC_TO_T3
 27493   016602  6F66               	movwf	(_waldsee+9)& (0+255),b
 27494                           
 27495                           ; BSR set to: 2
 27496                           ;mountaintrack.c: 30:     waldsee.getOccAmpOut = &OCC_FR_T3;
 27497   016604  0E46               	movlw	low _OCC_FR_T3
 27498   016606  6F67               	movwf	(_waldsee+10)& (0+255),b
 27499   016608  0E04               	movlw	high _OCC_FR_T3
 27500   01660A  6F68               	movwf	(_waldsee+11)& (0+255),b
 27501                           
 27502                           ; BSR set to: 2
 27503                           ;mountaintrack.c: 31:     waldsee.setPath = &WS_WALDSEE;
 27504   01660C  0E56               	movlw	low _WS_WALDSEE
 27505   01660E  6F69               	movwf	(_waldsee+12)& (0+255),b
 27506   016610  0E05               	movlw	high _WS_WALDSEE
 27507   016612  6F6A               	movwf	(_waldsee+13)& (0+255),b
 27508                           
 27509                           ; BSR set to: 2
 27510                           ;mountaintrack.c: 32:     waldsee.LastInboundStn = T1;
 27511   016614  0E97               	movlw	151
 27512   016616  6F60               	movwf	(_waldsee+3)& (0+255),b
 27513                           
 27514                           ; BSR set to: 2
 27515                           ;mountaintrack.c: 34:     waldsee.stnTrack1.stnName = MTNTRACK1;
 27516   016618  0E54               	movlw	84
 27517   01661A  6F6B               	movwf	(_waldsee+14)& (0+255),b
 27518                           
 27519                           ; BSR set to: 2
 27520                           ;mountaintrack.c: 35:     waldsee.stnTrack1.trackNr = T1;
 27521   01661C  0E97               	movlw	151
 27522   01661E  6F72               	movwf	(_waldsee+21)& (0+255),b
 27523                           
 27524                           ; BSR set to: 2
 27525                           ;mountaintrack.c: 36:     waldsee.stnTrack1.stnState = STN_IDLE;
 27526   016620  0E78               	movlw	120
 27527   016622  6F6C               	movwf	(_waldsee+15)& (0+255),b
 27528                           
 27529                           ; BSR set to: 2
 27530                           ;mountaintrack.c: 37:     waldsee.stnTrack1.stnSequence = SEQ_IDLE;
 27531   016624  0E79               	movlw	121
 27532   016626  6F6D               	movwf	(_waldsee+16)& (0+255),b
 27533                           
 27534                           ; BSR set to: 2
 27535                           ;mountaintrack.c: 38:     waldsee.stnTrack1.getTrainEnterStnTrack = &HALL_BLK_T1;
 27536   016628  0EC2               	movlw	low _HALL_BLK_T1
 27537   01662A  6F6F               	movwf	(_waldsee+18)& (0+255),b
 27538   01662C  0E03               	movlw	high _HALL_BLK_T1
 27539   01662E  6F70               	movwf	(_waldsee+19)& (0+255),b
 27540                           
 27541                           ; BSR set to: 2
 27542                           ;mountaintrack.c: 40:     waldsee.stnTrack2.stnName = MTNTRACK2;
 27543   016630  0E55               	movlw	85
 27544   016632  6F7B               	movwf	(_waldsee+30)& (0+255),b
 27545                           
 27546                           ; BSR set to: 2
 27547                           ;mountaintrack.c: 41:     waldsee.stnTrack2.trackNr = T2;
 27548   016634  0E98               	movlw	152
 27549   016636  6F82               	movwf	(_waldsee+37)& (0+255),b
 27550                           
 27551                           ; BSR set to: 2
 27552                           ;mountaintrack.c: 42:     waldsee.stnTrack2.stnState = STN_IDLE;
 27553   016638  0E78               	movlw	120
 27554   01663A  6F7C               	movwf	(_waldsee+31)& (0+255),b
 27555                           
 27556                           ; BSR set to: 2
 27557                           ;mountaintrack.c: 43:     waldsee.stnTrack2.stnSequence = SEQ_IDLE;
 27558   01663C  0E79               	movlw	121
 27559   01663E  6F7D               	movwf	(_waldsee+32)& (0+255),b
 27560                           
 27561                           ; BSR set to: 2
 27562                           ;mountaintrack.c: 44:     waldsee.stnTrack2.getTrainEnterStnTrack = &HALL_BLK_T2;
 27563   016640  0EB4               	movlw	low _HALL_BLK_T2
 27564   016642  6F7F               	movwf	(_waldsee+34)& (0+255),b
 27565   016644  0E03               	movlw	high _HALL_BLK_T2
 27566   016646  6F80               	movwf	(_waldsee+35)& (0+255),b
 27567                           
 27568                           ; BSR set to: 2
 27569                           ;mountaintrack.c: 46:     waldberg.name = WALDBERG;
 27570   016648  0E32               	movlw	50
 27571   01664A  6F27               	movwf	_waldberg& (0+255),b
 27572                           
 27573                           ; BSR set to: 2
 27574                           ;mountaintrack.c: 47:     waldberg.AppState = INIT;
 27575   01664C  0E69               	movlw	105
 27576   01664E  6F28               	movwf	(_waldberg+1)& (0+255),b
 27577                           
 27578                           ; BSR set to: 2
 27579                           ;mountaintrack.c: 48:     waldberg.LastState = STN_IDLE;
 27580   016650  0E78               	movlw	120
 27581   016652  6F2B               	movwf	(_waldberg+4)& (0+255),b
 27582                           
 27583                           ; BSR set to: 2
 27584                           ;mountaintrack.c: 49:     waldberg.getTrainEnterSiebwaldeStn = &HALL_BLK_T5;
 27585   016654  0ED0               	movlw	low _HALL_BLK_T5
 27586   016656  6F2D               	movwf	(_waldberg+6)& (0+255),b
 27587   016658  0E03               	movlw	high _HALL_BLK_T5
 27588   01665A  6F2E               	movwf	(_waldberg+7)& (0+255),b
 27589                           
 27590                           ; BSR set to: 2
 27591                           ;mountaintrack.c: 50:     waldberg.setOccAmpOut = &OCC_TO_T6;
 27592   01665C  0ED8               	movlw	low _OCC_TO_T6
 27593   01665E  6F2F               	movwf	(_waldberg+8)& (0+255),b
 27594   016660  0E02               	movlw	high _OCC_TO_T6
 27595   016662  6F30               	movwf	(_waldberg+9)& (0+255),b
 27596                           
 27597                           ; BSR set to: 2
 27598                           ;mountaintrack.c: 51:     waldberg.getOccAmpOut = &OCC_FR_T6;
 27599   016664  0E54               	movlw	low _OCC_FR_T6
 27600   016666  6F31               	movwf	(_waldberg+10)& (0+255),b
 27601   016668  0E04               	movlw	high _OCC_FR_T6
 27602   01666A  6F32               	movwf	(_waldberg+11)& (0+255),b
 27603                           
 27604                           ; BSR set to: 2
 27605                           ;mountaintrack.c: 52:     waldberg.setPath = &WS_WALDBERG;
 27606   01666C  0E44               	movlw	low _WS_WALDBERG
 27607   01666E  6F33               	movwf	(_waldberg+12)& (0+255),b
 27608   016670  0E05               	movlw	high _WS_WALDBERG
 27609   016672  6F34               	movwf	(_waldberg+13)& (0+255),b
 27610                           
 27611                           ; BSR set to: 2
 27612                           ;mountaintrack.c: 53:     waldberg.LastInboundStn = T8;
 27613   016674  0E9E               	movlw	158
 27614   016676  6F2A               	movwf	(_waldberg+3)& (0+255),b
 27615                           
 27616                           ; BSR set to: 2
 27617                           ;mountaintrack.c: 55:     waldberg.stnTrack1.stnName = MTNTRACK7;
 27618   016678  0E56               	movlw	86
 27619   01667A  6F35               	movwf	(_waldberg+14)& (0+255),b
 27620                           
 27621                           ; BSR set to: 2
 27622                           ;mountaintrack.c: 56:     waldberg.stnTrack1.trackNr = T7;
 27623   01667C  0E9D               	movlw	157
 27624   01667E  6F3C               	movwf	(_waldberg+21)& (0+255),b
 27625                           
 27626                           ; BSR set to: 2
 27627                           ;mountaintrack.c: 57:     waldberg.stnTrack1.stnState = STN_IDLE;
 27628   016680  0E78               	movlw	120
 27629   016682  6F36               	movwf	(_waldberg+15)& (0+255),b
 27630                           
 27631                           ; BSR set to: 2
 27632                           ;mountaintrack.c: 58:     waldberg.stnTrack1.stnSequence = SEQ_IDLE;
 27633   016684  0E79               	movlw	121
 27634   016686  6F37               	movwf	(_waldberg+16)& (0+255),b
 27635                           
 27636                           ; BSR set to: 2
 27637                           ;mountaintrack.c: 59:     waldberg.stnTrack1.getTrainEnterStnTrack= &HALL_BLK_T7;
 27638   016688  0EE0               	movlw	low _HALL_BLK_T7
 27639   01668A  6F39               	movwf	(_waldberg+18)& (0+255),b
 27640   01668C  0E04               	movlw	high _HALL_BLK_T7
 27641   01668E  6F3A               	movwf	(_waldberg+19)& (0+255),b
 27642                           
 27643                           ; BSR set to: 2
 27644                           ;mountaintrack.c: 61:     waldberg.stnTrack2.stnName = MTNTRACK8;
 27645   016690  0E57               	movlw	87
 27646   016692  6F45               	movwf	(_waldberg+30)& (0+255),b
 27647                           
 27648                           ; BSR set to: 2
 27649                           ;mountaintrack.c: 62:     waldberg.stnTrack2.trackNr = T8;
 27650   016694  0E9E               	movlw	158
 27651   016696  6F4C               	movwf	(_waldberg+37)& (0+255),b
 27652                           
 27653                           ; BSR set to: 2
 27654                           ;mountaintrack.c: 63:     waldberg.stnTrack2.stnState = STN_IDLE;
 27655   016698  0E78               	movlw	120
 27656   01669A  6F46               	movwf	(_waldberg+31)& (0+255),b
 27657                           
 27658                           ; BSR set to: 2
 27659                           ;mountaintrack.c: 64:     waldberg.stnTrack2.stnSequence = SEQ_IDLE;
 27660   01669C  0E79               	movlw	121
 27661   01669E  6F47               	movwf	(_waldberg+32)& (0+255),b
 27662                           
 27663                           ; BSR set to: 2
 27664                           ;mountaintrack.c: 65:     waldberg.stnTrack2.getTrainEnterStnTrack= &HALL_BLK_T8;
 27665   0166A0  0ED2               	movlw	low _HALL_BLK_T8
 27666   0166A2  6F49               	movwf	(_waldberg+34)& (0+255),b
 27667   0166A4  0E04               	movlw	high _HALL_BLK_T8
 27668   0166A6  6F4A               	movwf	(_waldberg+35)& (0+255),b
 27669                           
 27670                           ; BSR set to: 2
 27671   0166A8  0012               	return		;funcret
 27672   0166AA                     __end_of_INITxMOUNTAINxSTATION:
 27673                           	callstack 0
 27674                           
 27675 ;; *************** function _INITxPATHWAYxMNTSTATION *****************
 27676 ;; Defined at:
 27677 ;;		line 21 in file "pathway.c"
 27678 ;; Parameters:    Size  Location     Type
 27679 ;;  refwaldsee      2    4[COMRAM] PTR struct .
 27680 ;;		 -> waldsee(54), 
 27681 ;;  refwaldberg     2    6[COMRAM] PTR struct .
 27682 ;;		 -> waldberg(54), 
 27683 ;; Auto vars:     Size  Location     Type
 27684 ;;		None
 27685 ;; Return value:  Size  Location     Type
 27686 ;;                  1    wreg      void 
 27687 ;; Registers used:
 27688 ;;		wreg, status,2, status,0
 27689 ;; Tracked objects:
 27690 ;;		On entry : 3F/3
 27691 ;;		On exit  : 3F/3
 27692 ;;		Unchanged: 3E/0
 27693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27694 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27697 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27698 ;;Total ram usage:        4 bytes
 27699 ;; Hardware stack levels used: 1
 27700 ;; Hardware stack levels required when called: 4
 27701 ;; This function calls:
 27702 ;;		Nothing
 27703 ;; This function is called by:
 27704 ;;		_INITxMOUNTAINxSTATION
 27705 ;; This function uses a non-reentrant model
 27706 ;;
 27707                           
 27708                           	psect	text133
 27709   01828E                     __ptext133:
 27710                           	callstack 0
 27711   01828E                     _INITxPATHWAYxMNTSTATION:
 27712                           	callstack 25
 27713                           
 27714                           ; BSR set to: 3
 27715                           ;pathway.c: 21: void INITxPATHWAYxMNTSTATION(MNTSTATION *refwaldsee, MNTSTATION *refwald
      +                          berg);pathway.c: 21: ;pathway.c: 22: {;pathway.c: 22:         case STN_OUTBOUND:;pathway
      +                          .c: 23:     refWALDSEE = refwaldsee;;pathway.c: 23:             if(path == TRACK1 || pat
      +                          h == TRACK11){
 27716                           
 27717                           ; BSR set to: 2
 27718                           ;incstack = 0
 27719   01828E  C005  F15D         	movff	INITxPATHWAYxMNTSTATION@refwaldsee,_refWALDSEE
 27720   018292  C006  F15E         	movff	INITxPATHWAYxMNTSTATION@refwaldsee+1,_refWALDSEE+1
 27721                           
 27722                           ;pathway.c: 24:     refWALDBERG = refwaldberg;;pathway.c: 24:                 *self->set
      +                          Path->port3_ptr |= pin3;
 27723   018296  C007  F15B         	movff	INITxPATHWAYxMNTSTATION@refwaldberg,_refWALDBERG
 27724   01829A  C008  F15C         	movff	INITxPATHWAYxMNTSTATION@refwaldberg+1,_refWALDBERG+1
 27725                           
 27726                           ; BSR set to: 3
 27727   01829E  0012               	return		;funcret
 27728   0182A0                     __end_of_INITxPATHWAYxMNTSTATION:
 27729                           	callstack 0
 27730                           
 27731 ;; *************** function _DebounceIO *****************
 27732 ;; Defined at:
 27733 ;;		line 328 in file "main.c"
 27734 ;; Parameters:    Size  Location     Type
 27735 ;;  trackio         1    wreg     _Bool 
 27736 ;; Auto vars:     Size  Location     Type
 27737 ;;  trackio         1   25[COMRAM] _Bool 
 27738 ;;  millis          4   26[COMRAM] unsigned long 
 27739 ;; Return value:  Size  Location     Type
 27740 ;;                  1    wreg      void 
 27741 ;; Registers used:
 27742 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 27743 ;; Tracked objects:
 27744 ;;		On entry : 3F/1
 27745 ;;		On exit  : 0/0
 27746 ;;		Unchanged: 0/0
 27747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27749 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27751 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27752 ;;Total ram usage:        5 bytes
 27753 ;; Hardware stack levels used: 1
 27754 ;; Hardware stack levels required when called: 5
 27755 ;; This function calls:
 27756 ;;		_DEBOUNCExIO
 27757 ;;		_GETxMILLIS
 27758 ;; This function is called by:
 27759 ;;		_main
 27760 ;; This function uses a non-reentrant model
 27761 ;;
 27762                           
 27763                           	psect	text134
 27764   0150B8                     __ptext134:
 27765                           	callstack 0
 27766   0150B8                     _DebounceIO:
 27767                           	callstack 25
 27768                           
 27769                           ; BSR set to: 3
 27770                           ;incstack = 0
 27771                           ;DebounceIO@trackio stored from wreg
 27772   0150B8  6E1A               	movwf	DebounceIO@trackio^0,c
 27773                           
 27774                           ;main.c: 328: void DebounceIO(_Bool trackio);main.c: 329: {;main.c: 334:     uint32_t mi
      +                          llis = GETxMILLIS();
 27775   0150BA  EC50  F0C1         	call	_GETxMILLIS	;wreg free
 27776   0150BE  C005  F01B         	movff	?_GETxMILLIS,DebounceIO@millis
 27777   0150C2  C006  F01C         	movff	?_GETxMILLIS+1,DebounceIO@millis+1
 27778   0150C6  C007  F01D         	movff	?_GETxMILLIS+2,DebounceIO@millis+2
 27779   0150CA  C008  F01E         	movff	?_GETxMILLIS+3,DebounceIO@millis+3
 27780                           
 27781                           ;main.c: 335:     DEBOUNCExIO(&VOLTDETECT, &millis);
 27782   0150CE  0EAD               	movlw	low _VOLTDETECT
 27783   0150D0  6E05               	movwf	DEBOUNCExIO@instance^0,c
 27784   0150D2  0E02               	movlw	high _VOLTDETECT
 27785   0150D4  6E06               	movwf	(DEBOUNCExIO@instance+1)^0,c
 27786   0150D6  0E1B               	movlw	low DebounceIO@millis
 27787   0150D8  6E07               	movwf	DEBOUNCExIO@millisPtr^0,c
 27788   0150DA  EC75  F0A7         	call	_DEBOUNCExIO	;wreg free
 27789                           
 27790                           ;main.c: 340:     if(trackio){
 27791   0150DE  501A               	movf	DebounceIO@trackio^0,w,c
 27792   0150E0  B4D8               	btfsc	status,2,c
 27793   0150E2  0012               	return	
 27794                           
 27795                           ;main.c: 342:         DEBOUNCExIO(&HALL_BLK_13 , &millis);
 27796   0150E4  0EBB               	movlw	low _HALL_BLK_13
 27797   0150E6  6E05               	movwf	DEBOUNCExIO@instance^0,c
 27798   0150E8  0E02               	movlw	high _HALL_BLK_13
 27799   0150EA  6E06               	movwf	(DEBOUNCExIO@instance+1)^0,c
 27800   0150EC  0E1B               	movlw	low DebounceIO@millis
 27801   0150EE  6E07               	movwf	DEBOUNCExIO@millisPtr^0,c
 27802   0150F0  EC75  F0A7         	call	_DEBOUNCExIO	;wreg free
 27803                           
 27804                           ;main.c: 343:         DEBOUNCExIO(&HALL_BLK_21A , &millis);
 27805   0150F4  0EEC               	movlw	low _HALL_BLK_21A
 27806   0150F6  6E05               	movwf	DEBOUNCExIO@instance^0,c
 27807   0150F8  0E03               	movlw	high _HALL_BLK_21A
 27808   0150FA  6E06               	movwf	(DEBOUNCExIO@instance+1)^0,c
 27809   0150FC  0E1B               	movlw	low DebounceIO@millis
 27810   0150FE  6E07               	movwf	DEBOUNCExIO@millisPtr^0,c
 27811   015100  EC75  F0A7         	call	_DEBOUNCExIO	;wreg free
 27812                           
 27813                           ;main.c: 344:         DEBOUNCExIO(&HALL_BLK_T4 , &millis);
 27814   015104  0EDE               	movlw	low _HALL_BLK_T4
 27815   015106  6E05               	movwf	DEBOUNCExIO@instance^0,c
 27816   015108  0E03               	movlw	high _HALL_BLK_T4
 27817   01510A  6E06               	movwf	(DEBOUNCExIO@instance+1)^0,c
 27818   01510C  0E1B               	movlw	low DebounceIO@millis
 27819   01510E  6E07               	movwf	DEBOUNCExIO@millisPtr^0,c
 27820   015110  EC75  F0A7         	call	_DEBOUNCExIO	;wreg free
 27821                           
 27822                           ;main.c: 345:         DEBOUNCExIO(&HALL_BLK_T5 , &millis);
 27823   015114  0ED0               	movlw	low _HALL_BLK_T5
 27824   015116  6E05               	movwf	DEBOUNCExIO@instance^0,c
 27825   015118  0E03               	movlw	high _HALL_BLK_T5
 27826   01511A  6E06               	movwf	(DEBOUNCExIO@instance+1)^0,c
 27827   01511C  0E1B               	movlw	low DebounceIO@millis
 27828   01511E  6E07               	movwf	DEBOUNCExIO@millisPtr^0,c
 27829   015120  EC75  F0A7         	call	_DEBOUNCExIO	;wreg free
 27830                           
 27831                           ;main.c: 346:         DEBOUNCExIO(&HALL_BLK_T1 , &millis);
 27832   015124  0EC2               	movlw	low _HALL_BLK_T1
 27833   015126  6E05               	movwf	DEBOUNCExIO@instance^0,c
 27834   015128  0E03               	movlw	high _HALL_BLK_T1
 27835   01512A  6E06               	movwf	(DEBOUNCExIO@instance+1)^0,c
 27836   01512C  0E1B               	movlw	low DebounceIO@millis
 27837   01512E  6E07               	movwf	DEBOUNCExIO@millisPtr^0,c
 27838   015130  EC75  F0A7         	call	_DEBOUNCExIO	;wreg free
 27839                           
 27840                           ;main.c: 347:         DEBOUNCExIO(&HALL_BLK_T2 , &millis);
 27841   015134  0EB4               	movlw	low _HALL_BLK_T2
 27842   015136  6E05               	movwf	DEBOUNCExIO@instance^0,c
 27843   015138  0E03               	movlw	high _HALL_BLK_T2
 27844   01513A  6E06               	movwf	(DEBOUNCExIO@instance+1)^0,c
 27845   01513C  0E1B               	movlw	low DebounceIO@millis
 27846   01513E  6E07               	movwf	DEBOUNCExIO@millisPtr^0,c
 27847   015140  EC75  F0A7         	call	_DEBOUNCExIO	;wreg free
 27848                           
 27849                           ;main.c: 348:         DEBOUNCExIO(&HALL_BLK_9B , &millis);
 27850   015144  0EA6               	movlw	low _HALL_BLK_9B
 27851   015146  6E05               	movwf	DEBOUNCExIO@instance^0,c
 27852   015148  0E03               	movlw	high _HALL_BLK_9B
 27853   01514A  6E06               	movwf	(DEBOUNCExIO@instance+1)^0,c
 27854   01514C  0E1B               	movlw	low DebounceIO@millis
 27855   01514E  6E07               	movwf	DEBOUNCExIO@millisPtr^0,c
 27856   015150  EC75  F0A7         	call	_DEBOUNCExIO	;wreg free
 27857                           
 27858                           ;main.c: 349:         DEBOUNCExIO(&HALL_BLK_4A , &millis);
 27859   015154  0E98               	movlw	low _HALL_BLK_4A
 27860   015156  6E05               	movwf	DEBOUNCExIO@instance^0,c
 27861   015158  0E03               	movlw	high _HALL_BLK_4A
 27862   01515A  6E06               	movwf	(DEBOUNCExIO@instance+1)^0,c
 27863   01515C  0E1B               	movlw	low DebounceIO@millis
 27864   01515E  6E07               	movwf	DEBOUNCExIO@millisPtr^0,c
 27865   015160  EC75  F0A7         	call	_DEBOUNCExIO	;wreg free
 27866                           
 27867                           ;main.c: 350:         DEBOUNCExIO(&HALL_BLK_T7 , &millis);
 27868   015164  0EE0               	movlw	low _HALL_BLK_T7
 27869   015166  6E05               	movwf	DEBOUNCExIO@instance^0,c
 27870   015168  0E04               	movlw	high _HALL_BLK_T7
 27871   01516A  6E06               	movwf	(DEBOUNCExIO@instance+1)^0,c
 27872   01516C  0E1B               	movlw	low DebounceIO@millis
 27873   01516E  6E07               	movwf	DEBOUNCExIO@millisPtr^0,c
 27874   015170  EC75  F0A7         	call	_DEBOUNCExIO	;wreg free
 27875                           
 27876                           ;main.c: 351:         DEBOUNCExIO(&HALL_BLK_T8 , &millis);
 27877   015174  0ED2               	movlw	low _HALL_BLK_T8
 27878   015176  6E05               	movwf	DEBOUNCExIO@instance^0,c
 27879   015178  0E04               	movlw	high _HALL_BLK_T8
 27880   01517A  6E06               	movwf	(DEBOUNCExIO@instance+1)^0,c
 27881   01517C  0E1B               	movlw	low DebounceIO@millis
 27882   01517E  6E07               	movwf	DEBOUNCExIO@millisPtr^0,c
 27883   015180  EC75  F0A7         	call	_DEBOUNCExIO	;wreg free
 27884                           
 27885                           ;main.c: 352:         DEBOUNCExIO(&OCC_FR_BLK13 , &millis);
 27886   015184  0EC4               	movlw	low _OCC_FR_BLK13
 27887   015186  6E05               	movwf	DEBOUNCExIO@instance^0,c
 27888   015188  0E04               	movlw	high _OCC_FR_BLK13
 27889   01518A  6E06               	movwf	(DEBOUNCExIO@instance+1)^0,c
 27890   01518C  0E1B               	movlw	low DebounceIO@millis
 27891   01518E  6E07               	movwf	DEBOUNCExIO@millisPtr^0,c
 27892   015190  EC75  F0A7         	call	_DEBOUNCExIO	;wreg free
 27893                           
 27894                           ;main.c: 353:         DEBOUNCExIO(&OCC_FR_BLK4 , &millis);
 27895   015194  0EB6               	movlw	low _OCC_FR_BLK4
 27896   015196  6E05               	movwf	DEBOUNCExIO@instance^0,c
 27897   015198  0E04               	movlw	high _OCC_FR_BLK4
 27898   01519A  6E06               	movwf	(DEBOUNCExIO@instance+1)^0,c
 27899   01519C  0E1B               	movlw	low DebounceIO@millis
 27900   01519E  6E07               	movwf	DEBOUNCExIO@millisPtr^0,c
 27901   0151A0  EC75  F0A7         	call	_DEBOUNCExIO	;wreg free
 27902                           
 27903                           ;main.c: 354:         DEBOUNCExIO(&OCC_FR_STN_1 , &millis);
 27904   0151A4  0EA8               	movlw	low _OCC_FR_STN_1
 27905   0151A6  6E05               	movwf	DEBOUNCExIO@instance^0,c
 27906   0151A8  0E04               	movlw	high _OCC_FR_STN_1
 27907   0151AA  6E06               	movwf	(DEBOUNCExIO@instance+1)^0,c
 27908   0151AC  0E1B               	movlw	low DebounceIO@millis
 27909   0151AE  6E07               	movwf	DEBOUNCExIO@millisPtr^0,c
 27910   0151B0  EC75  F0A7         	call	_DEBOUNCExIO	;wreg free
 27911                           
 27912                           ;main.c: 355:         DEBOUNCExIO(&OCC_FR_STN_2 , &millis);
 27913   0151B4  0E9A               	movlw	low _OCC_FR_STN_2
 27914   0151B6  6E05               	movwf	DEBOUNCExIO@instance^0,c
 27915   0151B8  0E04               	movlw	high _OCC_FR_STN_2
 27916   0151BA  6E06               	movwf	(DEBOUNCExIO@instance+1)^0,c
 27917   0151BC  0E1B               	movlw	low DebounceIO@millis
 27918   0151BE  6E07               	movwf	DEBOUNCExIO@millisPtr^0,c
 27919   0151C0  EC75  F0A7         	call	_DEBOUNCExIO	;wreg free
 27920                           
 27921                           ;main.c: 356:         DEBOUNCExIO(&OCC_FR_STN_3 , &millis);
 27922   0151C4  0E8C               	movlw	low _OCC_FR_STN_3
 27923   0151C6  6E05               	movwf	DEBOUNCExIO@instance^0,c
 27924   0151C8  0E04               	movlw	high _OCC_FR_STN_3
 27925   0151CA  6E06               	movwf	(DEBOUNCExIO@instance+1)^0,c
 27926   0151CC  0E1B               	movlw	low DebounceIO@millis
 27927   0151CE  6E07               	movwf	DEBOUNCExIO@millisPtr^0,c
 27928   0151D0  EC75  F0A7         	call	_DEBOUNCExIO	;wreg free
 27929                           
 27930                           ;main.c: 357:         DEBOUNCExIO(&OCC_FR_STN_10, &millis);
 27931   0151D4  0E7E               	movlw	low _OCC_FR_STN_10
 27932   0151D6  6E05               	movwf	DEBOUNCExIO@instance^0,c
 27933   0151D8  0E04               	movlw	high _OCC_FR_STN_10
 27934   0151DA  6E06               	movwf	(DEBOUNCExIO@instance+1)^0,c
 27935   0151DC  0E1B               	movlw	low DebounceIO@millis
 27936   0151DE  6E07               	movwf	DEBOUNCExIO@millisPtr^0,c
 27937   0151E0  EC75  F0A7         	call	_DEBOUNCExIO	;wreg free
 27938                           
 27939                           ;main.c: 358:         DEBOUNCExIO(&OCC_FR_STN_11, &millis);
 27940   0151E4  0E70               	movlw	low _OCC_FR_STN_11
 27941   0151E6  6E05               	movwf	DEBOUNCExIO@instance^0,c
 27942   0151E8  0E04               	movlw	high _OCC_FR_STN_11
 27943   0151EA  6E06               	movwf	(DEBOUNCExIO@instance+1)^0,c
 27944   0151EC  0E1B               	movlw	low DebounceIO@millis
 27945   0151EE  6E07               	movwf	DEBOUNCExIO@millisPtr^0,c
 27946   0151F0  EC75  F0A7         	call	_DEBOUNCExIO	;wreg free
 27947                           
 27948                           ;main.c: 359:         DEBOUNCExIO(&OCC_FR_STN_12, &millis);
 27949   0151F4  0E62               	movlw	low _OCC_FR_STN_12
 27950   0151F6  6E05               	movwf	DEBOUNCExIO@instance^0,c
 27951   0151F8  0E04               	movlw	high _OCC_FR_STN_12
 27952   0151FA  6E06               	movwf	(DEBOUNCExIO@instance+1)^0,c
 27953   0151FC  0E1B               	movlw	low DebounceIO@millis
 27954   0151FE  6E07               	movwf	DEBOUNCExIO@millisPtr^0,c
 27955   015200  EC75  F0A7         	call	_DEBOUNCExIO	;wreg free
 27956                           
 27957                           ;main.c: 360:         DEBOUNCExIO(&OCC_FR_T6 , &millis);
 27958   015204  0E54               	movlw	low _OCC_FR_T6
 27959   015206  6E05               	movwf	DEBOUNCExIO@instance^0,c
 27960   015208  0E04               	movlw	high _OCC_FR_T6
 27961   01520A  6E06               	movwf	(DEBOUNCExIO@instance+1)^0,c
 27962   01520C  0E1B               	movlw	low DebounceIO@millis
 27963   01520E  6E07               	movwf	DEBOUNCExIO@millisPtr^0,c
 27964   015210  EC75  F0A7         	call	_DEBOUNCExIO	;wreg free
 27965                           
 27966                           ;main.c: 361:         DEBOUNCExIO(&OCC_FR_T3 , &millis);
 27967   015214  0E46               	movlw	low _OCC_FR_T3
 27968   015216  6E05               	movwf	DEBOUNCExIO@instance^0,c
 27969   015218  0E04               	movlw	high _OCC_FR_T3
 27970   01521A  6E06               	movwf	(DEBOUNCExIO@instance+1)^0,c
 27971   01521C  0E1B               	movlw	low DebounceIO@millis
 27972   01521E  6E07               	movwf	DEBOUNCExIO@millisPtr^0,c
 27973   015220  EC75  F0A7         	call	_DEBOUNCExIO	;wreg free
 27974                           
 27975                           ;main.c: 362:         DEBOUNCExIO(&CTRL_OFF , &millis);
 27976   015224  0E38               	movlw	low _CTRL_OFF
 27977   015226  6E05               	movwf	DEBOUNCExIO@instance^0,c
 27978   015228  0E04               	movlw	high _CTRL_OFF
 27979   01522A  6E06               	movwf	(DEBOUNCExIO@instance+1)^0,c
 27980   01522C  0E1B               	movlw	low DebounceIO@millis
 27981   01522E  6E07               	movwf	DEBOUNCExIO@millisPtr^0,c
 27982   015230  EC75  F0A7         	call	_DEBOUNCExIO	;wreg free
 27983                           
 27984                           ;main.c: 363:         DEBOUNCExIO(&OCC_FR_9B , &millis);
 27985   015234  0E0E               	movlw	low _OCC_FR_9B
 27986   015236  6E05               	movwf	DEBOUNCExIO@instance^0,c
 27987   015238  0E04               	movlw	high _OCC_FR_9B
 27988   01523A  6E06               	movwf	(DEBOUNCExIO@instance+1)^0,c
 27989   01523C  0E1B               	movlw	low DebounceIO@millis
 27990   01523E  6E07               	movwf	DEBOUNCExIO@millisPtr^0,c
 27991   015240  EC75  F0A7         	call	_DEBOUNCExIO	;wreg free
 27992                           
 27993                           ;main.c: 364:         DEBOUNCExIO(&OCC_FR_21B , &millis);
 27994   015244  0E00               	movlw	low _OCC_FR_21B
 27995   015246  6E05               	movwf	DEBOUNCExIO@instance^0,c
 27996   015248  0E04               	movlw	high _OCC_FR_21B
 27997   01524A  6E06               	movwf	(DEBOUNCExIO@instance+1)^0,c
 27998   01524C  0E1B               	movlw	low DebounceIO@millis
 27999   01524E  6E07               	movwf	DEBOUNCExIO@millisPtr^0,c
 28000   015250  EC75  F0A7         	call	_DEBOUNCExIO	;wreg free
 28001                           
 28002                           ;main.c: 365:         DEBOUNCExIO(&OCC_FR_22B , &millis);
 28003   015254  0E1C               	movlw	low _OCC_FR_22B
 28004   015256  6E05               	movwf	DEBOUNCExIO@instance^0,c
 28005   015258  0E04               	movlw	high _OCC_FR_22B
 28006   01525A  6E06               	movwf	(DEBOUNCExIO@instance+1)^0,c
 28007   01525C  0E1B               	movlw	low DebounceIO@millis
 28008   01525E  6E07               	movwf	DEBOUNCExIO@millisPtr^0,c
 28009   015260  EC75  F0A7         	call	_DEBOUNCExIO	;wreg free
 28010                           
 28011                           ;main.c: 366:         DEBOUNCExIO(&OCC_FR_23B , &millis);
 28012   015264  0E2A               	movlw	low _OCC_FR_23B
 28013   015266  6E05               	movwf	DEBOUNCExIO@instance^0,c
 28014   015268  0E04               	movlw	high _OCC_FR_23B
 28015   01526A  6E06               	movwf	(DEBOUNCExIO@instance+1)^0,c
 28016   01526C  0E1B               	movlw	low DebounceIO@millis
 28017   01526E  6E07               	movwf	DEBOUNCExIO@millisPtr^0,c
 28018   015270  EC75  F0A7         	call	_DEBOUNCExIO	;wreg free
 28019   015274  0012               	return		;funcret
 28020   015276                     __end_of_DebounceIO:
 28021                           	callstack 0
 28022                           
 28023 ;; *************** function _GETxMILLIS *****************
 28024 ;; Defined at:
 28025 ;;		line 62 in file "milisecond_counter.c"
 28026 ;; Parameters:    Size  Location     Type
 28027 ;;		None
 28028 ;; Auto vars:     Size  Location     Type
 28029 ;;		None
 28030 ;; Return value:  Size  Location     Type
 28031 ;;                  4    4[COMRAM] unsigned long 
 28032 ;; Registers used:
 28033 ;;		None
 28034 ;; Tracked objects:
 28035 ;;		On entry : 0/2
 28036 ;;		On exit  : 0/0
 28037 ;;		Unchanged: 0/0
 28038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28039 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28042 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28043 ;;Total ram usage:        4 bytes
 28044 ;; Hardware stack levels used: 1
 28045 ;; Hardware stack levels required when called: 4
 28046 ;; This function calls:
 28047 ;;		Nothing
 28048 ;; This function is called by:
 28049 ;;		_UPDATExSTATIONxTRAINxWAIT
 28050 ;;		_MAINxSTATIONxPASSING
 28051 ;;		_MAINxSTATIONxINBOUND
 28052 ;;		_MAINxSTATIONxOUTBOUND
 28053 ;;		_UPDATExMOUNTAINxSTATION
 28054 ;;		_UPDATExMOUNTAINxTRAINxWAIT
 28055 ;;		_MOUNTAINxSTATIONxINBOUND
 28056 ;;		_MOUNTAINxSTATIONxOUTBOUND
 28057 ;;		_main
 28058 ;;		_DebounceIO
 28059 ;; This function uses a non-reentrant model
 28060 ;;
 28061                           
 28062                           	psect	text135
 28063   0182A0                     __ptext135:
 28064                           	callstack 0
 28065   0182A0                     _GETxMILLIS:
 28066                           	callstack 25
 28067                           
 28068                           ;milisecond_counter.c: 64:     return milliseconds_counter;
 28069                           
 28070                           ;incstack = 0
 28071   0182A0  C1F4  F005         	movff	_milliseconds_counter,?_GETxMILLIS	;volatile
 28072   0182A4  C1F5  F006         	movff	_milliseconds_counter+1,?_GETxMILLIS+1	;volatile
 28073   0182A8  C1F6  F007         	movff	_milliseconds_counter+2,?_GETxMILLIS+2	;volatile
 28074   0182AC  C1F7  F008         	movff	_milliseconds_counter+3,?_GETxMILLIS+3	;volatile
 28075   0182B0  0012               	return		;funcret
 28076   0182B2                     __end_of_GETxMILLIS:
 28077                           	callstack 0
 28078                           
 28079 ;; *************** function _DEBOUNCExIO *****************
 28080 ;; Defined at:
 28081 ;;		line 12 in file "debounce.c"
 28082 ;; Parameters:    Size  Location     Type
 28083 ;;  instance        2    4[COMRAM] PTR struct .
 28084 ;;		 -> VOLTDETECT(14), OCC_FR_21B(14), OCC_FR_9B(14), OCC_FR_22B(14), 
 28085 ;;		 -> OCC_FR_23B(14), CTRL_OFF(14), OCC_FR_T3(14), OCC_FR_T6(14), 
 28086 ;;		 -> OCC_FR_STN_12(14), OCC_FR_STN_11(14), OCC_FR_STN_10(14), OCC_FR_STN_3(14), 
 28087 ;;		 -> OCC_FR_STN_2(14), OCC_FR_STN_1(14), OCC_FR_BLK4(14), OCC_FR_BLK13(14), 
 28088 ;;		 -> HALL_BLK_T8(14), HALL_BLK_T7(14), HALL_BLK_4A(14), HALL_BLK_9B(14), 
 28089 ;;		 -> HALL_BLK_T2(14), HALL_BLK_T1(14), HALL_BLK_T5(14), HALL_BLK_T4(14), 
 28090 ;;		 -> HALL_BLK_21A(14), HALL_BLK_13(14), 
 28091 ;;  millisPtr       1    6[COMRAM] PTR unsigned long 
 28092 ;;		 -> DebounceIO@millis(4), 
 28093 ;; Auto vars:     Size  Location     Type
 28094 ;;		None
 28095 ;; Return value:  Size  Location     Type
 28096 ;;                  1    wreg      void 
 28097 ;; Registers used:
 28098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 28099 ;; Tracked objects:
 28100 ;;		On entry : 0/1
 28101 ;;		On exit  : 0/0
 28102 ;;		Unchanged: 0/0
 28103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28104 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28106 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28107 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28108 ;;Total ram usage:       21 bytes
 28109 ;; Hardware stack levels used: 1
 28110 ;; Hardware stack levels required when called: 4
 28111 ;; This function calls:
 28112 ;;		Nothing
 28113 ;; This function is called by:
 28114 ;;		_DebounceIO
 28115 ;; This function uses a non-reentrant model
 28116 ;;
 28117                           
 28118                           	psect	text136
 28119   014EEA                     __ptext136:
 28120                           	callstack 0
 28121   014EEA                     _DEBOUNCExIO:
 28122                           	callstack 25
 28123                           
 28124                           ;debounce.c: 12: void DEBOUNCExIO(DEBOUNCE *instance, uint32_t *millisPtr);debounce.c: 1
      +                          3: {;debounce.c: 15:     instance->buttonState = (_Bool)(*instance->portx_ptr & instance
      +                          ->pin_mask);
 28125                           
 28126                           ;incstack = 0
 28127   014EEA  EE20 F007          	lfsr	2,7
 28128   014EEE  5005               	movf	DEBOUNCExIO@instance^0,w,c
 28129   014EF0  26D9               	addwf	fsr2l,f,c
 28130   014EF2  5006               	movf	(DEBOUNCExIO@instance+1)^0,w,c
 28131   014EF4  22DA               	addwfc	fsr2h,f,c
 28132   014EF6  EE10 F00A          	lfsr	1,10
 28133   014EFA  5005               	movf	DEBOUNCExIO@instance^0,w,c
 28134   014EFC  26E1               	addwf	fsr1l,f,c
 28135   014EFE  5006               	movf	(DEBOUNCExIO@instance+1)^0,w,c
 28136   014F00  22E2               	addwfc	fsr1h,f,c
 28137   014F02  50E7               	movf	indf1,w,c
 28138   014F04  6E08               	movwf	??_DEBOUNCExIO^0,c
 28139   014F06  EE10 F008          	lfsr	1,8
 28140   014F0A  5005               	movf	DEBOUNCExIO@instance^0,w,c
 28141   014F0C  26E1               	addwf	fsr1l,f,c
 28142   014F0E  5006               	movf	(DEBOUNCExIO@instance+1)^0,w,c
 28143   014F10  22E2               	addwfc	fsr1h,f,c
 28144   014F12  CFE6 F009          	movff	postinc1,??_DEBOUNCExIO+1
 28145   014F16  CFE5 F00A          	movff	postdec1,??_DEBOUNCExIO+2
 28146   014F1A  C009  FFE1         	movff	??_DEBOUNCExIO+1,fsr1l
 28147   014F1E  C00A  FFE2         	movff	??_DEBOUNCExIO+2,fsr1h
 28148   014F22  50E7               	movf	indf1,w,c
 28149   014F24  1408               	andwf	??_DEBOUNCExIO^0,w,c
 28150   014F26  0900               	iorlw	0
 28151   014F28  B4D8               	btfsc	status,2,c
 28152   014F2A  D002               	goto	u13760
 28153   014F2C  0E01               	movlw	1
 28154   014F2E  D001               	goto	u13770
 28155   014F30                     u13760:
 28156   014F30  0E00               	movlw	0
 28157   014F32                     u13770:
 28158   014F32  6EDF               	movwf	indf2,c
 28159                           
 28160                           ;debounce.c: 18:     if (instance->buttonState != instance->lastButtonState){
 28161   014F34  EE20 F006          	lfsr	2,6
 28162   014F38  5005               	movf	DEBOUNCExIO@instance^0,w,c
 28163   014F3A  26D9               	addwf	fsr2l,f,c
 28164   014F3C  5006               	movf	(DEBOUNCExIO@instance+1)^0,w,c
 28165   014F3E  22DA               	addwfc	fsr2h,f,c
 28166   014F40  EE10 F007          	lfsr	1,7
 28167   014F44  5005               	movf	DEBOUNCExIO@instance^0,w,c
 28168   014F46  26E1               	addwf	fsr1l,f,c
 28169   014F48  5006               	movf	(DEBOUNCExIO@instance+1)^0,w,c
 28170   014F4A  22E2               	addwfc	fsr1h,f,c
 28171   014F4C  50DE               	movf	postinc2,w,c
 28172   014F4E  18E6               	xorwf	postinc1,w,c
 28173   014F50  B4D8               	btfsc	status,2,c
 28174   014F52  D0A7               	goto	l15435
 28175                           
 28176                           ;debounce.c: 20:         if(instance->lastDebounceTime == 0){
 28177   014F54  EE20 F002          	lfsr	2,2
 28178   014F58  5005               	movf	DEBOUNCExIO@instance^0,w,c
 28179   014F5A  26D9               	addwf	fsr2l,f,c
 28180   014F5C  5006               	movf	(DEBOUNCExIO@instance+1)^0,w,c
 28181   014F5E  22DA               	addwfc	fsr2h,f,c
 28182   014F60  50DE               	movf	postinc2,w,c
 28183   014F62  10DE               	iorwf	postinc2,w,c
 28184   014F64  10DE               	iorwf	postinc2,w,c
 28185   014F66  10DE               	iorwf	postinc2,w,c
 28186   014F68  A4D8               	btfss	status,2,c
 28187   014F6A  D012               	goto	l15419
 28188                           
 28189                           ;debounce.c: 22:             instance->lastDebounceTime = *millisPtr;
 28190   014F6C  5007               	movf	DEBOUNCExIO@millisPtr^0,w,c
 28191   014F6E  6ED9               	movwf	fsr2l,c
 28192   014F70  6ADA               	clrf	fsr2h,c
 28193   014F72  EE10 F002          	lfsr	1,2
 28194   014F76  5005               	movf	DEBOUNCExIO@instance^0,w,c
 28195   014F78  26E1               	addwf	fsr1l,f,c
 28196   014F7A  5006               	movf	(DEBOUNCExIO@instance+1)^0,w,c
 28197   014F7C  22E2               	addwfc	fsr1h,f,c
 28198   014F7E  CFDE FFE6          	movff	postinc2,postinc1
 28199   014F82  CFDE FFE6          	movff	postinc2,postinc1
 28200   014F86  CFDE FFE6          	movff	postinc2,postinc1
 28201   014F8A  CFDE FFE6          	movff	postinc2,postinc1
 28202                           
 28203                           ;debounce.c: 23:         }
 28204   014F8E  0012               	return	
 28205   014F90                     l15419:
 28206   014F90  EE20 F002          	lfsr	2,2
 28207   014F94  5005               	movf	DEBOUNCExIO@instance^0,w,c
 28208   014F96  26D9               	addwf	fsr2l,f,c
 28209   014F98  5006               	movf	(DEBOUNCExIO@instance+1)^0,w,c
 28210   014F9A  22DA               	addwfc	fsr2h,f,c
 28211   014F9C  CFDE F008          	movff	postinc2,??_DEBOUNCExIO
 28212   014FA0  CFDE F009          	movff	postinc2,??_DEBOUNCExIO+1
 28213   014FA4  CFDE F00A          	movff	postinc2,??_DEBOUNCExIO+2
 28214   014FA8  CFDE F00B          	movff	postinc2,??_DEBOUNCExIO+3
 28215   014FAC  5007               	movf	DEBOUNCExIO@millisPtr^0,w,c
 28216   014FAE  6ED9               	movwf	fsr2l,c
 28217   014FB0  6ADA               	clrf	fsr2h,c
 28218   014FB2  CFDE F00C          	movff	postinc2,??_DEBOUNCExIO+4
 28219   014FB6  CFDE F00D          	movff	postinc2,??_DEBOUNCExIO+5
 28220   014FBA  CFDE F00E          	movff	postinc2,??_DEBOUNCExIO+6
 28221   014FBE  CFDE F00F          	movff	postinc2,??_DEBOUNCExIO+7
 28222   014FC2  5008               	movf	??_DEBOUNCExIO^0,w,c
 28223   014FC4  5C0C               	subwf	(??_DEBOUNCExIO+4)^0,w,c
 28224   014FC6  6E10               	movwf	(??_DEBOUNCExIO+8)^0,c
 28225   014FC8  5009               	movf	(??_DEBOUNCExIO+1)^0,w,c
 28226   014FCA  580D               	subwfb	(??_DEBOUNCExIO+5)^0,w,c
 28227   014FCC  6E11               	movwf	(??_DEBOUNCExIO+9)^0,c
 28228   014FCE  500A               	movf	(??_DEBOUNCExIO+2)^0,w,c
 28229   014FD0  580E               	subwfb	(??_DEBOUNCExIO+6)^0,w,c
 28230   014FD2  6E12               	movwf	(??_DEBOUNCExIO+10)^0,c
 28231   014FD4  500B               	movf	(??_DEBOUNCExIO+3)^0,w,c
 28232   014FD6  580F               	subwfb	(??_DEBOUNCExIO+7)^0,w,c
 28233   014FD8  6E13               	movwf	(??_DEBOUNCExIO+11)^0,c
 28234   014FDA  C005  FFD9         	movff	DEBOUNCExIO@instance,fsr2l
 28235   014FDE  C006  FFDA         	movff	DEBOUNCExIO@instance+1,fsr2h
 28236   014FE2  CFDE F014          	movff	postinc2,??_DEBOUNCExIO+12
 28237   014FE6  CFDD F015          	movff	postdec2,??_DEBOUNCExIO+13
 28238   014FEA  5014               	movf	(??_DEBOUNCExIO+12)^0,w,c
 28239   014FEC  6E16               	movwf	(??_DEBOUNCExIO+14)^0,c
 28240   014FEE  5015               	movf	(??_DEBOUNCExIO+13)^0,w,c
 28241   014FF0  6E17               	movwf	(??_DEBOUNCExIO+15)^0,c
 28242   014FF2  6A18               	clrf	(??_DEBOUNCExIO+16)^0,c
 28243   014FF4  6A19               	clrf	(??_DEBOUNCExIO+17)^0,c
 28244   014FF6  5010               	movf	(??_DEBOUNCExIO+8)^0,w,c
 28245   014FF8  5C16               	subwf	(??_DEBOUNCExIO+14)^0,w,c
 28246   014FFA  5011               	movf	(??_DEBOUNCExIO+9)^0,w,c
 28247   014FFC  5817               	subwfb	(??_DEBOUNCExIO+15)^0,w,c
 28248   014FFE  5012               	movf	(??_DEBOUNCExIO+10)^0,w,c
 28249   015000  5818               	subwfb	(??_DEBOUNCExIO+16)^0,w,c
 28250   015002  5013               	movf	(??_DEBOUNCExIO+11)^0,w,c
 28251   015004  5819               	subwfb	(??_DEBOUNCExIO+17)^0,w,c
 28252   015006  B0D8               	btfsc	status,0,c
 28253   015008  0012               	return	
 28254                           
 28255                           ;debounce.c: 27:                 instance->lastButtonState = instance->buttonState;
 28256   01500A  EE20 F007          	lfsr	2,7
 28257   01500E  5005               	movf	DEBOUNCExIO@instance^0,w,c
 28258   015010  26D9               	addwf	fsr2l,f,c
 28259   015012  5006               	movf	(DEBOUNCExIO@instance+1)^0,w,c
 28260   015014  22DA               	addwfc	fsr2h,f,c
 28261   015016  EE10 F006          	lfsr	1,6
 28262   01501A  5005               	movf	DEBOUNCExIO@instance^0,w,c
 28263   01501C  26E1               	addwf	fsr1l,f,c
 28264   01501E  5006               	movf	(DEBOUNCExIO@instance+1)^0,w,c
 28265   015020  22E2               	addwfc	fsr1h,f,c
 28266   015022  CFDF FFE7          	movff	indf2,indf1
 28267                           
 28268                           ;debounce.c: 30:                 instance->lastDebounceTime = 0;
 28269   015026  EE20 F002          	lfsr	2,2
 28270   01502A  5005               	movf	DEBOUNCExIO@instance^0,w,c
 28271   01502C  26D9               	addwf	fsr2l,f,c
 28272   01502E  5006               	movf	(DEBOUNCExIO@instance+1)^0,w,c
 28273   015030  22DA               	addwfc	fsr2h,f,c
 28274   015032  6ADE               	clrf	postinc2,c
 28275   015034  6ADE               	clrf	postinc2,c
 28276   015036  6ADE               	clrf	postinc2,c
 28277   015038  6ADD               	clrf	postdec2,c
 28278                           
 28279                           ;debounce.c: 33:                 if (instance->buttonState == 1 && instance->ResetL2H) {
 28280   01503A  EE20 F007          	lfsr	2,7
 28281   01503E  5005               	movf	DEBOUNCExIO@instance^0,w,c
 28282   015040  26D9               	addwf	fsr2l,f,c
 28283   015042  5006               	movf	(DEBOUNCExIO@instance+1)^0,w,c
 28284   015044  22DA               	addwfc	fsr2h,f,c
 28285   015046  04DE               	decf	postinc2,w,c
 28286   015048  A4D8               	btfss	status,2,c
 28287   01504A  D011               	goto	l3454
 28288   01504C  EE20 F00D          	lfsr	2,13
 28289   015050  5005               	movf	DEBOUNCExIO@instance^0,w,c
 28290   015052  26D9               	addwf	fsr2l,f,c
 28291   015054  5006               	movf	(DEBOUNCExIO@instance+1)^0,w,c
 28292   015056  22DA               	addwfc	fsr2h,f,c
 28293   015058  50DF               	movf	indf2,w,c
 28294   01505A  B4D8               	btfsc	status,2,c
 28295   01505C  D008               	goto	l3454
 28296                           
 28297                           ;debounce.c: 35:                     instance->value = 1;
 28298   01505E  EE20 F00B          	lfsr	2,11
 28299   015062  5005               	movf	DEBOUNCExIO@instance^0,w,c
 28300   015064  26D9               	addwf	fsr2l,f,c
 28301   015066  5006               	movf	(DEBOUNCExIO@instance+1)^0,w,c
 28302   015068  22DA               	addwfc	fsr2h,f,c
 28303   01506A  0E01               	movlw	1
 28304   01506C  6EDF               	movwf	indf2,c
 28305   01506E                     l3454:
 28306                           
 28307                           ;debounce.c: 37:                 if (instance->buttonState == 0 && instance->ResetH2L) {
 28308   01506E  EE20 F007          	lfsr	2,7
 28309   015072  5005               	movf	DEBOUNCExIO@instance^0,w,c
 28310   015074  26D9               	addwf	fsr2l,f,c
 28311   015076  5006               	movf	(DEBOUNCExIO@instance+1)^0,w,c
 28312   015078  22DA               	addwfc	fsr2h,f,c
 28313   01507A  50DF               	movf	indf2,w,c
 28314   01507C  A4D8               	btfss	status,2,c
 28315   01507E  0012               	return	
 28316   015080  EE20 F00C          	lfsr	2,12
 28317   015084  5005               	movf	DEBOUNCExIO@instance^0,w,c
 28318   015086  26D9               	addwf	fsr2l,f,c
 28319   015088  5006               	movf	(DEBOUNCExIO@instance+1)^0,w,c
 28320   01508A  22DA               	addwfc	fsr2h,f,c
 28321   01508C  50DF               	movf	indf2,w,c
 28322   01508E  B4D8               	btfsc	status,2,c
 28323   015090  0012               	return	
 28324                           
 28325                           ;debounce.c: 39:                   instance->value = 0;
 28326   015092  EE20 F00B          	lfsr	2,11
 28327   015096  5005               	movf	DEBOUNCExIO@instance^0,w,c
 28328   015098  26D9               	addwf	fsr2l,f,c
 28329   01509A  5006               	movf	(DEBOUNCExIO@instance+1)^0,w,c
 28330   01509C  22DA               	addwfc	fsr2h,f,c
 28331   01509E  6ADF               	clrf	indf2,c
 28332                           
 28333                           ;debounce.c: 42:     }
 28334   0150A0  0012               	return	
 28335   0150A2                     l15435:
 28336                           
 28337                           ;debounce.c: 47:         instance->lastDebounceTime = 0;
 28338   0150A2  EE20 F002          	lfsr	2,2
 28339   0150A6  5005               	movf	DEBOUNCExIO@instance^0,w,c
 28340   0150A8  26D9               	addwf	fsr2l,f,c
 28341   0150AA  5006               	movf	(DEBOUNCExIO@instance+1)^0,w,c
 28342   0150AC  22DA               	addwfc	fsr2h,f,c
 28343   0150AE  6ADE               	clrf	postinc2,c
 28344   0150B0  6ADE               	clrf	postinc2,c
 28345   0150B2  6ADE               	clrf	postinc2,c
 28346   0150B4  6ADD               	clrf	postdec2,c
 28347   0150B6  0012               	return		;funcret
 28348   0150B8                     __end_of_DEBOUNCExIO:
 28349                           	callstack 0
 28350                           
 28351 ;; *************** function _INTERRUPT_InterruptManager *****************
 28352 ;; Defined at:
 28353 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 28354 ;; Parameters:    Size  Location     Type
 28355 ;;		None
 28356 ;; Auto vars:     Size  Location     Type
 28357 ;;		None
 28358 ;; Return value:  Size  Location     Type
 28359 ;;                  1    wreg      void 
 28360 ;; Registers used:
 28361 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 28362 ;; Tracked objects:
 28363 ;;		On entry : 0/0
 28364 ;;		On exit  : 0/0
 28365 ;;		Unchanged: 0/0
 28366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28369 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28370 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28371 ;;Total ram usage:        2 bytes
 28372 ;; Hardware stack levels used: 1
 28373 ;; Hardware stack levels required when called: 3
 28374 ;; This function calls:
 28375 ;;		_TMR0_ISR
 28376 ;;		_TMR1_ISR
 28377 ;; This function is called by:
 28378 ;;		Interrupt level 2
 28379 ;; This function uses a non-reentrant model
 28380 ;;
 28381                           
 28382                           	psect	intcode
 28383   000008                     __pintcode:
 28384                           	callstack 0
 28385   000008                     _INTERRUPT_InterruptManager:
 28386                           	callstack 15
 28387                           
 28388                           ;incstack = 0
 28389   000008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 28390   00000A  CFFA F003          	movff	pclath,??_INTERRUPT_InterruptManager
 28391   00000E  CFFB F004          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 28392                           
 28393                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
 28394   000012  BAF2               	btfsc	242,5,c	;volatile
 28395   000014  A4F2               	btfss	242,2,c	;volatile
 28396   000016  D003               	goto	i2l2961
 28397                           
 28398                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
 28399   000018  ECBD  F0BF         	call	_TMR0_ISR	;wreg free
 28400                           
 28401                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 28402   00001C  D006               	goto	i2l2966
 28403   00001E                     i2l2961:
 28404   00001E  BCF2               	btfsc	242,6,c	;volatile
 28405                           
 28406                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 28407   000020  A09D               	btfss	157,0,c	;volatile
 28408   000022  D003               	goto	i2l2966
 28409   000024  B09E               	btfsc	158,0,c	;volatile
 28410                           
 28411                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             TMR1_ISR();
 28412   000026  EC5D  F0BF         	call	_TMR1_ISR	;wreg free
 28413   00002A                     i2l2966:
 28414   00002A  C004  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 28415   00002E  C003  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 28416   000032  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 28417   000034  0011               	retfie		f
 28418   000036                     __end_of_INTERRUPT_InterruptManager:
 28419                           	callstack 0
 28420                           
 28421 ;; *************** function _TMR1_ISR *****************
 28422 ;; Defined at:
 28423 ;;		line 145 in file "mcc_generated_files/tmr1.c"
 28424 ;; Parameters:    Size  Location     Type
 28425 ;;		None
 28426 ;; Auto vars:     Size  Location     Type
 28427 ;;		None
 28428 ;; Return value:  Size  Location     Type
 28429 ;;                  1    wreg      void 
 28430 ;; Registers used:
 28431 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 28432 ;; Tracked objects:
 28433 ;;		On entry : 0/0
 28434 ;;		On exit  : 0/0
 28435 ;;		Unchanged: 0/0
 28436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28441 ;;Total ram usage:        0 bytes
 28442 ;; Hardware stack levels used: 1
 28443 ;; Hardware stack levels required when called: 2
 28444 ;; This function calls:
 28445 ;;		NULL
 28446 ;;		_MILLISECOND_HANDLER
 28447 ;;		_TMR1_DefaultInterruptHandler
 28448 ;;		_TMR1_WriteTimer
 28449 ;; This function is called by:
 28450 ;;		_INTERRUPT_InterruptManager
 28451 ;; This function uses a non-reentrant model
 28452 ;;
 28453                           
 28454                           	psect	text138
 28455   017EBA                     __ptext138:
 28456                           	callstack 0
 28457   017EBA                     _TMR1_ISR:
 28458                           	callstack 15
 28459                           
 28460                           ;mcc_generated_files/tmr1.c: 149:     PIR1bits.TMR1IF = 0;
 28461                           
 28462                           ;incstack = 0
 28463   017EBA  909E               	bcf	158,0,c	;volatile
 28464                           
 28465                           ;mcc_generated_files/tmr1.c: 150:     TMR1_WriteTimer(timer1ReloadVal);
 28466   017EBC  C141  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
 28467   017EC0  C142  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
 28468   017EC4  ECE8  F0C0         	call	_TMR1_WriteTimer	;wreg free
 28469                           
 28470                           ;mcc_generated_files/tmr1.c: 152:     if(TMR1_InterruptHandler)
 28471   017EC8  0102               	movlb	2	; () banked
 28472   017ECA  51F3               	movf	_TMR1_InterruptHandler& (0+255),w,b
 28473   017ECC  11F4               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 28474   017ECE  11F5               	iorwf	(_TMR1_InterruptHandler+2)& (0+255),w,b
 28475   017ED0  B4D8               	btfsc	status,2,c
 28476   017ED2  0012               	return	
 28477                           
 28478                           ; BSR set to: 2
 28479                           ;mcc_generated_files/tmr1.c: 153:     {;mcc_generated_files/tmr1.c: 154:         TMR1_In
      +                          terruptHandler();
 28480   017ED4  D801               	call	i2u980_48
 28481   017ED6  0012               	return	
 28482   017ED8                     i2u980_48:
 28483   017ED8  0005               	push	
 28484   017EDA  6EFA               	movwf	pclath,c
 28485   017EDC  51F3               	movf	_TMR1_InterruptHandler& (0+255),w,b
 28486   017EDE  6EFD               	movwf	tosl,c
 28487   017EE0  51F4               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 28488   017EE2  6EFE               	movwf	tosh,c
 28489   017EE4  51F5               	movf	(_TMR1_InterruptHandler+2)& (0+255),w,b
 28490   017EE6  6EFF               	movwf	tosu,c
 28491   017EE8  50FA               	movf	pclath,w,c
 28492   017EEA  0012               	return		;indir
 28493   017EEC                     __end_of_TMR1_ISR:
 28494                           	callstack 0
 28495                           
 28496 ;; *************** function _TMR1_WriteTimer *****************
 28497 ;; Defined at:
 28498 ;;		line 118 in file "mcc_generated_files/tmr1.c"
 28499 ;; Parameters:    Size  Location     Type
 28500 ;;  timerVal        2    0[COMRAM] unsigned short 
 28501 ;; Auto vars:     Size  Location     Type
 28502 ;;		None
 28503 ;; Return value:  Size  Location     Type
 28504 ;;                  1    wreg      void 
 28505 ;; Registers used:
 28506 ;;		None
 28507 ;; Tracked objects:
 28508 ;;		On entry : 0/0
 28509 ;;		On exit  : 0/0
 28510 ;;		Unchanged: 0/0
 28511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28512 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28515 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28516 ;;Total ram usage:        2 bytes
 28517 ;; Hardware stack levels used: 1
 28518 ;; This function calls:
 28519 ;;		Nothing
 28520 ;; This function is called by:
 28521 ;;		_TMR1_ISR
 28522 ;; This function uses a non-reentrant model
 28523 ;;
 28524                           
 28525                           	psect	text139
 28526   0181D0                     __ptext139:
 28527                           	callstack 0
 28528   0181D0                     _TMR1_WriteTimer:
 28529                           	callstack 16
 28530                           
 28531                           ;mcc_generated_files/tmr1.c: 118: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 119: {;mcc_generated_files/tmr1.c: 120:     if (T1CONbits.nT1SYNC == 1)
 28532                           
 28533                           ;incstack = 0
 28534   0181D0  A4CD               	btfss	205,2,c	;volatile
 28535   0181D2  D007               	goto	i2l3004
 28536                           
 28537                           ;mcc_generated_files/tmr1.c: 121:     {;mcc_generated_files/tmr1.c: 123:         T1CONbi
      +                          ts.TMR1ON = 0;
 28538   0181D4  90CD               	bcf	205,0,c	;volatile
 28539                           
 28540                           ;mcc_generated_files/tmr1.c: 126:         TMR1H = (uint8_t)(timerVal >> 8);
 28541   0181D6  C002  FFCF         	movff	TMR1_WriteTimer@timerVal+1,4047	;volatile
 28542                           
 28543                           ;mcc_generated_files/tmr1.c: 127:         TMR1L = (uint8_t)timerVal;
 28544   0181DA  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 28545                           
 28546                           ;mcc_generated_files/tmr1.c: 130:         T1CONbits.TMR1ON =1;
 28547   0181DE  80CD               	bsf	205,0,c	;volatile
 28548                           
 28549                           ;mcc_generated_files/tmr1.c: 131:     }
 28550   0181E0  0012               	return	
 28551   0181E2                     i2l3004:
 28552                           
 28553                           ;mcc_generated_files/tmr1.c: 133:     {;mcc_generated_files/tmr1.c: 135:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 28554   0181E2  C002  FFCF         	movff	TMR1_WriteTimer@timerVal+1,4047	;volatile
 28555                           
 28556                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = (uint8_t)timerVal;
 28557   0181E6  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 28558   0181EA  0012               	return		;funcret
 28559   0181EC                     __end_of_TMR1_WriteTimer:
 28560                           	callstack 0
 28561                           
 28562 ;; *************** function _MILLISECOND_HANDLER *****************
 28563 ;; Defined at:
 28564 ;;		line 41 in file "milisecond_counter.c"
 28565 ;; Parameters:    Size  Location     Type
 28566 ;;		None
 28567 ;; Auto vars:     Size  Location     Type
 28568 ;;		None
 28569 ;; Return value:  Size  Location     Type
 28570 ;;                  1    wreg      void 
 28571 ;; Registers used:
 28572 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 28573 ;; Tracked objects:
 28574 ;;		On entry : 3F/2
 28575 ;;		On exit  : 0/0
 28576 ;;		Unchanged: 0/0
 28577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28582 ;;Total ram usage:        0 bytes
 28583 ;; Hardware stack levels used: 1
 28584 ;; Hardware stack levels required when called: 1
 28585 ;; This function calls:
 28586 ;;		NULL
 28587 ;;		_Millisecond_DefaultUpdateHandler
 28588 ;;		_UpdateTick
 28589 ;; This function is called by:
 28590 ;;		_MILLIESxINIT
 28591 ;;		_TMR1_ISR
 28592 ;; This function uses a non-reentrant model
 28593 ;;
 28594                           
 28595                           	psect	text140
 28596   017F1C                     __ptext140:
 28597                           	callstack 0
 28598   017F1C                     _MILLISECOND_HANDLER:
 28599                           	callstack 15
 28600                           
 28601                           ; BSR set to: 2
 28602                           ;milisecond_counter.c: 43:     milliseconds_counter++;
 28603                           
 28604                           ;incstack = 0
 28605   017F1C  0E01               	movlw	1
 28606   017F1E  0101               	movlb	1	; () banked
 28607   017F20  27F4               	addwf	_milliseconds_counter& (0+255),f,b	;volatile
 28608   017F22  0E00               	movlw	0
 28609   017F24  23F5               	addwfc	(_milliseconds_counter+1)& (0+255),f,b	;volatile
 28610   017F26  23F6               	addwfc	(_milliseconds_counter+2)& (0+255),f,b	;volatile
 28611   017F28  23F7               	addwfc	(_milliseconds_counter+3)& (0+255),f,b	;volatile
 28612                           
 28613                           ;milisecond_counter.c: 45:     if(Millisecond_Update_Handler)
 28614   017F2A  5138               	movf	_Millisecond_Update_Handler& (0+255),w,b
 28615   017F2C  1139               	iorwf	(_Millisecond_Update_Handler+1)& (0+255),w,b
 28616   017F2E  113A               	iorwf	(_Millisecond_Update_Handler+2)& (0+255),w,b
 28617   017F30  B4D8               	btfsc	status,2,c
 28618   017F32  0012               	return	
 28619                           
 28620                           ; BSR set to: 1
 28621                           ;milisecond_counter.c: 46:     {;milisecond_counter.c: 47:         Millisecond_Update_Ha
      +                          ndler();
 28622   017F34  D801               	call	i2u865_48
 28623   017F36  0012               	return	
 28624   017F38                     i2u865_48:
 28625   017F38  0005               	push	
 28626   017F3A  6EFA               	movwf	pclath,c
 28627   017F3C  5138               	movf	_Millisecond_Update_Handler& (0+255),w,b
 28628   017F3E  6EFD               	movwf	tosl,c
 28629   017F40  5139               	movf	(_Millisecond_Update_Handler+1)& (0+255),w,b
 28630   017F42  6EFE               	movwf	tosh,c
 28631   017F44  513A               	movf	(_Millisecond_Update_Handler+2)& (0+255),w,b
 28632   017F46  6EFF               	movwf	tosu,c
 28633   017F48  50FA               	movf	pclath,w,c
 28634   017F4A  0012               	return		;indir
 28635   017F4C                     __end_of_MILLISECOND_HANDLER:
 28636                           	callstack 0
 28637                           
 28638 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 28639 ;; Defined at:
 28640 ;;		line 163 in file "mcc_generated_files/tmr1.c"
 28641 ;; Parameters:    Size  Location     Type
 28642 ;;		None
 28643 ;; Auto vars:     Size  Location     Type
 28644 ;;		None
 28645 ;; Return value:  Size  Location     Type
 28646 ;;                  1    wreg      void 
 28647 ;; Registers used:
 28648 ;;		None
 28649 ;; Tracked objects:
 28650 ;;		On entry : 3F/2
 28651 ;;		On exit  : 3F/2
 28652 ;;		Unchanged: 3F/0
 28653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28658 ;;Total ram usage:        0 bytes
 28659 ;; Hardware stack levels used: 1
 28660 ;; This function calls:
 28661 ;;		Nothing
 28662 ;; This function is called by:
 28663 ;;		_TMR1_Initialize
 28664 ;;		_TMR1_ISR
 28665 ;; This function uses a non-reentrant model
 28666 ;;
 28667                           
 28668                           	psect	text141
 28669   0183C2                     __ptext141:
 28670                           	callstack 0
 28671   0183C2                     _TMR1_DefaultInterruptHandler:
 28672                           	callstack 16
 28673                           
 28674                           ; BSR set to: 2
 28675                           
 28676                           ;incstack = 0
 28677   0183C2  0012               	return		;funcret
 28678   0183C4                     __end_of_TMR1_DefaultInterruptHandler:
 28679                           	callstack 0
 28680                           
 28681 ;; *************** function _Millisecond_DefaultUpdateHandler *****************
 28682 ;; Defined at:
 28683 ;;		line 79 in file "milisecond_counter.c"
 28684 ;; Parameters:    Size  Location     Type
 28685 ;;		None
 28686 ;; Auto vars:     Size  Location     Type
 28687 ;;		None
 28688 ;; Return value:  Size  Location     Type
 28689 ;;                  1    wreg      void 
 28690 ;; Registers used:
 28691 ;;		None
 28692 ;; Tracked objects:
 28693 ;;		On entry : 3F/1
 28694 ;;		On exit  : 3F/1
 28695 ;;		Unchanged: 3F/0
 28696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28701 ;;Total ram usage:        0 bytes
 28702 ;; Hardware stack levels used: 1
 28703 ;; This function calls:
 28704 ;;		Nothing
 28705 ;; This function is called by:
 28706 ;;		_MILLIESxINIT
 28707 ;;		_MILLISECOND_HANDLER
 28708 ;; This function uses a non-reentrant model
 28709 ;;
 28710                           
 28711                           	psect	text142
 28712   0183C4                     __ptext142:
 28713                           	callstack 0
 28714   0183C4                     _Millisecond_DefaultUpdateHandler:
 28715                           	callstack 15
 28716                           
 28717                           ; BSR set to: 1
 28718                           
 28719                           ; BSR set to: 2
 28720                           ;incstack = 0
 28721   0183C4  0012               	return		;funcret
 28722   0183C6                     __end_of_Millisecond_DefaultUpdateHandler:
 28723                           	callstack 0
 28724                           
 28725 ;; *************** function _UpdateTick *****************
 28726 ;; Defined at:
 28727 ;;		line 321 in file "main.c"
 28728 ;; Parameters:    Size  Location     Type
 28729 ;;		None
 28730 ;; Auto vars:     Size  Location     Type
 28731 ;;		None
 28732 ;; Return value:  Size  Location     Type
 28733 ;;                  1    wreg      void 
 28734 ;; Registers used:
 28735 ;;		wreg, status,2
 28736 ;; Tracked objects:
 28737 ;;		On entry : 3F/1
 28738 ;;		On exit  : 3F/1
 28739 ;;		Unchanged: 0/0
 28740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28745 ;;Total ram usage:        0 bytes
 28746 ;; Hardware stack levels used: 1
 28747 ;; This function calls:
 28748 ;;		Nothing
 28749 ;; This function is called by:
 28750 ;;		_main
 28751 ;;		_MILLISECOND_HANDLER
 28752 ;; This function uses a non-reentrant model
 28753 ;;
 28754                           
 28755                           	psect	text143
 28756   0183B6                     __ptext143:
 28757                           	callstack 0
 28758   0183B6                     _UpdateTick:
 28759                           	callstack 15
 28760                           
 28761                           ; BSR set to: 1
 28762                           ;main.c: 322:     updateTick = 1;
 28763                           
 28764                           ; BSR set to: 1
 28765                           ;incstack = 0
 28766   0183B6  0E01               	movlw	1
 28767   0183B8  6F66               	movwf	_updateTick& (0+255),b
 28768                           
 28769                           ; BSR set to: 1
 28770   0183BA  0012               	return		;funcret
 28771   0183BC                     __end_of_UpdateTick:
 28772                           	callstack 0
 28773                           
 28774 ;; *************** function _TMR0_ISR *****************
 28775 ;; Defined at:
 28776 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 28777 ;; Parameters:    Size  Location     Type
 28778 ;;		None
 28779 ;; Auto vars:     Size  Location     Type
 28780 ;;		None
 28781 ;; Return value:  Size  Location     Type
 28782 ;;                  1    wreg      void 
 28783 ;; Registers used:
 28784 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 28785 ;; Tracked objects:
 28786 ;;		On entry : 0/0
 28787 ;;		On exit  : 0/0
 28788 ;;		Unchanged: 0/0
 28789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28794 ;;Total ram usage:        0 bytes
 28795 ;; Hardware stack levels used: 1
 28796 ;; Hardware stack levels required when called: 1
 28797 ;; This function calls:
 28798 ;;		NULL
 28799 ;;		_TMR0_DefaultInterruptHandler
 28800 ;;		_rtcc_handler
 28801 ;; This function is called by:
 28802 ;;		_INTERRUPT_InterruptManager
 28803 ;; This function uses a non-reentrant model
 28804 ;;
 28805                           
 28806                           	psect	text144
 28807   017F7A                     __ptext144:
 28808                           	callstack 0
 28809   017F7A                     _TMR0_ISR:
 28810                           	callstack 16
 28811                           
 28812                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
 28813                           
 28814                           ; BSR set to: 1
 28815                           ;incstack = 0
 28816   017F7A  94F2               	bcf	242,2,c	;volatile
 28817                           
 28818                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
 28819   017F7C  C144  FFD7         	movff	_timer0ReloadVal+1,4055	;volatile
 28820                           
 28821                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
 28822   017F80  C143  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 28823                           
 28824                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
 28825   017F84  0102               	movlb	2	; () banked
 28826   017F86  51F6               	movf	_TMR0_InterruptHandler& (0+255),w,b
 28827   017F88  11F7               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 28828   017F8A  11F8               	iorwf	(_TMR0_InterruptHandler+2)& (0+255),w,b
 28829   017F8C  B4D8               	btfsc	status,2,c
 28830   017F8E  0012               	return	
 28831                           
 28832                           ; BSR set to: 2
 28833                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
 28834   017F90  D801               	call	i2u978_48
 28835   017F92  0012               	return	
 28836   017F94                     i2u978_48:
 28837   017F94  0005               	push	
 28838   017F96  6EFA               	movwf	pclath,c
 28839   017F98  51F6               	movf	_TMR0_InterruptHandler& (0+255),w,b
 28840   017F9A  6EFD               	movwf	tosl,c
 28841   017F9C  51F7               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 28842   017F9E  6EFE               	movwf	tosh,c
 28843   017FA0  51F8               	movf	(_TMR0_InterruptHandler+2)& (0+255),w,b
 28844   017FA2  6EFF               	movwf	tosu,c
 28845   017FA4  50FA               	movf	pclath,w,c
 28846   017FA6  0012               	return		;indir
 28847   017FA8                     __end_of_TMR0_ISR:
 28848                           	callstack 0
 28849                           
 28850 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 28851 ;; Defined at:
 28852 ;;		line 160 in file "mcc_generated_files/tmr0.c"
 28853 ;; Parameters:    Size  Location     Type
 28854 ;;		None
 28855 ;; Auto vars:     Size  Location     Type
 28856 ;;		None
 28857 ;; Return value:  Size  Location     Type
 28858 ;;                  1    wreg      void 
 28859 ;; Registers used:
 28860 ;;		None
 28861 ;; Tracked objects:
 28862 ;;		On entry : 3F/2
 28863 ;;		On exit  : 3F/2
 28864 ;;		Unchanged: 3F/0
 28865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28870 ;;Total ram usage:        0 bytes
 28871 ;; Hardware stack levels used: 1
 28872 ;; This function calls:
 28873 ;;		Nothing
 28874 ;; This function is called by:
 28875 ;;		_TMR0_Initialize
 28876 ;;		_TMR0_ISR
 28877 ;; This function uses a non-reentrant model
 28878 ;;
 28879                           
 28880                           	psect	text145
 28881   0183C6                     __ptext145:
 28882                           	callstack 0
 28883   0183C6                     _TMR0_DefaultInterruptHandler:
 28884                           	callstack 16
 28885                           
 28886                           ; BSR set to: 2
 28887                           
 28888                           ;incstack = 0
 28889   0183C6  0012               	return		;funcret
 28890   0183C8                     __end_of_TMR0_DefaultInterruptHandler:
 28891                           	callstack 0
 28892                           
 28893 ;; *************** function _rtcc_handler *****************
 28894 ;; Defined at:
 28895 ;;		line 93 in file "mcc_generated_files/TCPIPLibrary/rtcc.c"
 28896 ;; Parameters:    Size  Location     Type
 28897 ;;		None
 28898 ;; Auto vars:     Size  Location     Type
 28899 ;;		None
 28900 ;; Return value:  Size  Location     Type
 28901 ;;                  1    wreg      void 
 28902 ;; Registers used:
 28903 ;;		wreg, status,2, status,0
 28904 ;; Tracked objects:
 28905 ;;		On entry : 3F/2
 28906 ;;		On exit  : 3F/1
 28907 ;;		Unchanged: 0/0
 28908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28913 ;;Total ram usage:        0 bytes
 28914 ;; Hardware stack levels used: 1
 28915 ;; This function calls:
 28916 ;;		Nothing
 28917 ;; This function is called by:
 28918 ;;		_rtcc_init
 28919 ;;		_TMR0_ISR
 28920 ;; This function uses a non-reentrant model
 28921 ;;
 28922                           
 28923                           	psect	text146
 28924   0182C2                     __ptext146:
 28925                           	callstack 0
 28926   0182C2                     _rtcc_handler:
 28927                           	callstack 16
 28928                           
 28929                           ; BSR set to: 2
 28930                           ;mcc_generated_files/TCPIPLibrary/rtcc.c: 95:  deviceTime++;
 28931                           
 28932                           ; BSR set to: 2
 28933                           ;incstack = 0
 28934   0182C2  0E01               	movlw	1
 28935   0182C4  0101               	movlb	1	; () banked
 28936   0182C6  272A               	addwf	_deviceTime& (0+255),f,b	;volatile
 28937   0182C8  0E00               	movlw	0
 28938   0182CA  232B               	addwfc	(_deviceTime+1)& (0+255),f,b	;volatile
 28939   0182CC  232C               	addwfc	(_deviceTime+2)& (0+255),f,b	;volatile
 28940   0182CE  232D               	addwfc	(_deviceTime+3)& (0+255),f,b	;volatile
 28941                           
 28942                           ; BSR set to: 1
 28943   0182D0  0012               	return		;funcret
 28944   0182D2                     __end_of_rtcc_handler:
 28945                           	callstack 0
 28946                           
 28947                           	psect	rparam
 28948   000000                     
 28949                           	psect	temp
 28950   00005B                     btemp:
 28951                           	callstack 0
 28952   00005B                     	ds	1
 28953   000000                     int$flags	set	btemp
 28954   000000                     wtemp8	set	btemp+1
 28955   000000                     ttemp5	set	btemp+1
 28956   000000                     ttemp6	set	btemp+4
 28957   000000                     ttemp7	set	btemp+8
 28958                           
 28959                           	psect	config
 28960                           
 28961                           ;Config register CONFIG1L @ 0x1FFF8
 28962                           ;	Watchdog Timer Enable bit
 28963                           ;	WDT = OFF, WDT disabled (control is placed on SWDTEN bit)
 28964                           ;	Stack Overflow/Underflow Reset Enable bit
 28965                           ;	STVR = ON, Reset on stack overflow/underflow enabled
 28966                           ;	Extended Instruction Set Enable bit
 28967                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 28968                           ;	Background Debugger Enable bit
 28969                           ;	DEBUG = OFF, Background debugger disabled; RB6 and RB7 configured as general purpose I
      +                          /O pins
 28970   01FFF8                     	org	131064
 28971   01FFF8  A0                 	db	160
 28972                           
 28973                           ;Config register CONFIG1H @ 0x1FFF9
 28974                           ;	Code Protection bit
 28975                           ;	CP0 = OFF, Program memory is not code-protected
 28976   01FFF9                     	org	131065
 28977   01FFF9  F4                 	db	244
 28978                           
 28979                           ;Config register CONFIG2L @ 0x1FFFA
 28980                           ;	Oscillator Selection bits
 28981                           ;	FOSC = HSPLL, HS oscillator, PLL enabled and under software control
 28982                           ;	Default/Reset System Clock Select bit
 28983                           ;	FOSC2 = ON, Clock selected by FOSC1:FOSC0 as system clock is enabled when OSCCON<1:0> 
      +                          = 00
 28984                           ;	Fail-Safe Clock Monitor Enable
 28985                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 28986                           ;	Two-Speed Start-up (Internal/External Oscillator Switchover) Control bit
 28987                           ;	IESO = ON, Two-Speed Start-up enabled
 28988   01FFFA                     	org	131066
 28989   01FFFA  C5                 	db	197
 28990                           
 28991                           ;Config register CONFIG2H @ 0x1FFFB
 28992                           ;	Watchdog Timer Postscaler Select bits
 28993                           ;	WDTPS = 32768, 1:32768
 28994   01FFFB                     	org	131067
 28995   01FFFB  FF                 	db	255
 28996                           
 28997                           ;Config register CONFIG3L @ 0x1FFFC
 28998                           ;	External Address Bus Shift Enable bit
 28999                           ;	EASHFT = ON, Address shifting enabled; address on external bus is offset to start at 0
      +                          00000h
 29000                           ;	External Memory Bus
 29001                           ;	MODE = MM, Microcontroller mode, external bus disabled
 29002                           ;	Data Bus Width Select bit
 29003                           ;	BW = 16, 16-Bit Data Width mode
 29004                           ;	External Bus Wait Enable bit
 29005                           ;	WAIT = OFF, Wait states for operations on external memory bus disabled
 29006   01FFFC                     	org	131068
 29007   01FFFC  F8                 	db	248
 29008                           
 29009                           ;Config register CONFIG3H @ 0x1FFFD
 29010                           ;	ECCP2 MUX bit
 29011                           ;	CCP2MX = ON, ECCP2/P2A is multiplexed with RC1
 29012                           ;	ECCP MUX bit
 29013                           ;	ECCPMX = ON, ECCP1 outputs (P1B/P1C) are multiplexed with RE6 and RE5; ECCP3 outputs (
      +                          P3B/P3C) are multiplexed with RE4 and RE3
 29014                           ;	Ethernet LED Enable bit
 29015                           ;	ETHLED = ON, RA0/RA1 are multiplexed with LEDA/LEDB when Ethernet module is enabled an
      +                          d function as I/O when Ethernet is disabled
 29016   01FFFD                     	org	131069
 29017   01FFFD  F7                 	db	247
 29018                           tosu	equ	0xFFF
 29019                           tosh	equ	0xFFE
 29020                           tosl	equ	0xFFD
 29021                           stkptr	equ	0xFFC
 29022                           pclatu	equ	0xFFB
 29023                           pclath	equ	0xFFA
 29024                           pcl	equ	0xFF9
 29025                           tblptru	equ	0xFF8
 29026                           tblptrh	equ	0xFF7
 29027                           tblptrl	equ	0xFF6
 29028                           tablat	equ	0xFF5
 29029                           prodh	equ	0xFF4
 29030                           prodl	equ	0xFF3
 29031                           indf0	equ	0xFEF
 29032                           postinc0	equ	0xFEE
 29033                           postdec0	equ	0xFED
 29034                           preinc0	equ	0xFEC
 29035                           plusw0	equ	0xFEB
 29036                           fsr0h	equ	0xFEA
 29037                           fsr0l	equ	0xFE9
 29038                           wreg	equ	0xFE8
 29039                           indf1	equ	0xFE7
 29040                           postinc1	equ	0xFE6
 29041                           postdec1	equ	0xFE5
 29042                           preinc1	equ	0xFE4
 29043                           plusw1	equ	0xFE3
 29044                           fsr1h	equ	0xFE2
 29045                           fsr1l	equ	0xFE1
 29046                           bsr	equ	0xFE0
 29047                           indf2	equ	0xFDF
 29048                           postinc2	equ	0xFDE
 29049                           postdec2	equ	0xFDD
 29050                           preinc2	equ	0xFDC
 29051                           plusw2	equ	0xFDB
 29052                           fsr2h	equ	0xFDA
 29053                           fsr2l	equ	0xFD9
 29054                           status	equ	0xFD8

Data Sizes:
    Strings     489
    Constant    138
    Data        557
    BSS         1060
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160    150     157
    BANK1           256     98     255
    BANK2           256      0     249
    BANK3           256      0     250
    BANK4           256      0     248
    BANK5           256      0     244
    BANK6           256      0     200
    BANK7           256      0     184
    BANK8           256      0      80
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          126      0       0
    BANK15           96      0       0

Pointer List with Targets:

    activeTrack	PTR struct . size(2) Largest target is 89
		 -> bot(BANK3[76]), bot$stnTrack1(BANK3[20]), bot$stnTrack2(BANK3[20]), bot$stnTrack3(BANK3[20]), 
		 -> top(BANK3[76]), top$stnTrack1(BANK3[20]), top$stnTrack2(BANK3[20]), top$stnTrack3(BANK3[20]), 
		 -> NULL(NULL[0]), 

    activeTrack$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    activeTrack$getOccStn$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    activeTrack$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    activeTrack$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    activeTrack$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    activeTrack@mainStationInbound$F2313	PTR struct . size(2) Largest target is 89
		 -> bot(BANK3[76]), bot$stnTrack1(BANK3[20]), bot$stnTrack2(BANK3[20]), bot$stnTrack3(BANK3[20]), 
		 -> top(BANK3[76]), top$stnTrack1(BANK3[20]), top$stnTrack2(BANK3[20]), top$stnTrack3(BANK3[20]), 
		 -> NULL(NULL[0]), 

    activeTrack@mainStationInbound$F2313$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    activeTrack@mainStationInbound$F2313$getOccStn$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    activeTrack@mainStationInbound$F2313$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    activeTrack@mainStationInbound$F2313$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    activeTrack@mainStationInbound$F2313$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    activeTrack@mainStationOutbound$F2630	PTR struct . size(2) Largest target is 89
		 -> bot(BANK3[76]), bot$stnTrack1(BANK3[20]), bot$stnTrack2(BANK3[20]), bot$stnTrack3(BANK3[20]), 
		 -> top(BANK3[76]), top$stnTrack1(BANK3[20]), top$stnTrack2(BANK3[20]), top$stnTrack3(BANK3[20]), 
		 -> NULL(NULL[0]), 

    activeTrack@mainStationOutbound$F2630$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    activeTrack@mainStationOutbound$F2630$getOccStn$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    activeTrack@mainStationOutbound$F2630$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    activeTrack@mainStationOutbound$F2630$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    activeTrack@mainStationOutbound$F2630$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    activeTrack@mountainStationInbound$F3654	PTR struct . size(2) Largest target is 60
		 -> waldberg(BANK2[54]), waldberg$stnTrack1(BANK2[17]), waldberg$stnTrack2(BANK2[17]), waldsee(BANK2[54]), 
		 -> waldsee$stnTrack1(BANK2[17]), waldsee$stnTrack2(BANK2[17]), NULL(NULL[0]), 

    activeTrack@mountainStationInbound$F3654$getTrainEnterStnTrack	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    activeTrack@mountainStationInbound$F3654$getTrainEnterStnTrack$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    activeTrack@mountainStationInbound$F3654$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    activeTrack@mountainStationOutbound$F3951	PTR struct . size(2) Largest target is 60
		 -> waldberg(BANK2[54]), waldberg$stnTrack1(BANK2[17]), waldberg$stnTrack2(BANK2[17]), waldsee(BANK2[54]), 
		 -> waldsee$stnTrack1(BANK2[17]), waldsee$stnTrack2(BANK2[17]), NULL(NULL[0]), 

    activeTrack@mountainStationOutbound$F3951$getTrainEnterStnTrack	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    activeTrack@mountainStationOutbound$F3951$getTrainEnterStnTrack$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    activeTrack@mountainStationOutbound$F3951$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    ARPV4_Lookup@entry_pointer	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK7[104]), 

    ARPV4_Packet@arpPtr	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK7[104]), 

    ARPV4_Packet@entryPointer	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK7[104]), 

    ARPV4_Update@entryPointer	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK7[104]), 

    bot$getFreightEnterStation	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_21A(BANK3[14]), HALL_BLK_9B(BANK3[14]), 

    bot$getFreightEnterStation$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    bot$getFreightLeaveStation	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_13(BANK2[14]), HALL_BLK_4A(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 

    bot$getFreightLeaveStation$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    bot$getOccBlkIn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_21B(BANK4[14]), OCC_FR_9B(BANK4[14]), 

    bot$getOccBlkIn$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    bot$getOccBlkOut	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    bot$getOccBlkOut$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    bot$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    bot$setOccBlkIn	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    bot$setOccBlkIn$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    bot$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    bot$setPath	PTR struct . size(2) Largest target is 24
		 -> WS_BOT(BANK5[18]), WS_TOP(BANK5[18]), 

    bot$setPath$port1_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    bot$setPath$port2_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_13(BANK2[14]), HALL_BLK_4A(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 

    bot$setPath$port3_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    bot$setPath$port4_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    bot$setPath$port5_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    bot$setPath$port6_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), NULL(NULL[0]), 

    bot$setSignal	PTR struct . size(2) Largest target is 24
		 -> SIG_BOT(BANK5[18]), SIG_TOP(BANK5[18]), 

    bot$setSignal$port1_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    bot$setSignal$port2_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_13(BANK2[14]), HALL_BLK_4A(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 

    bot$setSignal$port3_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    bot$setSignal$port4_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    bot$setSignal$port5_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    bot$setSignal$port6_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), NULL(NULL[0]), 

    bot$stnTrack1$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    bot$stnTrack1$getOccStn$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    bot$stnTrack1$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    bot$stnTrack1$setOccStn$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    bot$stnTrack2$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    bot$stnTrack2$getOccStn$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    bot$stnTrack2$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    bot$stnTrack2$setOccStn$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    bot$stnTrack3$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    bot$stnTrack3$getOccStn$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    bot$stnTrack3$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    bot$stnTrack3$setOccStn$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    compareDataToSend@arr1	PTR const unsigned char  size(2) Largest target is 10
		 -> prevDataMessage(BANK5[10]), prevDataMessage$data(BANK5[8]), 

    compareDataToSend@arr2	PTR const unsigned char  size(2) Largest target is 10
		 -> DataMessage(BANK2[10]), DataMessage$data(BANK2[8]), 

    CTRL_OFF$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    DataRxHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), 

    DEBOUNCExIO@instance	PTR struct . size(2) Largest target is 15
		 -> CTRL_OFF(BANK4[14]), HALL_BLK_13(BANK2[14]), HALL_BLK_21A(BANK3[14]), HALL_BLK_4A(BANK3[14]), 
		 -> HALL_BLK_9B(BANK3[14]), HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T4(BANK3[14]), 
		 -> HALL_BLK_T5(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), OCC_FR_21B(BANK4[14]), 
		 -> OCC_FR_22B(BANK4[14]), OCC_FR_23B(BANK4[14]), OCC_FR_9B(BANK4[14]), OCC_FR_BLK13(BANK4[14]), 
		 -> OCC_FR_BLK4(BANK4[14]), OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), 
		 -> OCC_FR_STN_12(BANK4[14]), OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), OCC_FR_T3(BANK4[14]), 
		 -> OCC_FR_T6(BANK4[14]), VOLTDETECT(BANK2[14]), 

    DEBOUNCExIO@instance$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    DEBOUNCExIO@millisPtr	PTR unsigned long  size(1) Largest target is 4
		 -> DebounceIO@millis(COMRAM[4]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    ETH_GetMAC@mac	PTR unsigned char  size(2) Largest target is 6
		 -> hostMacAddress(BANK2[6]), 

    ETH_Init@mac	PTR const struct . size(2) Largest target is 6
		 -> macAddress(BANK2[6]), 

    ETH_Insert@data	PTR unsigned char  size(1) Largest target is 2
		 -> ICMP_EchoReply@cksm(BANK0[2]), ICMP_PortUnreachable@cksm(BANK0[2]), IPV4_Send@cksm(COMRAM[2]), IPV4_Send@totalLength(COMRAM[2]), 
		 -> UDP_Send@cksm(COMRAM[2]), UDP_Send@udpLength(COMRAM[2]), 

    ETH_PacketListReset@ptr	PTR unsigned char  size(2) Largest target is 240
		 -> txData(BANK6[200]), 

    ETH_ReadBlock@buffer	PTR void  size(2) Largest target is 28
		 -> ARPV4_Packet@header(BANK0[28]), ICMP_Receive@icmpHdr(BANK0[4]), ipv4Header(BANK1[20]), Network_Read@header(BANK1[14]), 
		 -> udpHeader(BANK1[8]), udpReceivedData(BANK4[10]), 

    ETH_ReadBlock@p	PTR unsigned char  size(2) Largest target is 28
		 -> ARPV4_Packet@header(BANK0[28]), ICMP_Receive@icmpHdr(BANK0[4]), ipv4Header(BANK1[20]), Network_Read@header(BANK1[14]), 
		 -> udpHeader(BANK1[8]), udpReceivedData(BANK4[10]), 

    ETH_RemovePacket@pPacket	PTR struct . size(2) Largest target is 240
		 -> txData(BANK6[200]), NULL(NULL[0]), 

    ETH_RemovePacket@pPacket$nextPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK6[200]), NULL(NULL[0]), 

    ETH_RemovePacket@pPacket$prevPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK6[200]), NULL(NULL[0]), 

    ETH_Shift_Tx_Packets@pElem	PTR struct . size(2) Largest target is 240
		 -> txData(BANK6[200]), NULL(NULL[0]), 

    ETH_Shift_Tx_Packets@pElem$nextPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK6[200]), NULL(NULL[0]), 

    ETH_Shift_Tx_Packets@pElem$prevPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK6[200]), NULL(NULL[0]), 

    ETH_WriteBlock@buffer	PTR const unsigned char  size(2) Largest target is 80
		 -> ARPV4_Packet@header(BANK0[28]), ARPV4_Request@header(COMRAM[28]), udpTransBox(BANK8[80]), NULL(NULL[0]), 

    ETH_WriteBlock@p	PTR const unsigned char  size(2) Largest target is 80
		 -> ARPV4_Packet@header(BANK0[28]), ARPV4_Request@header(COMRAM[28]), udpTransBox(BANK8[80]), NULL(NULL[0]), 

    ETH_WriteStart@dest_mac	PTR const struct . size(2) Largest target is 104
		 -> arpMap(BANK7[104]), arpMap$macAddress(BANK7[6]), ARPV4_Packet@header(BANK0[28]), broadcastMAC(CODE[6]), 
		 -> header$sha(COMRAM[6]), NULL(NULL[0]), 

    ETH_WriteStart@ethPacket	PTR struct . size(2) Largest target is 240
		 -> txData(BANK6[200]), NULL(NULL[0]), 

    ETH_WriteStart@ethPacket$nextPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK6[200]), NULL(NULL[0]), 

    ETH_WriteStart@ethPacket$prevPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK6[200]), NULL(NULL[0]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    F183$__tm_zone	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_42(CODE[4]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK5[32]), 

    GetDataFromSendMailBox@data	PTR struct . size(2) Largest target is 80
		 -> udpTransBox(BANK8[80]), NULL(NULL[0]), 

    GETxDATAxFROMxRECEIVExMAILxBOX@data	PTR struct . size(2) Largest target is 80
		 -> udpRecvBox(BANK7[80]), NULL(NULL[0]), 

    ?_gmtime$__tm_zone	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_42(CODE[4]), 

    ?___gmtime_r$__tm_zone	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_42(CODE[4]), 

    __gmtime_r@tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_42(CODE[4]), 

    HALL_BLK_13$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    HALL_BLK_21A$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    HALL_BLK_4A$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    HALL_BLK_9B$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    HALL_BLK_T1$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    HALL_BLK_T1$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    HALL_BLK_T2$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    HALL_BLK_T2$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    HALL_BLK_T4$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    HALL_BLK_T5$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    HALL_BLK_T7$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    HALL_BLK_T7$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    HALL_BLK_T8$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    HALL_BLK_T8$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    ICMP_EchoReply@ipv4Hdr	PTR struct . size(2) Largest target is 20
		 -> ipv4Header(BANK1[20]), 

    ICMP_Receive@ipv4Hdr	PTR struct . size(2) Largest target is 20
		 -> ipv4Header(BANK1[20]), 

    INITxPATHWAYxMNTSTATION@refwaldberg	PTR struct . size(2) Largest target is 60
		 -> waldberg(BANK2[54]), 

    INITxPATHWAYxMNTSTATION@refwaldsee	PTR struct . size(2) Largest target is 60
		 -> waldsee(BANK2[54]), 

    INITxPATHWAYxSTATION@refbot	PTR struct . size(2) Largest target is 89
		 -> bot(BANK3[76]), 

    INITxPATHWAYxSTATION@reftop	PTR struct . size(2) Largest target is 89
		 -> top(BANK3[76]), 

    IPV4_PseudoHeaderChecksum@v	PTR unsigned short  size(1) Largest target is 12
		 -> IPV4_PseudoHeaderChecksum@tmp(COMRAM[12]), 

    IPv4_Start@destMacAddress	PTR const struct . size(2) Largest target is 104
		 -> arpMap(BANK7[104]), arpMap$macAddress(BANK7[6]), broadcastMAC(CODE[6]), NULL(NULL[0]), 

    LATB$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    LATB$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    LATC$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    LATC$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    LATJ$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    LATJ$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    logConsole@SYSLOG_time1$__tm_zone	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_42(CODE[4]), 

    logSyslog@SYSLOG_time1$__tm_zone	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_42(CODE[4]), 

    M_Box_Eth_Recv_Ptr	PTR struct . size(2) Largest target is 80
		 -> udpRecvBox(BANK7[80]), NULL(NULL[0]), 

    M_Box_Eth_Recv_Ptr_prev	PTR struct . size(2) Largest target is 80
		 -> udpRecvBox(BANK7[80]), NULL(NULL[0]), 

    M_Box_Eth_Send_Ptr	PTR struct . size(2) Largest target is 80
		 -> udpTransBox(BANK8[80]), NULL(NULL[0]), 

    M_Box_Eth_Send_Ptr_prev	PTR struct . size(2) Largest target is 80
		 -> udpTransBox(BANK8[80]), NULL(NULL[0]), 

    main@udpReceived	PTR struct . size(2) Largest target is 80
		 -> udpRecvBox(BANK7[80]), NULL(NULL[0]), 

    MAINxSTATIONxINBOUND@self	PTR struct . size(2) Largest target is 89
		 -> bot(BANK3[76]), top(BANK3[76]), 

    MAINxSTATIONxINBOUND@self$getFreightEnterStation	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_21A(BANK3[14]), HALL_BLK_9B(BANK3[14]), 

    MAINxSTATIONxINBOUND@self$getFreightEnterStation$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    MAINxSTATIONxINBOUND@self$getFreightLeaveStation	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_13(BANK2[14]), HALL_BLK_4A(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 

    MAINxSTATIONxINBOUND@self$getOccBlkIn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_21B(BANK4[14]), OCC_FR_9B(BANK4[14]), 

    MAINxSTATIONxINBOUND@self$getOccBlkOut	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    MAINxSTATIONxINBOUND@self$setOccBlkIn	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    MAINxSTATIONxINBOUND@self$setPath	PTR struct . size(2) Largest target is 24
		 -> WS_BOT(BANK5[18]), WS_TOP(BANK5[18]), 

    MAINxSTATIONxINBOUND@self$setSignal	PTR struct . size(2) Largest target is 24
		 -> SIG_BOT(BANK5[18]), SIG_TOP(BANK5[18]), 

    MAINxSTATIONxINBOUND@self$stnTrack1$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    MAINxSTATIONxINBOUND@self$stnTrack1$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    MAINxSTATIONxINBOUND@self$stnTrack2$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    MAINxSTATIONxINBOUND@self$stnTrack2$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    MAINxSTATIONxINBOUND@self$stnTrack3$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    MAINxSTATIONxINBOUND@self$stnTrack3$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    MAINxSTATIONxOUTBOUND@self	PTR struct . size(2) Largest target is 89
		 -> bot(BANK3[76]), top(BANK3[76]), 

    MAINxSTATIONxOUTBOUND@self$getFreightEnterStation	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_21A(BANK3[14]), HALL_BLK_9B(BANK3[14]), 

    MAINxSTATIONxOUTBOUND@self$getFreightLeaveStation	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_13(BANK2[14]), HALL_BLK_4A(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 

    MAINxSTATIONxOUTBOUND@self$getOccBlkIn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_21B(BANK4[14]), OCC_FR_9B(BANK4[14]), 

    MAINxSTATIONxOUTBOUND@self$getOccBlkOut	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    MAINxSTATIONxOUTBOUND@self$getOccBlkOut$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    MAINxSTATIONxOUTBOUND@self$setOccBlkIn	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    MAINxSTATIONxOUTBOUND@self$setPath	PTR struct . size(2) Largest target is 24
		 -> WS_BOT(BANK5[18]), WS_TOP(BANK5[18]), 

    MAINxSTATIONxOUTBOUND@self$setSignal	PTR struct . size(2) Largest target is 24
		 -> SIG_BOT(BANK5[18]), SIG_TOP(BANK5[18]), 

    MAINxSTATIONxOUTBOUND@self$stnTrack1$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    MAINxSTATIONxOUTBOUND@self$stnTrack1$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    MAINxSTATIONxOUTBOUND@self$stnTrack2$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    MAINxSTATIONxOUTBOUND@self$stnTrack2$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    MAINxSTATIONxOUTBOUND@self$stnTrack3$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    MAINxSTATIONxOUTBOUND@self$stnTrack3$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    MAINxSTATIONxPASSING@self	PTR struct . size(2) Largest target is 89
		 -> bot(BANK3[76]), top(BANK3[76]), 

    MAINxSTATIONxPASSING@self$getFreightEnterStation	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_21A(BANK3[14]), HALL_BLK_9B(BANK3[14]), 

    MAINxSTATIONxPASSING@self$getFreightEnterStation$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    MAINxSTATIONxPASSING@self$getFreightLeaveStation	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_13(BANK2[14]), HALL_BLK_4A(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 

    MAINxSTATIONxPASSING@self$getOccBlkIn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_21B(BANK4[14]), OCC_FR_9B(BANK4[14]), 

    MAINxSTATIONxPASSING@self$getOccBlkOut	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    MAINxSTATIONxPASSING@self$getOccBlkOut$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    MAINxSTATIONxPASSING@self$setOccBlkIn	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    MAINxSTATIONxPASSING@self$setPath	PTR struct . size(2) Largest target is 24
		 -> WS_BOT(BANK5[18]), WS_TOP(BANK5[18]), 

    MAINxSTATIONxPASSING@self$setSignal	PTR struct . size(2) Largest target is 24
		 -> SIG_BOT(BANK5[18]), SIG_TOP(BANK5[18]), 

    MAINxSTATIONxPASSING@self$stnTrack1$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    MAINxSTATIONxPASSING@self$stnTrack1$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    MAINxSTATIONxPASSING@self$stnTrack2$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    MAINxSTATIONxPASSING@self$stnTrack2$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    MAINxSTATIONxPASSING@self$stnTrack3$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    MAINxSTATIONxPASSING@self$stnTrack3$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 28
		 -> ARPV4_Packet@header(BANK0[28]), ARPV4_Request@header(COMRAM[28]), header$sha(COMRAM[6]), 

    memcpy@d1	PTR void  size(1) Largest target is 28
		 -> ARPV4_Packet@header(BANK0[28]), ARPV4_Request@header(COMRAM[28]), header$sha(COMRAM[6]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 6
		 -> hostMacAddress(BANK2[6]), 

    memcpy@s1	PTR const void  size(2) Largest target is 6
		 -> hostMacAddress(BANK2[6]), 

    Millisecond_Update_Handler	PTR FTN()void  size(3) Largest target is 1
		 -> Millisecond_DefaultUpdateHandler(), UpdateTick(), NULL(), 

    Millisecond_Update_Handler2	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), 

    Millisecond_Update_Handler3	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), 

    MOUNTAINxSTATIONxINBOUND@self	PTR struct . size(2) Largest target is 60
		 -> waldberg(BANK2[54]), waldsee(BANK2[54]), 

    MOUNTAINxSTATIONxINBOUND@self$getOccAmpOut	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    MOUNTAINxSTATIONxINBOUND@self$getTrainEnterSiebwaldeStn	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    MOUNTAINxSTATIONxINBOUND@self$getTrainEnterSiebwaldeStn$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    MOUNTAINxSTATIONxINBOUND@self$setOccAmpOut	PTR struct . size(2) Largest target is 4
		 -> OCC_TO_T3(BANK2[3]), OCC_TO_T6(BANK2[3]), 

    MOUNTAINxSTATIONxINBOUND@self$setPath	PTR struct . size(2) Largest target is 24
		 -> WS_WALDBERG(BANK5[18]), WS_WALDSEE(BANK5[18]), 

    MOUNTAINxSTATIONxINBOUND@self$stnTrack1$getTrainEnterStnTrack	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    MOUNTAINxSTATIONxINBOUND@self$stnTrack2$getTrainEnterStnTrack	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    MOUNTAINxSTATIONxOUTBOUND@self	PTR struct . size(2) Largest target is 60
		 -> waldberg(BANK2[54]), waldsee(BANK2[54]), 

    MOUNTAINxSTATIONxOUTBOUND@self$getOccAmpOut	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    MOUNTAINxSTATIONxOUTBOUND@self$getTrainEnterSiebwaldeStn	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    MOUNTAINxSTATIONxOUTBOUND@self$getTrainEnterSiebwaldeStn$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    MOUNTAINxSTATIONxOUTBOUND@self$setOccAmpOut	PTR struct . size(2) Largest target is 4
		 -> OCC_TO_T3(BANK2[3]), OCC_TO_T6(BANK2[3]), 

    MOUNTAINxSTATIONxOUTBOUND@self$setPath	PTR struct . size(2) Largest target is 24
		 -> WS_WALDBERG(BANK5[18]), WS_WALDSEE(BANK5[18]), 

    MOUNTAINxSTATIONxOUTBOUND@self$stnTrack1$getTrainEnterStnTrack	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    MOUNTAINxSTATIONxOUTBOUND@self$stnTrack2$getTrainEnterStnTrack	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    network_errors	PTR const unsigned char [16] size(2) Largest target is 21
		 -> STR_1(CODE[6]), STR_10(CODE[20]), STR_11(CODE[19]), STR_12(CODE[19]), 
		 -> STR_13(CODE[12]), STR_14(CODE[19]), STR_15(CODE[19]), STR_16(CODE[21]), 
		 -> STR_2(CODE[8]), STR_3(CODE[15]), STR_4(CODE[12]), STR_5(CODE[18]), 
		 -> STR_6(CODE[14]), STR_7(CODE[17]), STR_8(CODE[20]), STR_9(CODE[20]), 

    OCC_FR_21B$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    OCC_FR_22B$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    OCC_FR_23B$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    OCC_FR_9B$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    OCC_FR_BLK13$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    OCC_FR_BLK4$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    OCC_FR_STN_1$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    OCC_FR_STN_10$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    OCC_FR_STN_11$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    OCC_FR_STN_12$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    OCC_FR_STN_2$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    OCC_FR_STN_3$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    OCC_FR_T3$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    OCC_FR_T3$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    OCC_FR_T6$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    OCC_FR_T6$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    OCC_TO_21B$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    OCC_TO_21B$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    OCC_TO_9B$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    OCC_TO_9B$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    OCC_TO_STN_1$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    OCC_TO_STN_1$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    OCC_TO_STN_10$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    OCC_TO_STN_10$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    OCC_TO_STN_11$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    OCC_TO_STN_11$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    OCC_TO_STN_12$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    OCC_TO_STN_12$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    OCC_TO_STN_2$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    OCC_TO_STN_2$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    OCC_TO_STN_3$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    OCC_TO_STN_3$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    OCC_TO_T3$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    OCC_TO_T6$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK5[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    pHead	PTR struct . size(2) Largest target is 240
		 -> txData(BANK6[200]), NULL(NULL[0]), 

    pHead$nextPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK6[200]), NULL(NULL[0]), 

    pHead$prevPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK6[200]), NULL(NULL[0]), 

    PORTE$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    PORTE$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    PORTF$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    PORTF$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    PORTG$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    PORTG$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    PORTH$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    PORTH$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 66
		 -> STR_22(CODE[66]), STR_41(CODE[26]), 

    PROCESSxETHxDATA@udpReceived	PTR struct . size(2) Largest target is 80
		 -> udpRecvBox(BANK7[80]), NULL(NULL[0]), 

    PROCESSxETHxDATA@udpSend	PTR struct . size(2) Largest target is 80
		 -> udpTransBox(BANK8[80]), NULL(NULL[0]), 

    pTail	PTR struct . size(2) Largest target is 240
		 -> txData(BANK6[200]), NULL(NULL[0]), 

    pTail$nextPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK6[200]), NULL(NULL[0]), 

    pTail$prevPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK6[200]), NULL(NULL[0]), 

    PUTxDATAxINxSENDxMAILxBOX@data	PTR struct . size(2) Largest target is 10
		 -> CREATExDATAxMESSAGE@StatusMessage(COMRAM[10]), CREATExTASKxSTATUSxMESSAGE@StatusMessage(COMRAM[10]), DataMessage(BANK2[10]), StatusMessage(BANK2[10]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    refBOT	PTR struct . size(2) Largest target is 89
		 -> bot(BANK3[76]), NULL(NULL[0]), 

    refBOT$getFreightEnterStation	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_21A(BANK3[14]), HALL_BLK_9B(BANK3[14]), 

    refBOT$getFreightLeaveStation	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_13(BANK2[14]), HALL_BLK_4A(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 

    refBOT$getOccBlkIn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_21B(BANK4[14]), OCC_FR_9B(BANK4[14]), 

    refBOT$getOccBlkOut	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    refBOT$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    refBOT$port1_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    refBOT$port2_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_13(BANK2[14]), HALL_BLK_4A(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 

    refBOT$port3_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    refBOT$port4_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    refBOT$port5_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    refBOT$port6_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), NULL(NULL[0]), 

    refBOT$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    refBOT$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    refBOT$setOccBlkIn	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    refBOT$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    refBOT$setPath	PTR struct . size(2) Largest target is 24
		 -> WS_BOT(BANK5[18]), WS_TOP(BANK5[18]), 

    refBOT$setSignal	PTR struct . size(2) Largest target is 24
		 -> SIG_BOT(BANK5[18]), SIG_TOP(BANK5[18]), 

    refBOT$stnTrack1$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    refBOT$stnTrack1$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    refBOT$stnTrack2$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    refBOT$stnTrack2$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    refBOT$stnTrack3$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    refBOT$stnTrack3$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    refTOP	PTR struct . size(2) Largest target is 89
		 -> top(BANK3[76]), NULL(NULL[0]), 

    refTOP$getFreightEnterStation	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_21A(BANK3[14]), HALL_BLK_9B(BANK3[14]), 

    refTOP$getFreightLeaveStation	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_13(BANK2[14]), HALL_BLK_4A(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 

    refTOP$getOccBlkIn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_21B(BANK4[14]), OCC_FR_9B(BANK4[14]), 

    refTOP$getOccBlkOut	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    refTOP$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    refTOP$port1_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    refTOP$port2_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_13(BANK2[14]), HALL_BLK_4A(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 

    refTOP$port3_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    refTOP$port4_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    refTOP$port5_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    refTOP$port6_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), NULL(NULL[0]), 

    refTOP$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    refTOP$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    refTOP$setOccBlkIn	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    refTOP$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    refTOP$setPath	PTR struct . size(2) Largest target is 24
		 -> WS_BOT(BANK5[18]), WS_TOP(BANK5[18]), 

    refTOP$setSignal	PTR struct . size(2) Largest target is 24
		 -> SIG_BOT(BANK5[18]), SIG_TOP(BANK5[18]), 

    refTOP$stnTrack1$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    refTOP$stnTrack1$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    refTOP$stnTrack2$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    refTOP$stnTrack2$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    refTOP$stnTrack3$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    refTOP$stnTrack3$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    refWALDBERG	PTR struct . size(2) Largest target is 60
		 -> waldberg(BANK2[54]), NULL(NULL[0]), 

    refWALDBERG$getOccAmpOut	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    refWALDBERG$getTrainEnterSiebwaldeStn	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    refWALDBERG$getTrainEnterStnTrack	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    refWALDBERG$port1_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    refWALDBERG$port2_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_13(BANK2[14]), HALL_BLK_4A(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 

    refWALDBERG$port3_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    refWALDBERG$port4_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    refWALDBERG$port5_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    refWALDBERG$port6_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), NULL(NULL[0]), 

    refWALDBERG$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    refWALDBERG$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    refWALDBERG$setOccAmpOut	PTR struct . size(2) Largest target is 4
		 -> OCC_TO_T3(BANK2[3]), OCC_TO_T6(BANK2[3]), 

    refWALDBERG$setPath	PTR struct . size(2) Largest target is 24
		 -> WS_WALDBERG(BANK5[18]), WS_WALDSEE(BANK5[18]), 

    refWALDBERG$stnTrack1$getTrainEnterStnTrack	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    refWALDBERG$stnTrack2$getTrainEnterStnTrack	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    refWALDSEE	PTR struct . size(2) Largest target is 60
		 -> waldsee(BANK2[54]), NULL(NULL[0]), 

    refWALDSEE$getOccAmpOut	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    refWALDSEE$getTrainEnterSiebwaldeStn	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    refWALDSEE$getTrainEnterStnTrack	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    refWALDSEE$port1_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    refWALDSEE$port2_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_13(BANK2[14]), HALL_BLK_4A(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 

    refWALDSEE$port3_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    refWALDSEE$port4_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    refWALDSEE$port5_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    refWALDSEE$port6_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), NULL(NULL[0]), 

    refWALDSEE$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    refWALDSEE$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    refWALDSEE$setOccAmpOut	PTR struct . size(2) Largest target is 4
		 -> OCC_TO_T3(BANK2[3]), OCC_TO_T6(BANK2[3]), 

    refWALDSEE$setPath	PTR struct . size(2) Largest target is 24
		 -> WS_WALDBERG(BANK5[18]), WS_WALDSEE(BANK5[18]), 

    refWALDSEE$stnTrack1$getTrainEnterStnTrack	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    refWALDSEE$stnTrack2$getTrainEnterStnTrack	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    REL_T4$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    REL_T5$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    S124$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    S124$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    S135$getFreightEnterStation	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_21A(BANK3[14]), HALL_BLK_9B(BANK3[14]), 

    S135$getFreightLeaveStation	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_13(BANK2[14]), HALL_BLK_4A(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 

    S135$getOccBlkIn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_21B(BANK4[14]), OCC_FR_9B(BANK4[14]), 

    S135$getOccBlkOut	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    S135$setOccBlkIn	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    S135$setPath	PTR struct . size(2) Largest target is 24
		 -> WS_BOT(BANK5[18]), WS_TOP(BANK5[18]), 

    S135$setSignal	PTR struct . size(2) Largest target is 24
		 -> SIG_BOT(BANK5[18]), SIG_TOP(BANK5[18]), 

    S154$getTrainEnterStnTrack	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    S164$getOccAmpOut	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    S164$getTrainEnterSiebwaldeStn	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    S164$setOccAmpOut	PTR struct . size(2) Largest target is 4
		 -> OCC_TO_T3(BANK2[3]), OCC_TO_T6(BANK2[3]), 

    S164$setPath	PTR struct . size(2) Largest target is 24
		 -> WS_WALDBERG(BANK5[18]), WS_WALDSEE(BANK5[18]), 

    S24$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    S4486$callBack	PTR FTN(short ,)void  size(3) Largest target is 1
		 -> UDPxDATAxRECV(), 

    S4530$nextPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK6[200]), NULL(NULL[0]), 

    S4530$prevPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK6[200]), NULL(NULL[0]), 

    S5532tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_42(CODE[4]), 

    S82$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    S85$port1_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    S85$port2_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_13(BANK2[14]), HALL_BLK_4A(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 

    S85$port3_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    S85$port4_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    S85$port5_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    S85$port6_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), NULL(NULL[0]), 

    S8668$buffer	PTR unsigned char  size(2) Largest target is 0

    S8668$source	PTR const unsigned char  size(2) Largest target is 0

    __secs_to_tm@tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_42(CODE[4]), 

    setT4ToAmpT6	PTR struct . size(2) Largest target is 4
		 -> REL_T4(BANK2[3]), NULL(NULL[0]), 

    setT4ToAmpT6$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    setT5ToAmpT3	PTR struct . size(2) Largest target is 4
		 -> REL_T5(BANK2[3]), NULL(NULL[0]), 

    setT5ToAmpT3$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    SETxMILLISECONDxUPDATExHANDLER@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Millisecond_DefaultUpdateHandler(), UpdateTick(), 

    SETxMNTSTATIONxPATHWAY@self	PTR struct . size(2) Largest target is 60
		 -> waldberg(BANK2[54]), waldsee(BANK2[54]), 

    SETxMNTSTATIONxPATHWAY@self$getOccAmpOut	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    SETxMNTSTATIONxPATHWAY@self$getTrainEnterSiebwaldeStn	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    SETxMNTSTATIONxPATHWAY@self$setOccAmpOut	PTR struct . size(2) Largest target is 4
		 -> OCC_TO_T3(BANK2[3]), OCC_TO_T6(BANK2[3]), 

    SETxMNTSTATIONxPATHWAY@self$setPath	PTR struct . size(2) Largest target is 24
		 -> WS_WALDBERG(BANK5[18]), WS_WALDSEE(BANK5[18]), 

    SETxMNTSTATIONxPATHWAY@self$setPath$port1_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    SETxMNTSTATIONxPATHWAY@self$setPath$port2_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_13(BANK2[14]), HALL_BLK_4A(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 

    SETxMNTSTATIONxPATHWAY@self$setPath$port3_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    SETxMNTSTATIONxPATHWAY@self$setPath$port4_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    SETxMNTSTATIONxPATHWAY@self$setPath$port5_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    SETxMNTSTATIONxPATHWAY@self$setPath$port6_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), NULL(NULL[0]), 

    SETxMNTSTATIONxPATHWAY@self$stnTrack1$getTrainEnterStnTrack	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    SETxMNTSTATIONxPATHWAY@self$stnTrack2$getTrainEnterStnTrack	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    SETxOCC@self	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), 
		 -> OCC_FR_T6(BANK4[14]), OCC_TO_21B(BANK2[3]), OCC_TO_9B(BANK2[3]), OCC_TO_STN_1(BANK2[3]), 
		 -> OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), OCC_TO_STN_2(BANK2[3]), 
		 -> OCC_TO_STN_3(BANK2[3]), OCC_TO_T3(BANK2[3]), OCC_TO_T6(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), 
		 -> PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), PORTH(ABS[1]), REL_T4(BANK2[3]), 
		 -> REL_T5(BANK2[3]), NULL(NULL[0]), 

    SETxOCC@self$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    SETxSIGNAL@self	PTR struct . size(2) Largest target is 89
		 -> bot(BANK3[76]), top(BANK3[76]), 

    SETxSIGNAL@self$getFreightEnterStation	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_21A(BANK3[14]), HALL_BLK_9B(BANK3[14]), 

    SETxSIGNAL@self$getFreightLeaveStation	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_13(BANK2[14]), HALL_BLK_4A(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 

    SETxSIGNAL@self$getOccBlkIn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_21B(BANK4[14]), OCC_FR_9B(BANK4[14]), 

    SETxSIGNAL@self$getOccBlkOut	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    SETxSIGNAL@self$setOccBlkIn	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    SETxSIGNAL@self$setPath	PTR struct . size(2) Largest target is 24
		 -> WS_BOT(BANK5[18]), WS_TOP(BANK5[18]), 

    SETxSIGNAL@self$setSignal	PTR struct . size(2) Largest target is 24
		 -> SIG_BOT(BANK5[18]), SIG_TOP(BANK5[18]), 

    SETxSIGNAL@self$setSignal$port1_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    SETxSIGNAL@self$setSignal$port2_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_13(BANK2[14]), HALL_BLK_4A(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 

    SETxSIGNAL@self$setSignal$port3_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    SETxSIGNAL@self$setSignal$port4_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    SETxSIGNAL@self$setSignal$port5_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    SETxSIGNAL@self$setSignal$port6_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), NULL(NULL[0]), 

    SETxSIGNAL@self$stnTrack1$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    SETxSIGNAL@self$stnTrack1$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    SETxSIGNAL@self$stnTrack2$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    SETxSIGNAL@self$stnTrack2$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    SETxSIGNAL@self$stnTrack3$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    SETxSIGNAL@self$stnTrack3$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    SETxSTATIONxPATHWAY@self	PTR struct . size(2) Largest target is 89
		 -> bot(BANK3[76]), top(BANK3[76]), 

    SETxSTATIONxPATHWAY@self$getFreightEnterStation	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_21A(BANK3[14]), HALL_BLK_9B(BANK3[14]), 

    SETxSTATIONxPATHWAY@self$getFreightLeaveStation	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_13(BANK2[14]), HALL_BLK_4A(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 

    SETxSTATIONxPATHWAY@self$getOccBlkIn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_21B(BANK4[14]), OCC_FR_9B(BANK4[14]), 

    SETxSTATIONxPATHWAY@self$getOccBlkOut	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    SETxSTATIONxPATHWAY@self$setOccBlkIn	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    SETxSTATIONxPATHWAY@self$setPath	PTR struct . size(2) Largest target is 24
		 -> WS_BOT(BANK5[18]), WS_TOP(BANK5[18]), 

    SETxSTATIONxPATHWAY@self$setPath$port1_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    SETxSTATIONxPATHWAY@self$setPath$port2_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_13(BANK2[14]), HALL_BLK_4A(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 

    SETxSTATIONxPATHWAY@self$setPath$port3_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    SETxSTATIONxPATHWAY@self$setPath$port4_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    SETxSTATIONxPATHWAY@self$setPath$port5_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    SETxSTATIONxPATHWAY@self$setPath$port6_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), NULL(NULL[0]), 

    SETxSTATIONxPATHWAY@self$setSignal	PTR struct . size(2) Largest target is 24
		 -> SIG_BOT(BANK5[18]), SIG_TOP(BANK5[18]), 

    SETxSTATIONxPATHWAY@self$stnTrack1$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    SETxSTATIONxPATHWAY@self$stnTrack1$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    SETxSTATIONxPATHWAY@self$stnTrack2$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    SETxSTATIONxPATHWAY@self$stnTrack2$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    SETxSTATIONxPATHWAY@self$stnTrack3$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    SETxSTATIONxPATHWAY@self$stnTrack3$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    SIG_BOT$port1_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    SIG_BOT$port2_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_13(BANK2[14]), HALL_BLK_4A(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 

    SIG_BOT$port3_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    SIG_BOT$port4_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    SIG_BOT$port5_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    SIG_BOT$port6_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), NULL(NULL[0]), 

    SIG_TOP$port1_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    SIG_TOP$port2_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_13(BANK2[14]), HALL_BLK_4A(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 

    SIG_TOP$port3_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    SIG_TOP$port4_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    SIG_TOP$port5_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    SIG_TOP$port6_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), NULL(NULL[0]), 

    sp____gmtime_r	PTR struct tm size(2) Largest target is 25
		 -> gmtime@tm(BANK5[24]), NULL(NULL[0]), 

    sp____gmtime_r$__tm_zone	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_42(CODE[4]), 

    sp__ARPV4_Lookup	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK7[104]), arpMap$macAddress(BANK7[6]), NULL(NULL[0]), 

    sp__ETH_NewPacket	PTR struct . size(2) Largest target is 240
		 -> txData(BANK6[200]), NULL(NULL[0]), 

    sp__GetDataFromSendMailBox	PTR struct . size(2) Largest target is 80
		 -> udpTransBox(BANK8[80]), NULL(NULL[0]), 

    sp__GETxDATAxFROMxRECEIVExMAILxBOX	PTR struct . size(2) Largest target is 80
		 -> udpRecvBox(BANK7[80]), NULL(NULL[0]), 

    sp__gmtime	PTR struct tm size(2) Largest target is 25
		 -> gmtime@tm(BANK5[24]), NULL(NULL[0]), 

    sp__gmtime$__tm_zone	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_42(CODE[4]), 

    sp__MAC_getAddress	PTR const struct . size(2) Largest target is 6
		 -> macAddress(BANK2[6]), 

    sp__makeIpv4AddresstoStr	PTR unsigned char  size(2) Largest target is 15
		 -> makeIpv4AddresstoStr@ip_str(BANK5[15]), 

    sp__memcpy	PTR void  size(1) Largest target is 28
		 -> ARPV4_Packet@header(BANK0[28]), ARPV4_Request@header(COMRAM[28]), header$sha(COMRAM[6]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 2
		 -> STR_19(CODE[2]), STR_20(CODE[2]), NULL(NULL[0]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__udp_table_getIterator	PTR struct . size(2) Largest target is 5
		 -> UDP_CallBackTable(CODE[5]), 

    sp__udp_table_nextEntry	PTR struct . size(2) Largest target is 5
		 -> UDP_CallBackTable(CODE[5]), NULL(NULL[0]), 

    sp__udp_table_nextEntry$callBack	PTR FTN(short ,)void  size(3) Largest target is 1
		 -> UDPxDATAxRECV(), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_17(CODE[21]), STR_18(CODE[19]), STR_21(CODE[12]), STR_27(CODE[21]), 
		 -> STR_28(CODE[8]), STR_29(CODE[13]), STR_30(CODE[17]), STR_31(CODE[13]), 
		 -> STR_32(CODE[4]), STR_34(CODE[4]), STR_36(CODE[4]), STR_38(CODE[5]), 
		 -> STR_40(CODE[2]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 80
		 -> IPV4_Packet@msg(BANK0[40]), logSyslog@storage(COMRAM[12]), makeIpv4AddresstoStr@ip_str(BANK5[15]), Network_Read@debug_str(BANK1[80]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> F183$tm_hour(BANK5[2]), F183$tm_mday(BANK5[2]), F183$tm_min(BANK5[2]), F183$tm_mon(BANK5[2]), 
		 -> F183$tm_sec(BANK5[2]), F183$tm_year(BANK5[2]), ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 
		 -> STR_23(CODE[2]), STR_24(CODE[2]), STR_25(CODE[2]), STR_26(CODE[2]), 
		 -> STR_33(CODE[2]), STR_35(CODE[2]), STR_37(CODE[2]), STR_39(CODE[2]), 
		 -> STR_43(CODE[7]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> F183$tm_hour(BANK5[2]), F183$tm_mday(BANK5[2]), F183$tm_min(BANK5[2]), F183$tm_mon(BANK5[2]), 
		 -> F183$tm_sec(BANK5[2]), F183$tm_year(BANK5[2]), ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 
		 -> STR_23(CODE[2]), STR_24(CODE[2]), STR_25(CODE[2]), STR_26(CODE[2]), 
		 -> STR_33(CODE[2]), STR_35(CODE[2]), STR_37(CODE[2]), STR_39(CODE[2]), 

    strtok@p	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    time@t	PTR unsigned long  size(2) Largest target is 4
		 -> arpTimer(BANK1[4]), Network_Manage@now(BANK0[4]), NULL(NULL[0]), 

    TMR0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> rtcc_handler(), TMR0_DefaultInterruptHandler(), NULL(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> rtcc_handler(), TMR0_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> MILLISECOND_HANDLER(), TMR1_DefaultInterruptHandler(), NULL(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> MILLISECOND_HANDLER(), TMR1_DefaultInterruptHandler(), 

    top$getFreightEnterStation	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_21A(BANK3[14]), HALL_BLK_9B(BANK3[14]), 

    top$getFreightEnterStation$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    top$getFreightLeaveStation	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_13(BANK2[14]), HALL_BLK_4A(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 

    top$getFreightLeaveStation$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    top$getOccBlkIn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_21B(BANK4[14]), OCC_FR_9B(BANK4[14]), 

    top$getOccBlkIn$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    top$getOccBlkOut	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    top$getOccBlkOut$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    top$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    top$setOccBlkIn	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    top$setOccBlkIn$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    top$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    top$setPath	PTR struct . size(2) Largest target is 24
		 -> WS_BOT(BANK5[18]), WS_TOP(BANK5[18]), 

    top$setPath$port1_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    top$setPath$port2_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_13(BANK2[14]), HALL_BLK_4A(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 

    top$setPath$port3_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    top$setPath$port4_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    top$setPath$port5_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    top$setPath$port6_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), NULL(NULL[0]), 

    top$setSignal	PTR struct . size(2) Largest target is 24
		 -> SIG_BOT(BANK5[18]), SIG_TOP(BANK5[18]), 

    top$setSignal$port1_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    top$setSignal$port2_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_13(BANK2[14]), HALL_BLK_4A(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 

    top$setSignal$port3_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    top$setSignal$port4_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    top$setSignal$port5_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    top$setSignal$port6_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), NULL(NULL[0]), 

    top$stnTrack1$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    top$stnTrack1$getOccStn$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    top$stnTrack1$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    top$stnTrack1$setOccStn$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    top$stnTrack2$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    top$stnTrack2$getOccStn$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    top$stnTrack2$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    top$stnTrack2$setOccStn$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    top$stnTrack3$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    top$stnTrack3$getOccStn$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    top$stnTrack3$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    top$stnTrack3$setOccStn$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    txData$nextPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK6[200]), NULL(NULL[0]), 

    txData$nextPacket$nextPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK6[200]), NULL(NULL[0]), 

    txData$nextPacket$prevPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK6[200]), NULL(NULL[0]), 

    txData$prevPacket	PTR void  size(2) Largest target is 240
		 -> txData(BANK6[200]), NULL(NULL[0]), 

    UDP_CallBackTable$callBack	PTR FTN(short ,)void  size(3) Largest target is 1
		 -> UDPxDATAxRECV(), 

    UDP_Receive@hptr	PTR struct . size(2) Largest target is 5
		 -> UDP_CallBackTable(CODE[5]), NULL(NULL[0]), 

    UDP_Receive@hptr$callBack	PTR FTN(short ,)void  size(3) Largest target is 1
		 -> UDPxDATAxRECV(), 

    ?_udp_table_nextEntry$callBack	PTR FTN(short ,)void  size(3) Largest target is 1
		 -> UDPxDATAxRECV(), 

    udp_table_nextEntry@i	PTR struct . size(2) Largest target is 5
		 -> UDP_CallBackTable(CODE[5]), NULL(NULL[0]), 

    UPDATExMOUNTAINxSTATION@self	PTR struct . size(2) Largest target is 60
		 -> waldberg(BANK2[54]), waldsee(BANK2[54]), 

    UPDATExMOUNTAINxSTATION@self$getOccAmpOut	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    UPDATExMOUNTAINxSTATION@self$getOccAmpOut$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    UPDATExMOUNTAINxSTATION@self$getTrainEnterSiebwaldeStn	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    UPDATExMOUNTAINxSTATION@self$getTrainEnterSiebwaldeStn$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    UPDATExMOUNTAINxSTATION@self$setOccAmpOut	PTR struct . size(2) Largest target is 4
		 -> OCC_TO_T3(BANK2[3]), OCC_TO_T6(BANK2[3]), 

    UPDATExMOUNTAINxSTATION@self$setPath	PTR struct . size(2) Largest target is 24
		 -> WS_WALDBERG(BANK5[18]), WS_WALDSEE(BANK5[18]), 

    UPDATExMOUNTAINxSTATION@self$stnTrack1$getTrainEnterStnTrack	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    UPDATExMOUNTAINxSTATION@self$stnTrack1$getTrainEnterStnTrack$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    UPDATExMOUNTAINxSTATION@self$stnTrack2$getTrainEnterStnTrack	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    UPDATExMOUNTAINxSTATION@self$stnTrack2$getTrainEnterStnTrack$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    UPDATExMOUNTAINxTRAINxWAIT@self	PTR struct . size(2) Largest target is 60
		 -> waldberg(BANK2[54]), waldsee(BANK2[54]), 

    UPDATExMOUNTAINxTRAINxWAIT@self$getOccAmpOut	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    UPDATExMOUNTAINxTRAINxWAIT@self$getTrainEnterSiebwaldeStn	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    UPDATExMOUNTAINxTRAINxWAIT@self$setOccAmpOut	PTR struct . size(2) Largest target is 4
		 -> OCC_TO_T3(BANK2[3]), OCC_TO_T6(BANK2[3]), 

    UPDATExMOUNTAINxTRAINxWAIT@self$setPath	PTR struct . size(2) Largest target is 24
		 -> WS_WALDBERG(BANK5[18]), WS_WALDSEE(BANK5[18]), 

    UPDATExMOUNTAINxTRAINxWAIT@self$stnTrack1$getTrainEnterStnTrack	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    UPDATExMOUNTAINxTRAINxWAIT@self$stnTrack2$getTrainEnterStnTrack	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    UPDATExSTATION@self	PTR struct . size(2) Largest target is 89
		 -> bot(BANK3[76]), top(BANK3[76]), 

    UPDATExSTATION@self$getFreightEnterStation	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_21A(BANK3[14]), HALL_BLK_9B(BANK3[14]), 

    UPDATExSTATION@self$getFreightEnterStation$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    UPDATExSTATION@self$getFreightLeaveStation	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_13(BANK2[14]), HALL_BLK_4A(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 

    UPDATExSTATION@self$getFreightLeaveStation$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    UPDATExSTATION@self$getOccBlkIn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_21B(BANK4[14]), OCC_FR_9B(BANK4[14]), 

    UPDATExSTATION@self$getOccBlkIn$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    UPDATExSTATION@self$getOccBlkOut	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    UPDATExSTATION@self$getOccBlkOut$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    UPDATExSTATION@self$setOccBlkIn	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    UPDATExSTATION@self$setPath	PTR struct . size(2) Largest target is 24
		 -> WS_BOT(BANK5[18]), WS_TOP(BANK5[18]), 

    UPDATExSTATION@self$setSignal	PTR struct . size(2) Largest target is 24
		 -> SIG_BOT(BANK5[18]), SIG_TOP(BANK5[18]), 

    UPDATExSTATION@self$stnTrack1$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    UPDATExSTATION@self$stnTrack1$getOccStn$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    UPDATExSTATION@self$stnTrack1$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    UPDATExSTATION@self$stnTrack2$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    UPDATExSTATION@self$stnTrack2$getOccStn$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    UPDATExSTATION@self$stnTrack2$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    UPDATExSTATION@self$stnTrack3$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    UPDATExSTATION@self$stnTrack3$getOccStn$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    UPDATExSTATION@self$stnTrack3$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    UPDATExSTATIONxTRAINxWAIT@self	PTR struct . size(2) Largest target is 89
		 -> bot(BANK3[76]), top(BANK3[76]), 

    UPDATExSTATIONxTRAINxWAIT@self$getFreightEnterStation	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_21A(BANK3[14]), HALL_BLK_9B(BANK3[14]), 

    UPDATExSTATIONxTRAINxWAIT@self$getFreightLeaveStation	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_13(BANK2[14]), HALL_BLK_4A(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 

    UPDATExSTATIONxTRAINxWAIT@self$getOccBlkIn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_21B(BANK4[14]), OCC_FR_9B(BANK4[14]), 

    UPDATExSTATIONxTRAINxWAIT@self$getOccBlkOut	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    UPDATExSTATIONxTRAINxWAIT@self$setOccBlkIn	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    UPDATExSTATIONxTRAINxWAIT@self$setPath	PTR struct . size(2) Largest target is 24
		 -> WS_BOT(BANK5[18]), WS_TOP(BANK5[18]), 

    UPDATExSTATIONxTRAINxWAIT@self$setSignal	PTR struct . size(2) Largest target is 24
		 -> SIG_BOT(BANK5[18]), SIG_TOP(BANK5[18]), 

    UPDATExSTATIONxTRAINxWAIT@self$stnTrack1$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    UPDATExSTATIONxTRAINxWAIT@self$stnTrack1$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    UPDATExSTATIONxTRAINxWAIT@self$stnTrack2$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    UPDATExSTATIONxTRAINxWAIT@self$stnTrack2$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    UPDATExSTATIONxTRAINxWAIT@self$stnTrack3$getOccStn	PTR struct . size(2) Largest target is 15
		 -> OCC_FR_STN_1(BANK4[14]), OCC_FR_STN_10(BANK4[14]), OCC_FR_STN_11(BANK4[14]), OCC_FR_STN_12(BANK4[14]), 
		 -> OCC_FR_STN_2(BANK4[14]), OCC_FR_STN_3(BANK4[14]), 

    UPDATExSTATIONxTRAINxWAIT@self$stnTrack3$setOccStn	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 66
		 -> STR_17(CODE[21]), STR_18(CODE[19]), STR_21(CODE[12]), STR_22(CODE[66]), 
		 -> STR_27(CODE[21]), STR_28(CODE[8]), STR_29(CODE[13]), STR_30(CODE[17]), 
		 -> STR_31(CODE[13]), STR_32(CODE[4]), STR_34(CODE[4]), STR_36(CODE[4]), 
		 -> STR_38(CODE[5]), STR_40(CODE[2]), STR_41(CODE[26]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 66
		 -> STR_17(CODE[21]), STR_18(CODE[19]), STR_21(CODE[12]), STR_22(CODE[66]), 
		 -> STR_27(CODE[21]), STR_28(CODE[8]), STR_29(CODE[13]), STR_30(CODE[17]), 
		 -> STR_31(CODE[13]), STR_32(CODE[4]), STR_34(CODE[4]), STR_36(CODE[4]), 
		 -> STR_38(CODE[5]), STR_40(CODE[2]), STR_41(CODE[26]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 66
		 -> STR_17(CODE[21]), STR_18(CODE[19]), STR_21(CODE[12]), STR_22(CODE[66]), 
		 -> STR_27(CODE[21]), STR_28(CODE[8]), STR_29(CODE[13]), STR_30(CODE[17]), 
		 -> STR_31(CODE[13]), STR_32(CODE[4]), STR_34(CODE[4]), STR_36(CODE[4]), 
		 -> STR_38(CODE[5]), STR_40(CODE[2]), STR_41(CODE[26]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    VOLTDETECT$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    waldberg$getOccAmpOut	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    waldberg$getOccAmpOut$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    waldberg$getTrainEnterSiebwaldeStn	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    waldberg$getTrainEnterSiebwaldeStn$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    waldberg$getTrainEnterStnTrack	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    waldberg$setOccAmpOut	PTR struct . size(2) Largest target is 4
		 -> OCC_TO_T3(BANK2[3]), OCC_TO_T6(BANK2[3]), 

    waldberg$setOccAmpOut$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    waldberg$setPath	PTR struct . size(2) Largest target is 24
		 -> WS_WALDBERG(BANK5[18]), WS_WALDSEE(BANK5[18]), 

    waldberg$setPath$port1_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    waldberg$setPath$port2_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_13(BANK2[14]), HALL_BLK_4A(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 

    waldberg$setPath$port3_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    waldberg$setPath$port4_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    waldberg$setPath$port5_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    waldberg$setPath$port6_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), NULL(NULL[0]), 

    waldberg$stnTrack1$getTrainEnterStnTrack	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    waldberg$stnTrack1$getTrainEnterStnTrack$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    waldberg$stnTrack2$getTrainEnterStnTrack	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    waldberg$stnTrack2$getTrainEnterStnTrack$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    waldsee$getOccAmpOut	PTR struct . size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    waldsee$getOccAmpOut$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    waldsee$getTrainEnterSiebwaldeStn	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    waldsee$getTrainEnterSiebwaldeStn$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    waldsee$getTrainEnterStnTrack	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    waldsee$setOccAmpOut	PTR struct . size(2) Largest target is 4
		 -> OCC_TO_T3(BANK2[3]), OCC_TO_T6(BANK2[3]), 

    waldsee$setOccAmpOut$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    waldsee$setPath	PTR struct . size(2) Largest target is 24
		 -> WS_WALDBERG(BANK5[18]), WS_WALDSEE(BANK5[18]), 

    waldsee$setPath$port1_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    waldsee$setPath$port2_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_13(BANK2[14]), HALL_BLK_4A(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 

    waldsee$setPath$port3_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    waldsee$setPath$port4_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    waldsee$setPath$port5_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    waldsee$setPath$port6_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), NULL(NULL[0]), 

    waldsee$stnTrack1$getTrainEnterStnTrack	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    waldsee$stnTrack1$getTrainEnterStnTrack$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    waldsee$stnTrack2$getTrainEnterStnTrack	PTR struct . size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    waldsee$stnTrack2$getTrainEnterStnTrack$portx_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    WS_BOT$port1_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    WS_BOT$port2_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_13(BANK2[14]), HALL_BLK_4A(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 

    WS_BOT$port3_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    WS_BOT$port4_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    WS_BOT$port5_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    WS_BOT$port6_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), NULL(NULL[0]), 

    WS_TOP$port1_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    WS_TOP$port2_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_13(BANK2[14]), HALL_BLK_4A(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 

    WS_TOP$port3_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    WS_TOP$port4_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    WS_TOP$port5_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    WS_TOP$port6_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), NULL(NULL[0]), 

    WS_WALDBERG$port1_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    WS_WALDBERG$port2_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_13(BANK2[14]), HALL_BLK_4A(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 

    WS_WALDBERG$port3_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    WS_WALDBERG$port4_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    WS_WALDBERG$port5_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    WS_WALDBERG$port6_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), NULL(NULL[0]), 

    WS_WALDSEE$port1_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATD(BITBIGSFR_1hhl[1]), LATE(ABS[1]), 
		 -> LATJ(ABS[1]), 

    WS_WALDSEE$port2_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_13(BANK2[14]), HALL_BLK_4A(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 

    WS_WALDSEE$port3_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T1(BANK3[14]), HALL_BLK_T2(BANK3[14]), HALL_BLK_T7(BANK4[14]), HALL_BLK_T8(BANK4[14]), 
		 -> LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_TO_21B(BANK2[3]), 
		 -> OCC_TO_9B(BANK2[3]), PORTE(BITBIGSFR_1ll[1]), PORTF(BITBIGSFR_1ll[1]), PORTG(ABS[1]), 
		 -> PORTH(ABS[1]), 

    WS_WALDSEE$port4_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> HALL_BLK_T4(BANK3[14]), HALL_BLK_T5(BANK3[14]), LATB(BITBIGSFR_1hhl[1]), LATC(BITBIGSFR_1hhl[1]), 
		 -> LATJ(ABS[1]), OCC_FR_BLK13(BANK4[14]), OCC_FR_BLK4(BANK4[14]), 

    WS_WALDSEE$port5_ptr	PTR volatile unsigned char  size(2) Largest target is 15
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), OCC_FR_T3(BANK4[14]), OCC_FR_T6(BANK4[14]), 
		 -> OCC_TO_STN_1(BANK2[3]), OCC_TO_STN_10(BANK2[3]), OCC_TO_STN_11(BANK2[3]), OCC_TO_STN_12(BANK2[3]), 
		 -> OCC_TO_STN_2(BANK2[3]), OCC_TO_STN_3(BANK2[3]), NULL(NULL[0]), 

    WS_WALDSEE$port6_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATB(BITBIGSFR_1hhl[1]), LATJ(ABS[1]), NULL(NULL[0]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _UPDATExSTATIONxTRAINxWAIT->_CREATExTASKxSTATUSxMESSAGE
    _UPDATExSTATION->_MAINxSTATIONxOUTBOUND
    _UPDATExSTATION->_MAINxSTATIONxPASSING
    _MAINxSTATIONxPASSING->_SETxSIGNAL
    _MAINxSTATIONxOUTBOUND->_SETxSIGNAL
    _SETxSIGNAL->_CREATExTASKxSTATUSxMESSAGE
    _MAINxSTATIONxINBOUND->_SETxSTATIONxPATHWAY
    _SETxSTATIONxPATHWAY->_CREATExTASKxSTATUSxMESSAGE
    _UPDATExMOUNTAINxTRAINxWAIT->_CREATExTASKxSTATUSxMESSAGE
    _UPDATExMOUNTAINxSTATION->_MOUNTAINxSTATIONxINBOUND
    _UPDATExMOUNTAINxSTATION->_MOUNTAINxSTATIONxOUTBOUND
    _MOUNTAINxSTATIONxOUTBOUND->_SETxMNTSTATIONxPATHWAY
    _MOUNTAINxSTATIONxINBOUND->_SETxMNTSTATIONxPATHWAY
    _SETxMNTSTATIONxPATHWAY->_CREATExTASKxSTATUSxMESSAGE
    _CREATExTASKxSTATUSxMESSAGE->___lldiv
    _GETxRANDOMxNUMBER->_rand
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _Network_Init->_LOG_Init
    _timersInit->_time
    _rtcc_init->_TMR0_SetInterruptHandler
    _Network_WaitForLink->_ETH_CheckLinkUp
    _LOG_Init->_printf
    _printf->_vfprintf
    _IPV4_Init->_ipdb_init
    _ETH_Init->_ETH_CheckLinkUp
    _PHY_Write->_PHY_WaitForBusy
    _ARPV4_Init->_ETH_GetMAC
    _PROCESSxETHxDATA->_UDP_Start
    _UDP_Send->_IPV4_Send
    _Network_SaveStartPosition->_ETH_GetReadPtr
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _utoa->_pad
    _stoa->_fputc
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___almod
    _getHeaderLen->_ETH_SetReadPtr
    _getHeaderLen->_ETH_SetRxByteCount
    _ETH_SetRxByteCount->_ETH_GetRxByteCount
    _UDPxDATAxRECV->_PutDataInReceiveMailBox
    _ETH_SetReadPtr->_Network_GetStartPosition
    _IPv4_Start->_ARPV4_Request
    _ARPV4_Request->_ETH_WriteStart
    _IPV4_Send->_ETH_TxComputeChecksum
    _ETH_TxComputeChecksum->_ETH_ComputeChecksum
    _ETH_Copy->___wmul
    _ETH_RxComputeChecksum->_ETH_ComputeChecksum
    _ARPV4_Packet->_ETH_WriteStart
    _ETH_WriteStart->_ETH_Shift_Tx_Packets
    _ETH_Send->_ETH_SendQueued
    _ETH_EventHandler->_ETH_Shift_Tx_Packets
    _ETH_Shift_Tx_Packets->___wmul
    _ETH_CheckLinkUp->_PHY_Read
    _PHY_Read->_PHY_WaitForBusy
    _ETH_TxReset->_ETH_PacketListReset
    _MILLIESxINIT->_SETxMILLISECONDxUPDATExHANDLER
    _MILLIESxINIT->_TMR1_SetInterruptHandler
    _INITxSTATION->_INITxPATHWAYxSTATION
    _INITxRANDxNUMBER->_rand
    _rand->___lmul
    _INITxMOUNTAINxSTATION->_INITxPATHWAYxMNTSTATION
    _DebounceIO->_DEBOUNCExIO

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_PROCESSxETHxDATA
    _PROCESSxETHxDATA->_Network_Manage
    _UDP_Start->_IPv4_Start
    _Network_Manage->_Network_Read
    _Network_Read->_IPV4_Packet
    _IPV4_Packet->_ICMP_Receive
    _UDP_Receive->_ICMP_PortUnreachable
    _ICMP_PortUnreachable->_IPv4_Start
    _ICMP_Receive->_ICMP_EchoReply
    _ICMP_EchoReply->_IPv4_Start

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _Network_Manage->_Network_Read

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0  546026
                                            138 BANK0     12    12      0
     _CHECKxDATAxINxRECEIVExMAILxBOX
         _CREATExTASKxSTATUSxMESSAGE
                         _DebounceIO
     _GETxDATAxFROMxRECEIVExMAILxBOX
                         _GETxMILLIS
              _INITxMOUNTAINxSTATION
                   _INITxRANDxNUMBER
                       _INITxSTATION
                       _MILLIESxINIT
                   _PROCESSxETHxDATA
              _PROCESSxETHxDATAxINIT
          _PUTxDATAxINxSENDxMAILxBOX
     _SETxMILLISECONDxUPDATExHANDLER
                  _SYSTEM_Initialize
            _UPDATExMOUNTAINxSTATION
         _UPDATExMOUNTAINxTRAINxWAIT
                     _UPDATExSTATION
          _UPDATExSTATIONxTRAINxWAIT
                  _compareDataToSend
 ---------------------------------------------------------------------------------
 (1) _compareDataToSend                                    8     3      5     462
                                              4 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _UPDATExSTATIONxTRAINxWAIT                           18    16      2   17546
                                             33 COMRAM    18    16      2
         _CREATExTASKxSTATUSxMESSAGE
                         _GETxMILLIS
                  _GETxRANDOMxNUMBER
 ---------------------------------------------------------------------------------
 (1) _UPDATExSTATION                                      10     8      2  192430
                                             62 COMRAM    10     8      2
         _CREATExTASKxSTATUSxMESSAGE
                  _GETxRANDOMxNUMBER
               _MAINxSTATIONxINBOUND
              _MAINxSTATIONxOUTBOUND
               _MAINxSTATIONxPASSING
                            _SETxOCC
                         _SETxSIGNAL
 ---------------------------------------------------------------------------------
 (2) _MAINxSTATIONxPASSING                                14    12      2   55768
                                             48 COMRAM    14    12      2
         _CREATExTASKxSTATUSxMESSAGE
                         _GETxMILLIS
                            _SETxOCC
                         _SETxSIGNAL
                _SETxSTATIONxPATHWAY
 ---------------------------------------------------------------------------------
 (2) _MAINxSTATIONxOUTBOUND                               14    12      2   55613
                                             48 COMRAM    14    12      2
         _CREATExTASKxSTATUSxMESSAGE
                         _GETxMILLIS
                            _SETxOCC
                         _SETxSIGNAL
                _SETxSTATIONxPATHWAY
 ---------------------------------------------------------------------------------
 (2) _SETxSIGNAL                                          15    11      4   18823
                                             33 COMRAM    15    11      4
         _CREATExTASKxSTATUSxMESSAGE
 ---------------------------------------------------------------------------------
 (2) _MAINxSTATIONxINBOUND                                14    12      2   39186
                                             46 COMRAM    14    12      2
         _CREATExTASKxSTATUSxMESSAGE
                         _GETxMILLIS
                  _GETxRANDOMxNUMBER
                            _SETxOCC
                _SETxSTATIONxPATHWAY
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _SETxSTATIONxPATHWAY                                 13     9      4   17981
                                             33 COMRAM    13     9      4
         _CREATExTASKxSTATUSxMESSAGE
 ---------------------------------------------------------------------------------
 (1) _UPDATExMOUNTAINxTRAINxWAIT                          18    16      2   18219
                                             33 COMRAM    18    16      2
         _CREATExTASKxSTATUSxMESSAGE
                         _GETxMILLIS
                  _GETxRANDOMxNUMBER
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _UPDATExMOUNTAINxSTATION                             14    12      2  110447
                                             56 COMRAM    14    12      2
         _CREATExTASKxSTATUSxMESSAGE
                         _GETxMILLIS
                  _GETxRANDOMxNUMBER
           _MOUNTAINxSTATIONxINBOUND
          _MOUNTAINxSTATIONxOUTBOUND
             _SETxMNTSTATIONxPATHWAY
                            _SETxOCC
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _MOUNTAINxSTATIONxOUTBOUND                           14    12      2   34496
                                             42 COMRAM    14    12      2
         _CREATExTASKxSTATUSxMESSAGE
                         _GETxMILLIS
             _SETxMNTSTATIONxPATHWAY
                            _SETxOCC
 ---------------------------------------------------------------------------------
 (2) _MOUNTAINxSTATIONxINBOUND                            14    12      2   36954
                                             42 COMRAM    14    12      2
         _CREATExTASKxSTATUSxMESSAGE
                         _GETxMILLIS
                  _GETxRANDOMxNUMBER
             _SETxMNTSTATIONxPATHWAY
                            _SETxOCC
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _SETxOCC                                              6     3      3    3575
                                              4 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (2) _SETxMNTSTATIONxPATHWAY                               9     6      3   15718
                                             33 COMRAM     9     6      3
         _CREATExTASKxSTATUSxMESSAGE
 ---------------------------------------------------------------------------------
 (2) _CREATExTASKxSTATUSxMESSAGE                          16    13      3   14679
                                             17 COMRAM    16    13      3
          _PUTxDATAxINxSENDxMAILxBOX
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _PUTxDATAxINxSENDxMAILxBOX                            4     2      2     461
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _GETxRANDOMxNUMBER                                    2     0      2    1196
                                             22 COMRAM     2     0      2
                               _rand
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0   32015
               _INTERRUPT_Initialize
                       _Network_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     211
                                              7 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Network_Init                                         0     0      0   31593
                         _ARPV4_Init
                           _ETH_Init
                          _IPV4_Init
                           _LOG_Init
                _Network_WaitForLink
                          _rtcc_init
                         _timersInit
 ---------------------------------------------------------------------------------
 (3) _timersInit                                           0     0      0     571
                               _time
 ---------------------------------------------------------------------------------
 (3) _rtcc_init                                            0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             3     0      3     211
                                              4 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _Network_WaitForLink                                  0     0      0     278
                    _ETH_CheckLinkUp
 ---------------------------------------------------------------------------------
 (3) _LOG_Init                                             7     7      0   28815
                                             78 COMRAM     7     7      0
                             _printf
                               _time
 ---------------------------------------------------------------------------------
 (4) _printf                                               9     3      6   28080
                                             71 COMRAM     7     1      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _IPV4_Init                                            0     0      0      99
                          _ipdb_init
 ---------------------------------------------------------------------------------
 (4) _ipdb_init                                            1     1      0      99
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ETH_Init                                             4     4      0    1229
                                             19 COMRAM     2     2      0
                    _ETH_CheckLinkUp
                          _ETH_Flush
                _ETH_PacketListReset
                     _MAC_getAddress
                          _PHY_Write
 ---------------------------------------------------------------------------------
 (4) _PHY_Write                                            4     2      2     626
                                              6 COMRAM     4     2      2
                    _PHY_WaitForBusy
 ---------------------------------------------------------------------------------
 (4) _MAC_getAddress                                       2     0      2       0
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _ARPV4_Init                                           1     1      0     390
                                              6 COMRAM     1     1      0
                         _ETH_GetMAC
 ---------------------------------------------------------------------------------
 (4) _ETH_GetMAC                                           2     0      2     291
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PROCESSxETHxDATAxINIT                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PROCESSxETHxDATA                                     6     6      0  151045
                                            134 BANK0      4     4      0
     _CHECKxDATAxINxRECEIVExMAILxBOX
             _CheckDataInSendMailBox
                    _ETH_CheckLinkUp
                        _ETH_TxReset
                     _ETH_WriteBlock
     _GETxDATAxFROMxRECEIVExMAILxBOX
             _GetDataFromSendMailBox
                     _Network_Manage
                           _UDP_Send
                          _UDP_Start
 ---------------------------------------------------------------------------------
 (2) _UDP_Start                                            9     1      8   13061
                                             85 COMRAM     1     1      0
                                             20 BANK0      8     0      8
                 _ETH_ResetByteCount
                        _ETH_Write16
                         _IPv4_Start
 ---------------------------------------------------------------------------------
 (2) _UDP_Send                                             9     9      0    8573
                                             43 COMRAM     8     8      0
                   _ETH_GetByteCount
                         _ETH_Insert
              _ETH_TxComputeChecksum
                          _IPV4_Send
 ---------------------------------------------------------------------------------
 (3) _ETH_GetByteCount                                     2     0      2       0
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _Network_Manage                                       4     4      0  128280
                                            130 BANK0      4     4      0
                       _ARPV4_Update
                   _ETH_EventHandler
                       _Network_Read
                               _time
 ---------------------------------------------------------------------------------
 (4) _time                                                 9     5      4     571
                                              4 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (3) _Network_Read                                       102   102      0  125250
                                            126 BANK0      4     4      0
                                              0 BANK1     98    98      0
                       _ARPV4_Packet
                          _ETH_Flush
               _ETH_NextPacketUpdate
                      _ETH_ReadBlock
                        _IPV4_Packet
          _Network_SaveStartPosition
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _Network_SaveStartPosition                            0     0      0       0
                     _ETH_GetReadPtr
 ---------------------------------------------------------------------------------
 (4) _IPV4_Packet                                         77    77      0   86032
                                             49 BANK0     77    77      0
                           _ETH_Dump
                      _ETH_ReadBlock
              _ETH_RxComputeChecksum
                       _ICMP_Receive
          _IPV4_PseudoHeaderChecksum
                        _UDP_Receive
                       _getHeaderLen
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             23    15      8   30085
                                             71 COMRAM     8     0      8
                                              0 BANK0     13    13      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             7     2      5   27809
                                             64 COMRAM     7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           14    10      4   27012
                                             50 COMRAM    14    10      4
                               _dtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                21    14      7    5169
                                             29 COMRAM    21    14      7
                                _pad
 ---------------------------------------------------------------------------------
 (7) _utoa                                                12     6      6    6635
                                             29 COMRAM    12     6      6
                            ___lldiv
                            ___llmod
                                _pad
 ---------------------------------------------------------------------------------
 (8) ___llmod                                              9     1      8     560
                                              4 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8    1169
                                              4 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (7) _stoa                                                14    10      4    2079
                                             13 COMRAM    14    10      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _read_prec_or_width                                   5     3      2    1532
                                             10 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                15     9      6    8338
                                             29 COMRAM    15     9      6
                            ___aldiv
                            ___almod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                  9     3      6    4361
                                             20 COMRAM     9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4    1897
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               9     5      4    1397
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (8) _abs                                                  4     2      2     183
                                             14 COMRAM     4     2      2
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (8) ___almod                                             10     2      8    1353
                                              4 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (8) ___aldiv                                             14     6      8    1661
                                              4 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (5) _getHeaderLen                                         3     3      0     510
                                              8 COMRAM     3     3      0
                     _ETH_GetReadPtr
                 _ETH_GetRxByteCount
                          _ETH_Read8
                     _ETH_SetReadPtr
                 _ETH_SetRxByteCount
 ---------------------------------------------------------------------------------
 (6) _ETH_SetRxByteCount                                   2     0      2     191
                                              6 COMRAM     2     0      2
                 _ETH_GetRxByteCount (ARG)
 ---------------------------------------------------------------------------------
 (6) _ETH_Read8                                            1     1      0      37
                                              4 COMRAM     1     1      0
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (6) _ETH_GetRxByteCount                                   2     0      2       0
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ETH_GetReadPtr                                       2     0      2       0
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _UDP_Receive                                          9     7      2   26471
                                             33 BANK0      9     7      2
                      _ETH_ReadBlock
               _ICMP_PortUnreachable
             _IPV4_GetDatagramLength
                      _UDPxDATAxRECV *
              _udp_table_getIterator
                _udp_table_nextEntry
 ---------------------------------------------------------------------------------
 (6) _udp_table_nextEntry                                  4     2      2     155
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _udp_table_getIterator                                2     0      2       0
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _UDPxDATAxRECV                                        2     0      2    1647
                                             16 COMRAM     2     0      2
                          _ETH_Flush
                      _ETH_ReadBlock
            _PutDataInReceiveMailBox
 ---------------------------------------------------------------------------------
 (7) _PutDataInReceiveMailBox                             12     2     10     152
                                              4 COMRAM    12     2     10
 ---------------------------------------------------------------------------------
 (4) _ETH_Flush                                            2     2      0       0
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _IPV4_GetDatagramLength                               2     0      2       0
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _ICMP_PortUnreachable                                13     3     10   22969
                                             20 BANK0     13     3     10
                           _ETH_Copy
                         _ETH_Insert
                       _ETH_SaveRDPT
                     _ETH_SetReadPtr
              _ETH_TxComputeChecksum
                        _ETH_Write16
                        _ETH_Write32
                          _IPV4_Send
                         _IPv4_Start
           _Network_GetStartPosition
 ---------------------------------------------------------------------------------
 (7) _Network_GetStartPosition                             2     0      2       0
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _ETH_SetReadPtr                                       2     0      2     211
                                              6 COMRAM     2     0      2
           _Network_GetStartPosition (ARG)
 ---------------------------------------------------------------------------------
 (5) _IPV4_PseudoHeaderChecksum                           24    22      2     519
                                              4 COMRAM    24    22      2
 ---------------------------------------------------------------------------------
 (5) _ICMP_Receive                                        13    11      2   24654
                                             37 BANK0     12    10      2
                           _ETH_Dump
                         _ETH_Read16
                      _ETH_ReadBlock
                     _ICMP_EchoReply
 ---------------------------------------------------------------------------------
 (6) _ICMP_EchoReply                                      17    15      2   22421
                                             20 BANK0     17    15      2
                           _ETH_Copy
                         _ETH_Insert
                         _ETH_Read16
                       _ETH_SaveRDPT
              _ETH_TxComputeChecksum
                        _ETH_Write16
                          _IPV4_Send
                         _IPv4_Start
 ---------------------------------------------------------------------------------
 (3) _IPv4_Start                                          20    15      5   10915
                                              0 BANK0     20    15      5
                       _ARPV4_Lookup
                      _ARPV4_Request
                        _ETH_Write16
                        _ETH_Write32
                         _ETH_Write8
                     _ETH_WriteStart
 ---------------------------------------------------------------------------------
 (4) _ETH_Write8                                           1     1      0      31
                                              4 COMRAM     1     1      0
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (4) _ETH_Write32                                          4     0      4     493
                                              4 COMRAM     4     0      4
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (4) _ETH_Write16                                          2     0      2    1235
                                              4 COMRAM     2     0      2
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (4) _ARPV4_Request                                       55    51      4    5024
                                             30 COMRAM    55    51      4
                           _ETH_Send
                     _ETH_WriteBlock
                     _ETH_WriteStart
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _ARPV4_Lookup                                        11     7      4     257
                                              4 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (3) _IPV4_Send                                           11     9      2    4350
                                             32 COMRAM    11     9      2
                         _ETH_Insert
                           _ETH_Send
              _ETH_TxComputeChecksum
 ---------------------------------------------------------------------------------
 (4) _ETH_TxComputeChecksum                               14     8      6    2089
                                             18 COMRAM    14     8      6
                _ETH_ComputeChecksum
 ---------------------------------------------------------------------------------
 (4) _ETH_Insert                                           9     4      5    1750
                                              4 COMRAM     9     4      5
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (7) _ETH_SaveRDPT                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ETH_Read16                                           4     2      2      74
                                              4 COMRAM     4     2      2
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (7) _ETH_Copy                                             6     4      2    1414
                                             10 COMRAM     6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _ETH_Dump                                             2     0      2     431
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ETH_RxComputeChecksum                               21    17      4    1518
                                             18 COMRAM    21    17      4
                _ETH_ComputeChecksum
 ---------------------------------------------------------------------------------
 (5) _ETH_ComputeChecksum                                 14    10      4     780
                                              4 COMRAM    14    10      4
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (4) _ETH_NextPacketUpdate                                 0     0      0       0
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (4) _ARPV4_Packet                                        78    78      0    7351
                                             30 COMRAM    40    40      0
                                              0 BANK0     38    38      0
                      _ETH_ReadBlock
                           _ETH_Send
                     _ETH_WriteBlock
                     _ETH_WriteStart
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _memcpy                                               9     4      5     748
                                              4 COMRAM     9     4      5
 ---------------------------------------------------------------------------------
 (4) _ETH_WriteStart                                       8     4      4    2756
                                             22 COMRAM     8     4      4
                     _ETH_EdataWrite
                      _ETH_NewPacket
                 _ETH_ResetByteCount
               _ETH_Shift_Tx_Packets
 ---------------------------------------------------------------------------------
 (5) _ETH_NewPacket                                        5     3      2     502
                                              4 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (5) _ETH_WriteBlock                                       6     2      4     646
                                              4 COMRAM     6     2      4
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (5) _ETH_EdataWrite                                       1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _ETH_Send                                             6     6      0      34
                                              8 COMRAM     6     6      0
                     _ETH_SendQueued
 ---------------------------------------------------------------------------------
 (7) _ETH_ReadBlock                                        8     4      4    1399
                                              4 COMRAM     8     4      4
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (6) _ETH_EdataRead                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ETH_EventHandler                                     0     0      0    2193
                    _ETH_CheckLinkUp
                   _ETH_RemovePacket
                     _ETH_SendQueued
               _ETH_Shift_Tx_Packets
                           _PHY_Read
 ---------------------------------------------------------------------------------
 (5) _ETH_Shift_Tx_Packets                                12    12      0    1333
                                             10 COMRAM    12    12      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     912
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _ETH_SendQueued                                       4     4      0       0
                                              4 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (4) _ETH_RemovePacket                                     4     2      2     338
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _ETH_CheckLinkUp                                      4     4      0     278
                                             15 COMRAM     4     4      0
                           _PHY_Read
 ---------------------------------------------------------------------------------
 (5) _PHY_Read                                             9     5      4     244
                                              6 COMRAM     9     5      4
                    _PHY_WaitForBusy
 ---------------------------------------------------------------------------------
 (6) _PHY_WaitForBusy                                      2     2      0     170
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _ARPV4_Update                                         3     3      0     105
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _GetDataFromSendMailBox                               6     4      2      34
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _GETxDATAxFROMxRECEIVExMAILxBOX                       6     4      2      34
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _ETH_TxReset                                          0     0      0     102
                _ETH_PacketListReset
                 _ETH_ResetByteCount
 ---------------------------------------------------------------------------------
 (5) _ETH_ResetByteCount                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ETH_PacketListReset                                  4     4      0     102
                                              4 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _CheckDataInSendMailBox                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CHECKxDATAxINxRECEIVExMAILxBOX                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MILLIESxINIT                                         0     0      0     422
     _SETxMILLISECONDxUPDATExHANDLER
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             3     0      3     211
                                              4 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _SETxMILLISECONDxUPDATExHANDLER                       3     0      3     211
                                              4 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _INITxSTATION                                         0     0      0     242
               _INITxPATHWAYxSTATION
 ---------------------------------------------------------------------------------
 (2) _INITxPATHWAYxSTATION                                 4     0      4     242
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _INITxRANDxNUMBER                                     0     0      0    1196
                               _rand
 ---------------------------------------------------------------------------------
 (3) _rand                                                 6     4      2    1196
                                             16 COMRAM     6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8    1196
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _INITxMOUNTAINxSTATION                                0     0      0     242
            _INITxPATHWAYxMNTSTATION
 ---------------------------------------------------------------------------------
 (2) _INITxPATHWAYxMNTSTATION                              4     0      4     242
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _DebounceIO                                           5     5      0    6177
                                             25 COMRAM     5     5      0
                        _DEBOUNCExIO
                         _GETxMILLIS
 ---------------------------------------------------------------------------------
 (2) _GETxMILLIS                                           4     0      4       0
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _DEBOUNCExIO                                         21    18      3    5331
                                              4 COMRAM    21    18      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          2     2      0     229
                                              2 COMRAM     2     2      0
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR1_ISR                                            0     0      0     229
                                NULL *
                _MILLISECOND_HANDLER *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR1_WriteTimer                                     2     0      2     229
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _MILLISECOND_HANDLER                                 0     0      0       0
                                NULL *
   _Millisecond_DefaultUpdateHandler *
                         _UpdateTick *
 ---------------------------------------------------------------------------------
 (16) _UpdateTick                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _Millisecond_DefaultUpdateHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR0_ISR                                            0     0      0       0
                                NULL *
       _TMR0_DefaultInterruptHandler *
                       _rtcc_handler *
 ---------------------------------------------------------------------------------
 (15) _rtcc_handler                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CHECKxDATAxINxRECEIVExMAILxBOX
   _CREATExTASKxSTATUSxMESSAGE
     _PUTxDATAxINxSENDxMAILxBOX
     ___lldiv (ARG)
   _DebounceIO
     _DEBOUNCExIO
     _GETxMILLIS
   _GETxDATAxFROMxRECEIVExMAILxBOX
   _GETxMILLIS
   _INITxMOUNTAINxSTATION
     _INITxPATHWAYxMNTSTATION
   _INITxRANDxNUMBER
     _rand
       ___lmul
   _INITxSTATION
     _INITxPATHWAYxSTATION
   _MILLIESxINIT
     _SETxMILLISECONDxUPDATExHANDLER
     _TMR1_SetInterruptHandler
   _PROCESSxETHxDATA
     _CHECKxDATAxINxRECEIVExMAILxBOX
     _CheckDataInSendMailBox
     _ETH_CheckLinkUp
       _PHY_Read
         _PHY_WaitForBusy
     _ETH_TxReset
       _ETH_PacketListReset
       _ETH_ResetByteCount
     _ETH_WriteBlock
       _ETH_EdataWrite
     _GETxDATAxFROMxRECEIVExMAILxBOX
     _GetDataFromSendMailBox
     _Network_Manage
       _ARPV4_Update
       _ETH_EventHandler
         _ETH_CheckLinkUp
         _ETH_RemovePacket
         _ETH_SendQueued
         _ETH_Shift_Tx_Packets
           ___wmul
         _PHY_Read
       _Network_Read
         _ARPV4_Packet
           _ETH_ReadBlock
             _ETH_EdataRead
           _ETH_Send
             _ETH_SendQueued
           _ETH_WriteBlock
           _ETH_WriteStart
             _ETH_EdataWrite
             _ETH_NewPacket
             _ETH_ResetByteCount
             _ETH_Shift_Tx_Packets
           _memcpy
         _ETH_Flush
         _ETH_NextPacketUpdate
           _ETH_EdataRead
         _ETH_ReadBlock
         _IPV4_Packet
           _ETH_Dump
           _ETH_ReadBlock
           _ETH_RxComputeChecksum
             _ETH_ComputeChecksum
               _ETH_EdataRead
           _ICMP_Receive
             _ETH_Dump
             _ETH_Read16
               _ETH_EdataRead
             _ETH_ReadBlock
             _ICMP_EchoReply
               _ETH_Copy
                 ___wmul
               _ETH_Insert
                 _ETH_EdataWrite
               _ETH_Read16
               _ETH_SaveRDPT
               _ETH_TxComputeChecksum
                 _ETH_ComputeChecksum
               _ETH_Write16
                 _ETH_EdataWrite
               _IPV4_Send
                 _ETH_Insert
                 _ETH_Send
                 _ETH_TxComputeChecksum
               _IPv4_Start
                 _ARPV4_Lookup
                 _ARPV4_Request
                   _ETH_Send
                   _ETH_WriteBlock
                   _ETH_WriteStart
                   _memcpy
                 _ETH_Write16
                 _ETH_Write32
                   _ETH_EdataWrite
                 _ETH_Write8
                   _ETH_EdataWrite
                 _ETH_WriteStart
           _IPV4_PseudoHeaderChecksum
           _UDP_Receive
             _ETH_ReadBlock
             _ICMP_PortUnreachable
               _ETH_Copy
               _ETH_Insert
               _ETH_SaveRDPT
               _ETH_SetReadPtr
                 _Network_GetStartPosition (ARG)
               _ETH_TxComputeChecksum
               _ETH_Write16
               _ETH_Write32
               _IPV4_Send
               _IPv4_Start
               _Network_GetStartPosition
             _IPV4_GetDatagramLength
             _UDPxDATAxRECV *
               _ETH_Flush
               _ETH_ReadBlock
               _PutDataInReceiveMailBox
             _udp_table_getIterator *
             _udp_table_nextEntry *
           _getHeaderLen
             _ETH_GetReadPtr
             _ETH_GetRxByteCount
             _ETH_Read8
               _ETH_EdataRead
             _ETH_SetReadPtr
             _ETH_SetRxByteCount
               _ETH_GetRxByteCount (ARG)
           _sprintf
             _vfprintf
               _vfpfcnvrt
                 _dtoa
                   ___aldiv
                   ___almod
                   _abs
                     ___almod (ARG)
                   _pad
                     _fputc
                       _putch
                     _fputs
                       _fputc
                 _fputc
                 _read_prec_or_width
                   ___wmul
                 _stoa
                   _fputc
                 _utoa
                   ___lldiv
                   ___llmod
                   _pad
                 _xtoa
                   _pad
         _Network_SaveStartPosition
           _ETH_GetReadPtr
         _sprintf
       _time
     _UDP_Send
       _ETH_GetByteCount
       _ETH_Insert
       _ETH_TxComputeChecksum
       _IPV4_Send
     _UDP_Start
       _ETH_ResetByteCount
       _ETH_Write16
       _IPv4_Start
   _PROCESSxETHxDATAxINIT
   _PUTxDATAxINxSENDxMAILxBOX
   _SETxMILLISECONDxUPDATExHANDLER
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _Network_Init
       _ARPV4_Init
         _ETH_GetMAC
       _ETH_Init
         _ETH_CheckLinkUp
         _ETH_Flush
         _ETH_PacketListReset
         _MAC_getAddress
         _PHY_Write
           _PHY_WaitForBusy
       _IPV4_Init
         _ipdb_init
       _LOG_Init
         _printf
           _vfprintf
         _time
       _Network_WaitForLink
         _ETH_CheckLinkUp
       _rtcc_init
         _TMR0_SetInterruptHandler
       _timersInit
         _time
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _UPDATExMOUNTAINxSTATION
     _CREATExTASKxSTATUSxMESSAGE
     _GETxMILLIS
     _GETxRANDOMxNUMBER
       _rand
     _MOUNTAINxSTATIONxINBOUND
       _CREATExTASKxSTATUSxMESSAGE
       _GETxMILLIS
       _GETxRANDOMxNUMBER
       _SETxMNTSTATIONxPATHWAY
         _CREATExTASKxSTATUSxMESSAGE
       _SETxOCC
       ___lldiv
     _MOUNTAINxSTATIONxOUTBOUND
       _CREATExTASKxSTATUSxMESSAGE
       _GETxMILLIS
       _SETxMNTSTATIONxPATHWAY
       _SETxOCC
     _SETxMNTSTATIONxPATHWAY
     _SETxOCC
     ___lldiv
   _UPDATExMOUNTAINxTRAINxWAIT
     _CREATExTASKxSTATUSxMESSAGE
     _GETxMILLIS
     _GETxRANDOMxNUMBER
     ___lldiv
   _UPDATExSTATION
     _CREATExTASKxSTATUSxMESSAGE
     _GETxRANDOMxNUMBER
     _MAINxSTATIONxINBOUND
       _CREATExTASKxSTATUSxMESSAGE
       _GETxMILLIS
       _GETxRANDOMxNUMBER
       _SETxOCC
       _SETxSTATIONxPATHWAY
         _CREATExTASKxSTATUSxMESSAGE
       ___lldiv
     _MAINxSTATIONxOUTBOUND
       _CREATExTASKxSTATUSxMESSAGE
       _GETxMILLIS
       _SETxOCC
       _SETxSIGNAL
         _CREATExTASKxSTATUSxMESSAGE
       _SETxSTATIONxPATHWAY
     _MAINxSTATIONxPASSING
       _CREATExTASKxSTATUSxMESSAGE
       _GETxMILLIS
       _SETxOCC
       _SETxSIGNAL
       _SETxSTATIONxPATHWAY
     _SETxOCC
     _SETxSIGNAL
   _UPDATExSTATIONxTRAINxWAIT
     _CREATExTASKxSTATUSxMESSAGE
     _GETxMILLIS
     _GETxRANDOMxNUMBER
   _compareDataToSend

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     NULL(Fake) *
     _TMR0_DefaultInterruptHandler *
     _rtcc_handler *
   _TMR1_ISR
     NULL(Fake) *
     _MILLISECOND_HANDLER *
       NULL(Fake) *
       _Millisecond_DefaultUpdateHandler *
       _UpdateTick *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E7D      0       0      63        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0      50      21       31.2%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0      B8      19       71.9%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      C8      17       78.1%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      F4      15       95.3%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      F8      13       96.9%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      FA      11       97.7%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F9       9       97.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100     62      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     96      9D       5       98.1%
BITBANK14           7E      0       0      32        0.0%
BANK14              7E      0       0      33        0.0%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BIGRAM_1            60      0       0      47        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITBIGSFR_1hhhh     1F      0       0      41        0.0%
BITBIGSFRlhhhlh     1E      0       0      53        0.0%
BITBIGSFR_1hhhh     1A      0       0      37        0.0%
BITBIGSFR_1ll       19      0       0      46        0.0%
BITBIGSFRllhh       15      0       0      60        0.0%
BITBIGSFR_1hhhh      D      0       0      36        0.0%
BITBIGSFR_1hhhh      B      0       0      40        0.0%
BITBIGSFRlhhhlh      9      0       0      52        0.0%
BITBIGSFR_1lh        8      0       0      45        0.0%
BITBIGSFRlhhhlh      6      0       0      56        0.0%
BITBIGSFRlhhhhl      5      0       0      50        0.0%
BITBIGSFRllhl        4      0       0      61        0.0%
BITBIGSFR_1hhhh      2      0       0      42        0.0%
BITBIGSFRlhhhhl      2      0       0      51        0.0%
BITBIGSFRlhhhll      2      0       0      57        0.0%
BITBIGSFR_1hhhh      1      0       0      39        0.0%
BITBIGSFR_1hhhh      1      0       0      43        0.0%
BITBIGSFRlhhhlh      1      0       0      55        0.0%
BITBIGSFRlhhhlh      1      0       0      54        0.0%
BITBIGSFRlhhhhh      1      0       0      49        0.0%
BITBIGSFRlhhl        1      0       0      58        0.0%
BITBIGSFRlhl         1      0       0      59        0.0%
BITBIGSFRh           1      0       0      48        0.0%
BITBIGSFR_1hhhh      1      0       0      38        0.0%
BITBIGSFR_1hhl       1      0       0      44        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     7A5      62        0.0%
DATA                 0      0     7A5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Feb 04 16:58:08 2024

                       _INITxPATHWAYxMNTSTATION 828E                          _IPV4_GetDatagramLength 82EE  
                          _INITxPATHWAYxSTATION 827C                       ETH_Shift_Tx_Packets@pElem 0015  
                __end_of_sizeOfMntStationStruct FE03                   __end_of_MAINxSTATIONxOUTBOUND 3EEC  
                         _tReadIoSignalWaitTime FDE5                             ___wmul@multiplicand 0007  
                              ??_ICMP_EchoReply 0076                       ETH_Shift_Tx_Packets@timer 0011  
                   ??_IPV4_PseudoHeaderChecksum 0007                                 _timer0ReloadVal 0143  
                                ??_ICMP_Receive 0087                                     ?_GETxMILLIS 0005  
                                           l227 68E4                                             WREG 0FE8  
                                           _EIE 0EFB                                             _GIE 7F97  
                                   ?_ETH_GetMAC 0005                              ICMP_EchoReply@cksm 0080  
                       IPv4_Start@targetAddress 006D                                 _timer1ReloadVal 0141  
                                           _abs 80A4                                             _bot 0300  
                                           _pad 7278                 ETH_Shift_Tx_Packets@shiftOffset 000F  
                                           _ret 016A                                     ?_ETH_Read16 0005  
                                           _tmp 00FC                                             _top 034C  
                                  UDP_Start@ret 0056                                             prod 0FF3  
                         ??_ETH_ComputeChecksum 0009                                             tosl 0FFD  
                                           wreg 0FE8                                     ?_ETH_Insert 0005  
              __end_of_Network_GetStartPosition 8378                                    SETxOCC@value 0007  
                          udp_table_nextEntry@i 0005                                     ?_ETH_Write8 0001  
                                          EDATA 0F61                                 ?_Network_Manage 0001  
                                          ?_abs 000F                                            l2202 768C  
                                          l2203 767C                                            l2205 7694  
                                          l2214 7D5C                                            l2215 7D5E  
                                          l2209 80EC                                            l2163 804C  
                                          l2331 6C7E                                            l2323 6C08  
                                          l2155 576A                                            l2340 5906  
                                          l2332 6C7C                                            l2324 6C06  
                                          l2148 575E                                            l2341 5904  
                                          l2309 7DBC                                            l2157 5788  
                                          l2190 7F66                                            l2191 7F64  
                                          l2328 6CA2                                            l3312 2674  
                                          l2345 5A36                                            l2346 5974  
                                          l2362 69AA                                            l2347 5972  
                                          l2188 7F54                                            l2532 64D0  
                                          l2445 6A1C                                            l4302 5A5A  
                                          l4304 5A62                                            l4305 5A90  
                                          l4401 33CE                                            l3361 29B4  
                                          l3454 506E                                            l2742 13F6  
                                          l4326 5EB8                                            l4343 62E4  
                                          l1848 7A46                                            l4360 61D2  
                                          l4345 62EC                                            l1858 79FA  
                                          l2690 49F2                                            l3562 71E4  
                                          l1963 73C8                                            l1955 82B4  
                                          l4292 729E                                            l4437 80B2  
                                          l4358 61CA                                            ?_pad 0015  
                                          l3955 7508                                            STR_1 FFE5  
                                          STR_2 FFD6                                            STR_3 FF7F  
                                          STR_4 FFC2                                            STR_5 FF4B  
                                          STR_6 FF8E                                            STR_7 FF6E  
                                          STR_8 FEC4                                            STR_9 FEB0  
                 __end_of_INITxMOUNTAINxSTATION 66AA                                            _LATA 0F89  
                                          _LATB 0F8A                                            _LATC 0F8B  
                                          _LATD 0F8C                                            _LATE 0F8D  
                                          _LATF 0F8E                                            _LATG 0F8F  
                                          _LATH 0F90                                            _LATJ 0F91  
                                          _MIRD 0EB8                                            _MIWR 0EB6  
                             ??_PHY_WaitForBusy 0005                                            _TMR1 0FCE  
                                          _Time 0218                                            abs@a 000F  
                                    _DebounceIO 50B8                                            _dbuf 05A3  
                                          _main 252C                                            _dtoa 5A3A  
                                          _rand 744A                                            _seed 018A  
                               __end_of_SETxOCC 75E4                                            _prec 013D  
                                          _time 7816                                            pad@i 001C  
                                          pad@p 0019                                            fsr0h 0FEA  
               __end_of_UPDATExMOUNTAINxSTATION 1068                                            fsr1h 0FE2  
                                          indf0 0FEF                                            fsr2h 0FDA  
                                          fsr0l 0FE9                                            indf1 0FE7  
                                          indf2 0FDF                                            fsr1l 0FE1  
                                          fsr2l 0FD9                                            _stoa 5E3C  
                                          btemp 005B                                            _utoa 62D0  
                                          _xtoa 61B6                           _tFreightTrainWaitTime FDE9  
                                          prodh 0FF4                                            prodl 0FF3  
                                          start 0036                                      _WS_WALDSEE 0556  
                             ?_ETH_RemovePacket 0005                                 ETH_EdataWrite@d 0001  
                       _M_Box_Eth_Send_Ptr_prev 014D                                    ?_IPV4_Packet 0001  
                    makeIpv4AddresstoStr@ip_str 05DB                  UPDATExMOUNTAINxTRAINxWAIT@self 0022  
                    ??_TMR1_SetInterruptHandler 0008                            _ETH_Shift_Tx_Packets 58C2  
                                  ___param_bank 0000                                    ?_ETH_TxReset 0001  
                         ?_INITxPATHWAYxSTATION 0005                              ??_ETH_RemovePacket 0007  
                                  ?_ETH_Write32 0005                                    ?_ETH_Write16 0005  
                                         ??_abs 0011                                           ??_pad 001B  
                              ARPV4_Request@ret 0039                                   _OCC_FR_STN_10 047E  
                                 _OCC_FR_STN_11 0470                                   _OCC_FR_STN_12 0462  
                                   _DataMessage 0293                         __end_of_TMR0_Initialize 7CB4  
                ??_TMR0_DefaultInterruptHandler 0001                          _CheckDataInSendMailBox 8266  
                      __end_of_INITxRANDxNUMBER 7EBA                                 ??_UDPxDATAxRECV 0013  
                              _ETH_GetByteCount 8250                   __end_of_OSCILLATOR_Initialize 833C  
                              __end_of_ETH_Copy 6CA8                                           l13005 6942  
                                         l13033 7D92                                           l13017 697A  
                                         l13113 6CD8                                           l13041 7196  
                                         l13027 7D76                                           l13211 7878  
                                         l14011 6B96                                           l13043 71A2  
                              __end_of_ETH_Dump 7DDE                                           l13133 6D42  
                                         l13125 6D1E                                           l13117 6CEA  
                                         l13109 6CC4                                           l13053 71D6  
                                         l13141 74C6                                           l13071 66DE  
                                         l13119 6CF6                                           l13311 5B80  
                                         l13143 74D2                                           l14103 785A  
                                         l14041 78D2                                           l13217 78A8  
                                         l14017 6BBA                                           l13065 66C6  
                                         l13129 6D2C                                           l13161 72A8  
                                         l13321 5E5E                                           l13401 61EA  
                                         l13323 5E62                                __end_of_ETH_Init 58C2  
                                         l14045 78E6                                           l13077 6700  
                                         l13093 674E                                           l13165 72C0  
                                         l13157 7292                                           l13333 5ECE  
                                         l13149 74FA                                           l15013 3B68  
                                         l15005 3B2C                                           l13183 773A  
                                         l13079 670C                                           l13351 5F66  
                                         l13343 5F36                                           l13319 5E54  
                                         l13415 621C                                           l13407 6206  
                                         l15111 400A                                           l14305 7AC2  
                                         l12801 59AA                                           l14145 1104  
                                         l13097 6764                                           l13089 6740  
                                         l13337 5EE6                                           l13425 6270  
                                         l15201 21E0                                           l16001 0F00  
                                         l15033 3CCC                                           l15009 3B44  
                                         l12803 5A1E                                           l14155 1272  
                                         l13515 6C52                                           l13187 7748  
                                         l13259 4EE6                                           l13451 6DCA  
                                         l13347 5F4E                                           l13339 5EFC  
                                         l13611 331C                                           l14067 7C14  
                                         l16011 0F2E                                           l15027 3C62  
                             _nextPacketPointer 0145                                           l14309 7AD4  
                                         l13285 5AA0                                           l13365 6304  
                                         l14237 1930                                           l15133 417E  
                                         l15117 4074                                           l16005 0F0E  
                                         l14501 2D9A                                           l14421 2AC8  
                                         l14413 2A7A                                           l14405 2A30  
                                         l12911 4B36                                           l12903 4B20  
                                         l14175 13CE                                           l14191 155E  
                                         l13295 5B28                                           l13279 5A84  
                                         l13447 6D9E                                           l13375 6380  
                                         l13631 33A6                                           l13615 3322  
                                         l13607 330A                                           l14263 1AE4  
                                         l16103 5D86                                           l15215 22C2  
                                         l15143 41B8                                           l16023 0F98  
                                         l16015 0F3C                                           l16031 1020  
                                         l15063 3E38                                           l15047 3DA2  
                                         l12825 7446                                           l13457 792A  
                                         l13561 4A3E                                           l12761 6E0C  
                                         l13625 336A                                           l13617 3340  
                                         l16121 5DF8                                           l15081 3F04  
                                         l14433 2B2C                                           l14521 2E30  
                                         l12851 53EC                                           l13555 4A02  
                                         l13491 757C                                           l13731 7D26  
                                         l13715 36BE                                           l13651 3452  
                                         l13635 33C8                                           l13643 33D8  
                                         l14275 1B3E                                           l14291 1BBC  
                                         l14259 1AC2                                           l16107 5D92  
                                         l16131 5E0E                                           l16027 100E  
                                         l16019 0F60                                           l16051 468E  
                                         l14427 2B04                                           l16203 2586  
                                         l14349 6A5C                                           l13469 7950  
                                         l12837 528E                                           l12861 5414  
                                         l13565 4A44                                           l13709 3692  
                                         l13645 3400                                           l16109 5D9A  
                                         l14381 7140                                           l14541 68A6  
                                         l15165 209E                                           l15085 3F28  
                                         l15149 4230                                           l14509 2DDE  
                                         l14461 2C02                                           l14453 2BE4  
                                         l14445 2BAC                                           l15069 3EB0  
                                         l16213 25CA                                           l16221 25F6  
                                         l15319 8278                                           l12847 53C4  
                                         l12919 4B48                                           l13567 4A4C  
                                         l12871 7E5A                                           l13671 3524  
                                         l13663 34BA                                           l13655 3474  
                                         l13639 33D2                                           l13719 36CC  
                                         l14287 1BAE                                           l14279 1B5A  
                                         l16127 5E06                                           l14711 82B6  
                                         l14551 75B4                                           l15239 243E  
                                         l15183 20C4                                           l15247 24EE  
                                         l15095 3F50                                           l14439 2B6A  
                                         l14519 2E0E                                           l13833 5CF8  
                                         l13489 7568                                           l13657 3482  
                                         l13649 342E                                           l14625 5772  
                                         l15249 2528                                           l15169 20C0  
                                         l15601 0302                                           l15419 4F90  
                                         l15435 50A2                                           l12883 7DFA  
                                         l12859 5412                                           l13747 7F12  
                                         l12875 7E70                                           l13683 358E  
                                         l13691 35E0                                           l13675 3546  
                                         l15195 2178                                           l15099 3F54  
                                         l16059 4748                                           l14483 2CD8  
                                         l14563 4388                                           l14555 4316  
                                         l16163 7E1E                                           l16171 7E44  
                                         l13765 7F70                                           l12973 6EAC  
                                         l13677 3554                                           l13669 34FE  
                                         l15349 6B20                                           l16093 5D12  
                                         l16069 4808                                           l14477 2C9A  
                                         l14469 2C4C                                           l15621 0456  
                                         l15613 03BE                                           l16237 2662  
                                         l15279 824C                                           l12879 7DE8  
                                         l12895 4B08                                           l13791 7DC4  
                                         l13783 80EE                                           l13679 3570  
                                         l13871 7C58                                           l14727 7006  
                                         l14495 2D58                                           l14903 321E  
                                         l14583 44BE                                           l14575 4466  
                                         l15615 03CE                                           l15607 0372  
                                         l16239 267A                                           l14817 7FE0  
                                         l13937 67AA                                           l13689 35BE  
                                         l16089 5D02                                           l14489 2D1A  
                                         l14569 43F6                                           l14921 1BF6  
                                         l15705 083E                                           l15561 0004  
                                         l16169 7E42                                           l16361 28CE  
                                         l14739 7776                                           l12979 6EB6  
                                         l12995 6916                                           l13939 67B8  
                                         l13699 3612                                           l15299 7812  
                                         l14843 2E7C                                           l15723 08D6  
                                         l15651 05B0                                           l14757 77AC  
                                         l12989 6F2C                                           l13949 67F8  
                                         l13869 7C44                                           l14773 60F2  
                                         l14909 3296                                           l14589 4512  
                                         l14597 4582                                           l14925 1C0E  
                                         l15717 08B0                                           l13983 555A  
                                         l14783 6148                                           l14775 60F8  
                                         l14695 8080                                           l15903 0AD8  
                                         l14847 2EA0                                           l14839 2E64  
                                         l14599 459E                                           l14943 1D26  
                                         l15591 021C                                           l15583 0168  
                                         l15727 08E8                                           l16199 2558  
                                         l13985 5562                                           l13977 54E4  
                                         l14777 60FE                                           l15905 0AF6  
                                         l14865 2FE0                                           l14929 1C30  
                                         l15665 0656                                           l16377 2918  
                              __end_of_ETH_Send 6F32                                           l13987 5576  
                                         l14787 616E                                           l15915 0B5C  
                                         l14859 2F5A                                           l15579 011C  
                                         l15771 3934                                           l16395 2996  
                                         l16387 2962                                           l14789 61B0  
                                         l15941 0D02                                           l14893 314E  
                                         l14973 1F3C                                           l14965 1EA4  
                                         l14957 1E30                                           l14949 1DAA  
                                         l15589 01FE                                           l15749 37D0  
                                         l15757 386C                                           l16397 299A  
                                         l15919 0B94                                           l14895 31A6  
                                         l15687 0746                                           l15599 02E4  
                                         l15961 0D92                                           l15953 0D40  
                                         l15945 0D0E                                           l14889 3112  
                                         l15689 077A                                           l15793 3A98  
                                         l16931 61A8                                           l15971 0E34  
                                         l14995 2044                                           l15779 39D0  
                                         l15965 0DDA                                           l15957 0D4A  
                                         l15885 09CE                                           l15877 0916  
                                         l14989 1FCE                              _ETH_SetRxByteCount 8346  
                                         l16935 6820                                           l16927 6192  
                                         l16937 682A                                           l16929 61A2  
                                         l15995 0ED0                                           l15899 0A98  
                               __end_of___aldiv 6776                                 __end_of___almod 6D54  
                                         ?_main 0001                                           ?_dtoa 001E  
                                         ?_rand 0011                                           STR_10 FED8  
                                         STR_11 FF25                                           STR_12 FF12  
                                         STR_13 FFB6                                           STR_30 FF5D  
                                         STR_22 FE15                                           STR_14 FEFF  
                                         STR_23 FFFA                                           STR_31 FF9C  
                                         STR_15 FEEC                                           STR_40 FFF8  
                                         STR_32 FFF4                                           STR_16 FE86  
                                         STR_17 FE9B                                           STR_41 FE57  
                                         STR_42 FFF0                                           STR_18 FF38  
                                         STR_19 FFFC                                           STR_43 FFDE  
                                         STR_27 FE71                                           STR_28 FFCE  
                                         STR_29 FFA9                                           STR_38 FFEB  
                                         _ECON1 0FD2                                           _ECON2 0EFE  
                                         ?_time 0005                                           ?_stoa 000E  
           IPV4_PseudoHeaderChecksum@payloadLen 0005                                 __end_of___lldiv 71F6  
                                         ?_utoa 001E                                           u10300 6E4C  
                                         u11020 5B36                                           u10320 5918  
                                         u11040 5B50                                           u11050 5B5E  
                                         u12020 5580                                           u11060 5B64  
                                         u11300 625C                                           u10350 5986  
                                         u11150 5F1E                                           u11230 63A2  
                                         u11310 6280                                           u12200 1282  
                                         u10280 6E04                                           u11240 63B0  
                                         u13000 68AE                                           _T0CON 0FD5  
                                         u11305 6252                                           u10450 7E0A  
                                         u12018 5540                                           u11090 5E90  
                                         u11250 63B6                                           u11330 629A  
                                         u11411 7982                                           u12019 555A  
                                         u10540 4BC4                                           u12220 1332  
                                         u11340 62A8                                           u11157 5F14  
                                         u10630 6F28                                           u10390 5284  
                                         u10550 4BF6                                           u11510 6C90  
                                         u11350 62AE                                           u13110 44CE  
                                         u13030 4326                                           u12311 158C  
                                         u12231 13B0                                           ?_xtoa 001E  
                                         u10560 4C28                                           u12160 11B0  
                                         u11440 755E                                           u10800 6CFA  
                                         u12400 19B8                                           _T1CON 0FCD  
                                         u12225 1328                                           u11097 5E86  
                               __end_of___llmod 751A                                           u10570 4C5A  
                                         u10490 4B1C                                           u11450 7D42  
                                         u11370 6DEA                                           u12410 1A0A  
                                         u13130 4522                                           u13050 4398  
                                         u10547 4BBA                                           u10580 4C8C  
                                         u11540 48E0                                           u10740 6710  
                                         u12420 1A56                                           u12340 178C  
                                         u13300 6122                                           u13140 5764  
                                         u10557 4BEC                                           u12165 11A6  
                                         u11390 7962                                           u10590 4CBE  
                                         u11470 6C1A                                           u11550 48F2  
                                         u12430 1A68                                           u12350 18AC  
                                         u13070 4406                                           u10567 4C1E  
                                         u12271 1422                                           u12191 1264  
                                         u12431 1A66                                           u12095 7838  
                                         u12280 14CA                                           u11560 4906  
                                         u10840 74D6                                           u12096 783A  
                                         u10577 4C50                                           u12345 1782  
                                         u11570 4930                                           u10690 71A6  
                                         u12370 194A                                           u13090 4476  
                                         u10587 4C82                                           u12355 18A2  
                                         u11580 495A                                           u12700 2B7A  
                                         u12620 2A92                                           u15020 25DC  
                                         u10597 4CB4                                           u12285 14C0  
                                         u11590 4984                                           u12390 1968  
                                         u11911 7A62                                           u12560 74A6  
                                         u12480 7AE2                                           u10960 5A42  
                                         u12640 2AD8                                           u10970 5A44  
                                         u13370 30EE                                           u15131 28C2  
                                         u13700 7A12                                           u12900 2D68  
                                         u12820 2C64                                           u12660 2B14  
                                         u15140 28F2                                           u12565 749C  
                                         u11781 7D18                                           u14510 0B4C  
                                         u12590 2A48                                           u13390 3130  
                                         u13720 8274                                           u12840 2CAA  
                                         u12680 2B3C                                           u15160 2954  
                                         u15080 2636                                           u13730 79C6  
                                         u14530 0BDA                                           u12930 2DB2  
                                         u11980 5442                                           u12860 2CE8  
                                         u15165 294A                                           u14710 0E6E  
                                         u12790 2C1A                                           u13760 4F30  
                                         u13680 8248                                           u14720 0EB2  
                                         u12960 2DF6                                           u12880 2D2A  
                                         u13770 4F32                                           u14730 0EB4  
                                         _MAIPG 0EA6                                           u14660 0E46  
                                         _ERDPT 0F7A                                           u12990 6874  
                                         u14680 0E56                                           _MICMD 0EB2  
                                         _ERXND 0EEA                                           _ETXND 0EE6  
                                         _ERXST 0EE8                                           _EWRPT 0EE2  
                                         _ETXST 0EE4                                    vfpfcnvrt@fmt 0035  
                                         _TMR0H 0FD7                                           _TMR1H 0FCF  
                                         _TMR0L 0FD6                                           _TMR1L 0FCE  
                                         _PORTE 0F84                                           _PORTF 0F85  
                                         _PORTG 0F86                                           _PORTH 0F87  
                              __end_of_LOG_Init 705E                                           _TRISA 0F92  
                                         _TRISB 0F93                                           _TRISC 0F94  
                                         _TRISD 0F95                                           _TRISE 0F96  
                                         _TRISF 0F97                                           _TRISG 0F98  
                                         _TRISH 0F99                                           _TRISJ 0F9A  
                                 ?_MILLIESxINIT 0001                   __end_of_ETH_TxComputeChecksum 7368  
                           ___lmul@multiplicand 0009                       ?_TMR0_SetInterruptHandler 0005  
                          _tMountainRandomShift FE03                       ?_MOUNTAINxSTATIONxINBOUND 002B  
                              __end_of_TMR0_ISR 7FA8                                __end_of_TMR1_ISR 7EEC  
                           ?_ETH_SetRxByteCount 0007                                           _pHead 0149  
                          __end_of_getHeaderLen 7CF0                                     ?_IPv4_Start 0060  
                              __end_of_PHY_Read 76A6                                           _pTail 0147  
                                         _flags 0163                                __end_of_UDP_Send 6B46  
                           read_prec_or_width@c 000D                                           _errno 0221  
                           read_prec_or_width@n 000E                                           _fputc 6DF4  
                                         _limit 058C                                           _fputs 7E50  
                   ?_CREATExTASKxSTATUSxMESSAGE 0012                                           pad@fp 0015  
                                         _width 013B                                           _putch 83C0  
                                         main@i 00F4                                           dtoa@d 0020  
                                         dtoa@i 002B                                           dtoa@p 0026  
                                         dtoa@s 002A                                           dtoa@w 0028  
                       __end_of_TMR1_Initialize 802A                            DEBOUNCExIO@millisPtr 0007  
                     _IPV4_PseudoHeaderChecksum 6B46                                           pclath 0FFA  
                                         pclatu 0FFB                                           tablat 0FF5  
                                         time@t 0005                             _udp_table_nextEntry 7EEC  
                                         plusw0 0FEB                                           plusw1 0FE3  
                                         plusw2 0FDB                                           stoa@l 001A  
                                         stoa@p 0014                                           stoa@s 0010  
                                         stoa@w 0016                                           ttemp5 005C  
                                         ttemp6 005F                                           ttemp7 0063  
                                         utoa@d 0020                                           utoa@i 0028  
                                         utoa@p 0024                                           utoa@w 0026  
                                         status 0FD8                                           wtemp8 005C  
                               __end_of_sprintf 7BB8                                           xtoa@a 0029  
                                         xtoa@c 0030                                           xtoa@d 0020  
                                         xtoa@i 0031                                           xtoa@p 002C  
                                 _ETH_EdataRead 8396                                           xtoa@w 002E  
                                         xtoa@x 0024                                   ?_ETH_SaveRDPT 0001  
                                   ?_SETxSIGNAL 0022                                     _WS_WALDBERG 0544  
                               _TMR1_WriteTimer 81D0                       ??_INITxPATHWAYxMNTSTATION 0009  
                    ETH_RxComputeChecksum@rxptr 0022                           ?_ETH_Shift_Tx_Packets 0001  
                 ETH_TxComputeChecksum@position 0013                                   _OCC_TO_STN_10 02E1  
                                 _OCC_TO_STN_11 02DE                                   _OCC_TO_STN_12 02DB  
                         _PROCESSxETHxDATAxINIT 7FA8                            __end_of_ARPV4_Packet 168A  
                          ??_ETH_SetRxByteCount 0009                          _GetDataFromSendMailBox 79B8  
                    ?_UPDATExSTATIONxTRAINxWAIT 0022                                 __initialization 5F7C  
                          __end_of_ARPV4_Lookup 78C2                                    __end_of_main 29BE  
                                  __end_of_dtoa 5BA2                                    __end_of_rand 74B4  
                          __end_of_ARPV4_Update 8000                                    __end_of_time 786C  
                                  __end_of_stoa 5F7C                                    _xorSequences FDBB  
                                  __end_of_utoa 63D8                                    __end_of_xtoa 62D0  
                                   ETH_Copy@len 000B                     ?_INTERRUPT_InterruptManager 0001  
                          ?_udp_table_nextEntry 0005                                     ETH_Init@mac 0014  
        __end_of_GETxDATAxFROMxRECEIVExMAILxBOX 7A50                  _GETxDATAxFROMxRECEIVExMAILxBOX 7A04  
                      ETH_TxComputeChecksum@len 0015                                          ??_main 00EA  
                                        ??_dtoa 0024                                          ??_rand 0013  
                                 ?_INITxSTATION 0001                        ?_PutDataInReceiveMailBox 0005  
                                        ??_time 0009                                          ??_stoa 0012  
                                        ??_utoa 0024                                          ??_xtoa 0025  
                                 __activetblptr 0003                                  _MAC_getAddress 833C  
                                ??_MILLIESxINIT 0008                    __end_of_ICMP_PortUnreachable 64D2  
                      IPv4_Start@destMacAddress 0071                       MAINxSTATIONxOUTBOUND@self 0031  
                       ETH_WriteStart@ethPacket 001D                      __end_of_read_prec_or_width 6DF4  
                        getHeaderLen@header_len 000B  SETxMILLISECONDxUPDATExHANDLER@InterruptHandler 0005  
                          _MAINxSTATIONxINBOUND 2E4C                          ETH_PacketListReset@ptr 0005  
                                 _ETH_ReadBlock 7918                      __end_of_ETH_GetRxByteCount 835A  
                             __end_of_ETH_Read8 80F2                                   _ETH_NewPacket 5276  
                             __end_of_ETH_Flush 7580                            _MAINxSTATIONxPASSING 1BDE  
                             ETH_Send@packetEnd 000D                               _udpTrans_t_length FE14  
                             __end_of_IPV4_Init 83B0                               __end_of_IPV4_Send 7278  
                                     ??_SETxOCC 0008                                          ?_fputc 0005  
                              ___llmod@dividend 0005                                          ?_fputs 000E  
                                ETH_Dump@length 0005                                          _EDMAND 0EF2  
                                        _EDMAST 0EF0                                          ?_putch 0001  
                                        _MAADR1 0E84                                          _MAADR2 0E85  
                                        _MAADR3 0E82                                          _MAADR4 0E83  
                                        _MAADR5 0E80                                          _MAADR6 0E81  
                                        _MACON1 0EA0                                          _MACON3 0EA2  
                                        _MACON4 0EA3                        _Network_GetStartPosition 836E  
                       TMR1_WriteTimer@timerVal 0001                                          _MAMXFL 0EAA  
                                        i2l3004 81E2                                   _ethernetState 016C  
                                        i2l2961 001E                                          i2l2966 002A  
                                        _INTCON 0FF2                   MOUNTAINxSTATIONxOUTBOUND@self 002B  
                                        _OSCCON 0FD3                                          _REL_T4 02D2  
                                        _REL_T5 02CF                                  ?_ETH_EdataRead 0001  
                                 vfpfcnvrt@done 0039                                  ??_ETH_SaveRDPT 0005  
                                   ?_DebounceIO 0001                                   Network_Read@t 01E2  
                          __end_of_ICMP_Receive 6840                                          _WS_BOT 0568  
                                        _WS_TOP 057A                         ?_SETxMNTSTATIONxPATHWAY 0022  
                        ??_INITxPATHWAYxSTATION 0009            __end_of_TMR1_DefaultInterruptHandler 83C4  
                  _TMR1_DefaultInterruptHandler 83C2                                    vfprintf@cfmt 0046  
                                ETH_ReadBlock@p 000B                              _ETH_ResetByteCount 83A0  
                         ICMP_EchoReply@ipv4Hdr 0074                  __end_of_tMountainTrainWaitTime FDDD  
             __end_of_UPDATExSTATIONxTRAINxWAIT 3B14                                          ___lmul 78C2  
                                     ??___aldiv 000D                                       ??___almod 000D  
                                        ___wmul 80F2                        __end_of_PROCESSxETHxDATA 5E3C  
                                     ??___lldiv 000D                                          _arpMap 0700  
                                     ??___llmod 000D                                          _booted 0165  
                                        _refBOT 015F                               __end_of_PHY_Write 807C  
                                        _refTOP 0161                           ??_udp_table_nextEntry 0007  
                                        _memcpy 7D68                                ?_TMR0_Initialize 0001  
                          read_prec_or_width@ap 000C                               __end_of_UDP_Start 7816  
                          _milliseconds_counter 01F4                                          clear_0 6022  
                                        clear_1 602E                                          clear_2 603A  
                                        clear_3 6046                                          clear_4 6052  
                                        clear_5 605E                                          clear_6 606A  
                                        clear_7 6076                                          clear_8 6082  
                                        _invert 01FE                          __end_of_MAC_getAddress 8346  
                    ?_PUTxDATAxINxSENDxMAILxBOX 0005                                          _txData 0600  
                                SETxSIGNAL@pin1 002B                                  SETxSIGNAL@pin2 002C  
                                SETxSIGNAL@pin3 002D                                  SETxSIGNAL@pin4 002E  
                                SETxSIGNAL@pin5 002F                                  SETxSIGNAL@pin6 0030  
                                SETxSIGNAL@path 0024                                  ??_INITxSTATION 0009  
                                        isa$std 0001                                  SETxSIGNAL@self 0022  
                          __end_of_broadcastMAC FE0B                                          _printf 817A  
                                        pad@buf 0017                             ?_ETH_ResetByteCount 0001  
                                        dtoa@fp 001E                ??_CHECKxDATAxINxRECEIVExMAILxBOX 0005  
               ?_CHECKxDATAxINxRECEIVExMAILxBOX 0001                          ETH_ComputeChecksum@len 0005  
                    ?_MOUNTAINxSTATIONxOUTBOUND 002B               ICMP_PortUnreachable@destIPAddress 0078  
                               UDP_Start@destIP 0074                                          fputc@c 0005  
         _activeTrack@mainStationOutbound$F2630 00F8                                          fputs@c 0012  
                                        fputs@i 0013                                          fputs@s 000E  
                         ?_MAINxSTATIONxINBOUND 002F                       __end_of_udpTrans_t_length FE15  
                                    _UpdateTick 83B6                                  ?_ETH_ReadBlock 0005  
                                  ?_UDP_Receive 0081                                    __mediumconst FD8A  
                             ??_ETH_CheckLinkUp 0010                                  ?_ETH_NewPacket 0005  
                           ETH_SetReadPtr@rdptr 0007                                          tblptrh 0FF7  
                         ?_MAINxSTATIONxPASSING 0031                                          tblptrl 0FF6  
                                        tblptru 0FF8                            __end_of_tRandomShift FE05  
                                        stoa@cp 0018                                          stoa@fp 000E  
                                        putch@c 0001                                __end_of_vfprintf 7C78  
                                        utoa@fp 001E        TMR1_SetInterruptHandler@InterruptHandler 0005  
      TMR0_SetInterruptHandler@InterruptHandler 0005                                       ??_sprintf 0050  
                                  ??_ARPV4_Init 0007                         __end_of_TMR1_WriteTimer 81EC  
                                        xtoa@fp 001E                              UPDATExSTATION@self 003F  
                                _ETH_EdataWrite 83B0                                ?_TMR1_Initialize 0001  
                                ETH_Insert@data 0005                               _SYSTEM_Initialize 81EC  
                                    __accesstop 0060                         __end_of__initialization 6090  
                        _udpTrans_t_data_length FE01                            ??_ETH_ResetByteCount 0005  
                     _tSendAliveMessWaitTimeCnt 020C                  __end_of_SETxMNTSTATIONxPATHWAY 6908  
                            ?_SYSTEM_Initialize 0001                                       ?_ETH_Copy 000B  
                        ??_ETH_Shift_Tx_Packets 000B                                       ?_ETH_Dump 0005  
                                     ?_ETH_Init 0001                                       ?_ETH_Send 0001  
                                 ___rparam_used 0001                          ?_PROCESSxETHxDATAxINIT 0001  
                       ?_IPV4_GetDatagramLength 0005                           _tIoSignalDebounceTime FDFD  
              UPDATExMOUNTAINxTRAINxWAIT@millis 0030                                   ?_Network_Init 0001  
                                 ?_Network_Read 0001                          IPV4_Send@payloadLength 0021  
                         IPv4_Start@destAddress 0060                                       ?_LOG_Init 0001  
                                _network_errors 0500                                  __pcstackCOMRAM 0001  
                __end_of_severityThresholdTable FDBB                                    __pidataBANK1 8326  
                                  __pidataBANK2 7B2C                                    __pidataBANK3 75E4  
                                  __pidataBANK4 64D2                                    __pidataBANK5 705E  
                           ??_SYSTEM_Initialize 0056                           _ETH_RxComputeChecksum 6F32  
                                _ETH_GetReadPtr 835A                                       ?_TMR0_ISR 0001  
                                     ?_TMR1_ISR 0001                 __end_of_PutDataInReceiveMailBox 79B8  
                         __end_of_ARPV4_Request 4EEA                   ?_TMR1_DefaultInterruptHandler 0001  
                                 __end_of_fputc 6E94                                       ?_PHY_Read 0007  
                                 __end_of_fputs 7E88                                       ?_UDP_Send 0001  
                                 __end_of_putch 83C2                           _udp_table_getIterator 8364  
                            PHY_WaitForBusy@ret 0005                                 ?_MAC_getAddress 0005  
                            __end_of_ARPV4_Init 80A4                                    ??_GETxMILLIS 0009  
                    INITxPATHWAYxSTATION@refbot 0007                    __end_of_ETH_NextPacketUpdate 7BFA  
             __end_of_PUTxDATAxINxSENDxMAILxBOX 7A9A                                    _HALL_BLK_21A 03EC  
                    INITxPATHWAYxSTATION@reftop 0005                                _tBootWaitTimeCnt 01F8  
                                  ??_ETH_GetMAC 0007                                 ETH_Copy@tmp_len 000F  
                               _PHY_WaitForBusy 7F4C                                    ETH_Read8@ret 0005  
                                  ??_ETH_Read16 0007               __end_of_MOUNTAINxSTATIONxOUTBOUND 426C  
                           _SETxSTATIONxPATHWAY 29BE                                ??_Network_Manage 0056  
                   __end_of_tBlkOutDebounceTime FDFD                                    ??_ETH_Insert 000A  
                           _MILLISECOND_HANDLER 7F1C                                    ??_ETH_Write8 0005  
                        __end_of_ETH_EdataWrite 83B6                            ETH_ComputeChecksum@v 000D  
                                       ??_fputc 0009                       __end_of_SYSTEM_Initialize 8206  
                                       ??_fputs 0012                                         ??_putch 0005  
                               ??_ETH_EdataRead 0005                                      __pbssBANK0 00F6  
                                    __pbssBANK1 0100                                      __pbssBANK2 0200  
                                    __pbssBANK3 0300                                      __pbssBANK4 04EE  
                                    __pbssBANK5 058C                                      __pbssBANK6 0600  
                                    __pbssBANK7 0700                                      __pbssBANK8 0800  
                              _ETH_EventHandler 7762                                  IPV4_Packet@msg 00B1  
                                    _tFactorSec FE10                        __end_of_ETH_GetByteCount 8266  
                __end_of_IPV4_GetDatagramLength 82FC                                   _DataRxHandler 021C  
                                     LOG_Init@t 0051                                       LOG_Init@x 0055  
                                    ??_ETH_Copy 000D                                      ??_ETH_Dump 0007  
                                    ??_ETH_Init 0014                                  ??_Network_Init 0056  
                                ??_Network_Read 00DE                                      ??_ETH_Send 0009  
                          ?_SETxSTATIONxPATHWAY 0022                              __end_of_GETxMILLIS 82B2  
                                    _macAddress 02C9                            __end_of_MILLIESxINIT 815C  
                          _ICMP_PortUnreachable 63D8                            ?_MILLISECOND_HANDLER 0001  
                            __end_of_ETH_GetMAC 7704                          __end_of_ETH_GetReadPtr 8364  
                                    ??_LOG_Init 004F                              __end_of_ETH_Read16 7D68  
                       ?_CheckDataInSendMailBox 0001                __end_of_TMR0_SetInterruptHandler 82E0  
                                       ?___lmul 0005                              __end_of_ETH_Insert 7762  
                                  _getHeaderLen 7CB4                __end_of_MOUNTAINxSTATIONxINBOUND 252C  
                                  IPV4_Send@ret 0027                                         ?___wmul 0005  
                                    ??_TMR0_ISR 0001                                      ??_TMR1_ISR 0003  
                               _udpPacketHeader 0200                                      ??_PHY_Read 000B  
                            __end_of_ETH_Write8 838C                                      ??_UDP_Send 002C  
                                       ?_memcpy 0005                                      _deviceTime 012A  
                                ___lmul@product 000D                     __end_of_ETH_ComputeChecksum 69CC  
                                       _EDMADST 0EF4                               ?_INITxRANDxNUMBER 0001  
                                       ?_printf 0048                     _Millisecond_Update_Handler2 0135  
                   _Millisecond_Update_Handler3 0132                                         _MABBIPG 0EA4  
                         _MAINxSTATIONxOUTBOUND 3B14                                 ??_ETH_ReadBlock 0009  
                          __end_of_ETH_SaveRDPT 8396                          ??_MAINxSTATIONxINBOUND 0031  
                               ??_ETH_NewPacket 0007                ??_SETxMILLISECONDxUPDATExHANDLER 0008  
               ?_SETxMILLISECONDxUPDATExHANDLER 0005                                         _EIEbits 0EFB  
                            ??_INITxRANDxNUMBER 0017                                         _ERXFCON 0ED8  
                        ??_MAINxSTATIONxPASSING 0033                                     ?_UpdateTick 0001  
                                       _EIRbits 0F60                                         _ERXRDPT 0EEC  
                       _tInOutboundStopWaitTime FDDD                                 _seconds_counter 0223  
                                 ??_DEBOUNCExIO 0008                                      _ipv4Header 016E  
                                  _ARPV4_Packet 1068                                         _OSCTUNE 0F9B  
                                       _SIG_BOT 0520                                    ??_IPv4_Start 0065  
                                       _SIG_TOP 0532                        MAINxSTATIONxINBOUND@self 002F  
                                  _ARPV4_Lookup 786C                                 ?_ETH_EdataWrite 0001  
                                       _SETxOCC 7580                                    _ARPV4_Update 7FD4  
                  ??_UPDATExMOUNTAINxTRAINxWAIT 0024                                  _ETH_SetReadPtr 8378  
                              ?_TMR1_WriteTimer 0001                                  _ETH_SendQueued 73DA  
                        ARPV4_Lookup@ip_address 0005                                  _tTrainWaitTime FDED  
                    _Millisecond_Update_Handler 0138                                      _refWALDSEE 015D  
                         _INITxMOUNTAINxSTATION 65C0                            __end_of_INITxSTATION 573E  
                       ?_GetDataFromSendMailBox 0005                                    ??_SETxSIGNAL 0026  
                         ??_SETxSTATIONxPATHWAY 0026                              UDP_Receive@udpcksm 0081  
                         ?_ICMP_PortUnreachable 0074                           ??_MILLISECOND_HANDLER 0001  
                __end_of_CheckDataInSendMailBox 827C                                         __Hparam 0000  
                                       __Lparam 0000                                 ?_ETH_GetReadPtr 0005  
             CREATExTASKxSTATUSxMESSAGE@task_id 0016                          ?_ETH_RxComputeChecksum 0013  
                                    _errataTemp 0E7E                     ??_UPDATExSTATIONxTRAINxWAIT 0024  
                                     _ECON1bits 0FD2                              ETH_NewPacket@index 0009  
                                       ___aldiv 66AA                                         ___almod 6CA8  
                       __end_of_PHY_WaitForBusy 7F7A                                     time@gie_val 0009  
                                       ___lldiv 7174                                         ___llmod 74B4  
                        ?_udp_table_getIterator 0005                                       ?_vfprintf 0041  
                            __end_of_IPv4_Start 4AFE                                         __pcinit 5F7C  
                         compareDataToSend@arr1 0005                           compareDataToSend@arr2 0007  
                                       __ramtop 1000                               __end_of_ipdb_init 7174  
            INITxPATHWAYxMNTSTATION@refwaldberg 0007                           compareDataToSend@size 0009  
                                       __ptext0 252C                                         __ptext1 7E18  
                                       __ptext2 36F4                                         __ptext3 0000  
                                       __ptext4 1BDE                                         __ptext5 3B14  
                                       __ptext6 426C                                         __ptext7 2E4C  
                                       __ptext8 29BE                                         __ptext9 45BA  
                                       _ethData 0124                                       _T0CONbits 0FD5  
                ??_TMR1_DefaultInterruptHandler 0001                           __end_of_UDPxDATAxRECV 7D2C  
                                  _ICMP_Receive 6776                         _UPDATExMOUNTAINxSTATION 0914  
                                     _T1CONbits 0FCD                      ??_Network_GetStartPosition 0007  
      __end_of_Millisecond_DefaultUpdateHandler 83C6              ??_Millisecond_DefaultUpdateHandler 0001  
             ?_Millisecond_DefaultUpdateHandler 0001                _Millisecond_DefaultUpdateHandler 83C4  
                         _OSCILLATOR_Initialize 8332                                      _lfsr_value 01FC  
                         read_prec_or_width@fmt 000B                                ___aldiv@dividend 0005  
                           _ETH_PacketListReset 7A9A                        ??_PIN_MANAGER_Initialize 0005  
                     ?_TMR1_SetInterruptHandler 0005                              __end_of_SETxSIGNAL 45BA  
                        __end_of_ETH_SetReadPtr 8382                                         _waldsee 025D  
                        __end_of_ETH_SendQueued 744A                          ICMP_EchoReply@sequence 007C  
                        __end_of_tTrainWaitTime FDF1                           _ETH_TxComputeChecksum 72F0  
                                       _sprintf 7B72                                       _MICMDbits 0EB2  
                                     _OCC_FR_9B 040E                                       _OCC_FR_T3 0446  
                                     _OCC_FR_T6 0454                            end_of_initialization 6090  
                                     _ESTATbits 0EFD                                       _OCC_TO_9B 02ED  
                       ETH_ComputeChecksum@cksm 000F                                       _OCC_TO_T3 02D5  
                                     _OCC_TO_T6 02D8                         ETH_ComputeChecksum@seed 0007  
              ??_GETxDATAxFROMxRECEIVExMAILxBOX 0007                 ?_GETxDATAxFROMxRECEIVExMAILxBOX 0005  
                                     _ETH_Read8 80CC                                       _ETH_Flush 751A  
                __end_of_GetDataFromSendMailBox 7A04                                         memcpy@d 000D  
                                       memcpy@n 0008                                         memcpy@s 000B  
                                     _IPV4_Init 83AA                                       _IPV4_Send 71F6  
                                  ??_DebounceIO 001A                                         fputc@fp 0007  
                           __end_of_DEBOUNCExIO 50B8                              IPv4_Start@protocol 0064  
                                    _udpRecvBox 0768            _activeTrack@mainStationInbound$F2313 00FA  
                                       fputs@fp 0010                                    _broadcastMAC FE05  
                              UDP_Start@dstPort 007A                              _read_prec_or_width 6D54  
                           ETH_ReadBlock@buffer 0005                            _ETH_NextPacketUpdate 7BB8  
                           ETH_ReadBlock@length 0007                              _ETH_GetRxByteCount 8350  
                               ___lldiv@divisor 0009                                  ETH_Write8@data 0005  
                          ?_ETH_PacketListReset 0001                                   ?_rtcc_handler 0001  
                             __end_of_rtcc_init 813A                                     PHY_Read@reg 000B  
                               ___lldiv@counter 0011                                     PHY_Read@ret 000C  
                              UDP_Start@srcPort 0078                               __end_of_vfpfcnvrt 36F4  
                                _ETH_WriteBlock 7DDE                                ___aldiv@quotient 000F  
                                  _tRandomShift FE04                             _Network_WaitForLink 82B2  
                                       postdec1 0FE5                                         postdec2 0FDD  
                           ?_read_prec_or_width 000B                                         postinc0 0FEE  
                                       postinc1 0FE6                                         postinc2 0FDE  
                              vfpfcnvrt@convarg 003A                                 _udpReceivedData 04EE  
                               _ETH_CheckLinkUp 802A                                  _ETH_WriteStart 4AFE  
                           ?_ETH_GetRxByteCount 0005                               ?_PROCESSxETHxDATA 0001  
                                    ??_vfprintf 0046                           ARPV4_Packet@mergeFlag 0062  
                             _compareDataToSend 7E18                          ?_MAINxSTATIONxOUTBOUND 0031  
                   ??_PUTxDATAxINxSENDxMAILxBOX 0007                                         strtok@p 021F  
                            ??_PROCESSxETHxDATA 00E6                        ETH_RxComputeChecksum@len 0013  
                      _TMR0_SetInterruptHandler 82D2                              ?_compareDataToSend 0005  
                                    _timersInit 8198                                       _PORTEbits 0F84  
                      _MOUNTAINxSTATIONxINBOUND 2086                                       _PORTGbits 0F86  
                                _UPDATExSTATION 0000                     ??_MOUNTAINxSTATIONxOUTBOUND 002D  
                                     _PHY_Write 8054                               _GETxRANDOMxNUMBER 8220  
                            __end_of_DebounceIO 5276                                       _UDP_Start 77BE  
                          __end_of_Network_Init 817A                            __end_of_Network_Read 61B6  
     _activeTrack@mountainStationOutbound$F3951 00F6                                      _updateTick 0166  
                     _UPDATExSTATIONxTRAINxWAIT 36F4                              ?_GETxRANDOMxNUMBER 0017  
                               ?_ETH_SetReadPtr 0007                             ??_compareDataToSend 000A  
                          ?_Network_WaitForLink 0001                                 ?_ETH_SendQueued 0001  
                          ??_read_prec_or_width 000D                     UPDATExMOUNTAINxSTATION@self 0039  
                             IPV4_Packet@hdrLen 00DB                                   ETH_GetMAC@mac 0005  
                          ??_ETH_GetRxByteCount 0007                               IPV4_Packet@length 00D9  
                             ICMP_EchoReply@ret 0084                        ?_INITxPATHWAYxMNTSTATION 0005  
                                    ?_ETH_Read8 0001                          ?_INITxMOUNTAINxSTATION 0001  
                                    ?_ETH_Flush 0001                         ??_PROCESSxETHxDATAxINIT 0005  
                           ??_GETxRANDOMxNUMBER 0019                                     SETxOCC@self 0005  
                                    ?_IPV4_Init 0001                                      ?_IPV4_Send 0021  
        __end_of_CHECKxDATAxINxRECEIVExMAILxBOX 8250                  _CHECKxDATAxINxRECEIVExMAILxBOX 8238  
                        ??_ICMP_PortUnreachable 0056                           ?_ETH_NextPacketUpdate 0001  
                       _tHallSignalDebounceTime FDF5                          PHY_WaitForBusy@timeout 0006  
                      MAINxSTATIONxPASSING@self 0031                                      main@millis 00EE  
                   PutDataInReceiveMailBox@data 0005                                  ??_rtcc_handler 0001  
                         ??_ETH_PacketListReset 0005                          __end_of_ETH_WriteBlock 7E18  
                   __end_of_udp_table_nextEntry 7F1C                   PUTxDATAxINxSENDxMAILxBOX@data 0005  
                                  _OCC_FR_BLK13 04C4                          __end_of_ETH_WriteStart 4D02  
                              ??_MAC_getAddress 0007                       __end_of_compareDataToSend 7E50  
        CREATExTASKxSTATUSxMESSAGE@task_command 0012                                    _OCC_FR_STN_1 04A8  
                                  _OCC_FR_STN_2 049A                                    _OCC_FR_STN_3 048C  
                  __end_of_INTERRUPT_Initialize 83C0                                ?_PHY_WaitForBusy 0001  
                                __end_of___lmul 7918                                     vfpfcnvrt@ap 0036  
                                   vfpfcnvrt@cp 003F                                     vfpfcnvrt@fp 0033  
                                __end_of___wmul 8118                          __end_of_UPDATExSTATION 0914  
                      __end_of_ETH_EventHandler 77BE                        ARPV4_Request@destAddress 001F  
                     ??_UPDATExMOUNTAINxSTATION 003B                               _UDP_CallBackTable FE0B  
                     __end_of_GETxRANDOMxNUMBER 8238                              compareDataToSend@i 000C  
                                __end_of_memcpy 7DA4                          ?_OSCILLATOR_Initialize 0001  
                           DEBOUNCExIO@instance 0005                                      ?_PHY_Write 0007  
                                __end_of_printf 8198                                _ETH_RemovePacket 69CC  
                          _networkStartPosition 014B                       ETH_RxComputeChecksum@cksm 0024  
                                    ?_UDP_Start 0074                             ICMP_Receive@icmpHdr 008D  
                     ETH_RxComputeChecksum@seed 0015                             ICMP_Receive@ipv4Hdr 0085  
                           start_initialization 5F7C                                    _MILLIESxINIT 813A  
                       ETH_RemovePacket@pPacket 0005                         PROCESSxETHxDATA@udpSend 00E8  
                                  _OCC_TO_STN_1 02EA                                    _OCC_TO_STN_2 02E7  
                                  _OCC_TO_STN_3 02E4                           ??_Network_WaitForLink 0014  
                __end_of_udpTrans_t_data_length FE02                          ?_ETH_TxComputeChecksum 0013  
                                   __end_of_abs 80CC                                      ipdb_init@x 0005  
            __end_of_UPDATExMOUNTAINxTRAINxWAIT 48C4                      _UPDATExMOUNTAINxTRAINxWAIT 45BA  
                                   __end_of_pad 72F0                                     _DEBOUNCExIO 4EEA  
                                 ETH_Copy@timer 000D                                   ETH_Read16@ret 0007  
                        ETH_WriteStart@dest_mac 0017                       _PUTxDATAxINxSENDxMAILxBOX 7A50  
                             DebounceIO@trackio 001A                      ?_Network_SaveStartPosition 0001  
               __end_of_tInOutboundStopWaitTime FDE1                               ?_ETH_GetByteCount 0005  
                               ___llmod@divisor 0009                       _MOUNTAINxSTATIONxOUTBOUND 3EEC  
      _activeTrack@mountainStationInbound$F3654 0057                                    _ETH_SaveRDPT 838C  
                               ___llmod@counter 000D                         __end_of_ETH_CheckLinkUp 8054  
                            ??_ETH_GetByteCount 0007                                   ??_IPV4_Packet 0091  
                               ?_ETH_WriteBlock 0005                                   ??_ETH_TxReset 0009  
                                   vfprintf@fmt 0043                                 ?_ETH_WriteStart 0017  
                           UDPxDATAxRECV@length 0011                                   ??_ETH_Write32 0009  
                                 ??_ETH_Write16 0007                                        ??___lmul 000D  
                       ETH_Shift_Tx_Packets@len 0013                                        ??___wmul 0009  
                     __end_of_UDP_CallBackTable FE10                             ARPV4_Request@header 003A  
                                   __pdataBANK1 01F4                                     __pdataBANK2 02AD  
                                   __pdataBANK3 0398                                     __pdataBANK4 0400  
                                   __pdataBANK5 0500                                        ??_memcpy 000A  
                               ?_UPDATExSTATION 003F                                        ??_printf 004E  
                                   ?_timersInit 0001                                    _INITxSTATION 55B6  
                              ??_ETH_EdataWrite 0005                                   ETH_Insert@len 0006  
                               IPV4_Packet@cksm 00DC                                    ??_UpdateTick 0001  
                                   __pbssCOMRAM 0057                        ICMP_EchoReply@identifier 007A  
                                 __pcstackBANK0 0060                                   __pcstackBANK1 0192  
               __end_of_INITxPATHWAYxMNTSTATION 82A0                 UPDATExSTATIONxTRAINxWAIT@millis 0030  
                                _hostMacAddress 02A7                                  _ICMP_EchoReply 5BA2  
                                   _activeTrack 0059                                        ?_SETxOCC 0005  
                       _PutDataInReceiveMailBox 796C                        ICMP_PortUnreachable@cksm 007E  
                                   _HALL_BLK_13 02BB                                     _HALL_BLK_4A 0398  
                                   _HALL_BLK_9B 03A6                                     _HALL_BLK_T1 03C2  
                                   _HALL_BLK_T2 03B4                                     _HALL_BLK_T4 03DE  
                                   _HALL_BLK_T5 03D0                                     _HALL_BLK_T7 04E0  
                                   _HALL_BLK_T8 04D2                    ??_CREATExTASKxSTATUSxMESSAGE 0015  
                                   ??_ETH_Read8 0005                                     ??_ETH_Flush 0005  
                        ??_ETH_NextPacketUpdate 0005                                     ??_IPV4_Init 0006  
                                   ??_IPV4_Send 0023                           __end_of_ETH_EdataRead 83A0  
                              ??_ETH_GetReadPtr 0007          __end_of_SETxMILLISECONDxUPDATExHANDLER 8326  
                _SETxMILLISECONDxUPDATExHANDLER 8318               __end_of_Network_SaveStartPosition 82EE  
                      ETH_PacketListReset@index 0007                                    _RandomNumber 013F  
                       ??_ETH_RxComputeChecksum 0017                           _TMR0_InterruptHandler 02F6  
                                     __pnvBANK2 02F3                 ICMP_EchoReply@ipv4PayloadLength 0082  
                        _PIN_MANAGER_Initialize 7AE4                         ??_udp_table_getIterator 0007  
                                     _dtoa$8747 0024                              __end_of_UpdateTick 83BC  
                 __end_of_tReadIoSignalWaitTime FDE9                                       __pintcode 0008  
              __end_of_TMR1_SetInterruptHandler 8318                                   __pmediumconst FD8A  
                                      ?___aldiv 0005                                        ?___almod 0005  
                                     __ptext100 7D68                                       __ptext101 4AFE  
                                     __ptext110 80F2                                       __ptext102 5276  
                                     __ptext111 73DA                                       __ptext103 7DDE  
                                     __ptext120 83A0                                       __ptext112 69CC  
                                     __ptext104 83B0                                       __ptext121 7A9A  
                                     __ptext113 802A                                       __ptext105 6E94  
                                     __ptext130 744A                                       __ptext122 8266  
                                     __ptext114 7646                                       __ptext106 7918  
                                     __ptext131 78C2                                       __ptext123 8238  
                                     __ptext115 7F4C                                       __ptext107 8396  
                                     __ptext140 7F1C                                       __ptext132 65C0  
                                     __ptext124 813A                                       __ptext116 7FD4  
                                     __ptext108 7762                                       __ptext141 83C2  
                                     __ptext133 828E                                       __ptext125 830A  
                                     __ptext117 79B8                                       __ptext109 58C2  
                                     __ptext142 83C4                                       __ptext134 50B8  
                                     __ptext126 8318                                       __ptext118 7A04  
                                     __ptext143 83B6                                       __ptext135 82A0  
                                     __ptext127 55B6                                       __ptext119 81B4  
                                     __ptext144 7F7A                                       __ptext136 4EEA  
                                     __ptext128 827C                                       __ptext145 83C6  
                                     __ptext129 7E88                                       __ptext146 82C2  
                                     __ptext138 7EBA                                       __ptext139 81D0  
                                  _setT4ToAmpT6 0159                                        ?___lldiv 0005  
                                      ?___llmod 0005                              ARPV4_Packet@x_6263 0067  
                                  _setT5ToAmpT3 0157                                   IPV4_Send@cksm 0028  
       CREATExTASKxSTATUSxMESSAGE@task_messages 0014                              ARPV4_Packet@header 006A  
                           __end_of_IPV4_Packet 1BDE                              ARPV4_Packet@arpPtr 0064  
                  __end_of_tSwitchPointWaitTime FDF5                                _ip_database_info 0100  
                  ??_INTERRUPT_InterruptManager 0003                                ___almod@dividend 0005  
                            ARPV4_Packet@length 0060                             __end_of_ETH_TxReset 81D0  
                  IPV4_PseudoHeaderChecksum@len 000C                    IPV4_PseudoHeaderChecksum@tmp 0011  
                      ARPV4_Update@entryPointer 0005                                       _dirtyTime 0167  
                           __end_of_ETH_Write16 830A                             __end_of_ETH_Write32 8220  
                                   ??_PHY_Write 0009                                     ??_UDP_Start 0056  
                         __end_of_ETH_ReadBlock 796C                            __end_of_rtcc_handler 82D2  
                        __end_of_ICMP_EchoReply 5CFC                          _sizeOfMntStationStruct FE02  
                                     _ipdb_init 70EA                           __end_of_ETH_NewPacket 541C  
                                      ?_sprintf 0048                        ??_SETxMNTSTATIONxPATHWAY 0025  
                   __end_of_SETxSTATIONxPATHWAY 2E4C               INITxPATHWAYxMNTSTATION@refwaldsee 0005  
                   __end_of_MILLISECOND_HANDLER 7F4C                            _INTERRUPT_Initialize 83BC  
                 __end_of_tFreightTrainWaitTime FDED                                 ___aldiv@divisor 0009  
                             ??_TMR0_Initialize 0008                                 ___aldiv@counter 000D  
                                      _CTRL_OFF 0438                                  ___wmul@product 0009  
                          ETH_WriteBlock@buffer 0005                                       _udpHeader 0182  
                                      _LATAbits 0F89                                        _LATBbits 0F8A  
                                      _LATCbits 0F8B                                        _LATDbits 0F8C  
                                      _LATEbits 0F8D                            ETH_WriteBlock@length 0007  
                                      _MIREGADR 0EB4                                        _LATJbits 0F91  
                                      _ETH_Copy 6BFA                                        _ETH_Dump 7DA4  
                                      _ETH_Init 573E                                        _ETH_Send 6E94  
                                      _PIE1bits 0F9D                                ?_ETH_CheckLinkUp 0001  
                                  _Network_Init 815C                                    _Network_Read 609A  
                    ??_TMR0_SetInterruptHandler 0008                                        _PIR1bits 0F9E  
                                      _PIR2bits 0FA1                      ??_MOUNTAINxSTATIONxINBOUND 002D  
                                      _LOG_Init 6FCA                                        i2u865_48 7F38  
                                      i2u980_48 7ED8                                        _RCONbits 0FD0  
                                   _ethListSize 0168                                        i2u978_48 7F94  
                       ??_MAINxSTATIONxOUTBOUND 0033                                   ARPV4_Packet@x 0066  
                                      _TMR0_ISR 7F7A                                        _TMR1_ISR 7EBA  
          CREATExTASKxSTATUSxMESSAGE@task_state 0013                                       _rtcc_init 8118  
            __end_of___secs_to_tm@days_in_month FDD9                      ___secs_to_tm@days_in_month FDCD  
               __end_of_tHallSignalDebounceTime FDF9                                        _PHY_Read 7646  
                                 _ARPV4_Request 4D02                                        _UDP_Send 6A8C  
              ICMP_PortUnreachable@srcIPAddress 0074                                 _portUnreachable 0225  
                    ?_IPV4_PseudoHeaderChecksum 0005                                       _vfpfcnvrt 32CC  
                                     _xtoa$8772 002A                               ??_TMR1_Initialize 0008  
                              ??_ETH_SetReadPtr 0009                                      _ADCON1bits 0FC1  
                             ___wmul@multiplier 0005                                   ARPV4_Lookup@x 000F  
                            __end_of_tFactorSec FE14                                ??_ETH_SendQueued 0005  
                    ICMP_PortUnreachable@length 007C                                   ??_UDP_Receive 0083  
                                   _refWALDBERG 015B                                      ?_ipdb_init 0001  
                               ?_ICMP_EchoReply 0074                                     _ip_addr_ntp 0214  
                                 ARPV4_Update@x 0007                       ??_PutDataInReceiveMailBox 000F  
                                   _OCC_FR_BLK4 04B6                         ??_INITxMOUNTAINxSTATION 0009  
                      ??_IPV4_GetDatagramLength 0007                                      vfpfcnvrt@c 003E  
                    SETxMNTSTATIONxPATHWAY@pin1 002A                      IPV4_PseudoHeaderChecksum@v 000B  
                    SETxMNTSTATIONxPATHWAY@path 0024                      SETxMNTSTATIONxPATHWAY@self 0022  
                             ___lmul@multiplier 0005                                       copy_data0 5F90  
                                     copy_data1 5FB0                                       copy_data2 5FD0  
                                     copy_data3 5FF0                                       copy_data4 6010  
                         ?_INTERRUPT_Initialize 0001                                DebounceIO@millis 001B  
                 __end_of_PROCESSxETHxDATAxINIT 7FD4                       ?_Network_GetStartPosition 0005  
                    __end_of_ETH_SetRxByteCount 8350                        __end_of_ETH_RemovePacket 6A8C  
                                 IPv4_Start@ret 0073                                        __Hrparam 0000  
                    ETH_TxComputeChecksum@rxptr 001D                                     _IPV4_Packet 168A  
                                     memcpy@tmp 000A                                      vfprintf@ap 0045  
                                      __Lrparam 0000                                      vfprintf@fp 0041  
                                   _ETH_TxReset 81B4                                     _ETH_Write32 8206  
                                   _ETH_Write16 82FC                                ETH_ReadBlock@len 0009  
                                ?_ARPV4_Request 001F                         ??_OSCILLATOR_Initialize 0005  
                                    ?_rtcc_init 0001                                      ?_vfpfcnvrt 0033  
                             ?_ETH_EventHandler 0001               __end_of_IPV4_PseudoHeaderChecksum 6BFA  
                      _TMR1_SetInterruptHandler 830A                        ARPV4_Packet@entryPointer 0068  
                       ICMP_PortUnreachable@ret 0080                         ??_ETH_TxComputeChecksum 0019  
                         _TMR1_InterruptHandler 02F3                              ??_ETH_EventHandler 0017  
                             _tOutboundWaitTime FDE1                                      sprintf@fmt 004A  
                  __end_of_INITxPATHWAYxSTATION 828E                                    ?_DEBOUNCExIO 0005  
                                      __ptext10 0914                                        __ptext11 3EEC  
                                      __ptext20 7C78                                        __ptext12 2086  
                                      _destPort 0155                                        __ptext21 7AE4  
                                      __ptext13 7580                     ?_UPDATExMOUNTAINxTRAINxWAIT 0022  
                                      __ptext30 83AA                                        __ptext22 8332  
                                      __ptext14 6840                                        __ptext31 70EA  
                                      __ptext23 815C                                        __ptext15 7BFA  
                                      __ptext40 77BE                                        __ptext32 573E  
                                      __ptext24 8198                                        __ptext16 7A50  
                                      _arpTimer 018E                                        __ptext41 6A8C  
                                      __ptext33 8054                                        __ptext25 8118  
                                      __ptext17 8220                                        __ptext50 32CC  
                                      __ptext42 8250                                        __ptext34 833C  
                                      __ptext26 82D2                                        __ptext18 81EC  
                                      __ptext51 61B6                                        __ptext43 7368  
                                      __ptext35 807C                                        __ptext27 82B2  
                                      __ptext19 8000                                        __ptext60 6DF4  
                                      __ptext52 62D0                                        __ptext44 7816  
                                      __ptext36 76A6                                        __ptext28 6FCA  
                                      __ptext61 83C0                                        __ptext53 74B4  
                                      __ptext45 609A                                        __ptext37 83BC  
                                      __ptext29 817A                                        __ptext70 541C  
                                      __ptext62 80A4                                        __ptext54 7174  
                                      __ptext46 82E0                                        __ptext38 7FA8  
                                      __ptext71 7EEC                                        __ptext63 6CA8  
                                      __ptext55 5E3C                                        __ptext47 168A  
                                      __ptext39 5CFC                                        __ptext80 6B46  
                                      __ptext72 8364                                        __ptext64 66AA  
                                      __ptext56 6D54                                        __ptext48 7B72  
                                      __ptext81 6776                                        __ptext73 7CF0  
                                      __ptext65 7CB4                                        __ptext57 5A3A  
                                      __ptext49 7C3A                                        __ptext90 72F0  
                                      __ptext82 5BA2                                        __ptext74 796C  
                                      __ptext66 8346                                        __ptext58 7278  
                                      __ptext91 7704                                        __ptext83 48C4  
                                      __ptext75 751A                                        __ptext67 80CC  
                                      __ptext59 7E50                                        __ptext92 838C  
                                      __ptext84 8382                                        __ptext76 82EE  
                                      __ptext68 8350                                        __ptext93 7D2C  
                                      __ptext85 8206                                        __ptext77 63D8  
                                      __ptext69 835A                                        __ptext94 6BFA  
                                      __ptext86 82FC                                        __ptext78 836E  
                                      __ptext95 7DA4                                        __ptext87 4D02  
                                      __ptext79 8378                                        __ptext96 6F32  
                                      __ptext88 786C                                        __ptext97 6908  
                                      __ptext89 71F6                                        __ptext98 7BB8  
                                      __ptext99 1068                                 main@udpReceived 00F2  
            __end_of_CREATExTASKxSTATUSxMESSAGE 7C3A                      _CREATExTASKxSTATUSxMESSAGE 7BFA  
                                 _sequenceIndex 0169                                      _ARPV4_Init 807C  
                                  time@the_time 000A                                 ___almod@divisor 0009  
                   __end_of_ETH_PacketListReset 7AE4                                 ___almod@counter 000D  
                           __end_of_UDP_Receive 55B6                                _INITxRANDxNUMBER 7E88  
                      ??_CheckDataInSendMailBox 0005                                ??_ETH_WriteBlock 0009  
                            ETH_WriteStart@type 0019                     ??_Network_SaveStartPosition 0007  
                     ARPV4_Lookup@entry_pointer 000D                            _tSwitchPointWaitTime FDF1  
                              ??_ETH_WriteStart 001B                                    _justSendData 0164  
          __end_of_TMR0_DefaultInterruptHandler 83C8                    _TMR0_DefaultInterruptHandler 83C6  
                         Network_Read@debug_str 0192                               UDP_Send@udpLength 0032  
                              ??_UPDATExSTATION 0041                                        _waldberg 0227  
            GETxDATAxFROMxRECEIVExMAILxBOX@data 0009                                PHY_Write@GIESave 000A  
                                      isa$xinst 0000                                SETxSIGNAL@signal 0025  
                                 ?_getHeaderLen 0001                                        int$flags 005B  
                          _rxPacketStatusVector 012E                                        _vfprintf 7C3A  
            __end_of_INTERRUPT_InterruptManager 0036                      _INTERRUPT_InterruptManager 0008  
                                     printf@fmt 0048                               ??_TMR1_WriteTimer 0003  
                           _tBlkOutDebounceTime FDF9                                      _OCC_FR_21B 0400  
                                    _OCC_FR_22B 041C                                      _OCC_FR_23B 042A  
                  MOUNTAINxSTATIONxINBOUND@self 002B                       __end_of_tOutboundWaitTime FDE5  
                   __end_of_Network_WaitForLink 82C2                                    ??_timersInit 000E  
                                    _GETxMILLIS 82A0                                        _xor_mask 01FD  
                                    _OCC_TO_21B 02F0                          _tMountainTrainWaitTime FDD9  
                                    _ETH_GetMAC 76A6                             Network_Manage@nowPv 0210  
                                 _UDPxDATAxRECV 7CF0                                      _ETH_Read16 7D2C  
                  __end_of_ETH_Shift_Tx_Packets 5A3A                                      _INTCONbits 0FF2  
                     ETH_TxComputeChecksum@cksm 001F                                     ??_ipdb_init 0005  
                     ETH_TxComputeChecksum@seed 0017                                      _ETH_Insert 7704  
                                      memcpy@d1 0005                                        gmtime@tm 05C3  
                                      memcpy@s1 0006                                   ?_ARPV4_Packet 0001  
                      ??_GetDataFromSendMailBox 0007                                 ETH_Write32@data 0005  
                               ETH_Write16@data 0005                                   ?_ARPV4_Lookup 0005  
                        ??_INTERRUPT_Initialize 0005                                      _ETH_Write8 8382  
                          __end_of_xorSequences FDCD                              _M_Box_Eth_Recv_Ptr 0153  
                                 ?_ARPV4_Update 0001                              _M_Box_Eth_Send_Ptr 014F  
                 UPDATExSTATIONxTRAINxWAIT@self 0022                      __end_of_ETH_ResetByteCount 83AA  
                 ICMP_EchoReply@icmp_cksm_start 007E                                        intlevel2 0000  
                                     sprintf@ap 0060                                  _Network_Manage 7368  
                                    _MISTATbits 0E8A                   __end_of_tIoSignalDebounceTime FE01  
                              ___lldiv@dividend 0005                         ?_PIN_MANAGER_Initialize 0001  
                                   _udpTransBox 0800                                 UDP_Receive@hptr 0088  
                  __end_of_tMountainRandomShift FE04                                 _prevDataMessage 05EA  
                            __end_of_timersInit 81B4                   __end_of_ETH_RxComputeChecksum 6FCA  
                                  _rtcc_handler 82C2                   ?_TMR0_DefaultInterruptHandler 0001  
                                ??_getHeaderLen 0009                                 ??_ARPV4_Request 0023  
       CREATExTASKxSTATUSxMESSAGE@StatusMessage 0018                             _ETH_ComputeChecksum 6908  
                      ?_UPDATExMOUNTAINxSTATION 0039                                     ARPV4_Init@x 0007  
                    GetDataFromSendMailBox@data 0009                                        printf@ap 004E  
                 __end_of_udp_table_getIterator 836E                                  _invertExecuted 016D  
                        _SETxMNTSTATIONxPATHWAY 6840                                     ??_rtcc_init 0008  
                                   ??_vfpfcnvrt 0037                            IPV4_Send@totalLength 002A  
                     _Network_SaveStartPosition 82E0                          _severityThresholdTable FD8B  
                                 ?_ICMP_Receive 0085                                  ?_UDPxDATAxRECV 0011  
                                      sprintf@f 0061                            ETH_CheckLinkUp@value 0010  
                                      sprintf@s 0048                         SETxSTATIONxPATHWAY@pin1 002B  
                       SETxSTATIONxPATHWAY@pin2 002C                         SETxSTATIONxPATHWAY@pin3 002D  
                       SETxSTATIONxPATHWAY@pin4 002E                         SETxSTATIONxPATHWAY@path 0024  
                       SETxSTATIONxPATHWAY@self 0022                                 ETH_WriteBlock@p 0009  
                              ___lldiv@quotient 000D                   IPV4_PseudoHeaderChecksum@cksm 000D  
                               ARPV4_Packet@ret 0063                                 _TMR0_Initialize 7C78  
                                UDP_Receive@ret 0087                         _M_Box_Eth_Recv_Ptr_prev 0151  
                                ??_ARPV4_Packet 001F                                     _UDP_Receive 541C  
                                ??_ARPV4_Lookup 0009                                    ___aldiv@sign 000E  
                          ?_ETH_ComputeChecksum 0005                                   _StatusMessage 029D  
                                ??_ARPV4_Update 0005                                      _IPv4_Start 48C4  
                      ETH_Insert@current_tx_ptr 000C                                _PROCESSxETHxDATA 5CFC  
                             Network_Manage@now 00E2                          __end_of_Network_Manage 73DA  
                                   ?_ARPV4_Init 0001                          SETxSTATIONxPATHWAY@dir 0025  
                __end_of_PIN_MANAGER_Initialize 7B2C                               getHeaderLen@rxptr 0009  
                                  ___almod@sign 000E                              Network_Read@header 01E6  
                                    _SETxSIGNAL 426C                                   PHY_Write@data 0007  
                  __end_of_MAINxSTATIONxINBOUND 32CC                                    UDP_Send@cksm 0030  
                                    _VOLTDETECT 02AD                                 _TMR1_Initialize 8000  
                                  PHY_Write@reg 0009                                ETH_Insert@offset 0008  
                  __end_of_MAINxSTATIONxPASSING 2086                         ETH_SetRxByteCount@count 0007  
                                _isUdpConnected 016B                     CREATExTASKxSTATUSxMESSAGE@i 0017  
